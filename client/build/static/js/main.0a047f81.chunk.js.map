{"version":3,"sources":["components/firebase.js","components/addNewGRItem.jsx","components/addNewATItem.jsx","components/addNewISItem.jsx","components/DeleteISItem.jsx","components/deleteAT.jsx","components/deleteGR.jsx","components/editGR.jsx","components/editIS.jsx","components/EditAT.jsx","components/Firebasev2.jsx","components/TCal.jsx","components/Main.jsx","App.js","registerServiceWorker.js","index.js"],"names":["firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AddNewGRItem","props","state","grArr","itemToEdit","title","id","is_persistent","isRoutine","photo","is_complete","is_available","available_end_time","available_start_time","datetime_completed","is_timed","routineDocsPath","firestore","collection","doc","arrPath","getGRDataFromFB","console","log","get","then","exists","x","data","setState","catch","error","alert","newInputSubmit","addNewDoc","add","ref","newArr","ATArray","temp","push","updateEntireArray","update","refresh","this","Modal","Dialog","style","marginLeft","width","modalWidth","Header","closeButton","onClick","closeModal","Title","className","Body","placeholder","value","onChange","e","stopPropagation","target","class","marginTop","name","type","checked","notifies_ta","reminds_user","Footer","Button","variant","Component","AddNewATItem","ATItem","fbPath","newActionTitle","arr","hideNewATModal","AddNewISItem","atArr","newInstructionTitle","handleInputChange","ISArray","ISItem","pop","hideNewISModal","DeleteISItem","submitRequest","deleteIndex","items","i","slice","concat","confirmation","window","confirm","onMouseOver","event","color","onMouseOut","marginRight","icon","faTrashAlt","size","deleteAT","Item","Array","tempdeleteArrPortion","deleteArrPortion","deleteGR","Path","editGR","FBPath","showEditModal","startTimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","selected","Date","date","editGRForm","padding","preventDefault","onKeyDown","keyCode","showIcon","faEdit","editIS","editISForm","editAT","FirebaseV2","firebaseRootPath","originalGoalsAndRoutineArr","goals","routines","singleGR","show","singleAT","singleATitemArr","singleISitemArr","addNewGRModalShow","addNewATModalShow","addNewISModalShow","thumbnailWidth","thumbnailHeight","availabilityColorCode","refreshATItem","resArr","createListofAT","refreshISItem","createListofIS","singleAt","grabFireBaseRoutinesGoalsData","db","routine","goal","onInputChange","inputField","getATList","persist","docRef","A","res","tempID","tempPhoto","tempTitle","tempAvailable","key","ListGroup","action","ATonClickEvent","marginBottom","Row","margin","faUser","faUserAltSlash","Col","src","alt","height","display","justifyContent","alignItems","ISonClickEvent","textAlign","GRonClickEvent","stepsInstructionArrayPath","findIndexByID","getRoutines","displayRoutines","tempPersist","Math","floor","random","sm","md","lg","fontSize","getGoals","displayGoals","abstractedGoalsList","closeGoal","borderRadius","boxShadow","AddNewGRModalAbstracted","abstractedActionsAndTaskList","overflow","abstractedRoutineList","closeRoutine","abstractedInstructionsAndStepsList","addNewTaskInputBox","InputGroup","FormControl","Append","abstractedRoutineGoalsList","closeRoutineGoalModal","addNewGoalInputBox","showRoutine","background","showGoal","React","TylersCalendarv1","weekdays","moment","weekdaysShort","year","dateContext","format","currentDay","dateObject","month","daysInMonth","firstDayOfMonth","startOf","getEventsforDay","tempStart","tempEnd","originalEvents","j","start","dateTime","end","startDate","getDate","endDate","onEventClick","paddingLeft","paddingRight","textShadow","summary","eventClick","onDayClick","d","handleDateClick","map","day","blanks","sameDate","bind","parseInt","totalSlots","rows","cells","forEach","row","daysinmonth","tableLayout","MainPage","getThisMonthEvents","axios","params","response","events","handleEventClick","guestList","attendees","reduce","nextGuest","email","newEventID","newEventStart","toISOString","newEventEnd","newEventStart0","newEventEnd0","newEventName","newEventGuests","newEventLocation","location","newEventNotification","reminders","overrides","minutes","newEventDescription","description","dayEventSelected","isEvent","arg","newStart","setHours","newEnd","toString","handleSubmit","createEvent","updateEventClick","updateRequest","index","formattedEmail","emailList","match","guests","responseStatus","updatedEvent","method","post","extra","ID","updateEventsArray","deleteSubmit","newTitle","minutesNotification","newEvent","handleModalClicked","modelSelected","nextMonth","Object","assign","prevMonth","subtract","startObject","clone","endObject","startDay","endDay","endOf","getEventsByInterval","toggleShowRoutine","showRoutineModal","showGoalModal","showRoutineGoalModal","toggleShowGoal","showEventsFormbyCreateNewEventButton","abstractedMainEventGRShowButtons","calendarAbstracted","backgroundColor","paddingBottom","faChevronLeft","getMonth","getYear","faChevronRight","todayDateObject","today","selectedDay","eventFormAbstracted","eventFormInputArea","hideEventForm","Form","Group","Label","Control","handleNameChange","controlId","endTimePicker","handleGuestChange","handleLocationChange","handleNotificationChange","defaultValue","Text","as","handleDescriptionChange","timeFormat","handleDateStartchange","handleDateEndchange","start0","end0","onlyCal","Container","fluid","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0a047f81.chunk.js","sourcesContent":["import * as firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDBgPVcjoV8LbR4hDA7tm3UoP0abMw8guE\",\n    authDomain: \"project-caitlin-c71a9.firebaseapp.com\",\n    databaseURL: \"https://project-caitlin-c71a9.firebaseio.com\",\n    projectId: \"project-caitlin-c71a9\",\n    storageBucket: \"project-caitlin-c71a9.appspot.com\",\n    messagingSenderId: \"711685546849\",\n    appId: \"1:711685546849:web:5c7a982748eb3bec35db20\",\n    measurementId: \"G-DCQF4LY5ZH\"\n  };\n\nexport default !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\n","import React, { Component } from 'react'\r\nimport firebase from \"./firebase\";\r\nimport { Button, Modal, Row } from 'react-bootstrap';\r\n\r\nexport default class AddNewGRItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log('Is this a Routine? ' + this.props.isRoutine);\r\n    }\r\n\r\n    state = {\r\n        grArr: [], //goal, routine original array \r\n        itemToEdit: {\r\n            title: \"\",\r\n            id: \"\",\r\n            is_persistent: this.props.isRoutine,\r\n            photo: \"\",\r\n            is_complete: false,\r\n            is_available: true,\r\n            available_end_time: \"23:59:59\",\r\n            available_start_time: \"00:00:00\",\r\n            datetime_completed: false,\r\n            is_timed: false,\r\n        }, //this is essentially the new item \r\n        //below are references to firebase directories\r\n        routineDocsPath: firebase.firestore().collection('users').doc('7R6hAVmDrNutRkG3sVRy').collection('goals&routines'),\r\n        arrPath: firebase.firestore().collection('users').doc('7R6hAVmDrNutRkG3sVRy')\r\n    }\r\n\r\n    componentDidMount() {\r\n        (this.props.isRoutine) ? console.log(\"Routine Input\") : console.log(\"Goal Input\")\r\n\r\n        this.getGRDataFromFB();\r\n    }\r\n\r\n\r\n\r\n    getGRDataFromFB = () => {\r\n        //Grab the goals/routine array from firebase and then store it in state varible grArr\r\n        console.log(this.state.arrPath);\r\n        this.state.arrPath.get().then((doc) => {\r\n            if (doc.exists) {\r\n                console.log('getGRDataFromFB DATA:')\r\n                // console.log(doc.data());\r\n                var x = doc.data();\r\n                x = x['goals&routines'];\r\n                console.log(x);\r\n                this.setState({\r\n                    grArr: x\r\n                })\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document! 2\");\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n            alert(\"Error getting document:\", error);\r\n        });\r\n    }\r\n\r\n    newInputSubmit = () => {\r\n        if (this.state.itemToEdit.title === \"\") {\r\n            alert('Invalid Input');\r\n            return;\r\n        }\r\n        this.addNewDoc();\r\n    }\r\n\r\n    addNewDoc = () => {\r\n        this.state.routineDocsPath.add({\r\n            'title': this.state.itemToEdit.title,\r\n            'actions&tasks': []\r\n        }).then(\r\n            ref => {\r\n                if (ref.id === null) {\r\n                    alert('Fail to add new routine / goal item')\r\n                    return;\r\n                }\r\n\r\n                let newArr = this.props.ATArray\r\n                let temp = this.state.itemToEdit;\r\n                temp.id = ref.id;\r\n                console.log('Added document with ID: ', ref.id);\r\n                // this.state.grArr.push(temp);\r\n                newArr.push(temp);\r\n                this.updateEntireArray(newArr);\r\n            }\r\n        );\r\n    }\r\n\r\n    //This function will below will essentially take in a array and have a key map to it \r\n    updateEntireArray = (newArr) => {\r\n        // 2. update adds to the document\r\n        let db = this.state.arrPath;\r\n        db.update({ 'goals&routines': newArr }).then(\r\n            (doc) => {\r\n                console.log('updateEntireArray Finished')\r\n                console.log(doc);\r\n                this.getGRDataFromFB();\r\n                if (this.props != null) {\r\n                    console.log(\"refreshing FireBasev2 from AddNewGRItem\");\r\n                    this.props.refresh();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal.Dialog style={{ marginLeft: '0', width: this.state.modalWidth, }}>\r\n                <Modal.Header closeButton onClick={this.props.closeModal}>\r\n                    <Modal.Title>\r\n                        <h5 className=\"normalfancytext\">\r\n                            Add New {(this.props.isRoutine ? \"Routine\" : \"Goal\")}</h5> </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div>\r\n                        <label>Title</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Photo URL</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Available Start Time</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Available End Time</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label class=\"form-check-label\">Available to Caitlin?</label>\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                                name=\"Available\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.is_available}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.is_available)\r\n                                    temp.is_available = !temp.is_available;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n\r\n\r\n                        </div >\r\n\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label class=\"form-check-label\">Time?</label>\r\n\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.is_timed}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.is_timed)\r\n                                    temp.is_timed = !temp.is_timed;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label class=\"form-check-label\">Notify TA?</label>\r\n\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.notifies_ta}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.notifies_ta)\r\n                                    temp.notifies_ta = !temp.notifies_ta;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label class=\"form-check-label\">Remind User? </label>\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.reminds_user}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.reminds_user)\r\n                                    temp.reminds_user = !temp.reminds_user;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.props.closeModal}>Close</Button>\r\n                    <Button variant=\"info\" onClick={this.newInputSubmit}>Save changes</Button>\r\n                </Modal.Footer>\r\n            </Modal.Dialog>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n// import firebase from \"./firebase\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nexport default class AddNewATItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log('AddNewATItem constructor');\r\n        this.state = {\r\n            newActionTitle: '', //Old delete Later\r\n            itemToEdit: {\r\n                id:\"\",\r\n                title: \"\",\r\n                photo: \"\",\r\n                is_complete: false,\r\n                is_available: true,\r\n                available_end_time: \"23:59:59\",\r\n                available_start_time: \"00:00:00\",\r\n                datetime_completed: false,\r\n                is_timed: false,\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n  \r\n\r\n    componentDidMount() {\r\n        console.log('AddNewATItem did mount')\r\n        console.log(this.props.ATItem)\r\n        console.log(this.props.ATItem.fbPath)\r\n        console.log(this.props.ATItem.arr)\r\n        console.log(this.props.ATArray)\r\n    }\r\n\r\n\r\n\r\n    newInputSubmit = () => {\r\n        if (this.state.itemToEdit.title === \"\") {\r\n            alert('Invalid Input');\r\n            return;\r\n        }\r\n        console.log(\"Submitting Input: \" + this.state.itemToEdit.title)\r\n        this.addNewDoc();\r\n    }\r\n\r\n\r\n\r\n    addNewDoc = () => {\r\n        this.props.ATItem.fbPath.collection('actions&tasks').add({\r\n            'title': this.state.itemToEdit.title,\r\n            'instructions&steps': []\r\n        }).then(\r\n            ref => {\r\n                if (ref.id === null) {\r\n                    alert('Fail to add new Action / Task item')\r\n                    return;\r\n                }\r\n                console.log('Added document with ID: ', ref.id);\r\n                let newArr = this.props.ATArray;\r\n                let temp = this.state.itemToEdit;\r\n                temp.id = ref.id;\r\n                newArr.push(temp);\r\n                console.log(newArr);\r\n                console.log(\"adding new item\")\r\n                this.updateEntireArray(newArr);\r\n            }\r\n        );\r\n    }\r\n\r\n    //This function will below will essentially take in a array and have a key map to it \r\n    updateEntireArray = (newArr) => {\r\n        // 2. update adds to the document\r\n        this.props.ATItem.fbPath.update({ 'actions&tasks': newArr }).then(\r\n            (doc) => {\r\n                console.log('updateEntireArray Finished')\r\n                console.log(doc);\r\n                if (this.props != null) {\r\n                    console.log(\"refreshing FireBasev2 from AddNewATItem\");\r\n                    this.props.refresh(newArr);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Modal.Dialog style={{ marginLeft: '0', width: this.props.modalWidth }}>\r\n                <Modal.Header closeButton onClick={() => { this.props.hideNewATModal(); console.log(\"closed button clicked\") }}>\r\n                    <Modal.Title><h2 className=\"normalfancytext\">Add New Task/Action</h2> </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {/* <AddNewGRItem refresh={this.grabFireBaseRoutinesGoalsData} isRoutine={this.state.isRoutine} /> */}\r\n                    <div>\r\n                        <label>Title</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Photo URL</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Available Start Time</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Available End Time</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label className=\"form-check-label\">Available to Caitlin?</label>\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                                name=\"Available\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.is_available}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.is_available)\r\n                                    temp.is_available = !temp.is_available;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n\r\n\r\n                        </div >\r\n\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label className=\"form-check-label\">Time?</label>\r\n\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.is_timed}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.is_timed)\r\n                                    temp.is_timed = !temp.is_timed;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label className=\"form-check-label\">Notify TA?</label>\r\n\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.notifies_ta}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.notifies_ta)\r\n                                    temp.notifies_ta = !temp.notifies_ta;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label className=\"form-check-label\">Remind User? </label>\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.reminds_user}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.reminds_user)\r\n                                    temp.reminds_user = !temp.reminds_user;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => { this.props.hideNewATModal(); console.log(\"closed button clicked\") }}>Close</Button>\r\n                    <Button variant=\"info\" onClick={() => { this.newInputSubmit() }}>Save changes</Button>\r\n                </Modal.Footer>\r\n            </Modal.Dialog>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n// import firebase from \"./firebase\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\n/**\r\n * \r\n * This class is responsible for adding a new elemnt to the\r\n * firebase database. If it becomes successful then we update\r\n * the view on the firebasev2\r\n*/\r\n\r\nexport default class AddNewISItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log('AddNewISItem constructor');\r\n    }\r\n\r\n    state = {\r\n        atArr: [], //goal, routine original array \r\n        newInstructionTitle: '',\r\n        itemToEdit: { //new item to add to array\r\n            id:\"\",\r\n            title: \"\",\r\n            photo: \"\",\r\n            is_complete: false,\r\n            is_available: true,\r\n            available_end_time: \"23:59:59\",\r\n            available_start_time: \"00:00:00\",\r\n            datetime_completed: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('AddNewISItem did mount')\r\n        console.log(this.props.ISArray);\r\n        console.log(this.props.ISItem);\r\n\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        console.log(e.target.value);\r\n        this.setState(\r\n            {\r\n                newInstructionTitle: e.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    newInputSubmit = () => {\r\n        if (this.state.itemToEdit.title === \"\") {\r\n            alert('Invalid Input');\r\n            return;\r\n        }\r\n        console.log(\"Submitting Input: \" + this.state.itemToEdit.title)\r\n        \r\n        this.props.ISArray.push(this.state.itemToEdit)\r\n        this.updateEntireArray(this.props.ISArray);\r\n    }\r\n\r\n    //This function will below will essentially take in a array and have a key map to it \r\n    updateEntireArray = (newArr) => {\r\n        // 2. update adds to the document\r\n        \r\n        this.props.ISItem.fbPath.update({ 'instructions&steps': newArr }).then(\r\n            (doc) => {\r\n                console.log('updateEntireArray Finished')\r\n                console.log(doc);\r\n                if (this.props != null) {\r\n                    console.log(\"refreshing FireBasev2 from ISItem\");\r\n                    this.props.refresh(newArr);\r\n                }\r\n                else{\r\n                    console.log(\"removing newly added item due to failure\");\r\n                    this.props.ISArray.pop()\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal.Dialog style={{ marginLeft: '0', width: this.props.modalWidth }}>\r\n                <Modal.Header closeButton onClick={() => { this.props.hideNewISModal(); console.log(\"closed button clicked\") }}>\r\n                    <Modal.Title><h2 className=\"normalfancytext\">Add New Step</h2> </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {/* <AddNewGRItem refresh={this.grabFireBaseRoutinesGoalsData} isRoutine={this.state.isRoutine} /> */}\r\n                    <div>\r\n                        <label>Title</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Photo URL</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Available Start Time</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Available End Time</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Available to Caitlin?</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input\r\n                                name=\"Available\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.is_available}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.is_available)\r\n                                    temp.is_available = !temp.is_available;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n\r\n                    \r\n                        <div className=\"input-group mb-3\" >\r\n                            <label className=\"form-check-label\">Time?</label>\r\n\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.is_timed}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.is_timed)\r\n                                    temp.is_timed = !temp.is_timed;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label className=\"form-check-label\">Notify TA?</label>\r\n\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.notifies_ta}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.notifies_ta)\r\n                                    temp.notifies_ta = !temp.notifies_ta;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label className=\"form-check-label\">Remind User? </label>\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.reminds_user}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.reminds_user)\r\n                                    temp.reminds_user = !temp.reminds_user;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => { this.props.hideNewISModal(); console.log(\"closed button clicked\") }}>Close</Button>\r\n                    <Button variant=\"info\" onClick={() => { this.newInputSubmit() }}>Save changes</Button>\r\n                </Modal.Footer>\r\n            </Modal.Dialog>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { ListGroup, Button, Row, Col, Modal, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n/**\r\n * \r\n * This class is responsible for adding a new elemnt to the\r\n * firebase database. If it becomes successful then we update\r\n * the view on the firebasev2\r\n*/\r\nexport default class DeleteISItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log('DeleteISItem constructor');\r\n        console.log('delete index ' + this.props.deleteIndex)\r\n        console.log(this.props.ISItem)\r\n        console.log(this.props.ISArray)\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('DeleteISItem did mount');\r\n    }\r\n\r\n\r\n    submitRequest = () => {\r\n        console.log(\"request was made to delete for element \" +  this.props.deleteIndex);\r\n        let items = [...this.props.ISArray];\r\n        console.log(\"delete with: \")\r\n        console.log(items)\r\n        let i = this.props.deleteIndex;\r\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length))\r\n        console.log(\"delete 2 with: \")\r\n        console.log(newArr)\r\n        this.props.ISItem.fbPath.update({ 'instructions&steps': newArr }).then(\r\n            (doc) => {\r\n                console.log('updateEntireArray Finished')\r\n                console.log(doc);\r\n                if (this.props != null) {\r\n                    console.log(\"refreshing FireBasev2 from delete ISItem\");\r\n                    this.props.refresh(newArr);\r\n                }\r\n                else{\r\n                    console.log(\"delete failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    confirmation = () => {\r\n        const r = window.confirm(\"Confirm Delete\"); \r\n        if(r == true){ \r\n            console.log(\"Delete Confirm\")\r\n            this.submitRequest();\r\n            return;\r\n        }\r\n        console.log(\"Delete Not Confirm\")\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            < div>\r\n                <FontAwesomeIcon \r\n                        onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                        onMouseOut ={event => {event.target.style.color = \"#000000\";}}\r\n                        style ={{color:  \"#000000\", marginRight:\"15px\" }}\r\n                        onClick={(e)=>{e.stopPropagation(); this.confirmation()}}\r\n                        icon={faTrashAlt} size=\"lg\" \r\n                        />\r\n                {/* <FontAwesomeIcon\r\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style={{ color: \"#000000\" }}\r\n                    onClick={() => { console.log(\"delete confirm\") }}\r\n                    icon={faCheck} size=\"lg\"\r\n                />\r\n\r\n                <FontAwesomeIcon\r\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style={{ color: \"#000000\" }}\r\n                    onClick={() => { console.log(\"delete cancel\") }}\r\n                    icon={faTimes} size=\"lg\"\r\n                /> */}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nexport default class deleteAT extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log('Delete AT constructor');\r\n    }\r\n\r\n    /**\r\n     * Does a check to make sure the element is within bounds and then calls then right function to\r\n     * delete the stupid AT\r\n    */\r\n    submitRequest = () => {\r\n        console.log(\"request to delete AT\")\r\n        console.log('delete index ' + this.props.deleteIndex)\r\n        console.log(this.props.Item)\r\n        console.log(this.props.Array)\r\n        if (this.props.deleteIndex < 0) {\r\n            console.log(\"deleteAT index error\")\r\n            return;\r\n        }\r\n        this.tempdeleteArrPortion();\r\n    }\r\n\r\n    tempdeleteArrPortion = () => {\r\n        console.log(\"request was made to delete this index \" + this.props.deleteIndex);\r\n        let items = [...this.props.Array];\r\n        console.log(\"delete with: \");\r\n        console.log(items);\r\n        let i = this.props.deleteIndex;\r\n        items[i]['deleted'] = true;\r\n        this.props.Item.fbPath.update({ 'actions&tasks': items }).then(\r\n            (doc) => {\r\n                console.log('updateEntireArray Finished')\r\n                console.log(doc);\r\n                if (this.props != null) {\r\n                    console.log(\"refreshing FireBasev2 from delete ISItem\");\r\n                    this.props.refresh(items);\r\n                }\r\n                else {\r\n                    console.log(\"delete failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * deleteArrPortion :\r\n     * this function will go into the array of that action&task and delete that specific element, after which\r\n     * it will update the array in firestore and refresh the page once that is completed\r\n    */\r\n    deleteArrPortion = () => {\r\n        console.log(\"request was made to delete this  element \" + this.props.deleteIndex);\r\n        let items = [...this.props.Array];\r\n        console.log(\"delete with: \");\r\n        console.log(items);\r\n        let i = this.props.deleteIndex;\r\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\r\n        console.log(\"delete 2 with: \");\r\n        console.log(newArr);\r\n        this.props.Item.fbPath.update({ 'actions&tasks': newArr }).then(\r\n            (doc) => {\r\n                console.log('updateEntireArray Finished')\r\n                console.log(doc);\r\n                if (this.props != null) {\r\n                    console.log(\"refreshing FireBasev2 from delete ISItem\");\r\n                    this.props.refresh(newArr);\r\n                }\r\n                else {\r\n                    console.log(\"delete failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    \r\n    confirmation = () => {\r\n        const r = window.confirm(\"Confirm Delete\"); \r\n        if(r == true){ \r\n            console.log(\"Delete Confirm\")\r\n            this.submitRequest();\r\n            return;\r\n        }\r\n        console.log(\"Delete Not Confirm\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ marginLeft: \"5px\" }} >\r\n                <FontAwesomeIcon\r\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style ={{marginRight: '15px', color:  \"#000000\" }}\r\n                    onClick={(e) => { e.stopPropagation(); this.confirmation() }}\r\n                    icon={faTrashAlt} size=\"lg\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nexport default class deleteGR extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log('Delete AT constructor');  \r\n       \r\n    }\r\n\r\n    submitRequest = () => {\r\n        console.log(\"request to delete GR\")\r\n        console.log('delete index ' + this.props.deleteIndex)\r\n        console.log(this.props.Item)\r\n        console.log(this.props.Array)\r\n        if (this.props.deleteIndex < 0){\r\n            console.log(\"invalid index exiting delete\");\r\n            return;\r\n        }\r\n        this.tempdeleteArrPortion();\r\n    } \r\n\r\n    tempdeleteArrPortion= () => {\r\n        let items = [...this.props.Array];\r\n        items[this.props.deleteIndex]['deleted'] = true;\r\n        this.props.Path.update({ 'goals&routines': items }).then(\r\n            (doc) => {\r\n                console.log('updateEntireArray Finished')\r\n                console.log(doc);\r\n                if (this.props != null) {\r\n                    console.log(\"refreshing FireBasev2 from delete GRItem\");\r\n                    this.props.refresh();\r\n                }\r\n                else{\r\n                    console.log(\"delete failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    deleteArrPortion = () => {\r\n        console.log(\"request was made to delete this  element \" +  this.props.deleteIndex);\r\n        let items = [...this.props.Array];\r\n        console.log(\"delete with: \");\r\n        let i = this.props.deleteIndex;\r\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\r\n        console.log(\"delete 2 with: \");\r\n        console.log(newArr);\r\n        this.props.Path.update({ 'goals&routines': newArr }).then(\r\n            (doc) => {\r\n                console.log('updateEntireArray Finished')\r\n                console.log(doc);\r\n                if (this.props != null) {\r\n                    console.log(\"refreshing FireBasev2 from delete ISItem\");\r\n                    this.props.refresh();\r\n                }\r\n                else{\r\n                    console.log(\"delete failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    confirmation = () => {\r\n        const r = window.confirm(\"Confirm Delete\"); \r\n        if(r == true){ \r\n            console.log(\"Delete Confirm\")\r\n            this.submitRequest();\r\n            return;\r\n        }\r\n        console.log(\"Delete Not Confirm\")\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div  style={{ marginLeft: \"5px\" }}>\r\n            <FontAwesomeIcon \r\n            title = \"Delete Item\"\r\n                    onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut ={event => {event.target.style.color = \"#000000\";}}\r\n                    style ={{marginRight: '15px', color:  \"#000000\" }}\r\n                    onClick={(e)=>{ e.stopPropagation(); this.confirmation()}}\r\n                    icon={faTrashAlt} size=\"lg\" \r\n                    />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { faEdit, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Row, Col, Modal, InputGroup, FormControl } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport default class editGR extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log('editAT constructor');\r\n        console.log('Edit index ' + this.props.i)\r\n        console.log(this.props.FBPath)\r\n        console.log(this.props.ATArray)\r\n        console.log(this.props.ATArray[this.props.i])\r\n\r\n        this.state = {\r\n            showEditModal: false,\r\n            itemToEdit: this.props.ATArray[this.props.i]\r\n        }\r\n    }\r\n\r\n    newInputSubmit = () => {\r\n        console.log(\"submitting GR edited formed to firebase\");\r\n        let newArr = this.props.ATArray;\r\n        newArr[this.props.i] = this.state.itemToEdit;\r\n\r\n        this.props.FBPath.update({ 'goals&routines': newArr }).then(\r\n            (doc) => {\r\n                console.log('updateEntireArray Finished')\r\n                console.log(doc);\r\n                this.setState({ showEditModal: false })\r\n                if (this.props != null) {\r\n                    console.log(\"refreshing FireBasev2 from updating GR ITEM \");\r\n                    this.props.refresh(newArr);\r\n                }\r\n                else {\r\n                    console.log(\"update failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    //For possible future use because we currently just typing out the time.\r\n    startTimePicker = () => {\r\n        // const [startDate, setStartDate] = useState(new Date());\r\n        return (\r\n            <DatePicker class=\"form-control form-control-lg\" type=\"text\" style={{ width: '100%' }}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeCaption=\"Time\"\r\n                dateFormat=\"h:mm aa\"\r\n                selected={(this.state.itemToEdit.available_start_time) ? this.state.itemToEdit.available_start_time : new Date()}\r\n                onChange={(date) => {\r\n                    let temp = this.state.itemToEdit;\r\n                    temp.available_start_time = date;\r\n                    this.setState({\r\n                        itemToEdit: temp\r\n                    })\r\n\r\n                }}\r\n                showTimeSelect\r\n                timeFormat=\"HH:mm\"\r\n                timeIntervals={15}\r\n                timeCaption=\"time\"\r\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    editGRForm = () => {\r\n        return (\r\n            <div style={{width: \"290px\", padding: \"30px\"}}>\r\n                <label>Title</label>\r\n                <div className=\"input-group mb-3\" >\r\n                    <input style={{ width: '200px' }} placeholder=\"Enter Title\"  value={this.state.itemToEdit.title} onChange={\r\n                        (e) => { e.preventDefault(); e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                    }\r\n                    \r\n                    //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\r\n                    onKeyDown={\r\n                        (e) => {\r\n                            if (e.keyCode == 32) {\r\n                                 \r\n                                let temp = this.state.itemToEdit; temp.title = e.target.value + \" \"; this.setState({ itemToEdit: temp })\r\n                                e.preventDefault(); e.stopPropagation()\r\n                            }\r\n                        }}/>\r\n                </div >\r\n\r\n                <label>Photo URL</label>\r\n                <div className=\"input-group mb-3\" >\r\n                    <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\r\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                    } />\r\n                </div >\r\n\r\n                <label>Available Start Time</label>\r\n                <div className=\"input-group mb-3\" >\r\n                    <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\r\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                    } />\r\n                </div >\r\n\r\n                <label>Available End Time</label>\r\n                <div className=\"input-group mb-3\" >\r\n                    <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\r\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                    } />\r\n                </div >\r\n\r\n\r\n                <div className=\"input-group mb-3\" >\r\n                    <label class=\"form-check-label\">Available to Caitlin?</label>\r\n                    <input\r\n                        style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                        name=\"Available\"\r\n                        type=\"checkbox\"\r\n                        checked={this.state.itemToEdit.is_available}\r\n                        onChange={(e) => {\r\n                            e.stopPropagation();\r\n                            let temp = this.state.itemToEdit;\r\n                            console.log(temp.is_available)\r\n                            temp.is_available = !temp.is_available;\r\n                            this.setState({ itemToEdit: temp })\r\n                        }} />\r\n\r\n\r\n                </div >\r\n\r\n\r\n                <div className=\"input-group mb-3\" >\r\n                    <label class=\"form-check-label\">Time?</label>\r\n\r\n                    <input\r\n                        style={{ marginTop: '5px', marginLeft: '5px' }}\r\n\r\n                        name=\"Timed\"\r\n                        type=\"checkbox\"\r\n                        checked={this.state.itemToEdit.is_timed}\r\n                        onChange={(e) => {\r\n                            e.stopPropagation();\r\n                            let temp = this.state.itemToEdit;\r\n                            console.log(temp.is_timed)\r\n                            temp.is_timed = !temp.is_timed;\r\n                            this.setState({ itemToEdit: temp })\r\n                        }} />\r\n                </div >\r\n\r\n                <div className=\"input-group mb-3\" >\r\n                    <label class=\"form-check-label\">Notify TA?</label>\r\n\r\n                    <input\r\n                        style={{ marginTop: '5px', marginLeft: '5px' }}\r\n\r\n                        name=\"Timed\"\r\n                        type=\"checkbox\"\r\n                        checked={this.state.itemToEdit.notifies_ta}\r\n                        onChange={(e) => {\r\n                            e.stopPropagation();\r\n                            let temp = this.state.itemToEdit;\r\n                            console.log(temp.notifies_ta)\r\n                            temp.notifies_ta = !temp.notifies_ta;\r\n                            this.setState({ itemToEdit: temp })\r\n                        }} />\r\n                </div >\r\n\r\n                <div className=\"input-group mb-3\" >\r\n                    <label class=\"form-check-label\">Remind User? </label>\r\n                    <input\r\n                        style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                        name=\"Timed\"\r\n                        type=\"checkbox\"\r\n                        checked={this.state.itemToEdit.reminds_user}\r\n                        onChange={(e) => {\r\n                            e.stopPropagation();\r\n                            let temp = this.state.itemToEdit;\r\n                            console.log(temp.reminds_user)\r\n                            temp.reminds_user = !temp.reminds_user;\r\n                            this.setState({ itemToEdit: temp })\r\n                        }} />\r\n                </div >\r\n                {/* <Row>\r\n                    <FontAwesomeIcon\r\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style={{ color: \"#00FF00\" }}\r\n                    onClick={(e) => { e.stopPropagation();  this.newInputSubmit(); }}\r\n                    icon={faCheck} size=\"2x\"\r\n                />\r\n                 <FontAwesomeIcon\r\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style={{ color: \"#FF0000\" }}\r\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}\r\n                    icon={faTimes} size=\"2x\"\r\n                />\r\n                    \r\n                    </Row> */}\r\n\r\n                <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\r\n                <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    showIcon = () => {\r\n        return (\r\n            <div style={{ marginLeft: \"5px\" }} >\r\n                <FontAwesomeIcon\r\n                    title=\"Edit Item\"\r\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style={{ color: \"#000000\" }}\r\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\r\n                    icon={faEdit} size=\"lg\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div  onClick={(e) => { e.stopPropagation(); }}>\r\n                {(this.state.showEditModal ? this.editGRForm() : <div> </div>)}\r\n                {(this.state.showEditModal) ? <div> </div> : this.showIcon()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class editIS extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log('editIs constructor');\r\n        console.log('Edit index ' + this.props.i)\r\n        console.log(this.props.FBPath)\r\n        console.log(this.props.ISArray)\r\n        this.state = {\r\n            showEditModal: false,\r\n            itemToEdit: this.props.ISArray[this.props.i]\r\n        }\r\n    }\r\n\r\n    newInputSubmit = () => {\r\n        console.log(\"submitting edited formed to firebase\");\r\n        let newArr  = this.props.ISArray;\r\n        newArr[this.props.i] = this.state.itemToEdit;\r\n        this.props.FBPath.update({ 'instructions&steps': newArr }).then(\r\n            (doc) => {\r\n                console.log('updateEntireArray Finished')\r\n                console.log(doc);\r\n                if (this.props != null) {\r\n                    console.log(\"refreshing FireBasev2 from updating ISItem\");\r\n                    this.setState({ showEditModal: false })\r\n                    this.props.refresh(newArr);\r\n                }\r\n                else{\r\n                    console.log(\"update failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    editISForm = () => {\r\n        return (\r\n            <div style={{width: \"290px\", padding: \"30px\"}}>\r\n            <label>Title</label>\r\n            <div className=\"input-group mb-3\" >\r\n                <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\r\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                } />\r\n            </div >\r\n\r\n            <label>Photo URL</label>\r\n            <div className=\"input-group mb-3\" >\r\n                <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\r\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                } />\r\n            </div >\r\n\r\n            <label>Available Start Time</label>\r\n            <div className=\"input-group mb-3\" >\r\n                <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\r\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                } />\r\n            </div >\r\n\r\n            <label>Available End Time</label>\r\n            <div className=\"input-group mb-3\" >\r\n                <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\r\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                } />\r\n            </div >\r\n\r\n            <label>Available to Caitlin?</label>\r\n            <div className=\"input-group mb-3\" >\r\n                <input\r\n                    name=\"Available\"\r\n                    type=\"checkbox\"\r\n                    checked={this.state.itemToEdit.is_available}\r\n                    onChange={(e) => {\r\n                        e.stopPropagation();\r\n                        let temp = this.state.itemToEdit;\r\n                        console.log(temp.is_available)\r\n                        temp.is_available = !temp.is_available;\r\n                        this.setState({ itemToEdit: temp })\r\n                    }} />\r\n            </div >\r\n\r\n            <label>Time?</label>\r\n            <div className=\"input-group mb-3\" >\r\n                <input\r\n                    name=\"Timed\"\r\n                    type=\"checkbox\"\r\n                    checked={this.state.itemToEdit.is_timed}\r\n                    onChange={(e) => {\r\n                        e.stopPropagation();\r\n                        let temp = this.state.itemToEdit;\r\n                        console.log(temp.is_timed)\r\n                        temp.is_timed = !temp.is_timed;\r\n                        this.setState({ itemToEdit: temp })\r\n                    }} />\r\n            </div >\r\n\r\n            <label>Notify TA?</label>\r\n            <div className=\"input-group mb-3\" >\r\n                <input\r\n                    name=\"Timed\"\r\n                    type=\"checkbox\"\r\n                    checked={this.state.itemToEdit.notifies_ta}\r\n                    onChange={(e) => {\r\n                        e.stopPropagation();\r\n                        let temp = this.state.itemToEdit;\r\n                        console.log(temp.notifies_ta)\r\n                        temp.notifies_ta = !temp.notifies_ta;\r\n                        this.setState({ itemToEdit: temp })\r\n                    }} />\r\n            </div >\r\n\r\n            <label>Remind User</label>\r\n            <div className=\"input-group mb-3\" >\r\n                <input\r\n                    name=\"Timed\"\r\n                    type=\"checkbox\"\r\n                    checked={this.state.itemToEdit.reminds_user}\r\n                    onChange={(e) => {\r\n                        e.stopPropagation();\r\n                        let temp = this.state.itemToEdit;\r\n                        console.log(temp.reminds_user)\r\n                        temp.reminds_user = !temp.reminds_user;\r\n                        this.setState({ itemToEdit: temp })\r\n                    }} />\r\n            </div > \r\n            <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\r\n            <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    showIcon = () => {\r\n        return (\r\n            <div>\r\n            <FontAwesomeIcon\r\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style={{ color: \"#000000\" }}\r\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\r\n                    icon={faEdit} size=\"lg\"\r\n                />\r\n\r\n                </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {(this.state.showEditModal) ? <div> </div> : this.showIcon()}\r\n                {(this.state.showEditModal ? this.editISForm() : <div> </div>)}\r\n             \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  Button } from 'react-bootstrap';\r\n\r\n\r\nexport default class editAT extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        console.log('editAT constructor');\r\n        console.log('Edit index ' + this.props.i)\r\n        console.log(this.props.FBPath)\r\n        console.log(this.props.ATArray)\r\n\r\n        this.state = {\r\n            showEditModal: false,\r\n            itemToEdit: this.props.ATArray[this.props.i]\r\n        }\r\n    }\r\n\r\n    newInputSubmit = () => {\r\n        console.log(\"submitting edited formed to firebase\");\r\n        let newArr  = this.props.ATArray;\r\n        newArr[this.props.i] = this.state.itemToEdit;\r\n\r\n        this.props.FBPath.update({ 'actions&tasks': newArr }).then(\r\n            (doc) => {\r\n                console.log('updateEntireArray Finished')\r\n                console.log(doc);\r\n                if (this.props != null) {\r\n                    console.log(\"refreshing FireBasev2 from updating ISItem\");\r\n                    this.setState({ showEditModal: false })\r\n                    this.props.refresh(newArr);\r\n                }\r\n                else{\r\n                    console.log(\"update failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    editISForm = () => {\r\n        return (\r\n            <div style={{width: \"290px\", padding: \"30px\"}}>\r\n                  <label>Title</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } \r\n                            \r\n                            //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\r\n                    onKeyDown={\r\n                        (e) => {\r\n                            if (e.keyCode == 32) {\r\n                                 \r\n                                let temp = this.state.itemToEdit; temp.title = e.target.value + \" \"; this.setState({ itemToEdit: temp })\r\n                                e.preventDefault(); e.stopPropagation()\r\n                            }\r\n                        }}\r\n                            />\r\n                        </div >\r\n\r\n                        <label>Photo URL</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Available Start Time</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Available End Time</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label class=\"form-check-label\">Available to Caitlin?</label>\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                                name=\"Available\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.is_available}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.is_available)\r\n                                    temp.is_available = !temp.is_available;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n\r\n\r\n                        </div >\r\n\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label class=\"form-check-label\">Time?</label>\r\n\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.is_timed}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.is_timed)\r\n                                    temp.is_timed = !temp.is_timed;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label class=\"form-check-label\">Notify TA?</label>\r\n\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.notifies_ta}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.notifies_ta)\r\n                                    temp.notifies_ta = !temp.notifies_ta;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label class=\"form-check-label\">Remind User? </label>\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.reminds_user}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    console.log(temp.reminds_user)\r\n                                    temp.reminds_user = !temp.reminds_user;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n\r\n                <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\r\n                <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    showIcon = () => {\r\n        return (\r\n            <div>\r\n          <FontAwesomeIcon\r\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style={{ color: \"#000000\" }}\r\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\r\n                    icon={faEdit} size=\"lg\"\r\n                />\r\n                </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ marginLeft: \"5px\" }} onClick={(e) => { e.stopPropagation();}}>\r\n                {(this.state.showEditModal ? this.editISForm() : <div> </div>)}\r\n                {  (this.state.showEditModal) ? <div> </div> : this.showIcon()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport firebase from \"./firebase\";\r\nimport { ListGroup, Button, Row, Col, Modal, InputGroup, FormControl } from 'react-bootstrap';\r\nimport AddNewGRItem from './addNewGRItem.jsx'\r\nimport AddNewATItem from './addNewATItem.jsx'\r\nimport AddNewISItem from './addNewISItem.jsx'\r\nimport DeleteISItem from './DeleteISItem.jsx'\r\nimport DeleteAT from './deleteAT.jsx'\r\nimport DeleteGR from './deleteGR.jsx'\r\nimport EditGR from './editGR.jsx';\r\nimport EditIS from './editIS.jsx';\r\nimport EditAT from './EditAT.jsx'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faUserAltSlash } from '@fortawesome/free-solid-svg-icons';\r\n/**\r\n * Notes from Tyler:\r\n * 2/17/2020\r\n * TODOs:\r\n *\r\n * 1.Times from GR are not passed down to AT and times from AT are not passed\r\n * to IS\r\n *\r\n * 2.Clicking on the Goal and Routine at the top level should closed previous\r\n * AT and IS Modals.\r\n *\r\n *\r\n *\r\n*/\r\n\r\n\r\nexport default class FirebaseV2 extends React.Component {\r\n\r\n    state = {\r\n        firebaseRootPath: firebase.firestore().collection('users').doc('7R6hAVmDrNutRkG3sVRy'),\r\n        originalGoalsAndRoutineArr: [],\r\n        goals: [], //array to hold all  goals\r\n        routines: [], // array to hold all routines\r\n        //This single GR item is passed to AddNewATItem to help processed the new item\r\n        singleGR: { //everytime a goal/routine is clicked, we open a modal and the modal info will be provided by this object\r\n            show: false, // Show the modal\r\n            type: \"None\",\r\n            title: 'GR Name',\r\n            photo: \"\",\r\n            available_end_time: \"\", //TODO get these used\r\n            available_start_time: \"\", //TODO get these used\r\n            id: null,\r\n            arr: [],\r\n            fbPath: null\r\n        },\r\n\r\n        singleAT: { //for each action/task we click on, we open a new modal to show the steps/instructions affiliate\r\n            //with the task\r\n            show: false, // Show the model\r\n            type: \"None\", // Action or Task\r\n            title: 'AT Name', //Title of action task ,\r\n            available_end_time: \"\", //TODO get these used\r\n            available_start_time: \"\", //TODO get these used\r\n            photo: '',\r\n            id: null, //id of Action Task\r\n            arr: [], //array of instruction/steps formatted to display as a list\r\n            fbPath: null, //Firebase direction to the arr\r\n\r\n        },\r\n        singleATitemArr: [], //temp fix for my bad memory of forgetting to add this in singleGR\r\n        singleISitemArr: [], //temp fix for my bad memory of forgetting to add this in singleAT\r\n        modalWidth: '350px', //primary width size for all modals\r\n\r\n        //Use to decided whether to show the respective modals\r\n        addNewGRModalShow: false,\r\n        addNewATModalShow: false,\r\n        addNewISModalShow: false,\r\n\r\n        //used to determine thumbnail picture size\r\n        thumbnailWidth: '150px',\r\n        thumbnailHeight: '100px',\r\n\r\n\r\n        //isRoutine is to check whether we clicked on add routine or add goal\r\n        isRoutine: true,\r\n        availabilityColorCode: \"#D6A34C\"\r\n    }\r\n\r\n    /**\r\n     * refreshATItem:\r\n     * Given a array, it will replace the current array of singleGR which holds the layout\r\n     * list of all action task under it and singleATitemArr which just holds the raw data.\r\n     *\r\n    */\r\n    refreshATItem = (arr) => {\r\n        console.log(\"refreshATItem was called\")\r\n\r\n        this.setState({ singleATitemArr: arr })\r\n        let resArr = this.createListofAT(arr);\r\n        let singleGR = this.state.singleGR;\r\n        singleGR.arr = resArr;\r\n        this.setState({ singleGR: singleGR })\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * refreshISItem - given A array item,\r\n     * this method will take those items,\r\n     * put it in the list form to present\r\n     * as a list of instructions and the\r\n     * it will also update the array of\r\n     * the normal list of instructions with\r\n     * the one passed in.\r\n    */\r\n    refreshISItem = (arr) => {\r\n        console.log(\"refreshISItem new arr\")\r\n        console.log(arr)\r\n        this.setState({\r\n            singleISitemArr: arr\r\n        })\r\n        let resArr = this.createListofIS(arr);\r\n        let singleAt = this.state.singleAT;\r\n        singleAt.arr = resArr;\r\n        this.setState({ singleAT: singleAt })\r\n    }\r\n\r\n    constructor(props) { // serves almost no purpose currently\r\n        super(props);\r\n        console.log('running Firebase 2');\r\n        // this.state = {date: new Date()};\r\n    }\r\n\r\n    componentDidMount() { //Grab the\r\n        this.grabFireBaseRoutinesGoalsData();\r\n    }\r\n\r\n\r\n    /**\r\n     * grabFireBaseRoutinesGoalsData:\r\n     * this function grabs the goals&routines array from the path located in this function\r\n     * which will then popular the goals, routines,originalGoalsAndRoutineArr array\r\n     * separately. The arrays will be used for display and data manipulation later.\r\n     *\r\n    */\r\n    grabFireBaseRoutinesGoalsData = () => {\r\n        const db = firebase.firestore();\r\n        console.log('FirebaseV2 component did mount');\r\n        const docRef = db.collection('users').doc('7R6hAVmDrNutRkG3sVRy');\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                console.log(doc.data());\r\n                var x = doc.data();\r\n                console.log(x['goals&routines']);\r\n                x = x['goals&routines'];\r\n                let routine = [];\r\n                let goal = [];\r\n                for (let i = 0; i < x.length; ++i) {\r\n                    if (!x[i]['deleted'] && x[i]['is_persistent']) {\r\n                        console.log(\"routine \" + x[i]['title']);\r\n                        routine.push(x[i]);\r\n                    }\r\n                    else if (!x[i]['deleted'] && !x[i]['is_persistent']) {\r\n                        console.log(\"not routine \" + x[i]['title']);\r\n                        goal.push(x[i]);\r\n                    }\r\n                }\r\n                this.setState({\r\n                    originalGoalsAndRoutineArr: x,\r\n                    goals: goal,\r\n                    addNewGRModalShow: false,\r\n                    routines: routine\r\n                })\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(' FirebaseV2 will unmount web');\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        const inputField = e.target.value;\r\n        console.log('FirebaseV2.jsx :: onInputChange :: ' + inputField);\r\n    }\r\n    //This function essentially grabs all action/tasks\r\n    //for the routine or goal passed in and pops open the\r\n    //modal for the action/task\r\n    getATList = (id, title, persist) => {\r\n        const db = firebase.firestore();\r\n        console.log('getATList function with id : ' + id);\r\n        let docRef = db.collection('users').doc('7R6hAVmDrNutRkG3sVRy')\r\n            .collection('goals&routines').doc(id);\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                console.log('testes')\r\n                console.log(doc.data());\r\n                var x = doc.data()['actions&tasks']\r\n                console.log(x);\r\n                if (x == null) {\r\n                    console.log(\"No actions&tasks array!\");\r\n                    let singleGR = { //Variable to hold information about the parent Goal/ Routine\r\n                        show: true,\r\n                        type: (persist) ? \"Routine\" : \"Goal\",\r\n                        title: title,\r\n                        id: id,\r\n                        arr: [],\r\n                        fbPath: docRef\r\n                    }\r\n                    this.setState({\r\n                        singleGR: singleGR,\r\n                        singleATitemArr: []\r\n                    })\r\n                    return;\r\n                }\r\n\r\n                let singleGR = { //initialise without list to pass fbPath to child\r\n                    show: true,\r\n                    type: (persist) ? \"Routine\" : \"Goal\",\r\n                    title: title,\r\n                    id: id,\r\n                    arr: [], //array of current action/task in this singular Routine\r\n                    fbPath: docRef\r\n                }\r\n\r\n                this.setState({\r\n                    singleGR: singleGR,\r\n                    singleATitemArr: x\r\n                })\r\n\r\n                let resArr = this.createListofAT(x);\r\n                //assemble singleGR template here:\r\n\r\n                singleGR = {\r\n                    show: true,\r\n                    type: (persist) ? \"Routine\" : \"Goal\",\r\n                    title: title,\r\n                    id: id,\r\n                    arr: resArr, //array of current action/task in this singular Routine\r\n                    fbPath: docRef\r\n                }\r\n\r\n                this.setState({\r\n                    singleGR: singleGR\r\n                })\r\n\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n\r\n    //Creates a array of all actions/task for get getATList function\r\n    //getATList stands for get all action/task\r\n    createListofAT = (A) => {\r\n        let res = []\r\n        for (let i = 0; i < A.length; i++) {\r\n            console.log(A[i]['title']);\r\n            if (!A[i]['id'] || !A[i]['title']) {\r\n                console.log('missing title, or id at index : ' + i);\r\n                return []\r\n            }\r\n            if (A[i]['deleted']) { //item is \"deleted\" and should not be shown...\r\n                continue;\r\n            }\r\n            let tempID = A[i]['id'];\r\n            let tempPhoto = A[i]['photo'];\r\n            console.log(tempPhoto);\r\n            let tempTitle = A[i]['title'];\r\n            let tempAvailable = A[i]['is_available'];\r\n            res.push(\r\n                <div key={'AT' + i} >\r\n                    <ListGroup.Item action onClick={() => { this.ATonClickEvent(tempTitle, tempID) }} variant=\"light\" style={{ marginBottom: '3px' }}>\r\n                        <Row style={{ margin: '0' }} className=\"d-flex flex-row-reverse\">\r\n\r\n                            {tempAvailable ?\r\n                                <div style={{ marginLeft: \"5px\" }}>\r\n                                    <FontAwesomeIcon\r\n                                        title=\"Available to Cailin\"\r\n                                        // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                                        // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                                        style={{ color: this.state.availabilityColorCode }}\r\n                                        onClick={(e) => { e.stopPropagation(); alert(\"Item Is Availble to Caitlin\") }}\r\n                                        icon={faUser} size=\"lg\"\r\n                                    /> </div>\r\n                                : <div style={{ marginLeft: \"5px\" }}>\r\n                                    <FontAwesomeIcon\r\n                                        title=\"Unavailable to Caitlin\"\r\n                                        // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                                        // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                                        style={{ color: \"#000000\" }}\r\n                                        onClick={(e) => { e.stopPropagation(); alert(\"Item Is NOT Availble to Caitlin\") }}\r\n                                        icon={faUserAltSlash} size=\"lg\"\r\n                                    />\r\n                                </div>}\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"fancytext\">{tempTitle}</div>\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        {(tempPhoto ? (<img src={tempPhoto} alt=\"Routine\" height={this.state.thumbnailHeight} width={this.state.thumbnailWidth} className=\"center\" />) : (<div></div>))}\r\n\r\n                        <Row style={{\r\n                            margin: '0', display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            marginTop: \"10px\",\r\n                            marginBottom: \"10px\"\r\n                        }}>\r\n                            <DeleteAT\r\n                                deleteIndex={i}\r\n                                type={'actions&tasks'}\r\n                                Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\r\n                                Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\r\n                                refresh={this.refreshATItem}\r\n                            />\r\n\r\n                            <EditAT\r\n                                i={i} //index to edit\r\n                                ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\r\n                                FBPath={this.state.singleGR.fbPath} //holds the path to the array data\r\n                                refresh={this.refreshATItem} //function to refresh AT data\r\n                            />\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                </div>\r\n            )\r\n        }\r\n        return res;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * takes the list of steps/instructions and returns\r\n     * it in the form of a ListGroup for presentation\r\n    */\r\n    createListofIS = (A) => {\r\n        let res = []\r\n        for (let i = 0; i < A.length; i++) {\r\n            console.log(A[i]['title']);\r\n            console.log(A[i]['id']);\r\n            /**\r\n             * TODO: notify jeremy of this issue:\r\n             * Some of these here don't have IDs, so we need to\r\n             * ignore it for now\r\n            */\r\n            let tempPhoto = A[i]['photo'];\r\n            console.log(\"IS index \" + i + \" photo url :\" + tempPhoto);\r\n            let tempTitle = A[i]['title'];\r\n            let tempAvailable = A[i]['is_available'];\r\n            res.push(\r\n                <div key={'IS' + i} style={{ width: '100%' }} >\r\n\r\n\r\n                    <ListGroup.Item action onClick={() => { this.ISonClickEvent(tempTitle) }}\r\n                        variant=\"light\" style={{ width: '100%', marginBottom: '3px' }}>\r\n\r\n                        <Row className=\"d-flex flex-row-reverse\">\r\n                            {tempAvailable ?\r\n                                <div style={{ marginLeft: \"5px\" }}>\r\n                                    <FontAwesomeIcon\r\n                                        title=\"Available to Cailin\"\r\n                                        // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                                        // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                                        style={{ color: this.state.availabilityColorCode }}\r\n                                        onClick={(e) => { e.stopPropagation(); alert(\"Item Is Availble to Caitlin\") }}\r\n                                        icon={faUser} size=\"lg\"\r\n                                    /> </div>\r\n                                : <div style={{ marginLeft: \"5px\" }}>\r\n                                    <FontAwesomeIcon\r\n                                        title=\"Unavailable to Caitlin\"\r\n                                        // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                                        // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                                        style={{ color: \"#000000\" }}\r\n                                        onClick={(e) => { e.stopPropagation(); alert(\"Item Is NOT Availble to Caitlin\") }}\r\n                                        icon={faUserAltSlash} size=\"lg\"\r\n                                    />\r\n                                </div>}\r\n\r\n\r\n                        </Row>\r\n\r\n                        <Row\r\n                            style={{ textAlign:\"center\", width: '100%' }}>\r\n                            <Col>\r\n                                <div className=\"fancytext\" >{tempTitle}</div>\r\n                            </Col>\r\n\r\n\r\n                        </Row>\r\n                        {(tempPhoto ? (<img src={tempPhoto} alt=\"Instruction/Step\" height={this.state.thumbnailHeight}\r\n                            width={this.state.thumbnailWidth} className=\"center\" />) : (<div></div>))}\r\n\r\n                        <Row style={{\r\n                            margin: '0', display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\"\r\n                        }} >\r\n                            <DeleteISItem\r\n                                deleteIndex={i}\r\n                                ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\r\n                                ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\r\n                                refresh={this.refreshISItem}\r\n                            />\r\n\r\n                            <EditIS\r\n                                i={i} //index to edit\r\n                                ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\r\n                                FBPath={this.state.singleAT.fbPath} //holds the fbPath to arr to be updated\r\n                                refresh={this.refreshISItem} //function to refresh IS data\r\n                            />\r\n\r\n                        </Row>\r\n\r\n                    </ListGroup.Item>\r\n                </div>\r\n            )\r\n        }\r\n        return res;\r\n    }\r\n\r\n    ISonClickEvent = (title) => {\r\n        console.log(\"Inside IS Click \" + title);\r\n    }\r\n\r\n\r\n    /**\r\n     * In this function we are passed in the id title and persist property of the incoming routine/goal\r\n     * and we need to make return a viewable list of all the actions/tasks for this routine/goal\r\n     * which is done in getATList function\r\n    */\r\n    GRonClickEvent = (title, id, persist) => {\r\n        console.log(id, title, persist);\r\n        this.getATList(id, title, persist)\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * we are passed in the action/task id and title\r\n     * and we will need to grab all steps/Instructions related to this action/task,\r\n     *\r\n    */\r\n    ATonClickEvent = (title, id) => {\r\n        let stepsInstructionArrayPath = this.state.firebaseRootPath.collection('goals&routines').doc(this.state.singleGR.id).collection('actions&tasks').doc(id);\r\n        console.log(id, title);\r\n        let temp = {\r\n            show: true,\r\n            type: \"Action/Task\",\r\n            title: title,\r\n            id: id,\r\n            arr: [],\r\n            fbPath: stepsInstructionArrayPath\r\n        };\r\n        stepsInstructionArrayPath.get().then((doc) => {\r\n            if (doc.exists) {\r\n                console.log('Grabbing steps/instructions data:')\r\n                // console.log(doc.data());\r\n                var x = doc.data();\r\n                x = x['instructions&steps'];\r\n                if (x == null) {\r\n                    this.setState(\r\n                        { singleAT: temp }\r\n                    )\r\n                    return;\r\n                }\r\n                console.log(x);\r\n                //Below is a fix for fbPath Null when we pass it\r\n                //createListofIS and DeleteISItem.jsx, we need a path\r\n                //to delete the item, so we set the path then create the\r\n                //the array and reset it.\r\n                this.setState({ singleAT: temp, singleISitemArr: x })\r\n                temp.arr = this.createListofIS(x);\r\n                this.setState({ singleAT: temp, singleISitemArr: x })\r\n\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No Instruction/Step documents!\");\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n            alert(\"Error getting document:\", error);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * findIndexByID:\r\n     * given a id, it will loop through the original goals and routine array to\r\n     * return the index with the corresonding id\r\n    */\r\n    findIndexByID = (id) => {\r\n        let originalGoalsAndRoutineArr = this.state.originalGoalsAndRoutineArr;\r\n        for (let i = 0; i < originalGoalsAndRoutineArr.length; i++) {\r\n            if (id === originalGoalsAndRoutineArr[i].id) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    getRoutines = () => {\r\n        let displayRoutines = [];\r\n        if (this.state.routines.length !== 0) {//Check to make sure routines exists\r\n            for (let i = 0; i < this.state.routines.length; i++) {\r\n                let tempTitle = this.state.routines[i]['title'];\r\n                let tempID = this.state.routines[i]['id'];\r\n                let tempPersist = this.state.routines[i]['is_persistent'];\r\n\r\n                displayRoutines.push(\r\n                    <div key={'test0' + i} >\r\n                        <ListGroup.Item action onClick={() => { this.GRonClickEvent(tempTitle, tempID, tempPersist) }} variant=\"light\" style={{ marginBottom: '3px' }}>\r\n                            <Row style={{ margin: '0' }} className=\"d-flex flex-row-reverse\">\r\n                                {this.state.routines[i]['is_available'] ?\r\n                                    <div style={{ marginLeft: \"5px\" }}>\r\n                                        <FontAwesomeIcon\r\n                                            title=\"Available to Cailin\"\r\n                                            // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                                            // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                                            style={{ color: this.state.availabilityColorCode }}\r\n                                            onClick={(e) => { e.stopPropagation(); alert(\"Item Is Availble to Caitlin\") }}\r\n                                            icon={faUser} size=\"lg\"\r\n                                        /> </div>\r\n                                    : <div style={{ marginLeft: \"5px\" }}>\r\n                                        <FontAwesomeIcon\r\n                                            title=\"Unavailable to Caitlin\"\r\n                                            // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                                            // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                                            style={{ color: \"#000000\" }}\r\n                                            onClick={(e) => { e.stopPropagation(); alert(\"Item Is NOT Availble to Caitlin\") }}\r\n                                            icon={faUserAltSlash} size=\"lg\"\r\n                                        />\r\n                                    </div>}\r\n\r\n\r\n                            </Row>\r\n                            <Row>\r\n                                <Col >\r\n                                    <div className=\"fancytext\">{this.state.routines[i]['title']}\r\n                                        <br /> Time: {Math.floor(1 + Math.random() * (45 - 1))} Minutes\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                <Col sm=\"auto\" md=\"auto\" lg=\"auto\" style={{ width: '100%', height: \"100%\" }}>\r\n                                    {(this.state.routines[i]['photo'] ?\r\n                                        (<img src={this.state.routines[i]['photo']}\r\n                                            alt=\"Routine\"\r\n                                            height={this.state.thumbnailHeight}\r\n                                            width={this.state.thumbnailWidth}\r\n                                            className=\"center\" />) : (<div></div>))}\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row style={{\r\n                                margin: '0', display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                marginTop: \"10px\",\r\n                                marginBottom: \"10px\"\r\n                            }}>\r\n                                <DeleteGR\r\n                                    deleteIndex={this.findIndexByID(tempID)}\r\n                                    Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                                    Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                                    refresh={this.grabFireBaseRoutinesGoalsData}\r\n                                />\r\n                                <EditGR\r\n                                    // ATArray should actually be named GR Array but the code with EditGT\r\n                                    // and EditAT was so similar that it was copied that pasted\r\n                                    i={this.findIndexByID(tempID)} //index to edit\r\n                                    ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                                    FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                                    refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\r\n                                />\r\n\r\n                            </Row>\r\n                            <Row>\r\n\r\n                                <div style={{ fontSize: '12px' }}>\r\n                                    {(this.state.routines[i]['datetime_started']) ?\r\n                                        <div style={{ marginTop: '3px' }} >{\"Previous Start Time: \" + this.state.routines[i]['datetime_started']} </div> : <div> </div>}\r\n                                    {(this.state.routines[i]['datetime_completed']) ?\r\n                                        <div>{\"Previous Completed Time: \" + this.state.routines[i]['datetime_completed']} </div> : <div> </div>}\r\n                                </div>\r\n\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return displayRoutines;\r\n    }\r\n\r\n    getGoals = () => {\r\n        let displayGoals = [];\r\n        if (this.state.goals.length != null) {//Check to make sure routines exists\r\n            for (let i = 0; i < this.state.goals.length; i++) {\r\n                let tempTitle = this.state.goals[i]['title'];\r\n                let tempID = this.state.goals[i]['id'];\r\n                let tempPersist = this.state.goals[i]['is_persistent'];\r\n                displayGoals.push(\r\n                    <div key={'test1' + i} >\r\n                        <ListGroup.Item action onClick={() => { this.GRonClickEvent(tempTitle, tempID, tempPersist) }} variant=\"light\" style={{ marginBottom: '3px' }}>\r\n\r\n                            <Row style={{ margin: '0' }} className=\"d-flex flex-row-reverse\">\r\n                                {this.state.goals[i]['is_available'] ?\r\n                                    <div style={{ marginLeft: \"5px\" }}>\r\n                                        <FontAwesomeIcon\r\n                                            title=\"Available to Cailin\"\r\n                                            // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                                            // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                                            style={{ color: this.state.availabilityColorCode }}\r\n                                            onClick={(e) => { e.stopPropagation(); alert(\"Item Is Availble to Caitlin\") }}\r\n                                            icon={faUser} size=\"lg\"\r\n                                        /> </div>\r\n                                    : <div style={{ marginLeft: \"5px\" }}>\r\n                                        <FontAwesomeIcon\r\n                                            title=\"Unavailable to Caitlin\"\r\n                                            // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                                            // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                                            style={{ color: \"#000000\" }}\r\n                                            onClick={(e) => { e.stopPropagation(); alert(\"Item Is NOT Availble to Caitlin\") }}\r\n                                            icon={faUserAltSlash} size=\"lg\"\r\n                                        />\r\n                                    </div>}\r\n                            </Row>\r\n                            <Row style={{ margin: '0' }} className=\"d-flex flex-row-center\"  >\r\n                                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                                    <div className=\"fancytext\"> {this.state.goals[i]['title']}</div>\r\n                                    <div className=\"fancytext\"> Time: {Math.floor(1 + Math.random() * (45 - 1))} Minutes </div>\r\n                                </Col>\r\n                                <Col sm=\"auto\" md=\"auto\" lg=\"auto\" style={{ width: '100%', height: \"100%\" }}>\r\n                                    {(this.state.goals[i]['photo'] ? (<img src={this.state.goals[i]['photo']} alt=\"Routine\" className=\"center\" height={this.state.thumbnailHeight} width={this.state.thumbnailWidth} />) : (<div></div>))}\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"d-flex flex-row-center\" style={{\r\n                                margin: '0', display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                marginTop: \"10px\",\r\n                                marginBottom: \"10px\"\r\n                            }}>\r\n                                <DeleteGR\r\n\r\n                                    deleteIndex={this.findIndexByID(tempID)}\r\n                                    Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                                    Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                                    refresh={this.grabFireBaseRoutinesGoalsData}\r\n                                />\r\n                                <EditGR\r\n                                    i={this.findIndexByID(tempID)} //index to edit\r\n                                    ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                                    FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                                    refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\r\n                                />\r\n                            </Row>\r\n\r\n                            <div style={{ fontSize: '12px' }}>\r\n                                {(this.state.goals[i]['datetime_started']) ?\r\n\r\n                                    <div style={{ marginTop: '3px' }}>{\"Previous Start Time: \" + this.state.goals[i]['datetime_started']} </div> : <div> </div>}\r\n\r\n\r\n                                {(this.state.goals[i]['datetime_completed']) ?\r\n                                    <div>{\"Previous Completed Time: \" + this.state.goals[i]['datetime_completed']} </div> : <div> </div>}\r\n                            </div>\r\n\r\n\r\n                        </ListGroup.Item>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\r\n        return displayGoals;\r\n    }\r\n\r\n    render() {\r\n        console.log('ran render firebasev2')\r\n        var displayRoutines = this.getRoutines();\r\n        var displayGoals = this.getGoals();\r\n        return (\r\n            <div style={{ marginTop: '0' }} >\r\n                {/* {\r\n                    (this.props.showRoutineGoalModal) ?\r\n                        (<Col style={{ width: this.state.modalWidth, marginTop: '0', marginRight: '15px' }} sm=\"auto\" md=\"auto\" lg=\"auto\" >\r\n                            <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                                {this.abstractedRoutineGoalsList(displayRoutines, displayGoals)}\r\n                            </div>\r\n                        </Col>) : <div> </div>\r\n                } */}\r\n\r\n                {\r\n                    (this.props.showRoutine) ?\r\n                        (<Col style={{ width: this.state.modalWidth, marginTop: '0', marginRight: '0' }} sm=\"auto\" md=\"auto\" lg=\"auto\" >\r\n                            <div style={{ borderRadius: \"15px\", background:\"pink\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                                {this.abstractedRoutineList(displayRoutines)}\r\n                            </div>\r\n                        </Col>) : <div> </div>\r\n                }\r\n\r\n                {\r\n                    (this.props.showGoal) ? (\r\n                        <Col style={{ width: this.state.modalWidth, marginTop: '0', marginRight: '0' }} sm=\"auto\" md=\"auto\" lg=\"auto\" >\r\n                            <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                                {this.abstractedGoalsList(displayGoals)}\r\n                            </div>\r\n                        </Col>) : <div> </div>\r\n                }\r\n\r\n                {/* <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n                    <div style={{ boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                        {(this.state.addNewGRModalShow) ? this.AddNewGRModalAbstracted() : \"\"}\r\n                    </div>\r\n                </Col> */}\r\n\r\n                {/* <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n                    <div style={{ boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                        {(this.state.singleGR.show) ? this.abstractedActionsAndTaskList() : (<div></div>)}\r\n                    </div>\r\n                </Col> */}\r\n\r\n                {/* <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n                    <div style={{borderRadius:\"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                        {(this.state.addNewATModalShow) ? <AddNewATItem /> : (<div></div>)}\r\n                    </div>\r\n                </Col> */}\r\n\r\n                {/* <Col sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n                    <div style={{ boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                        {(this.state.singleAT.show) ? this.abstractedInstructionsAndStepsList() : (<div></div>)}\r\n                    </div>\r\n                </Col> */}\r\n                {/* </Row> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    /*\r\nabstractedGoalsList:\r\nshows entire list of goals and routines\r\n*/\r\n    abstractedGoalsList = (displayGoals) => {\r\n        return (\r\n            <Modal.Dialog style={{ marginTop: \"0\", width: this.state.modalWidth, marginLeft: '0' }}>\r\n                <Modal.Header onClick={this.props.closeGoal} closeButton>\r\n                    <Modal.Title><h5 className=\"normalfancytext\">Goals</h5> </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {/**\r\n                     * To allow for the Modals to pop up in front of one another\r\n                     * I have inserted the IS and AT lists inside the RT Goal Modal */ }\r\n                    <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                        {(this.state.addNewGRModalShow) ? this.AddNewGRModalAbstracted() : \"\"}\r\n                    </div>\r\n\r\n\r\n                    <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                        {(this.state.singleGR.show) ? this.abstractedActionsAndTaskList() : (<div></div>)}\r\n                    </div>\r\n                    <ListGroup>\r\n                        <div style={{ height: '650px', overflow: 'scroll' }}>\r\n\r\n                            {displayGoals}\r\n                        </div>\r\n                        {/* Button to add new Goal */}\r\n                    </ListGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button type=\"button\" class=\"btn btn-info btn-md\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: false }) }}>Add Goal</button>\r\n                </Modal.Footer>\r\n            </Modal.Dialog>)\r\n    }\r\n\r\n\r\n\r\n    /*\r\n    abstractedRoutineList:\r\n    shows entire list of routines\r\n    */\r\n    abstractedRoutineList = (displayRoutines) => {\r\n        return (\r\n            <Modal.Dialog style={{ borderRadius: '15px', marginTop: \"0\", width: this.state.modalWidth, marginLeft: '0' }}>\r\n                <Modal.Header onClick={this.props.closeRoutine} closeButton>\r\n                    <Modal.Title> <h5 className=\"normalfancytext\">Routines</h5> </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body >\r\n                    {/**\r\n                     * To allow for the Modals to pop up in front of one another\r\n                     * I have inserted the IS and AT lists inside the RT Goal Modal */ }\r\n\r\n                    <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                        {(this.state.addNewGRModalShow) ? this.AddNewGRModalAbstracted() : \"\"}\r\n                    </div>\r\n                    <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                        {(this.state.singleGR.show) ? this.abstractedActionsAndTaskList() : (<div></div>)}\r\n                    </div>\r\n                    <ListGroup>\r\n                        <div style={{ height: '650px', overflow: 'scroll' }}>\r\n\r\n                            {displayRoutines}\r\n                        </div>\r\n                    </ListGroup>\r\n                    {/* Button To add new Routine */}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button type=\"button\" className=\"btn btn-info btn-md\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: true }) }} >Add Routine</button>\r\n                </Modal.Footer>\r\n            </Modal.Dialog>)\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * AddNewGRModalAbstracted:\r\n     * returns a modal showing us a slot to add a new Goal/Routine\r\n    */\r\n    AddNewGRModalAbstracted = () => {\r\n        return (\r\n            <AddNewGRItem\r\n                closeModal={() => { this.setState({ addNewGRModalShow: false }) }}\r\n                ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                refresh={this.grabFireBaseRoutinesGoalsData}\r\n                isRoutine={this.state.isRoutine} />\r\n        )\r\n    }\r\n\r\n\r\n\r\n    /*\r\n    abstractedInstructionsAndStepsList:\r\n    currently only shows the single Action/Task Title with no steps\r\n    */\r\n\r\n\r\n\r\n    /**\r\n     * abstractedInstructionsAndStepsList:\r\n     * Shows a single Task / Action as Title with\r\n     * the list of instructions/steps underneath of it\r\n     *\r\n    */\r\n    abstractedInstructionsAndStepsList = () => {\r\n        return (\r\n            <Modal.Dialog style={{ marginTop: '0', marginLeft: '0', width: this.state.modalWidth, }}>\r\n                <Modal.Header closeButton onClick={() => { this.setState({ singleAT: { show: false } }) }}>\r\n                    <Modal.Title><h5 className=\"normalfancytext\">{this.state.singleAT.title}</h5> </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                        {\r\n                            (this.state.addNewISModalShow) ?\r\n                                <AddNewISItem\r\n                                    ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\r\n                                    ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\r\n                                    refresh={this.refreshISItem}\r\n                                    hideNewISModal={//function to hide the modal\r\n                                        () => { this.setState({ addNewISModalShow: false }) }}\r\n                                    width={this.state.modalWidth} /> : (<div></div>)}\r\n                    </div>\r\n                    <ListGroup>\r\n                        {this.state.singleAT.arr}\r\n                    </ListGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button type=\"button\" class=\"btn btn-info btn-md\" onClick={() => { this.setState({ addNewISModalShow: true }) }} >Add Step</button>\r\n                </Modal.Footer>\r\n            </Modal.Dialog>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * abstractedActionsAndTaskList -\r\n     * returns modal with with a single Routine/ Goal as title\r\n     * and beneath it is the list of action/ task associated with the\r\n     * goal/ routine\r\n    */\r\n    abstractedActionsAndTaskList = () => {\r\n        return (<Modal.Dialog style={{ marginTop: '0', marginLeft: '0', width: this.state.modalWidth }}>\r\n            <Modal.Header closeButton onClick={() => { this.setState({ singleGR: { show: false } }) }} >\r\n                <Modal.Title><h5 className=\"normalfancytext\">{this.state.singleGR.title}</h5> </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                    {(this.state.addNewATModalShow) ?\r\n                        <AddNewATItem\r\n                            refresh={this.refreshATItem} //refreshes the list of AT\r\n                            ATArray={this.state.singleATitemArr}\r\n                            ATItem={this.state.singleGR}  //The parent item\r\n                            hideNewATModal={() => { this.setState({ addNewATModalShow: false }) }}\r\n                            width={this.state.modalWidth} /> : (<div></div>)}\r\n                </div>\r\n                {/**\r\n                 * Here Below, the IS list will pop up inside the AT list\r\n                  */}\r\n                <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                    {(this.state.singleAT.show) ? this.abstractedInstructionsAndStepsList() : (<div></div>)}\r\n                </div>\r\n                <ListGroup >\r\n                    <div style={{ height: '500px', overflow: 'scroll' }}>\r\n                        {this.state.singleGR.arr}\r\n                    </div>\r\n                </ListGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button type=\"button\" className=\"btn btn-info btn-md\" onClick={() => { this.setState({ addNewATModalShow: true }) }} >Add Action/Task</button>\r\n            </Modal.Footer>\r\n        </Modal.Dialog>)\r\n    }\r\n\r\n\r\n    addNewTaskInputBox = () => {\r\n        return (\r\n            <InputGroup size=\"lg\" style={{ marginTop: '20px' }} className=\"mb-3\">\r\n                <FormControl onChange={() => { console.log(\"addNewGoalInputBox\") }}\r\n                    placeholder=\"\"\r\n                />\r\n                <InputGroup.Append>\r\n                    <Button variant=\"outline-secondary\">Add</Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>)\r\n    }\r\n\r\n\r\n    /*\r\n    abstractedRoutineGoalsList:\r\n    shows entire list of goals and routines\r\n    */\r\n    abstractedRoutineGoalsList = (displayRoutines, displayGoals) => {\r\n        return (\r\n            <Modal.Dialog style={{ padding: '0', marginTop: \"0\", width: this.state.modalWidth, marginLeft: '0' }}>\r\n                <Modal.Header closeButton onClick={this.props.closeRoutineGoalModal}>\r\n                    <Modal.Title> <h5 className=\"normalfancytext\">Goals/Routines: </h5> </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h2 className=\"normalfancytext\">Routines</h2>\r\n\r\n                    {/**\r\n                     * To allow for the Modals to pop up in front of one another\r\n                     * I have inserted the IS and AT lists inside the RT Goal Modal */ }\r\n\r\n                    <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                        {(this.state.singleGR.show) ? this.abstractedActionsAndTaskList() : (<div></div>)}\r\n                    </div>\r\n\r\n                    <ListGroup>\r\n                        {displayRoutines}\r\n                        <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: true }) }} >Add Routine</button>\r\n                    </ListGroup>\r\n                    {/* Button To add new Routine */}\r\n                    <h2 className=\"normalfancytext\" style={{ marginTop: '50px' }}>Goals</h2>\r\n                    <ListGroup>\r\n                        {displayGoals}\r\n                        {/* Button to add new Goal */}\r\n                        <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: false }) }}>Add Goal</button>\r\n                    </ListGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                </Modal.Footer>\r\n            </Modal.Dialog>)\r\n    }\r\n\r\n\r\n\r\n    addNewGoalInputBox = () => {\r\n        return (\r\n            <InputGroup size=\"lg\" style={{ marginTop: '20px', width: this.state.modalWidth }} className=\"mb-3\">\r\n                <FormControl onChange={() => { console.log(\"addNewGoalInputBox\") }}\r\n                    placeholder=\"place holder!!\"\r\n                />\r\n                <InputGroup.Append>\r\n                    <Button variant=\"outline-secondary\">Add</Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>)\r\n    }\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default class TylersCalendarv1 extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n    \r\n    weekdays = moment.weekdays();\r\n    weekdaysShort = moment.weekdaysShort(); // [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\n\r\n    componentWillUnmount() {\r\n     \r\n    }\r\n\r\n    year = () => {\r\n        return this.props.dateContext.format(\"Y\");\r\n    }\r\n    currentDay = () => {\r\n        return this.props.dateObject.format(\"D\");\r\n    };\r\n    month = () => {\r\n        return this.props.dateContext.format(\"MMMM\");\r\n    }\r\n\r\n    daysInMonth = () => {\r\n        return this.props.dateContext.daysInMonth();\r\n    }\r\n    firstDayOfMonth = () => {\r\n        let dateContext = this.props.dateContext;\r\n        let firstDay = moment(dateContext)\r\n            .startOf(\"month\")\r\n            .format(\"d\"); // Day of week 0...1..5...6\r\n        return firstDay;\r\n    };\r\n\r\n    //Returns a dense populated set of icons to be pushed onto a day i\r\n    //into the table\r\n    getEventsforDay = (i) => {\r\n        var res = [];\r\n        var tempStart = null;\r\n        var tempEnd = null;\r\n        if (this.props.originalEvents == null) {\r\n            return []\r\n        }\r\n        // console.log(this.props.originalEvents);\r\n        for (let j = 0; j < this.props.originalEvents.length; ++j) {\r\n            if (this.props.originalEvents[j].start.dateTime) {\r\n                tempStart = this.props.originalEvents[j].start.dateTime;\r\n                tempEnd = this.props.originalEvents[j].end.dateTime;\r\n                let startDate = new Date(tempStart).getDate();\r\n                let endDate = new Date(tempEnd).getDate();\r\n                // console.log(startDate)\r\n                if (i >= startDate && i <= endDate) {\r\n                    res.push(<div key={'event' + j}><button\r\n                        value={j}\r\n                        onClick={this.onEventClick}\r\n                        className=\"btn btn-sm\" style={{\r\n                            padding: '3px',\r\n                            paddingLeft:'4px',\r\n                            paddingRight:'4px',\r\n                            fontSize: '9px', color: \"white\",\r\n                            borderRadius: '4px', background: \"rgb(66, 184, 221)\",\r\n                            textShadow: \"0 1px 1px rgba(0, 0, 0, 0.2)\", marginBottom: \"3px\"\r\n                        }} >{this.props.originalEvents[j].summary}</button><br /></div>);\r\n                }\r\n            }\r\n            else {\r\n                tempStart = this.props.originalEvents[j].start.date;\r\n                // console.log('start date');\r\n                // console.log(this.props.originalEvents[j].start.date);\r\n                tempEnd = this.props.originalEvents[j].end.date;\r\n                let startDate = new Date(tempStart).getDate();\r\n                let endDate = new Date(tempEnd).getDate();\r\n                // console.log(startDate)\r\n                if (i > startDate && i <= endDate) {\r\n                    // console.log('sss' + i, startDate, endDate);\r\n                    res.push(<div key={'event' + j}><button\r\n                        value={j}\r\n                        onClick={ this.onEventClick }\r\n                        className=\"btn btn-sm\" style={{\r\n                            padding: '3px',\r\n                            paddingLeft:'4px',\r\n                            paddingRight:'4px',\r\n                            fontSize: '9px', color: \"white\",\r\n                            borderRadius: '3px', background: \"CornflowerBlue\",\r\n                            textShadow: \"0 1px 1px rgba(0, 0, 0, 0.2), \", marginBottom: \"3px\"\r\n                        }} >{this.props.originalEvents[j].summary}</button><br /></div>);\r\n                }\r\n            }\r\n\r\n        }\r\n        return res;\r\n    }\r\n\r\n    onEventClick = (x) => {\r\n        // console.log('onEventClick');\r\n        x.stopPropagation();\r\n        this.props.eventClick(x.target.value);\r\n    }\r\n\r\n    onDayClick = (d) => {\r\n        // console.log('dateClick')\r\n        // console.log(d)\r\n        // console.log('this month ')\r\n        // console.log()\r\n        \r\n        this.props.handleDateClick(this.props.dateContext.format(\"M\") + '/' + d + '/'+  this.props.dateContext.format(\"Y\"));\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"reventded TCal\")\r\n        // console.log(this.props.organizedData)\r\n        let daysInMonth = [];\r\n        let weekdays = this.weekdays.map((day) => {\r\n            return (\r\n                <td className=\"fancytext\" key={day}>{day}</td>\r\n            )\r\n        });\r\n\r\n        //create the blank slots to push day 1 to right day\r\n        let blanks = [];\r\n        // console.log('first day of month');\r\n        // console.log(this.firstDayOfMonth());\r\n\r\n\r\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n            blanks.push(<td key={'empty' + i} className=\"calendar-day empty\">{\"\"}</td>);\r\n        }\r\n\r\n        \r\n        //The variable below tells us if the current month we are at is today's month\r\n        var sameDate = this.props.dateObject.format(\"DD/MM/YYYY\") === this.props.dateContext.format(\"DD/MM/YYYY\");\r\n        console.log(this.props.dateObject.format(\"DD/MM/YYYY\") + \"  == \" + this.props.dateContext.format(\"DD/MM/YYYY\"));\r\n        for (var d = 1; d <= this.daysInMonth(); d++) {\r\n            // let currentDay = d == this.currentDay() ? \"today\" : \"\";\r\n\r\n            // const todayStyle = { boxShadow: '4px 4px 8px 4px rgba(0, 0, 0, 0.2)' };\r\n            \r\n            daysInMonth.push(\r\n                <td key={d}  onClick={ this.onDayClick.bind(this, d)}>\r\n                    \r\n                    <div style={{padding:'0', margin: '0', height: '110px', width: \"100px\", overflow: 'auto' }}>\r\n                      {\r\n                          // eslint-disable-next-line max-len\r\n                      }\r\n                        <div className={ (sameDate && (d === parseInt(this.currentDay(), 10 ))) ? \"numberCircle\" : \"\"}  > \r\n                            <span className=\"fancytext\" >\r\n                                {d}\r\n                            </span>\r\n                        </div>\r\n                        {this.getEventsforDay(d)}\r\n                    </div>\r\n                </td>\r\n            );\r\n        }\r\n\r\n        var totalSlots = [...blanks, ...daysInMonth];\r\n        let rows = [];\r\n        let cells = [];\r\n\r\n        totalSlots.forEach((row, i) => {\r\n            if (i % 7 !== 0) {\r\n                cells.push(row);\r\n            } else {\r\n                rows.push(cells);\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n            if (i === totalSlots.length - 1) {\r\n                // let insertRow = cells.slice();\r\n                rows.push(cells);\r\n            }\r\n        });\r\n\r\n        var daysinmonth = rows.map((data, i) => {\r\n            return <tr style= {{padding: '0px'}} key={i * 11}>{data}</tr>;\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <table  className=\"table\" style ={{ height:'450px', tableLayout: 'fixed', width: '910px'}}>\r\n                    <thead>\r\n                        <tr>\r\n                            {weekdays}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody  style ={{height:'450px',width: '600px'}}>\r\n                        {daysinmonth}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Container, Row, Col, Modal } from 'react-bootstrap';\r\nimport Firebasev2 from './Firebasev2.jsx';\r\nimport './App.css'\r\nimport moment from 'moment';\r\nimport TylersCalendarv1 from './TCal.jsx'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faChevronRight} from '@fortawesome/free-solid-svg-icons';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class MainPage extends React.Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.state = { //Saved variables\r\n      originalEvents: [], //holds the google events data in it's original JSON form\r\n      showRoutineGoalModal: false,\r\n      showGoalModal: false,\r\n      showRoutineModal: false,\r\n      dayEventSelected: false,  //use to show modal to create new event\r\n      modelSelected: false, // use to display the routine/goals modal\r\n      newEventID: '', //save the event ID for possible future use\r\n      newEventName: '',\r\n      newEventGuests: '',\r\n      newEventLocation: '',\r\n      newEventNotification: null,\r\n      newEventDescription: '',\r\n      newEventStart: '', //this variable and any use of it in the code should be DELETED in future revisions\r\n      newEventEnd: '',//this variable and any use of it in the code should be DELETED in future revisions\r\n      newEventStart0: new Date(), //start and end for a event... it's currently set to today\r\n      newEventEnd0: new Date(), //start and end for a event... it's currently set to today\r\n      isEvent: false, // use to check whether we clicked on a event and populate extra buttons in event form\r\n      //////////New additions for new calendar\r\n      dateContext: moment(), //As we change from month to month, this variable will keep track of where we are\r\n      todayDateObject: moment(), //Remember today's date to create the circular effect over todays day\r\n      selectedDay: null, // Any use of this variable should be deleted in future revisions\r\n    }\r\n\r\n    console.log(\"Lyman Says Hello\")\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"Main.jsx::componentDidUpdate()\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getThisMonthEvents();\r\n  }\r\n  /*\r\n  getThisMonthEvents:\r\n  By passing in a empty interval, this method will get a response from the server with\r\n  the current month's events\r\n  */\r\n  getThisMonthEvents = () => {\r\n\r\n    axios.get('/getEventsByInterval', { //get normal google calendar data for possible future use\r\n      params: {\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log('normal gCal data')\r\n        var events = response.data;\r\n        console.log(events);\r\n        this.setState({ originalEvents: events }, () => {\r\n          console.log(\"New Events Arrived\")\r\n          // console.log(events.data);\r\n          // this.createOrganizeData(start0, end0);\r\n          //Call function to prep data for Monthly View\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.log('Error Occurred ' + error);\r\n      }\r\n      );\r\n  }\r\n\r\n\r\n\r\n\r\n  /*\r\n  handleEventClick:\r\n  when a event on the calendar is clicked, the function below\r\n  will execute and save the clicked event varibles to this.state and\r\n  passed that into the form where the user can edit that data\r\n  */\r\n  /*\r\n    TODO: Set New Event Location, description, guests, ...\r\n  */\r\n  handleEventClick = (i) => { // bind with an arrow function\r\n    console.log('Inside handleEventClick')\r\n    console.log(i)\r\n    console.log('Inside handleEventClick2')\r\n    console.log(this.state.originalEvents[i]);\r\n    let A = this.state.originalEvents[i];\r\n    console.log('setting new Data: ');\r\n    console.log(A);\r\n\r\n/*\r\n'reminders': {\r\n  'useDefault': false,\r\n  'sequence': 0,\r\n  'overrides': [\r\n    {\r\n      method: 'popup',\r\n      minutes: minutesNotification,\r\n    }\r\n  ],\r\n},\r\n*/\r\n\r\n    //Guest list erroneously includes owner's email as well\r\n    var guestList = ''\r\n    if(A.attendees) {\r\n      guestList = A.attendees.reduce((guestList,nextGuest) => {\r\n        return guestList + ' ' + nextGuest.email;\r\n      },'');\r\n      console.log(\"Guest List:\",A.attendees,guestList);\r\n    }\r\n    this.setState({\r\n      newEventID: A.id,\r\n      newEventStart: (A.start.dateTime) ? (new Date(A.start.dateTime)) : (new Date(A.start.date)).toISOString(),\r\n      newEventEnd: (A.end.dateTime) ? (new Date(A.end.dateTime)) : (new Date(A.end.date)).toISOString(),\r\n      newEventStart0: (A.start.dateTime) ? (new Date(A.start.dateTime)) : (new Date(A.start.date)),\r\n      newEventEnd0: (A.end.dateTime) ? (new Date(A.end.dateTime)) : (new Date(A.end.date)),\r\n      newEventName: A.summary,\r\n      newEventGuests: guestList,\r\n      newEventLocation: (A.location) ? A.location : '',\r\n      newEventNotification: (A.reminders.overrides) ? (A.reminders.overrides[0].minutes) : null,\r\n      newEventDescription: (A.description) ? A.description : '',\r\n      dayEventSelected: true,\r\n      isEvent: true,\r\n    }, () => {\r\n      console.log('callback from handEventClick')\r\n    });\r\n  }\r\n\r\n  /*\r\n  handleDateClick:\r\n  This will trigger when a date is clicked, it will present\r\n  the user with a new form to create a event\r\n  */\r\n  //TODO: Initialize Date, set other properties to empty\r\n  handleDateClick = (arg) => { // bind with an arrow function\r\n    console.log('Inside Main, HandleDateClick')\r\n    console.log(arg);\r\n    var newStart = new Date(arg);\r\n    newStart.setHours(0, 0, 0, 0);\r\n    var newEnd = new Date(arg);\r\n    newEnd.setHours(23, 59, 59, 59);\r\n    console.log(newStart);\r\n    console.log(newEnd)\r\n    this.setState({\r\n      newEventID: '',\r\n      newEventStart: newStart.toString(),\r\n      newEventEnd: newEnd.toString(),\r\n      newEventStart0: newStart,\r\n      newEventEnd0: newEnd,\r\n      newEventName: '',\r\n      newEventGuests: '',\r\n      newEventLocation: '',\r\n      newEventNotification: null,\r\n      newEventDescription: '',\r\n      dayEventSelected: true,\r\n      isEvent: false\r\n    });\r\n  }\r\n\r\n  /*\r\n  *\r\nhandleSubmit:\r\nsubmits the data to be passed up to be integrated into google calendar\r\n*\r\n*/\r\n\r\n  handleSubmit = (event) => {\r\n    if (this.state.start === '' || this.state.end === '') {\r\n      console.log(\"invalid params\")\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    var start = new Date(this.state.newEventStart).toISOString();\r\n    var end = new Date(this.state.newEventEnd).toISOString();\r\n    console.log(\"submit clicked with \", start, end);\r\n\r\n    /**\r\n     *\r\n     * all variables within form need to be accessible up to this point\r\n    */\r\n\r\n    this.createEvent(this.state.newEventName, start, end);\r\n\r\n  }\r\n\r\n  updateEventClick = (event) => {\r\n    console.log(event)\r\n    event.preventDefault();\r\n    let newStart = new Date(this.state.newEventStart).toISOString();\r\n    let newEnd = new Date(this.state.newEventEnd).toISOString();\r\n    if (this.state.newEventID === '') {\r\n      return;\r\n    }\r\n    else {\r\n      for (let i = 0; i < this.state.originalEvents.length; i++) {\r\n        if (this.state.originalEvents[i].id === this.state.newEventID) {\r\n          console.log(this.state.originalEvents[i]);\r\n          console.log(newStart);\r\n          console.log(newEnd);\r\n          this.updateRequest(i, newStart, newEnd);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /*\r\n  updateRequest:\r\n  updates the google calendar based  on\r\n  */\r\n  updateRequest = (index, newStart, newEnd) => {\r\n\r\n    /**\r\n     * TODO:\r\n     * instead of individually passing original item, id\r\n     * title, start and end,\r\n     * pass in just extra as follows\r\n     * let temp = this.state.originalEvents[index]\r\n     * temp.start.dateTime = newStart\r\n     * temp.end.dateTime = newEnd\r\n     * and other parameters\r\n     *\r\n    */\r\n\r\n    const guests = this.state.newEventGuests;\r\n    var formattedEmail = null;\r\n    const emailList = guests.match(/[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*(\\.)?/g);\r\n    if(emailList){\r\n      var formattedEmail = emailList.map((guests) => {\r\n        return {\r\n          email: guests,\r\n          responseStatus: 'needsAction',\r\n        };\r\n      });\r\n    }\r\n\r\n    let updatedEvent = this.state.originalEvents[index];\r\n    updatedEvent.summary = this.state.newEventName;\r\n    updatedEvent.attendees = formattedEmail;\r\n    updatedEvent.location = this.state.newEventLocation;\r\n    updatedEvent.description = this.state.newEventDescription;\r\n    updatedEvent.start.dateTime = this.state.newEventStart0.toISOString();\r\n    updatedEvent.end.dateTime = this.state.newEventEnd0.toISOString();\r\n    updatedEvent.reminders = {\r\n      overrides: [{\r\n        method: 'popup',\r\n        minutes: this.state.newEventNotification,\r\n      }],\r\n      'useDefault': false,\r\n      'sequence': 0,\r\n    }\r\n\r\n    axios.post('/updateEvent', {\r\n      extra: updatedEvent,\r\n      ID: this.state.newEventID,\r\n    })\r\n      .then((response) => {\r\n        console.log('update return');\r\n        console.log(response);\r\n        this.setState(\r\n          {\r\n            dayEventSelected: false,\r\n            newEventName: '',\r\n            newEventStart: '',\r\n            newEventEnd: '',\r\n            newEventStart0: new Date(),\r\n            newEventEnd0: new Date()\r\n          });\r\n        this.updateEventsArray();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  /*\r\n  calls the backend API to delete a item with a particular eventID\r\n  */\r\n  deleteSubmit = () => {\r\n    if (this.state.newEventID === '') {\r\n      return;\r\n    }\r\n    axios.post('/deleteEvent', {\r\n      ID: this.state.newEventID\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          dayEventSelected: false,\r\n          newEventStart: '',\r\n          newEventEnd: ''\r\n        });\r\n        this.updateEventsArray();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  /*\r\n  createEvent:\r\n  Basically creates a new event based on details given\r\n  */\r\n  createEvent = (newTitle, newStart, newEnd) => {\r\n\r\n    /*\r\n     * TODO: Replace formatting email with function\r\n     */\r\n    const guests = this.state.newEventGuests;\r\n    /*\r\n     * https://tools.ietf.org/html/rfc3696 for what is valid email addresses\r\n     *\r\n     * local-part@domain-part\r\n     * local-part: alphanumeric, symbols ! # $ % & ' * + - / = ?  ^ _ ` . { | } ~ with restriction no two . in a row\r\n     * localWord = [a-zA-Z!#$%&'*+\\-/=?^_`{|}~]+\r\n     * localPart = localWord (\\.localWord)*\r\n     * domain-part:\r\n     * domains: alphanumeric, symbol - with restriction - not at beginning or end\r\n     * dot separate domains, top level domain can have optional . at end\r\n     * domain = [a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?\r\n     * domainPart = domain(\\.domain)*\\.domain(\\.)?\r\n     * email: localPart@domainPart\r\n     */\r\n    //Note: This works, but does not email the guests that they are invited to the event\r\n    var formattedEmail = null;\r\n    const emailList = guests.match(/[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*(\\.)?/g);\r\n      if(emailList){\r\n      var formattedEmail = emailList.map((guests) => {\r\n        return {\r\n          email: guests,\r\n          responseStatus: 'needsAction',\r\n        };\r\n      });\r\n    }\r\n\r\n    var minutesNotification = 30;\r\n    if(this.state.newEventNotification) {\r\n      minutesNotification = this.state.newEventNotification;\r\n    }\r\n     var event = {\r\n      'summary': this.state.newEventName,\r\n      'location': this.state.newEventLocation,\r\n      'description': this.state.newEventDescription,\r\n      'reminders': {\r\n        'useDefault': false,\r\n        'sequence': 0,\r\n        'overrides': [\r\n          {\r\n            method: 'popup',\r\n            minutes: minutesNotification,\r\n          }\r\n        ],\r\n      },\r\n      'start': {\r\n        'dateTime': this.state.newEventStart0.toISOString(),\r\n      },\r\n      'end': {\r\n        'dateTime': this.state.newEventEnd0.toISOString(),\r\n      },\r\n      'attendees': formattedEmail,\r\n    };\r\n\r\n    console.log(\"Create Event:\",event);\r\n\r\n    axios.post('/createNewEvent', {\r\n      newEvent: event,\r\n      title: newTitle,\r\n      start: this.state.newEventStart0.toISOString(),\r\n      end: this.state.newEventEnd0.toISOString()\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          dayEventSelected: false\r\n        })\r\n        this.updateEventsArray();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  /*\r\n  handleModalClicked:\r\n  this will toggle show hide of the firebase modal currently\r\n  */\r\n  handleModalClicked = (arg) => { // bind with an arrow function\r\n    this.setState({\r\n      modelSelected: !this.state.modelSelected\r\n    });\r\n  }\r\n\r\n  nextMonth = () => {\r\n    let dateContext = Object.assign({}, this.state.dateContext);\r\n    dateContext = moment(dateContext).add(1, \"month\");\r\n    this.setState({\r\n      dateContext: dateContext,\r\n      originalEvents: []\r\n    }, this.updateEventsArray);\r\n  }\r\n\r\n\r\n  prevMonth = () => {\r\n    let dateContext = Object.assign({}, this.state.dateContext);\r\n    dateContext = moment(dateContext).subtract(1, \"month\");\r\n    this.setState({\r\n      dateContext: dateContext,\r\n      originalEvents: []\r\n    }, this.updateEventsArray)\r\n  }\r\n\r\n  /*\r\n  updateEventsArray:\r\n  updates the array if the month view changes to a different month.\r\n  */\r\n  updateEventsArray = () => { //The month view has transferred to a different month\r\n    let startObject = this.state.dateContext.clone()\r\n    let endObject = this.state.dateContext.clone()\r\n    let startDay = startObject.startOf('month')\r\n    let endDay = endObject.endOf('month')\r\n    let startDate = new Date(startDay.format(\"MM/DD/YYYY\"))\r\n    let endDate = new Date(endDay.format(\"MM/DD/YYYY\"))\r\n    startDate.setHours(0, 0, 0)\r\n    endDate.setHours(23, 59, 59)\r\n    console.log(\"getting intervals\")\r\n    console.log(startDate.toString(), endDate.toString())\r\n    this.getEventsByInterval(startDate.toString(), endDate.toString());\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Main Render\")\r\n    //The variable below will help decide whether to center the Calendar object or not\r\n    var onlyCal = !this.state.showRoutineGoalModal && !this.state.showGoalModal && !this.state.showRoutineModal;\r\n    return (\r\n      //width and height is fixed now but should be by % percentage later on\r\n      <div className=\"normalfancytext\" style={{ marginLeft: '0px',  height: \"2000px\", width: '2000px' }}>\r\n        <div style={{background:'white', margin: '0', padding:'0', width: '100%'}}>\r\n            <div >\r\n              {this.abstractedMainEventGRShowButtons()}\r\n            </div>\r\n          <hr style={{ backgroundColor: 'white', marginLeft: \"0\" }} className=\"brace\" />\r\n          </div>\r\n        <Container fluid style={{ marginLeft: '0%' }}  >\r\n          {/* Within this container essentially contains all the UI of the App */}\r\n\r\n          <Row>\r\n            {/* the modal for routine/goal is called Firebasev2 currently */}\r\n            {/* {this.state.showRoutineGoalModal ? <Firebasev2 showRoutine = {this.state.showRoutineModal} showGoal= {this.state.showGoalModal} /> : <div></div>} */}\r\n            <Firebasev2\r\n              closeRoutineGoalModal={() => { this.setState({ showRoutineGoalModal: false }) }}\r\n              showRoutineGoalModal={this.state.showRoutineGoalModal}\r\n              closeGoal={() => { this.setState({ showGoalModal: false }) }}\r\n              closeRoutine={() => { this.setState({ showRoutineModal: false }) }}\r\n              showRoutine={this.state.showRoutineModal}\r\n              showGoal={this.state.showGoalModal}\r\n            />\r\n            <Col sm=\"auto\" md=\"auto\" lg=\"auto\" style={onlyCal ? { marginLeft: '20%' } : { marginLeft: '35px' }}  >\r\n              {this.calendarAbstracted()}\r\n              {/* <Row>\r\n                {this.eventFormAbstractedHorizontalVersion()}\r\n              </Row> */}\r\n              <div style={{ marginTop: '50px', textAlign: 'center' }} className=\"fancytext\">\r\n                Dedicated to Caitlin Little\r\n        </div>\r\n\r\n            </Col>\r\n            <Col style={{ marginLeft: '25px' }}>\r\n              {this.state.dayEventSelected ? this.eventFormAbstracted() : <div> </div>}\r\n            </Col>\r\n          </Row>\r\n\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  toggleShowRoutine = () => {\r\n    this.setState({\r\n      showRoutineModal: !this.state.showRoutineModal,\r\n      showGoalModal: false,\r\n      showRoutineGoalModal: false\r\n    })\r\n  }\r\n\r\n  toggleShowGoal = () => {\r\n    this.setState({\r\n      showGoalModal: !this.state.showGoalModal,\r\n      showRoutineModal: false,\r\n      showRoutineGoalModal: false\r\n    })\r\n  }\r\n\r\n  showEventsFormbyCreateNewEventButton = () => {\r\n    var newStart = new Date();\r\n    newStart.setHours(0, 0, 0, 0);\r\n    var newEnd = new Date();\r\n    newEnd.setHours(23, 59, 59, 59);\r\n    console.log(newStart);\r\n    console.log(newEnd)\r\n    this.setState({\r\n      newEventID: '',\r\n      newEventStart: newStart.toString(),\r\n      newEventEnd: newEnd.toString(),\r\n      newEventStart0: newStart,\r\n      newEventEnd0: newEnd,\r\n      newEventName: '',\r\n      newEventGuests: '',\r\n      newEventLocation: '',\r\n      newEventDescription: '',\r\n      dayEventSelected: true,\r\n      isEvent: false,\r\n      dayEventSelected: !this.state.dayEventSelected\r\n    });\r\n  }\r\n\r\n  abstractedMainEventGRShowButtons = () => {\r\n    return (<div style={{ width:'100%',fontSize: '20px' }}>\r\n\r\n<Button style={{ marginLeft: '50%', marginTop:'0', margin: \"10px\", marginBottom: '0' }} variant=\"outline-primary\"\r\n        onClick={() => {\r\n          this.showEventsFormbyCreateNewEventButton()\r\n        }}\r\n      >New Event</Button>\r\n\r\n      <Button style={{marginTop:'0', margin: \"10px\", marginBottom: '0' }} variant=\"outline-primary\"\r\n        onClick={this.toggleShowRoutine}\r\n      >Routines</Button>\r\n\r\n      <Button style={{marginTop:'0', margin: \"10px\", marginBottom: '0' }} variant=\"outline-primary\"\r\n        onClick={this.toggleShowGoal}> Goals </Button>\r\n    &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n\r\n  {/* <b style={{ paddingTop:'5px', textDecoration: 'underline'}}>\r\n    Infinte Options: Project Caitlin\r\n  </b> */}\r\n      {/* <Button style={{ margin: \"10px\", marginBottom: '0' }} variant=\"outline-primary\"\r\n        onClick={() => {\r\n          this.setState({\r\n            showRoutineGoalModal: !this.state.showRoutineGoalModal,\r\n            showGoalModal: false,\r\n            showRoutine: false\r\n          })\r\n        }}\r\n      >Goals and Routines</Button> */}\r\n\r\n    </div>)\r\n  }\r\n\r\n  calendarAbstracted = () => {\r\n    return (\r\n      <div style={{ borderRadius: '2%', backgroundColor: 'white', width: '1000px', marginLeft: '10px', padding: '45px', paddingBottom: \"10px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n        <div >\r\n          <Row style={{ marginTop: '0px' }}>\r\n            <Col >\r\n              <div>\r\n                <FontAwesomeIcon style={{ marginLeft: '50%' }} icon={faChevronLeft} size=\"2x\" className=\"X\"\r\n                  onClick={(e) => { this.prevMonth() }} />\r\n              </div>\r\n            </Col>\r\n            <Col style={{ textAlign: 'center' }} className=\"bigfancytext\">\r\n              <p>{this.getMonth()} {this.getYear()}</p>\r\n            </Col>\r\n            <Col>\r\n              <FontAwesomeIcon style={{ marginLeft: '50%' }} icon={faChevronRight} size=\"2x\" className=\"X\"\r\n                onClick={(e) => { this.nextMonth() }} />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <TylersCalendarv1 eventClick={this.handleEventClick} handleDateClick={this.handleDateClick} originalEvents={this.state.originalEvents} dateObject={this.state.todayDateObject} today={this.state.today} dateContext={this.state.dateContext} selectedDay={this.state.selectedDay} />\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * This is where the event form is made\r\n   *\r\n  */\r\n  eventFormAbstracted = () => {\r\n    return (\r\n      <Modal.Dialog style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)', marginLeft: '0', width: '350px', marginTop: \"0\" }}>\r\n        <Modal.Header closeButton onClick={() => { this.setState({ dayEventSelected: false }) }} >\r\n          <Modal.Title><h5 className=\"normalfancytext\">Event Form</h5> </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {this.eventFormInputArea()}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Row>\r\n\r\n              <Col style={this.state.isEvent ? { display: 'none' } : {}} >\r\n                <Button onClick={this.handleSubmit} variant=\"info\" type=\"submit\"> Submit </Button>\r\n              </Col>\r\n              <Col style={this.state.isEvent ? { marginTop: '0px' } : { display: 'none' }}>\r\n                <Button onClick={this.updateEventClick} className=\"btn btn-info\">\r\n                  Update\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button variant=\"secondary\" onClick={this.hideEventForm}>Cancel</Button>\r\n              </Col>\r\n              <Col>\r\n                <Button style={this.state.isEvent ? {} : { display: 'none' }} variant=\"danger\" onClick={this.deleteSubmit} > Delete</Button>\r\n              </Col>\r\n\r\n          </Row>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    )\r\n  }\r\n\r\n  eventFormInputArea = () => {\r\n    return (\r\n      <Form  >\r\n        <Row>\r\n          <Col>\r\n            <div style={{ width: '300px' }}>\r\n              <Form.Group >\r\n                <Form.Label>Event Name</Form.Label>\r\n                <Form.Control value={this.state.newEventName} onChange={this.handleNameChange}\r\n                  type=\"text\" placeholder=\"Title\" />\r\n              </Form.Group>\r\n              <Form.Group value={this.state.newEventStart} controlId=\"Y\" >\r\n                <Form.Label>Start Time</Form.Label> <br />\r\n                {/* <Form.Control value={this.state.newEventStart} onChange={this.handleDateStartchange}\r\n              type=\"text\" placeholder=\"Start Time\" /> */}\r\n                {this.startTimePicker()}\r\n              </Form.Group>\r\n              <Form.Group value={this.state.newEventEnd} controlId=\"X\" >\r\n                <Form.Label>End Time</Form.Label><br />\r\n                {/* <Form.Control value={this.state.newEventEnd} onChange={this.handleDateEndchange}\r\n              type=\"text\" placeholder=\"End Time\" /> */}\r\n                {this.endTimePicker()}\r\n              </Form.Group>\r\n              <Form.Group value={\"Extra Slot\"} >\r\n                <Form.Label>Guests</Form.Label>\r\n                <Form.Control value={this.state.newEventGuests} onChange={this.handleGuestChange}\r\n                  type=\"email\" placeholder=\"example@gmail.com\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"Location\">\r\n                <Form.Label>Location:</Form.Label>\r\n                <Form.Control value={this.state.newEventLocation} onChange={this.handleLocationChange}\r\n                  type=\"text\" placeholder=\"Location\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"Notification\">\r\n                <Form.Label>Notification:</Form.Label>\r\n                <Row>\r\n                  <Col> <Form.Control value={this.state.newEventNotification} onChange={this.handleNotificationChange}\r\n                    defaultValue=\"30\" type=\"number\" placeholder=\"\"/> </Col>\r\n                  <Col> <Form.Text> Minutes </Form.Text> </Col>\r\n                </Row>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"Description\">\r\n                <Form.Label>Description:</Form.Label>\r\n                <Form.Control as=\"textarea\" rows=\"3\" value={this.state.newEventDescription} onChange={this.handleDescriptionChange}\r\n                  type=\"text\" placeholder=\"Description\" />\r\n              </Form.Group>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    )\r\n  }\r\n\r\n  startTimePicker = () => {\r\n    // const [startDate, setStartDate] = useState(new Date());\r\n    return (\r\n      <DatePicker class=\"form-control form-control-lg\" type=\"text\"\r\n        selected={this.state.newEventStart0}\r\n        onChange={(date) => {\r\n          this.setState({\r\n            newEventStart0: date\r\n          }, () => { console.log(this.state.newEventStart0) })\r\n\r\n        }}\r\n        showTimeSelect\r\n        timeFormat=\"HH:mm\"\r\n        timeIntervals={15}\r\n        timeCaption=\"time\"\r\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n      />\r\n    );\r\n  };\r\n\r\n\r\n  endTimePicker = () => {\r\n    // const [startDate, setStartDate] = useState(new Date());\r\n    return (\r\n      <DatePicker class=\"form-control form-control-lg\" type=\"text\" style={{ width: '100%' }}\r\n        selected={this.state.newEventEnd0}\r\n        onChange={(date) => {\r\n          this.setState({\r\n            newEventEnd0: date\r\n          }, () => { console.log(this.state.newEventEnd0) })\r\n\r\n        }}\r\n        showTimeSelect\r\n        timeFormat=\"HH:mm\"\r\n        timeIntervals={15}\r\n        timeCaption=\"time\"\r\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n      />\r\n    );\r\n  };\r\n  /*\r\n  getYear:\r\n  returns the year based on year format\r\n  */\r\n  getYear = () => {\r\n    return this.state.dateContext.format(\"Y\");\r\n  }\r\n\r\n  /*\r\n  getMonth:\r\n  returns the month based on the month of the dateContext\r\n  in english word form\r\n  */\r\n  getMonth = () => {\r\n    return this.state.dateContext.format(\"MMMM\");\r\n  }\r\n\r\n  /*\r\n  hideEventForm:\r\n  Hides the create/edit events form when a date or event is clicked\r\n  */\r\n  hideEventForm = (e) => {\r\n    console.log(\"Tyler says: Hello\")\r\n    this.setState({\r\n      dayEventSelected: false\r\n    });\r\n\r\n\r\n  }\r\n\r\n  /*\r\nAll functions below will change a variables\r\nwhen there is a change in the event form\r\n*/\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({ newEventName: event.target.value });\r\n  }\r\n\r\n  handleDateStartchange = (event) => {\r\n    this.setState({ newEventStart: event.target.value });\r\n  }\r\n\r\n  handleDateEndchange = (event) => {\r\n    this.setState({ newEventEnd: event.target.value });\r\n  }\r\n\r\n  handleGuestChange = (event) => {\r\n    this.setState({ newEventGuests: event.target.value });\r\n  }\r\n\r\n  handleLocationChange = (event) =>  {\r\n    this.setState({ newEventLocation: event.target.value});\r\n  }\r\n\r\n  handleNotificationChange = (event) => {\r\n    this.setState({ newEventNotification: event.target.value});\r\n  }\r\n\r\n  handleDescriptionChange = (event) => {\r\n    this.setState({ newEventDescription: event.target.value });\r\n  }\r\n\r\n  /*\r\n  *\r\n  getEvents:\r\n  this essentially gets the events data from google calendar and puts it\r\n  into the proper state variables. Currently the parsed data for full calendar\r\n  is used but the unfiltered data from google calendar API is not used but\r\n  in case we do need it, it's saved in this.state.originalEvents\r\n  *\r\n  *\r\n  */\r\n  getEventsByInterval = (start0, end0) => {\r\n    console.log('Main getEventsByInterval ran ');\r\n\r\n    axios.get('/getEventsByInterval', { //get normal google calendar data for possible future use\r\n      params: {\r\n        start: start0,\r\n        end: end0\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log('normal gCal data')\r\n        console.log(response);\r\n        var events = response.data;\r\n        this.setState({\r\n          newEventID: '',\r\n          newEventName: '',\r\n          newEventStart: '',\r\n          newEventEnd: '',\r\n          originalEvents: events\r\n        }, () => {\r\n          console.log(\"New Events Arrived\")\r\n\r\n          // console.log(events.data);\r\n          // this.createOrganizeData(start0, end0);\r\n          //Call function to prep data for Monthly View\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.log('Error Occurred ' + error);\r\n      }\r\n      );\r\n  }\r\n\r\n\r\n}\r\n","import React, { Component } from 'react';\n\n\n// import { BrowserRouter as Router } from \"react-router-dom\";\n\nimport MainPage from './components/Main.jsx';\n// import Header from './components/Header.jsx'\nclass App extends Component {\n  render() {\n    return (\n      <div >\n        \n        {/* <header className=\"App-header\"> */}\n        {/* <Router> */}\n        {/* <Header /> */}\n          <div>\n            <MainPage />\n          </div>\n         \n        {/* </Router> */}\n        {/* </ header> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n<BrowserRouter>\n\t<App />\n\t</BrowserRouter>\n, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}