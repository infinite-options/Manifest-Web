{"version":3,"sources":["components/firebase.js","components/ShowNotifications.jsx","components/addNewGRItem.jsx","components/addNewATItem.jsx","components/addNewISItem.jsx","components/DeleteISItem.jsx","components/deleteAT.jsx","components/deleteGR.jsx","components/editGR.jsx","components/editIS.jsx","components/EditAT.jsx","components/ShowATList.jsx","components/ShowISList.jsx","components/Firebasev2.jsx","components/TCal.jsx","components/DayRoutines.jsx","components/DayGoals.jsx","components/DayEvents.jsx","components/WeekEvents.jsx","components/WeekRoutines.jsx","components/WeekGoals.jsx","components/AboutModal.jsx","components/Main.jsx","App.js","registerServiceWorker.js","index.js"],"names":["firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ShowNotifications","props","convertTimeToHRMMSS","e","hours","target","value","rhours","Math","floor","minutes","rminutes","round","toString","convertToMinutes","myStr","myStr2","split","hrToMin","state","Form","Group","controlId","Row","Col","style","paddingRight","Control","type","placeholder","width","marginTop","this","itemToEditPassedIn","ta_notifications","before","time","onChange","stopPropagation","temp","user_notifications","notificationChange","xs","paddingLeft","Text","fontSize","Check","Input","height","checked","is_enabled","as","rows","marginLeft","message","preventDefault","onKeyDown","keyCode","during","after","React","Component","AddNewGRItem","grArr","itemToEdit","title","id","is_persistent","isRoutine","photo","is_complete","is_available","available_end_time","available_start_time","datetime_completed","datetime_started","audio","is_timed","expected_completion_time","is_sublist_available","is_set","routineDocsPath","firestore","collection","doc","arrPath","getGRDataFromFB","console","log","get","then","exists","x","data","setState","catch","error","alert","newInputSubmit","addNewDoc","add","ref","newArr","ATArray","push","updateEntireArray","update","refresh","handleNotificationChange","Modal","Dialog","Header","closeButton","onHide","closeModal","Title","className","Body","name","Footer","Button","variant","onClick","AddNewATItem","ATItem","fbPath","hideNewATModal","newActionTitle","AddNewISItem","atArr","newInstructionTitle","handleInputChange","ISArray","ISItem","hideNewISModal","pop","DeleteISItem","submitRequest","items","i","deleteIndex","slice","concat","confirmation","window","confirm","onMouseOver","event","color","onMouseOut","marginRight","icon","faTrashAlt","size","deleteAT","tempdeleteArrPortion","Array","Item","deleteArrPortion","deleteGR","Path","editGR","FBPath","showEditModal","startTimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","selected","Date","date","editGRForm","marginLeftV","border","padding","showIcon","faEdit","editIS","editISForm","editAT","editATForm","ShowATList","editFirBaseFalse","iconShow","Index","editFirBaseTrue","faList","faSlash","ShowISList","FirebaseV2","firebaseRootPath","originalGoalsAndRoutineArr","goals","routines","singleGR","show","arr","singleAT","singleATitemArr","singleISitemArr","modalWidth","addNewGRModalShow","addNewATModalShow","addNewISModalShow","thumbnailWidth","thumbnailHeight","thumbnailWidthV2","thumbnailHeightV2","availabilityColorCode","refreshATItem","resArr","createListofAT","refreshISItem","createListofIS","singleAt","grabFireBaseRoutinesGoalsData","routine","goal","onInputChange","getATList","persist","docRef","A","res","tempID","tempPhoto","tempTitle","tempAvailable","key","ListGroup","action","ATonClickEvent","marginBottom","margin","src","alt","faUser","faUserAltSlash","class","ISonClickEvent","GRonClickEvent","stepsInstructionArrayPath","findIndexByID","getRoutines","displayRoutines","tempPersist","formatDateTime","getGoals","displayGoals","getGoalsStatus","isComplete","textAlign","display","justifyContent","alignItems","faTrophy","faRunning","getRoutinesStatus","abstractedGoalsList","borderRadius","boxShadow","closeGoal","AddNewGRModalAbstracted","abstractedActionsAndTaskList","overflow","abstractedRoutineList","closeRoutine","abstractedInstructionsAndStepsList","addNewTaskInputBox","InputGroup","FormControl","Append","abstractedRoutineGoalStatusList","closeRoutineGoalModal","addNewGoalInputBox","str","formattedStr","replace","moment","format","displayCompletedGoals","displayCompletedRoutines","showRoutineGoalModal","sm","md","lg","showRoutine","showGoal","TylersCalendarv1","weekdays","weekdaysShort","year","dateContext","currentDay","dateObject","month","daysInMonth","firstDayOfMonth","startOf","getEventsforDay","tempStart","tempEnd","originalEvents","j","start","dateTime","end","startDate","getDate","endDate","onEventClick","background","textShadow","summary","eventClick","onDayClick","d","handleDateClick","onExpandClick","handleExpandClick","map","day","blanks","sameDate","bind","parseInt","totalSlots","cells","forEach","row","daysinmonth","tableLayout","DayRoutines","dayView","borderTop","pxPerHour","RoutineClicked","dayRoutineClick","getEventItem","hour","sameTimeEventCount","itemWidth","eventBoxSize","addmarginLeft","start_dateStr","toISOString","shift","start_timeStr","start_timeAndDate","toDate","end_dateStr","end_timeStr","end_timeAndDate","tempStartTime","tempEndTime","getHours","minsToMarginTop","getMinutes","pxPerHourForConversion","newElement","data-toggle","data-placement","zIndex","position","dayViewItems","dayEvents","todayDateObject","Container","DayGoals","GoalClicked","dayGoalClick","DayEvents","timeDisplay","eventClickDayView","curDate","hourDiff","float","minDiff","marginFromLeft","WeekEvents","weekEvents","weekViewItems","clone","isSameOrBefore","overflowX","overflowY","WeekRoutines","WeekGoals","AboutModal","handleFileSelected","files","file","URL","createObjectURL","hideAboutForm","CameBackFalse","handleImpPeople1","file2","handleImpPeople2","file3","handleImpPeople3","file4","faImage","accept","Label","fluid","MainPage","handleRepeatDropDown","eventKey","week_days","newByDay","byDay_temp","newEventStart0","getDay","repeatDropDown_temp","handleRepeatMonthlyDropDown","repeatMonthlyDropDown","handleRepeatEndDate","repeatEndDate_temp","repeatEndDate","handleRepeatInputValue","repeatInputValue_temp","handleRepeatOccurrence","repeatOccurrence_temp","getThisMonthEvents","axios","params","response","events","handleDayEventClick","guestList","attendees","reduce","nextGuest","email","newEventID","newEventEnd0","newEventName","newEventGuests","newEventLocation","location","newEventNotification","reminders","overrides","newEventDescription","description","dayEventSelected","isEvent","showNoTitleError","showDateError","showRepeatModal","showAboutModal","repeatOption","repeatOptionDropDown","repeatDropDown","repeatInputValue","repeatOccurrence","repeatRadio","repeatRadio_temp","byDay","0","1","2","3","4","5","6","handleWeekEventClick","repeatSummaryCompute","recurrenceRule","untilSubString","untilIndex","indexOf","substring","includes","endUntilIndex","countSubString","countIndex","endCountIndex","intervalSubString","intervalIndex","endIntervalIndex","byDaySubString","byDayArray","byDayIndex","endByDayIndex","join","handleEventClick","recurringEventId","handleDateClickOnDayView","arg","newStart","setHours","newEnd","validate","titleError","dayError","startDay","endDay","startMonth","getUTCMonth","endMonth","startYear","getFullYear","endYear","startHour","endHour","newDate","calendarView","updateEventsArray","handleSubmit","createEvent","updateEventClick","updateRequest","index","formattedEmail","emailList","match","guests","responseStatus","minutesNotification","updatedEvent","timeZone","Intl","DateTimeFormat","resolvedOptions","recurrence","defineRecurrence","method","useDefault","sequence","put","extra","ID","frequency","rrule","exdate","selectedDays","Object","entries","unshift","toUpperCase","repeat_end_date","deleteSubmit","post","newTitle","newEvent","reminderTime","nextMonth","assign","prevMonth","subtract","nextDay","prevDay","nextWeek","prevWeek","startObject","endObject","endOf","getEventsByInterval","getEventsByIntervalDayVersion","getEventsByIntervalWeekVersion","openRepeatModal","prevState","closeRepeatModal","saveRepeatChanges","showDayViewOrAboutView","eventFormAbstracted","showCalendarView","calendarAbstracted","dayViewAbstracted","weekViewAbstracted","backgroundColor","faChevronLeft","getMonth","getYear","faChevronRight","toggleShowRoutine","toggleShowGoal","startWeek","showRoutineModal","showGoalModal","showEventsFormbyCreateNewEventButton","changeCalendarView","view","abstractedMainEventGRShowButtons","DropdownButton","top","Dropdown","paddingBottom","today","repeatModal","eventFormInputArea","hideEventForm","inputStyle","selectedDot","curClass","classList","contains","remove","weekSelected","charAt","left","transform","min","max","onSelect","flexDirection","defaultChecked","handleNameChange","endTimePicker","handleGuestChange","handleLocationChange","handleDescriptionChange","notifyBefore","beforeChecked","notificationBeforeChecked","start0","end0","repeatSummary","onlyCal","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","process","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.da9196d3.chunk.js","sourcesContent":["import * as firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDBgPVcjoV8LbR4hDA7tm3UoP0abMw8guE\",\n    authDomain: \"project-caitlin-c71a9.firebaseapp.com\",\n    databaseURL: \"https://project-caitlin-c71a9.firebaseio.com\",\n    projectId: \"project-caitlin-c71a9\",\n    storageBucket: \"project-caitlin-c71a9.appspot.com\",\n    messagingSenderId: \"711685546849\",\n    appId: \"1:711685546849:web:5c7a982748eb3bec35db20\",\n    measurementId: \"G-DCQF4LY5ZH\"\n  };\n\nexport default !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\n","import React from 'react';\nimport { Form,Row,Col} from \"react-bootstrap\";\n\n\nclass ShowNotifications extends React.Component{\n  constructor(props) {\n    super(props)\n    \n    this.state={\n       \n    };\n  }\n\n  convertTimeToHRMMSS =  (e) => {\n        \n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num/60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours)* 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length === 1) {\n        rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length === 1) {\n        rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours+\":\" + rminutes +\":\" + \"00\";\n  }\n\n  convertToMinutes = (myStr) => {\n      // console.log(myStr);\n      if(myStr === 0 ){\n        return 0; \n      }\n      let myStr2 = myStr.split(':');\n      let hours = myStr2[0];\n      let hrToMin = hours* 60;\n      let minutes = (myStr2[1] * 1 )+ hrToMin;\n      // let seconds = myStr2[2];\n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n      return minutes;\n  }\n    render(){\n        return (\n            <div> \n                <Form.Group controlId=\"Notification\">\n                <Row>\n                  <Col style = {{paddingRight: \"0px\" }}>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"5\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n                      value = {this.convertToMinutes(this.props.itemToEditPassedIn.ta_notifications.before.time)}\n                      onChange={\n                        (e) => { e.stopPropagation(); \n                          let temp = this.props.itemToEditPassedIn; \n                          temp.ta_notifications.before.time = this.convertTimeToHRMMSS(e);\n                          temp.user_notifications.before.time = this.convertTimeToHRMMSS(e);\n                          this.props.notificationChange(temp)\n                        }\n                      }\n                    />\n                  </Col>\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min Before Start Time</Form.Text>\n                  </Col>\n                </Row>\n                <Row style = {{ marginTop:\"15px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.user_notifications.before.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.user_notifications.before.is_enabled = !temp.user_notifications.before.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.user_notifications.before.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.user_notifications.before.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.user_notifications.before.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.ta_notifications.before.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.ta_notifications.before.is_enabled = !temp.ta_notifications.before.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.ta_notifications.before.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.ta_notifications.before.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.ta_notifications.before.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\" }}>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"30\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n                      value = {this.convertToMinutes(this.props.itemToEditPassedIn.ta_notifications.during.time)}\n                      onChange={\n                        (e) => { e.stopPropagation(); \n                          let temp = this.props.itemToEditPassedIn; \n                          temp.ta_notifications.during.time = this.convertTimeToHRMMSS(e);\n                          temp.user_notifications.during.time = this.convertTimeToHRMMSS(e);\n                          this.props.notificationChange(temp)\n                          }\n                      }\n                    />\n                  </Col>\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min After Start Time</Form.Text>\n                  </Col>\n                </Row>\n                <Row style = {{ marginTop:\"15px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.user_notifications.during.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.user_notifications.during.is_enabled = !temp.user_notifications.during.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.user_notifications.during.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.user_notifications.during.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.user_notifications.during.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}} >\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.ta_notifications.during.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.ta_notifications.during.is_enabled = !temp.ta_notifications.during.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.ta_notifications.during.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.ta_notifications.during.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if(e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.ta_notifications.during.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\" }}>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"5\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n                      value = {this.convertToMinutes(this.props.itemToEditPassedIn.ta_notifications.after.time)}\n                      onChange={\n                        (e) => { e.stopPropagation(); \n                          let temp = this.props.itemToEditPassedIn; \n                          temp.ta_notifications.after.time = this.convertTimeToHRMMSS(e);\n                          temp.user_notifications.after.time = this.convertTimeToHRMMSS(e);\n                          this.props.notificationChange(temp)\n                          }\n                      }\n                    />\n                  </Col>\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min After End Time</Form.Text>\n                  </Col>\n                </Row>\n                <Row style = {{ marginTop:\"15px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.user_notifications.after.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.user_notifications.after.is_enabled = !temp.user_notifications.after.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.user_notifications.after.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.user_notifications.after.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.user_notifications.after.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}} >\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.ta_notifications.after.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.ta_notifications.after.is_enabled = !temp.ta_notifications.after.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.ta_notifications.after.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.ta_notifications.after.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.ta_notifications.after.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n              \n              </Form.Group>\n            </div>\n        );\n    }\n}\n\nexport default ShowNotifications;","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport { Button, Modal} from \"react-bootstrap\";\nimport ShowNotifications from \"./ShowNotifications\"\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\nexport default class AddNewGRItem extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Is this a Routine? \" + this.props.isRoutine);\n  }\n  state = {\n    grArr: [], //goal, routine original array\n    itemToEdit: {\n      title: \"\",\n      id: \"\",\n      is_persistent: this.props.isRoutine,\n      photo: \"\",\n      is_complete: false,\n      is_available: true,\n      available_end_time: \"23:59:59\",\n      available_start_time: \"00:00:00\",\n      datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      audio: \"\",\n      is_timed: false,\n      expected_completion_time: \"01:00:00\",\n      is_sublist_available: true,\n      ta_notifications:{\n          before:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          },\n          during:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:30:00\"\n          },\n          after:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          }\n      },\n      user_notifications:{\n        before:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        },\n        during:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:30:00\"\n        },\n        after:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        }\n      }\n    }, //this is essentially the new item\n    //below are references to firebase directories\n    routineDocsPath: firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(\"7R6hAVmDrNutRkG3sVRy\")\n      .collection(\"goals&routines\"),\n    arrPath: firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(\"7R6hAVmDrNutRkG3sVRy\")\n  };\n\n  componentDidMount() {\n    this.props.isRoutine\n      ? console.log(\"Routine Input\")\n      : console.log(\"Goal Input\");\n\n    this.getGRDataFromFB();\n  }\n\n  getGRDataFromFB = () => {\n    //Grab the goals/routine array from firebase and then store it in state varible grArr\n    console.log(this.state.arrPath);\n    this.state.arrPath\n      .get()\n      .then(doc => {\n        if (doc.exists) {\n          console.log(\"getGRDataFromFB DATA:\");\n          // console.log(doc.data());\n          var x = doc.data();\n          x = x[\"goals&routines\"];\n          console.log(x);\n          this.setState({\n            grArr: x\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document! 2\");\n        }\n      })\n      .catch(function(error) {\n        console.log(\"Error getting document:\", error);\n        alert(\"Error getting document:\", error);\n      });\n  };\n\n  newInputSubmit = () => {\n    if (this.state.itemToEdit.title === \"\") {\n      alert(\"Invalid Input\");\n      return;\n    }\n    this.addNewDoc();\n  };\n\n  addNewDoc = () => {\n    this.state.routineDocsPath\n      .add({\n        title: this.state.itemToEdit.title,\n        \"actions&tasks\": []\n      })\n      .then(ref => {\n        if (ref.id === null) {\n          alert(\"Fail to add new routine / goal item\");\n          return;\n        }\n\n        let newArr = this.props.ATArray;\n        let temp = this.state.itemToEdit;\n        temp.id = ref.id;\n        console.log(\"Added document with ID: \", ref.id);\n        // this.state.grArr.push(temp);\n        newArr.push(temp);\n        this.updateEntireArray(newArr);\n      });\n  };\n\n  //This function will below will essentially take in a array and have a key map to it\n  updateEntireArray = newArr => {\n    // 2. update adds to the document\n    let db = this.state.arrPath;\n    db.update({ \"goals&routines\": newArr }).then(doc => {\n      console.log(\"updateEntireArray Finished\");\n      console.log(doc);\n      this.getGRDataFromFB();\n      if (this.props != null) {\n        console.log(\"refreshing FireBasev2 from AddNewGRItem\");\n        this.props.refresh();\n      }\n    });\n  }\n\n  convertTimeToHRMMSS =  (e) => {\n        \n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num/60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours)* 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length === 1) {\n        rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length === 1) {\n        rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours+\":\" + rminutes +\":\" + \"00\";\n  }\n\n  convertToMinutes = () => {\n      let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n      let hours = myStr[0];\n      let hrToMin = hours* 60;\n      let minutes = (myStr[1] * 1 )+ hrToMin;\n      // let seconds = myStr[2];\n      \n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n      return minutes;\n  }\n\n  handleNotificationChange = (temp) => {\n    // console.log(temp);\n    this.setState({ itemToEdit: temp });\n  }\n\n  render() {\n    return (\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\n        <Modal.Header closeButton onHide={this.props.closeModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">\n              Add New {this.props.isRoutine ? \"Routine\" : \"Goal\"}\n            </h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <label>Title</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Title\"\n                value={this.state.itemToEdit.title}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.title = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Photo URL \"\n                value={this.state.itemToEdit.photo}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.photo = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\n                value={this.state.itemToEdit.available_start_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_start_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_end_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_end_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n            \n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        type=\"number\"\n                        placeholder=\"30\"\n                        value = {this.convertToMinutes()}\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                        onChange={\n                            (e) => { e.stopPropagation(); \n                            let temp = this.state.itemToEdit; \n                            temp.expected_completion_time = this.convertTimeToHRMMSS(e);\n                            this.setState({ itemToEdit: temp }) }\n                        }\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n            \n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n              <label className=\"form-check-label\" >Time?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_timed}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  console.log(temp.is_timed);\n                  temp.is_timed = !temp.is_timed;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Available to Caitlin?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Available\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_available}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_available = e.target.checked;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            {this.state.itemToEdit.is_available && \n              <ShowNotifications \n                itemToEditPassedIn = {this.state.itemToEdit}\n                notificationChange = {this.handleNotificationChange}\n              />\n            }\n\n            \n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.closeModal}>\n            Close\n          </Button>\n          <Button variant=\"info\" onClick={this.newInputSubmit}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import firebase from \"./firebase\";\nimport ShowNotifications from \"./ShowNotifications\"\nimport { Button, Modal } from \"react-bootstrap\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\nexport default class AddNewATItem extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"AddNewATItem constructor\");\n    this.state = {\n      newActionTitle: \"\", //Old delete Later\n      itemToEdit: {\n        id: \"\",\n        title: \"\",\n        photo: \"\",\n        audio: \"\",\n        is_complete: false,\n        is_available: true,\n        available_end_time: \"23:59:59\",\n        available_start_time: \"00:00:00\",\n        datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n        datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n        is_timed: false,\n        expected_completion_time: \"00:11:00\",\n        is_sublist_available: true,\n        ta_notifications:{\n          before:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          },\n          during:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:30:00\"\n          },\n          after:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          }\n        },\n        user_notifications:{\n          before:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          },\n          during:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:30:00\"\n          },\n          after:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          }\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    // console.log(\"AddNewATItem did mount\");\n    // console.log(this.props.ATItem);\n    // console.log(this.props.ATItem.fbPath);\n    // console.log(this.props.ATItem.arr);\n    // console.log(this.props.ATArray);\n  }\n\n  newInputSubmit = () => {\n    if (this.state.itemToEdit.title === \"\") {\n      alert(\"Invalid Input\");\n      return;\n    }\n    // console.log(\"Submitting Input: \" + this.state.itemToEdit.title);\n    this.addNewDoc();\n  };\n\n  addNewDoc = () => {\n    this.props.ATItem.fbPath\n      .collection(\"actions&tasks\")\n      .add({\n        title: this.state.itemToEdit.title,\n        \"instructions&steps\": []\n      })\n      .then(ref => {\n        if (ref.id === null) {\n          alert(\"Fail to add new Action / Task item\");\n          return;\n        }\n        console.log(\"Added document with ID: \", ref.id);\n        let newArr = this.props.ATArray;\n        let temp = this.state.itemToEdit;\n        temp.id = ref.id;\n        newArr.push(temp);\n        console.log(newArr);\n        console.log(\"adding new item\");\n        this.updateEntireArray(newArr);\n      });\n  };\n\n  //This function will below will essentially take in a array and have a key map to it\n  updateEntireArray = newArr => {\n    // 2. update adds to the document\n    this.props.ATItem.fbPath.update({ \"actions&tasks\": newArr }).then(doc => {\n      console.log(\"updateEntireArray Finished\");\n      console.log(doc);\n      if (this.props != null) {\n        this.props.hideNewATModal();\n        console.log(\"refreshing FireBasev2 from AddNewATItem\");\n        this.props.refresh(newArr);\n      }\n    });\n  };\n\n  convertTimeToHRMMSS =  (e) => {\n        \n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num/60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours)* 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length == 1) {\n        rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length == 1) {\n        rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours+\":\" + rminutes +\":\" + \"00\";\n  }\n\n  convertToMinutes = () => {\n      let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n      let hours = myStr[0];\n      let hrToMin = hours* 60;\n      let minutes = (myStr[1] * 1 )+ hrToMin;\n      let seconds = myStr[2];\n      \n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n      return minutes;\n  }\n\n  handleNotificationChange = (temp) => {\n    // console.log(temp);\n    this.setState({ itemToEdit: temp });\n  }\n\n  render() {\n    return (\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.props.hideNewATModal();\n            console.log(\"closed button clicked\");\n          }}\n        >\n          <Modal.Title>\n            <h2 className=\"normalfancytext\">Add New Task/Action</h2>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* <AddNewGRItem refresh={this.grabFireBaseRoutinesGoalsData} isRoutine={this.state.isRoutine} /> */}\n          <div>\n            <label>Title</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Title\"\n                value={this.state.itemToEdit.title}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.title = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Photo URL \"\n                value={this.state.itemToEdit.photo}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.photo = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\n                value={this.state.itemToEdit.available_start_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_start_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_end_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_end_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        type=\"number\"\n                        placeholder=\"30\"\n                        value = {this.convertToMinutes()}\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                        onChange={\n                            (e) => { e.stopPropagation(); \n                            let temp = this.state.itemToEdit; \n                            temp.expected_completion_time = this.convertTimeToHRMMSS(e);\n                             this.setState({ itemToEdit: temp }) }\n                        }\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n\n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n              <label className=\"form-check-label\" >Time?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_timed}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_timed = !temp.is_timed;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Available to Caitlin?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Available\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_available}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_available = !temp.is_available;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            {this.state.itemToEdit.is_available && \n              <ShowNotifications \n                itemToEditPassedIn = {this.state.itemToEdit}\n                notificationChange = {this.handleNotificationChange}\n              />\n            }\n            \n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              this.props.hideNewATModal();\n              console.log(\"closed button clicked\");\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              this.newInputSubmit();\n            }}\n          >\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import firebase from \"./firebase\";\nimport ShowNotifications from \"./ShowNotifications\"\nimport { Button, Modal } from \"react-bootstrap\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\n/**\n *\n * This class is responsible for adding a new elemnt to the\n * firebase database. If it becomes successful then we update\n * the view on the firebasev2\n */\n\nexport default class AddNewISItem extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"AddNewISItem constructor\");\n  }\n\n  state = {\n    atArr: [], //goal, routine original array\n    newInstructionTitle: \"\",\n    itemToEdit: {\n      //new item to add to array\n      id: \"\",\n      title: \"\",\n      photo: \"\",\n      is_complete: false,\n      is_available: true,\n      available_end_time: \"23:59:59\",\n      available_start_time: \"00:00:00\",\n      datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      audio: \"\",\n      is_timed: false,\n      expected_completion_time: \"00:10:00\",\n      ta_notifications:{\n        before:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        },\n        during:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:30:00\"\n        },\n        after:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        }\n      },\n      user_notifications:{\n        before:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        },\n        during:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:30:00\"\n        },\n        after:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        }\n      }\n    }\n  };\n\n  componentDidMount() {\n    // console.log(\"AddNewISItem did mount\");\n    // console.log(this.props.ISArray);\n    // console.log(this.props.ISItem);\n  }\n\n  handleInputChange = e => {\n    console.log(e.target.value);\n    this.setState({\n      newInstructionTitle: e.target.value\n    });\n  };\n\n  newInputSubmit = () => {\n    if (this.state.itemToEdit.title === \"\") {\n      alert(\"Invalid Input\");\n      return;\n    }\n    console.log(\"Submitting Input: \" + this.state.itemToEdit.title);\n\n    this.props.ISArray.push(this.state.itemToEdit);\n    this.updateEntireArray(this.props.ISArray);\n  };\n\n  //This function will below will essentially take in a array and have a key map to it\n  updateEntireArray = newArr => {\n    // 2. update adds to the document\n\n    this.props.ISItem.fbPath\n      .update({ \"instructions&steps\": newArr })\n      .then(doc => {\n        console.log(\"updateEntireArray Finished\");\n        console.log(doc);\n        if (this.props != null) {\n          this.props.hideNewISModal();\n          console.log(\"refreshing FireBasev2 from ISItem\");\n          this.props.refresh(newArr);\n        } else {\n          console.log(\"removing newly added item due to failure\");\n          this.props.ISArray.pop();\n        }\n      });\n  };\n\n  convertTimeToHRMMSS =  (e) => {\n        \n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num/60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours)* 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length == 1) {\n        rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length == 1) {\n        rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours+\":\" + rminutes +\":\" + \"00\";\n  }\n\n  convertToMinutes = () => {\n      let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n      let hours = myStr[0];\n      let hrToMin = hours* 60;\n      let minutes = (myStr[1] * 1 )+ hrToMin;\n      let seconds = myStr[2];\n      \n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n      return minutes;\n  }\n\n  handleNotificationChange = (temp) => {\n    // console.log(temp);\n    this.setState({ itemToEdit: temp });\n  }\n\n  render() {\n    return (\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.props.hideNewISModal();\n            console.log(\"closed button clicked\");\n          }}\n        >\n          <Modal.Title>\n            <h2 className=\"normalfancytext\">Add New Step</h2>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* <AddNewGRItem refresh={this.grabFireBaseRoutinesGoalsData} isRoutine={this.state.isRoutine} /> */}\n          <div>\n            <label>Title</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Title\"\n                value={this.state.itemToEdit.title}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.title = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Photo URL \"\n                value={this.state.itemToEdit.photo}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.photo = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\n                value={this.state.itemToEdit.available_start_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_start_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_end_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_end_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n            \n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        // value={this.state.newEventNotification}\n                        // onChange={this.handleNotificationChange}\n                        type=\"number\"\n                        placeholder=\"30\"\n                        value = {this.convertToMinutes()}\n                        // value = {this.state.itemToEdit.expected_completion_time}\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                        onChange={\n                            // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\n                            (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\n                        }\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n\n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n              <label className=\"form-check-label\" >Time?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_timed}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_timed = !temp.is_timed;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Available to Caitlin?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Available\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_available}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_available = !temp.is_available;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            {this.state.itemToEdit.is_available && \n              <ShowNotifications \n                itemToEditPassedIn = {this.state.itemToEdit}\n                notificationChange = {this.handleNotificationChange}\n              />\n            }\n\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              this.props.hideNewISModal();\n              console.log(\"closed button clicked\");\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              this.newInputSubmit();\n            }}\n          >\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n","import React, { Component } from 'react'\n// import { Button, Row, Col, Modal, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n/**\n * \n * This class is responsible for adding a new elemnt to the\n * firebase database. If it becomes successful then we update\n * the view on the firebasev2\n*/\nexport default class DeleteISItem extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('DeleteISItem constructor');\n        // console.log('delete index ' + this.props.deleteIndex)\n        // console.log(this.props.ISItem)\n        // console.log(this.props.ISArray)\n    }\n\n    componentDidMount() {\n        // console.log('DeleteISItem did mount');\n    }\n\n\n    submitRequest = () => {\n        // console.log(\"request was made to delete for element \" +  this.props.deleteIndex);\n        let items = [...this.props.ISArray];\n        // console.log(\"delete with: \")\n        // console.log(items)\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length))\n        // console.log(\"delete 2 with: \")\n        // console.log(newArr)\n        this.props.ISItem.fbPath.update({ 'instructions&steps': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\n                    this.props.refresh(newArr);\n                }\n                else{\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    confirmation = () => {\n        const r = window.confirm(\"Confirm Delete\"); \n        if(r === true){ \n            // console.log(\"Delete Confirm\")\n            this.submitRequest();\n            return;\n        }\n        // console.log(\"Delete Not Confirm\")\n    }\n\n\n    render() {\n        return (\n            < div>\n                <FontAwesomeIcon \n                    onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut ={event => {event.target.style.color = \"#000000\";}}\n                    style ={{color:  \"#000000\", marginRight:\"15px\", marginLeft: \"5px\" }}\n                    onClick={(e)=>{e.stopPropagation(); this.confirmation()}}\n                    icon={faTrashAlt} size=\"lg\" \n                />\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n// import { Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nexport default class deleteAT extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    /**\n     * Does a check to make sure the element is within bounds and then calls then right function to\n     * delete the stupid AT\n    */\n    submitRequest = () => {\n        if (this.props.deleteIndex < 0) {\n            console.log(\"deleteAT index error\")\n            return;\n        }\n        this.tempdeleteArrPortion();\n    }\n\n    tempdeleteArrPortion = () => {\n        // console.log(\"request was made to delete this index \" + this.props.deleteIndex);\n        let items = [...this.props.Array];\n        let i = this.props.deleteIndex;\n        items[i]['deleted'] = true;\n        this.props.Item.fbPath.update({ 'actions&tasks': items }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    this.props.refresh(items);\n                }\n                else {\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n\n    /**\n     * \n     * deleteArrPortion :\n     * this function will go into the array of that action&task and delete that specific element, after which\n     * it will update the array in firestore and refresh the page once that is completed\n    */\n    deleteArrPortion = () => {\n        // console.log(\"request was made to delete this  element \" + this.props.deleteIndex);\n        let items = [...this.props.Array];\n        // console.log(\"delete with: \");\n        // console.log(items);\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\n        // console.log(\"delete 2 with: \");\n        // console.log(newArr);\n        this.props.Item.fbPath.update({ 'actions&tasks': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\n                    this.props.refresh(newArr);\n                }\n                else {\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    \n    confirmation = () => {\n        const r = window.confirm(\"Confirm Delete\"); \n        if(r === true){ \n            // console.log(\"Delete Confirm\")\n            this.submitRequest();\n            return;\n        }\n        // console.log(\"Delete Not Confirm\")\n    }\n\n    render() {\n        return (\n            <div style={{ marginLeft: \"5px\" }} >\n                <FontAwesomeIcon\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style ={{marginRight: '15px', color:  \"#000000\" }}\n                    onClick={(e) => { e.stopPropagation(); this.confirmation() }}\n                    icon={faTrashAlt} size=\"lg\"\n                />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt} from '@fortawesome/free-solid-svg-icons';\nexport default class deleteGR extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('Delete AT constructor');  \n       \n    }\n\n    submitRequest = () => {\n        // console.log(\"request to delete GR\")\n        // console.log('delete index ' + this.props.deleteIndex)\n        // console.log(this.props.Item)\n        // console.log(this.props.Array)\n        if (this.props.deleteIndex < 0){\n            console.log(\"invalid index exiting delete\");\n            return;\n        }\n        this.tempdeleteArrPortion();\n    } \n\n    tempdeleteArrPortion= () => {\n        let items = [...this.props.Array];\n        items[this.props.deleteIndex]['deleted'] = true;\n        this.props.Path.update({ 'goals&routines': items }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete GRItem\");\n                    this.props.refresh();\n                }\n                else{\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    deleteArrPortion = () => {\n        // console.log(\"request was made to delete this  element \" +  this.props.deleteIndex);\n        let items = [...this.props.Array];\n        // console.log(\"delete with: \");\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\n        // console.log(\"delete 2 with: \");\n        // console.log(newArr);\n        this.props.Path.update({ 'goals&routines': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\n                    this.props.refresh();\n                }\n                else{\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    confirmation = () => {\n        const r = window.confirm(\"Confirm Delete\"); \n        if(r == true){ \n            // console.log(\"Delete Confirm\")\n            this.submitRequest();\n            return;\n        }\n        console.log(\"Delete Not Confirm\")\n    }\n\n\n    render() {\n        return (\n            <div  style={{ marginLeft: \"5px\" }}>\n            \n            <FontAwesomeIcon \n                title = \"Delete Item\"\n                onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\n                onMouseOut ={event => {event.target.style.color = \"#000000\";}}\n                style ={{marginRight: '15px', color:  \"#000000\" }}\n                // style ={{ color:  \"#000000\" }}\n                onClick={(e)=>{ e.stopPropagation(); this.confirmation()}}\n                icon={faTrashAlt} size=\"lg\" \n            />\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { faEdit} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button} from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport ShowNotifications from \"./ShowNotifications\";\nimport ShowATList from \"./ShowNotifications.jsx\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\nexport default class editGR extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            showEditModal: false,\n            itemToEdit: this.props.ATArray[this.props.i]\n        }\n    }\n\n    newInputSubmit = () => {\n        // console.log(\"submitting GR edited formed to firebase\");\n        let newArr = this.props.ATArray;\n     \n        newArr[this.props.i] = this.state.itemToEdit;\n\n        //Add the below attributes in case they don't already exists\n\n        if (!newArr[this.props.i]['audio']) {\n            newArr[this.props.i]['audio'] = '';\n        }\n        if (!newArr[this.props.i]['datetime_completed']) {\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        if (!newArr[this.props.i]['datetime_started']) {\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        this.props.FBPath.update({ 'goals&routines': newArr }).then(\n            (doc) => {\n\n                this.setState({ showEditModal: false })\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from updating GR ITEM \");\n                    this.props.refresh(newArr);\n                }\n                else {\n                    console.log(\"update failure\");\n                }\n            }\n        )\n    }\n\n\n    //For possible future use because we currently just typing out the time.\n    startTimePicker = () => {\n        return (\n            <DatePicker className=\"form-control form-control-lg\" type=\"text\" style={{ width: '100%' }}\n                showTimeSelect\n                showTimeSelectOnly\n                timeIntervals={15}\n                timeCaption=\"Time\"\n                dateFormat=\"h:mm aa\"\n                selected={(this.state.itemToEdit.available_start_time) ? this.state.itemToEdit.available_start_time : new Date()}\n                onChange={(date) => {\n                    let temp = this.state.itemToEdit;\n                    temp.available_start_time = date;\n                    this.setState({\n                        itemToEdit: temp\n                    })\n\n                }}\n            />\n        );\n    }\n\n    convertTimeToHRMMSS =  (e) => {\n        \n        // console.log(e.target.value);\n        let num = e.target.value;\n        let hours = num/60;\n        let rhours = Math.floor(hours);\n        let minutes = (hours - rhours)* 60;\n        let rminutes = Math.round(minutes);\n        if (rhours.toString().length == 1) {\n            rhours = \"0\" + rhours;\n        }\n        if (rminutes.toString().length == 1) {\n            rminutes = \"0\" + rminutes;\n        }\n        // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n        return rhours+\":\" + rminutes +\":\" + \"00\";\n    }\n\n    convertToMinutes = () => {\n        let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n        let hours = myStr[0];\n        let hrToMin = hours* 60;\n        let minutes = (myStr[1] * 1 )+ hrToMin;\n        let seconds = myStr[2];\n        \n        // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n        return minutes;\n    }\n\n    handleNotificationChange = (temp) => {\n        // console.log(temp);\n        this.setState({ itemToEdit: temp });\n    }\n\n    editGRForm = () => {\n        return (  \n              // <div style={{ border: \"2px\", margin: '0', width: \"315px\", padding: '20px' }}>\n            <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\n                <label >Title</label>\n                 <div className=\"input-group mb-3\" >\n                    <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\n                        (e) => { e.preventDefault(); e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\n                    }\n\n                    //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                    onKeyDown={\n                        (e) => {\n                            if (e.keyCode === 32) {\n                                let temp = this.state.itemToEdit; temp.title = e.target.value + \" \"; this.setState({ itemToEdit: temp })\n                                e.preventDefault(); e.stopPropagation()\n                            }\n                        }} />\n                </div >\n\n                <label>Photo URL</label>\n                <div className=\"input-group mb-3\" >\n                    <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\n                    } />\n                </div >\n\n                <label>Available Start Time</label>\n                <div className=\"input-group mb-3\" >\n                    <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                    } />\n                </div >\n\n                <label>Available End Time</label>\n                <div className=\"input-group mb-3\" >\n                    <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                    } />\n                </div >\n\n                <label>This Takes Me</label>\n                <Row>\n                    <Col  style = {{paddingRight: \"0px\" }}>  \n                        <Form.Control\n                            // value={this.state.newEventNotification}\n                            // onChange={this.handleNotificationChange}\n                            type=\"number\"\n                            placeholder=\"30\"\n                            value = {this.convertToMinutes()}\n                            // value = {this.state.itemToEdit.expected_completion_time}\n                            style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                            onChange={\n                                // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\n                                 (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\n                            }\n                        />\n                    </Col>\n                    <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                        <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                    </Col>\n                </Row>\n\n                <div className=\"input-group mb-3\"style ={{marginTop:\"10px\"}} >\n                    <label className=\"form-check-label\">Time?</label>\n\n                    <input\n                        style={{ marginTop: '5px', marginLeft: '5px' }}\n\n                        name=\"Timed\"\n                        type=\"checkbox\"\n                        checked={this.state.itemToEdit.is_timed}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.state.itemToEdit;\n                            // console.log(temp.is_timed)\n                            temp.is_timed = !temp.is_timed;\n                            this.setState({ itemToEdit: temp })\n                        }} />\n                </div >\n\n                <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n                    <label className=\"form-check-label\">Available to Caitlin?</label>\n                    <input\n                        style={{ marginTop: '5px', marginLeft: '5px' }}\n                        name=\"Available\"\n                        type=\"checkbox\"\n                        checked={this.state.itemToEdit.is_available}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.state.itemToEdit;\n                            temp.is_available = !temp.is_available;\n                            this.setState({ itemToEdit: temp })\n                        }} />\n                </div >\n                    \n                {this.state.itemToEdit.is_available && \n                    <ShowNotifications \n                        itemToEditPassedIn = {this.state.itemToEdit}\n                        notificationChange = {this.handleNotificationChange}\n                />} \n                    \n\n                <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\n                <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\n            </Row>\n        )\n    }\n\n\n    showIcon = () => {\n        return (\n            <div style={{ marginLeft: \"5px\" }} >\n                <FontAwesomeIcon\n\n                    title=\"Edit Item\"\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: \"#000000\"}}\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\n                    icon={faEdit} size=\"lg\"\n                />\n            </div>\n        )\n    }\n   \n\n    \n\n    render() {\n        return (\n\n            <div onClick={(e) => { e.stopPropagation(); }}>\n                {(this.state.showEditModal) ? <div></div> : this.showIcon()} \n                 {(this.state.showEditModal ? this.editGRForm() : <div> </div>)}\n  \n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from 'react-bootstrap';\nimport ShowNotifications from \"./ShowNotifications\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\n\nexport default class editIS extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            showEditModal: false,\n            itemToEdit: this.props.ISArray[this.props.i]\n        }\n    }\n\n    newInputSubmit = () => {\n        let newArr  = this.props.ISArray;\n        newArr[this.props.i] = this.state.itemToEdit;\n\n        //Add the below attributes in case they don't already exists\n        if(!newArr[this.props.i]['datetime_completed']){\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n        if(!newArr[this.props.i]['datetime_started']){\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        if(!newArr[this.props.i]['audio']){\n            newArr[this.props.i]['audio'] = '';\n        }\n        this.props.FBPath.update({ 'instructions&steps': newArr }).then(\n            (doc) => {\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from updating ISItem\");\n                    this.setState({ showEditModal: false })\n                    this.props.refresh(newArr);\n                }\n                else{\n                    console.log(\"update failure\");\n                }\n            }\n        )\n    }\n    convertTimeToHRMMSS =  (e) => {\n        \n        // console.log(e.target.value);\n        let num = e.target.value;\n        let hours = num/60;\n        let rhours = Math.floor(hours);\n        let minutes = (hours - rhours)* 60;\n        let rminutes = Math.round(minutes);\n        if (rhours.toString().length == 1) {\n            rhours = \"0\" + rhours;\n        }\n        if (rminutes.toString().length == 1) {\n            rminutes = \"0\" + rminutes;\n        }\n        // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n        return rhours+\":\" + rminutes +\":\" + \"00\";\n    }\n\n    convertToMinutes = () => {\n        let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n        let hours = myStr[0];\n        let hrToMin = hours* 60;\n        let minutes = (myStr[1] * 1 )+ hrToMin;\n        let seconds = myStr[2];\n        \n        // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n        return minutes;\n    }\n    \n    handleNotificationChange = (temp) => {\n        // console.log(temp);\n        this.setState({ itemToEdit: temp });\n    }\n    \n    editISForm = () => {\n        return (\n            // <div style={{margin: '0', width: \"315px\", padding:'20px'}}>\n            <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\n            <label>Title</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        // value={this.state.newEventNotification}\n                        // onChange={this.handleNotificationChange}\n                        type=\"number\"\n                        placeholder=\"30\"\n                        value = {this.convertToMinutes()}\n                        // value = {this.state.itemToEdit.expected_completion_time}\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                        onChange={\n                            // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\n                            (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\n                        }\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n            \n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n                <label className=\"form-check-label\">Time?</label>\n                <input\n                    style={{ marginTop: '5px', marginLeft: '5px' }}\n                    name=\"Timed\"\n                    type=\"checkbox\"\n                    checked={this.state.itemToEdit.is_timed}\n                    onChange={(e) => {\n                        e.stopPropagation();\n                        let temp = this.state.itemToEdit;\n                        // console.log(temp.is_timed)\n                        temp.is_timed = !temp.is_timed;\n                        this.setState({ itemToEdit: temp })\n                    }} />\n            </div>\n            \n            <div className=\"input-group mb-3\" >\n                <label className=\"form-check-label\">Available to Caitlin?</label>\n                <input\n                    style={{ marginTop: '5px', marginLeft: '5px' }}\n                    name=\"Available\"\n                    type=\"checkbox\"\n                    checked={this.state.itemToEdit.is_available}\n                    onChange={(e) => {\n                        e.stopPropagation();\n                        let temp = this.state.itemToEdit;\n                        // console.log(temp.is_available)\n                        temp.is_available = !temp.is_available;\n                        this.setState({ itemToEdit: temp })\n                    }} />\n            </div >\n\n            {this.state.itemToEdit.is_available && \n                <ShowNotifications \n                    itemToEditPassedIn = {this.state.itemToEdit}\n                    notificationChange = {this.handleNotificationChange}\n                />\n            }\n\n\n            <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\n            <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\n        {/* </div> */}\n        </Row>\n        )\n    }\n\n    showIcon = () => {\n        return (\n            <div>\n                <FontAwesomeIcon\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: \"#000000\", marginLeft:\"5px\" }}\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\n                    icon={faEdit} size=\"lg\"\n                />\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {/* {(this.state.showEditModal) ? <div> </div> : this.showIcon()}\n                {(this.state.showEditModal ? this.editISForm() : <div> </div>)} */}\n                {this.state.showEditModal ? this.editISForm() : this.showIcon()}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {  Button } from 'react-bootstrap';\nimport ShowNotifications from \"./ShowNotifications\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\n\nexport default class editAT extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('editAT constructor');\n        // console.log('Edit index ' + this.props.i)\n        // console.log(this.props.FBPath)\n        // console.log(this.props.ATArray)\n\n        this.state = {\n            showEditModal: false,\n            itemToEdit: this.props.ATArray[this.props.i]\n        }\n    }\n\n    newInputSubmit = () => {\n        // console.log(\"submitting edited formed to firebase\");\n        let newArr  = this.props.ATArray;\n        newArr[this.props.i] = this.state.itemToEdit;\n        \n        //Add the below attributes in case they don't already exists\n        if(!newArr[this.props.i]['datetime_completed']){\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n        if(!newArr[this.props.i]['audio']){\n            newArr[this.props.i]['audio'] = '';\n        }\n\n        if(!newArr[this.props.i]['datetime_started']){\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        this.props.FBPath.update({ 'actions&tasks': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from updating ISItem\");\n                    this.setState({ showEditModal: false })\n                    this.props.refresh(newArr);\n                }\n                else{\n                    console.log(\"update failure\");\n                }\n            }\n        )\n    }\n    convertTimeToHRMMSS =  (e) => {\n        \n        // console.log(e.target.value);\n        let num = e.target.value;\n        let hours = num/60;\n        let rhours = Math.floor(hours);\n        let minutes = (hours - rhours)* 60;\n        let rminutes = Math.round(minutes);\n        if (rhours.toString().length == 1) {\n            rhours = \"0\" + rhours;\n        }\n        if (rminutes.toString().length == 1) {\n            rminutes = \"0\" + rminutes;\n        }\n        // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n        return rhours+\":\" + rminutes +\":\" + \"00\";\n    }\n\n    convertToMinutes = () => {\n        let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n        let hours = myStr[0];\n        let hrToMin = hours* 60;\n        let minutes = (myStr[1] * 1 )+ hrToMin;\n        let seconds = myStr[2];\n        \n        // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n        return minutes;\n    }\n    handleNotificationChange = (temp) => {\n        // console.log(temp);\n        this.setState({ itemToEdit: temp });\n    }\n\n    editATForm = () => {\n        return (\n            // <div style={{ margin: '0', width: \"315px\", padding:'20px'}}>\n                <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\n                  <label>Title</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } \n                            \n                            //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                    onKeyDown={\n                        (e) => {\n                            if (e.keyCode === 32) {\n                                 \n                                let temp = this.state.itemToEdit; temp.title = e.target.value + \" \"; this.setState({ itemToEdit: temp })\n                                e.preventDefault(); e.stopPropagation()\n                            }\n                        }}\n                            />\n                        </div >\n\n                        <label>Photo URL</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } />\n                        </div >\n\n                        <label>Available Start Time</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } />\n                        </div >\n\n                        <label>Available End Time</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } />\n                        </div >\n\n                        <label>This Takes Me</label>\n                        <Row>\n                            <Col  style = {{paddingRight: \"0px\" }}>  \n                                <Form.Control\n                                    // value={this.state.newEventNotification}\n                                    // onChange={this.handleNotificationChange}\n                                    type=\"number\"\n                                    placeholder=\"30\"\n                                    value = {this.convertToMinutes()}\n                                    // value = {this.state.itemToEdit.expected_completion_time}\n                                    style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                                    onChange={\n                                        // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\n                                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\n                                    }\n                                />\n                            </Col>\n                            <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                                <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                            </Col>\n                        </Row>\n\n                        <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n                            <label className=\"form-check-label\">Time?</label>\n                            <input\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\n                                name=\"Timed\"\n                                type=\"checkbox\"\n                                checked={this.state.itemToEdit.is_timed}\n                                onChange={(e) => {\n                                    e.stopPropagation();\n                                    let temp = this.state.itemToEdit;\n                                    // console.log(temp.is_timed)\n                                    temp.is_timed = !temp.is_timed;\n                                    this.setState({ itemToEdit: temp })\n                                }} />\n                        </div >\n\n                        <div className=\"input-group mb-3\" >\n                            <label className=\"form-check-label\">Available to Caitlin?</label>\n                            <input\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\n                                name=\"Available\"\n                                type=\"checkbox\"\n                                checked={this.state.itemToEdit.is_available}\n                                onChange={(e) => {\n                                    e.stopPropagation();\n                                    let temp = this.state.itemToEdit;\n                                    // console.log(temp.is_available)\n                                    temp.is_available = !temp.is_available;\n                                    this.setState({ itemToEdit: temp })\n                                }} />\n                        </div >\n\n                        {this.state.itemToEdit.is_available && \n                            <ShowNotifications \n                                itemToEditPassedIn = {this.state.itemToEdit}\n                                notificationChange = {this.handleNotificationChange}\n                            />\n                        }\n                        \n\n                        \n\n                <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\n                <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\n             {/* </div> */}\n            </Row>\n        )\n    }\n\n    showIcon = () => {\n        return (\n            <div>\n          <FontAwesomeIcon\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: \"#000000\" }}\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\n                    icon={faEdit} size=\"lg\"\n                />\n                </div>\n        )\n    }\n\n    render() {\n        return (\n            // <div style={{ marginLeft: \"5px\" }} onClick={(e) => { e.stopPropagation();}}>\n            <div  style={{ marginLeft: \"5px\" }} onClick={(e) => { e.stopPropagation();}}>\n                {(this.state.showEditModal ? this.editATForm() : <div> </div>)}\n                {  (this.state.showEditModal) ? <div> </div> : this.showIcon()}\n\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlash, faList} from '@fortawesome/free-solid-svg-icons';\n\n\n\nexport default class ShowATList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            iconShow: true\n        };\n    }\n    componentDidUpdate() {}\n\n    componentDidMount() {\n        let items = [...this.props.Array];\n        // console.log(\"this is the item\");\n        // console.log(items[this.props.Index]);\n        this.setState({iconShow: items[this.props.Index]['is_sublist_available']});\n    }\n    // ListFalse = e => {\n    //   this.props.ListCameBackFalse();  \n    //   this.setState({iconShow: !this.state.iconShow}); \n    // };\n\n    editFirBaseFalse = e =>{\n      // console.log(\"this should be false\");\n      this.setState({iconShow: false}, () => {\n        let items = [...this.props.Array];\n        items[this.props.Index]['is_sublist_available'] = false;\n        this.props.Path.update({ 'goals&routines': items }).then(\n            (doc) => {\n            }\n        )\n      })\n      // this.setState({iconShow: false});\n      // // console.log(this.state.iconShow);\n      // let items = [...this.props.Array];\n      // // console.log(\"this is the item\");\n      // // console.log(items[this.props.Index]);\n      \n      //   items[this.props.Index]['is_sublist_available'] = false;\n      //   this.props.Path.update({ 'goals&routines': items }).then(\n      //       (doc) => {\n      //       }\n      //   )\n    }\n\n    editFirBaseTrue = e =>{\n      this.setState({iconShow: true}, () => {\n        let items = [...this.props.Array];\n        items[this.props.Index]['is_sublist_available'] = true;\n        this.props.Path.update({ 'goals&routines': items }).then(\n            (doc) => {\n            }\n        )\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.iconShow &&  \n                    <div  >\n                        <FontAwesomeIcon\n                            icon={faList}\n                            title = \"SubList Available\"\n                            style ={{ color:   \"#D6A34C\", marginLeft:\"20px\"}}\n                            // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShow: false}); this.editFirBaseFalse()}}\n                            onClick={(e)=>{ e.stopPropagation(); this.editFirBaseFalse()}}\n                            //onClick={this.ListFalse}\n                            size=\"lg\" \n                            />\n                    </div>\n                }\n                {!this.state.iconShow &&  \n                  <div  \n                  // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShowATModal: false})}}>\n                  >\n                    <span className =\"fa-layers fa-fw\" style = {{marginLeft:\"20px\"}} >\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                          icon={faList} \n                          title = \"SubList Unavailable\"\n                          onClick={(e)=>{ e.stopPropagation();  this.editFirBaseTrue()}}\n                          size=\"lg\" \n                        />\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                          icon={faSlash} \n                          title = \"SubList Unavilable\"\n                          onClick={(e)=>{ e.stopPropagation(); this.editFirBaseTrue()}}\n                          size=\"lg\" \n                      />\n                    </span>\n                  </div>\n                }\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlash, faList} from '@fortawesome/free-solid-svg-icons';\n\n\n\nexport default class ShowISList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            iconShow: true\n        };\n    }\n    componentDidUpdate() {}\n\n  componentDidMount() {\n      let items = [...this.props.Array];\n    //   console.log(\"this is the item\");\n    //   console.log(items[this.props.Index]);\n      this.setState({iconShow: items[this.props.Index]['is_sublist_available']});\n  }\n    // ListFalse = e => {\n    //   this.props.ListCameBackFalse();  \n    //   this.setState({iconShow: !this.state.iconShow}); \n    // };\n\n    editFirBaseFalse = e =>{\n      // console.log(\"this should be false\");\n      this.setState({iconShow: false})\n      // console.log(this.state.iconShow);\n      let items = [...this.props.Array];\n    //   console.log(\"this is the item\");\n    //   console.log(items[this.props.Index]);\n      \n        items[this.props.Index]['is_sublist_available'] = false;\n        this.props.Path.update({ 'actions&tasks': items }).then(\n            (doc) => {\n            }\n        )\n    }\n\n    editFirBaseTrue = e =>{\n      // console.log(\"this should be true\");\n      this.setState({iconShow: true})\n      // console.log(this.state.iconShow);\n      let items = [...this.props.Array];\n    //   console.log(\"this is the item\");\n    //   console.log(items[this.props.Index]);\n        items[this.props.Index]['is_sublist_available'] = true;\n        this.props.Path.update({ 'actions&tasks': items }).then(\n            (doc) => {\n            }\n        )\n    }\n    render() {\n        return (\n            <div>\n                {this.state.iconShow &&  \n                    <div  >\n                        <FontAwesomeIcon\n                            icon={faList}\n                            title = \"Show List Item\"\n                            // onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\n                            // onMouseOut ={event => {event.target.style.color = \"#D6A34C\";}}\n                            style ={{ color:   \"#D6A34C\", marginLeft:\"20px\"}}\n                            // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShow: false}); this.editFirBaseFalse()}}\n                            onClick={(e)=>{ e.stopPropagation(); this.editFirBaseFalse()}}\n                            //onClick={this.ListFalse}\n                            size=\"lg\" \n                            />\n                    </div>\n                }\n                {!this.state.iconShow &&  \n                  <div  \n                  // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShowATModal: false})}}>\n                  >\n                      {/* <img src={require('../slash-list.png')} \n                      style = {{fontSize:\"1.3333333333em\", lineHeight: \"0.75em\", verticalAlign: \"-0.0667em\", marginLeft:\"20px\"}}\n                       alt=\"Slash-List Icon\"></img> */}\n                    <span className =\"fa-layers fa-fw\" style = {{marginLeft:\"20px\"}} >\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                        //   color=\"#000000\"\n                          icon={faList} \n                          title = \"Don't Show List Item\"\n                          onClick={(e)=>{ e.stopPropagation();  this.editFirBaseTrue()}}\n                          size=\"lg\" \n                        />\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                        //   color=\"#000000\"\n                          icon={faSlash} \n                          title = \"Don't Show List Item\"\n                          onClick={(e)=>{ e.stopPropagation(); this.editFirBaseTrue()}}\n                          size=\"lg\" \n                      />\n                    </span>\n                  </div>\n                }\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport firebase from \"./firebase\";\nimport {\n  ListGroup,\n  Button,\n  Row,\n  Col,\n  Modal,\n  InputGroup,\n  FormControl\n} from \"react-bootstrap\";\nimport AddNewGRItem from \"./addNewGRItem.jsx\";\nimport AddNewATItem from \"./addNewATItem.jsx\";\nimport AddNewISItem from \"./addNewISItem.jsx\";\nimport DeleteISItem from \"./DeleteISItem.jsx\";\nimport DeleteAT from \"./deleteAT.jsx\";\nimport DeleteGR from \"./deleteGR.jsx\";\nimport EditGR from \"./editGR.jsx\";\nimport EditIS from \"./editIS.jsx\";\nimport EditAT from \"./EditAT.jsx\";\nimport ShowATList from \"./ShowATList\";\nimport ShowISList from \"./ShowISList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faUserAltSlash,\n  faTrophy,\n  faRunning\n} from \"@fortawesome/free-solid-svg-icons\";\nimport moment from \"moment\";\n\n\n/**\n * Notes from Tyler:\n * 2/17/2020\n * TODOs:\n *\n * 1.Times from GR are not passed down to AT and times from AT are not passed\n * to IS\n *\n * 2.Clicking on the Goal and Routine at the top level should closed previous\n * AT and IS Modals.\n *\n *\n *\n */\n\nexport default class FirebaseV2 extends React.Component {\n  state = {\n    firebaseRootPath: firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(\"7R6hAVmDrNutRkG3sVRy\"),\n    originalGoalsAndRoutineArr: [],\n    goals: [],\n    routines: [],\n    is_sublist_available: true,\n    //This single GR item is passed to AddNewATItem to help processed the new item\n    singleGR: {\n      //everytime a goal/routine is clicked, we open a modal and the modal info will be provided by this object\n      show: false, // Show the modal\n      type: \"None\",\n      title: \"GR Name\",\n      photo: \"\",\n      available_end_time: \"\", //TODO get these used\n      available_start_time: \"\", //TODO get these used\n      id: null,\n      arr: [],\n      fbPath: null\n    },\n\n    singleAT: {\n      //for each action/task we click on, we open a new modal to show the steps/instructions affiliate\n      //with the task\n      show: false, // Show the model\n      type: \"None\", // Action or Task\n      title: \"AT Name\", //Title of action task ,\n      available_end_time: \"\", //TODO get these used\n      available_start_time: \"\", //TODO get these used\n      photo: \"\",\n      id: null, //id of Action Task\n      arr: [], //array of instruction/steps formatted to display as a list\n      fbPath: null //Firebase direction to the arr\n    },\n    singleATitemArr: [], //temp fix for my bad memory of forgetting to add this in singleGR\n    singleISitemArr: [], //temp fix for my bad memory of forgetting to add this in singleAT\n    modalWidth: \"350px\", //primary width size for all modals\n\n    //Use to decided whether to show the respective modals\n    addNewGRModalShow: false,\n    addNewATModalShow: false,\n    addNewISModalShow: false,\n\n    //used to determine thumbnail picture size\n    thumbnailWidth: \"150px\",\n    thumbnailHeight: \"100px\",\n    thumbnailWidthV2: \"200px\",\n    thumbnailHeightV2: \"50px\",\n\n    //isRoutine is to check whether we clicked on add routine or add goal\n    isRoutine: true,\n    availabilityColorCode: \"#D6A34C\"\n\n    //used for the list item icon.If at GR and this icon is turned off. then wont be able to show Action and taske list.\n    // iconShowATModal: true\n  };\n\n  /**\n   * refreshATItem:\n   * Given a array, it will replace the current array of singleGR which holds the layout\n   * list of all action task under it and singleATitemArr which just holds the raw data.\n   *\n   */\n  refreshATItem = arr => {\n    // console.log(\"refreshATItem was called\");\n\n    this.setState({ singleATitemArr: arr });\n    let resArr = this.createListofAT(arr);\n    let singleGR = this.state.singleGR;\n    singleGR.arr = resArr;\n    this.setState({ singleGR: singleGR });\n  };\n\n  /**\n   *\n   * refreshISItem - given A array item,\n   * this method will take those items,\n   * put it in the list form to present\n   * as a list of instructions and the\n   * it will also update the array of\n   * the normal list of instructions with\n   * the one passed in.\n   */\n  refreshISItem = arr => {\n    // console.log(\"refreshISItem new arr\");\n    // console.log(arr);\n    this.setState({\n      singleISitemArr: arr\n    });\n    let resArr = this.createListofIS(arr);\n    let singleAt = this.state.singleAT;\n    singleAt.arr = resArr;\n    this.setState({ singleAT: singleAt });\n  };\n\n  constructor(props) {\n    // serves almost no purpose currently\n    super(props);\n    // console.log(\"running Firebase 2\");\n    // this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    //Grab the\n    this.grabFireBaseRoutinesGoalsData();\n  }\n\n  /**\n   * grabFireBaseRoutinesGoalsData:\n   * this function grabs the goals&routines array from the path located in this function\n   * which will then populate the goals, routines,originalGoalsAndRoutineArr array\n   * separately. The arrays will be used for display and data manipulation later.\n   *\n   */\n  grabFireBaseRoutinesGoalsData = () => {\n    const db = firebase.firestore();\n    // console.log(\"FirebaseV2 component did mount\");\n    const docRef = db.collection(\"users\").doc(\"7R6hAVmDrNutRkG3sVRy\");\n    docRef\n      .get()\n      .then(doc => {\n        if (doc.exists) {\n          // console.log(doc.data());\n          var x = doc.data();\n          // console.log(x[\"goals&routines\"]);\n          x = x[\"goals&routines\"];\n          let routine = [];\n          let goal = [];\n          for (let i = 0; i < x.length; ++i) {\n            if (!x[i][\"deleted\"] && x[i][\"is_persistent\"]) {\n              // console.log(\"routine \" + x[i][\"title\"]);\n              routine.push(x[i]);\n            } else if (!x[i][\"deleted\"] && !x[i][\"is_persistent\"]) {\n              // console.log(\"not routine \" + x[i][\"title\"]);\n              goal.push(x[i]);\n            }\n          }\n          this.setState({\n            originalGoalsAndRoutineArr: x,\n            goals: goal,\n            addNewGRModalShow: false,\n            routines: routine\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      })\n      .catch(function(error) {\n        console.log(\"Error getting document:\", error);\n      });\n  };\n\n  componentWillUnmount() {\n    console.log(\" FirebaseV2 will unmount web\");\n  }\n\n  formatDateTime(str) {\n    const formattedStr = str.replace(/\\//g, \"-\");\n    const time = moment(formattedStr);\n    return time.format(\"YYYY MMM DD HH:mm\");\n  }\n\n  onInputChange = e => {\n    const inputField = e.target.value;\n    // console.log(\"FirebaseV2.jsx :: onInputChange :: \" + inputField);\n  };\n  //This function essentially grabs all action/tasks\n  //for the routine or goal passed in and pops open the\n  //modal for the action/task\n  getATList = (id, title, persist) => {\n    const db = firebase.firestore();\n    // console.log(\"getATList function with id : \" + id);\n    let docRef = db\n      .collection(\"users\")\n      .doc(\"7R6hAVmDrNutRkG3sVRy\")\n      .collection(\"goals&routines\")\n      .doc(id);\n    docRef\n      .get()\n      .then(doc => {\n        if (doc.exists) {\n          // console.log(doc.data());\n          var x = doc.data()[\"actions&tasks\"];\n          // console.log(x);\n          if (x == null) {\n            // console.log(\"No actions&tasks array!\");\n            let singleGR = {\n              //Variable to hold information about the parent Goal/ Routine\n              show: true,\n              type: persist ? \"Routine\" : \"Goal\",\n              title: title,\n              id: id,\n              arr: [],\n              fbPath: docRef\n            };\n            this.setState({\n              singleGR: singleGR,\n              singleATitemArr: []\n            });\n            return;\n          }\n\n          let singleGR = {\n            //initialise without list to pass fbPath to child\n            show: true,\n            type: persist ? \"Routine\" : \"Goal\",\n            title: title,\n            id: id,\n            arr: [], //array of current action/task in this singular Routine\n            fbPath: docRef\n          };\n\n          this.setState({\n            singleGR: singleGR,\n            singleATitemArr: x\n          });\n\n          let resArr = this.createListofAT(x);\n          //assemble singleGR template here:\n\n          singleGR = {\n            show: true,\n            type: persist ? \"Routine\" : \"Goal\",\n            title: title,\n            id: id,\n            arr: resArr, //array of current action/task in this singular Routine\n            fbPath: docRef\n          };\n\n          this.setState({\n            singleGR: singleGR\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      })\n      .catch(function(error) {\n        console.log(\"Error getting document:\", error);\n      });\n  };\n\n  //Creates a array of all actions/task for get getATList function\n  //getATList stands for get all action/task\n  createListofAT = A => {\n    let res = [];\n    for (let i = 0; i < A.length; i++) {\n      // console.log(A[i][\"title\"]);\n      if (!A[i][\"id\"] || !A[i][\"title\"]) {\n        // console.log(\"missing title, or id at index : \" + i);\n        return [];\n      }\n      if (A[i][\"deleted\"]) {\n        //item is \"deleted\" and should not be shown...\n        continue;\n      }\n      let tempID = A[i][\"id\"];\n      let tempPhoto = A[i][\"photo\"];\n      // console.log(tempPhoto);\n      let tempTitle = A[i][\"title\"];\n      let tempAvailable = A[i][\"is_available\"];\n      res.push(\n        <div key={\"AT\" + i}>\n          <ListGroup.Item\n            action\n            onClick={() => {\n              this.ATonClickEvent(tempTitle, tempID);\n            }}\n            variant=\"light\"\n            style={{ marginBottom: \"3px\" }}\n          >\n          <Row style={{ margin: \"0\", marginBottom:\"10px\"}} className=\"d-flex flex-row-center\">\n            <Col>\n              <div className=\"fancytext\">{tempTitle}</div>\n            </Col>\n          </Row>\n\n              \n          {tempPhoto ? (\n          <Row >\n            <Col xs={7}\n                // sm=\"auto\"\n                // md=\"auto\"\n                // lg=\"auto\"\n                style={{  paddingRight:\"0px\"}}\n              >\n                  <img\n                    src={tempPhoto}\n                    alt=\"Action/Task\"\n                    // height={this.state.thumbnailHeight}\n                    // width={this.state.thumbnailWidth}\n                    className=\"center\"\n                    height=\"80px\"\n                    width=\"auto\"\n                  />\n              </Col>\n              <Col style = {{paddingLeft: \"0px\"}}>\n                <Row style = {{marginTop:\"10px\"}}>\n                    {tempAvailable ? (\n                    <div style={{ marginLeft: \"5px\" }}>\n                      <FontAwesomeIcon\n                        title=\"Available to Cailin\"\n                        style={{ color: this.state.availabilityColorCode }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is Availble to Caitlin\");\n                        }}\n                        icon={faUser}\n                        size=\"lg\"\n                      />{\" \"}\n                    </div>\n                  ) : (\n                    <div >\n                      <FontAwesomeIcon\n                        title=\"Unavailable to Caitlin\"\n                        style={{ color: \"#000000\" }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is NOT Availble to Caitlin\");\n                        }}\n                        icon={faUserAltSlash}\n                        size=\"lg\"\n                      />\n                    </div>\n                  )}\n                  {/* Index={this.findIndexByID(tempID)} \n                    Array={this.state.originalGoalsAndRoutineArr}\n                    Path={this.state.firebaseRootPath} */}\n                  <ShowISList\n                    Index={i} \n                    Array={this.state.singleATitemArr} \n                    Path={this.state.singleGR.fbPath}\n                   />\n                </Row>\n                <Row style ={{marginTop:\"15px\", marginBottom: \"10px\"}}>\n                  <DeleteAT\n                  deleteIndex={i}\n                  type={\"actions&tasks\"}\n                  Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                  Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.refreshATItem}\n                  />\n                  <EditAT\n                    marginLeftV= \"-170px\"\n                    i={i} //index to edit\n                    ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                    FBPath={this.state.singleGR.fbPath} //holds the path to the array data\n                    refresh={this.refreshATItem} //function to refresh AT data\n                  />\n                </Row>\n              </Col>\n            </Row>\n            ) : (\n              <div>\n              <Row style ={{marginLeft:\"100px\"}} className=\"d-flex \" >\n                  {tempAvailable ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div >\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n                <ShowISList \n                  Index={i} \n                  Array={this.state.singleATitemArr} \n                  Path={this.state.singleGR.fbPath}\n                />\n              </Row>\n              <Row style={{ marginTop:\"15px\", marginLeft:\"100px\"}} class=\"d-flex \" >\n                <DeleteAT\n                  deleteIndex={i}\n                  type={\"actions&tasks\"}\n                  Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                  Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.refreshATItem}\n                  />\n                <EditAT\n                  marginLeftV= \"-130px\"\n                  i={i} //index to edit\n                  ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.singleGR.fbPath} //holds the path to the array data\n                  refresh={this.refreshATItem} //function to refresh AT data\n                />\n              </Row>\n              </div>\n            \n            )}\n\n\n\n            {/* This is the V1 */}\n            {/* <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-reverse\">\n              {tempAvailable ? (\n                <div style={{ marginLeft: \"5px\" }}>\n                  <FontAwesomeIcon\n                    title=\"Available to Cailin\"\n                    // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: this.state.availabilityColorCode }}\n                    onClick={e => {\n                      e.stopPropagation();\n                      alert(\"Item Is Availble to Caitlin\");\n                    }}\n                    icon={faUser}\n                    size=\"lg\"\n                  />{\" \"}\n                </div>\n              ) : (\n                <div style={{ marginLeft: \"5px\" }}>\n                  <FontAwesomeIcon\n                    title=\"Unavailable to Caitlin\"\n                    style={{ color: \"#000000\" }}\n                    onClick={e => {\n                      e.stopPropagation();\n                      alert(\"Item Is NOT Availble to Caitlin\");\n                    }}\n                    icon={faUserAltSlash}\n                    size=\"lg\"\n                  />\n                </div>\n              )}\n            </Row>\n\n            <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n              <Col>\n                <div className=\"fancytext\">{tempTitle}</div>\n              </Col>\n\n              <Col\n                sm=\"auto\"\n                md=\"auto\"\n                lg=\"auto\"\n                style={{ width: \"100%\", height: \"100%\" }}\n              >\n                {tempPhoto ? (\n                  <img\n                    src={tempPhoto}\n                    alt=\"Routine\"\n                    height={this.state.thumbnailHeight}\n                    width={this.state.thumbnailWidth}\n                    className=\"center\"\n                  />\n                ) : (\n                  <div></div>\n                )}\n              </Col>\n            </Row>\n\n            <Row\n              style={{\n                margin: \"0\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              }}\n            >\n              <DeleteAT\n                deleteIndex={i}\n                type={\"actions&tasks\"}\n                Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\n                refresh={this.refreshATItem}\n              />\n\n              <EditAT\n                i={i} //index to edit\n                ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                FBPath={this.state.singleGR.fbPath} //holds the path to the array data\n                refresh={this.refreshATItem} //function to refresh AT data\n              />\n            </Row> */}\n          </ListGroup.Item>\n        </div>\n      );\n    }\n    return res;\n  };\n\n  /**\n   * takes the list of steps/instructions and returns\n   * it in the form of a ListGroup for presentation\n   */\n  createListofIS = A => {\n    let res = [];\n    for (let i = 0; i < A.length; i++) {\n      // console.log(A[i][\"title\"]);\n      // console.log(A[i][\"id\"]);\n      /**\n       * TODO: notify jeremy of this issue:\n       * Some of these here don't have IDs, so we need to\n       * ignore it for now\n       */\n      let tempPhoto = A[i][\"photo\"];\n      // console.log(\"IS index \" + i + \" photo url :\" + tempPhoto);\n      let tempTitle = A[i][\"title\"];\n      let tempAvailable = A[i][\"is_available\"];\n      res.push(\n        <div key={\"IS\" + i} style={{ width: \"100%\" }}>\n          <ListGroup.Item\n            action\n            onClick={() => {\n              this.ISonClickEvent(tempTitle);\n            }}\n            variant=\"light\"\n            style={{ width: \"100%\", marginBottom: \"3px\" }}\n          >\n           \n          <Row style={{ margin: \"0\", marginBottom:\"10px\"}} className=\"d-flex flex-row-center\">\n            <Col>\n              <div className=\"fancytext\">{tempTitle}</div>\n            </Col>\n          </Row>\n           {tempPhoto ? (\n          <Row >\n            <Col xs={7}\n                style={{  paddingRight:\"0px\"}}\n              >\n                  <img\n                    src={tempPhoto}\n                    alt=\"Action/Task\"\n                    className=\"center\"\n                    height=\"80px\"\n                    width=\"auto\"\n                  />\n              </Col>\n              <Col style = {{paddingLeft: \"0px\"}}>\n                <Row style = {{marginTop:\"10px\"}}>\n                    {tempAvailable ? (\n                    <div style={{ marginLeft: \"5px\" }}>\n                      <FontAwesomeIcon\n                        title=\"Available to Cailin\"\n                        style={{ color: this.state.availabilityColorCode }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is Availble to Caitlin\");\n                        }}\n                        icon={faUser}\n                        size=\"lg\"\n                      />{\" \"}\n                    </div>\n                  ) : (\n                    <div >\n                      <FontAwesomeIcon\n                        title=\"Unavailable to Caitlin\"\n                        style={{ color: \"#000000\" }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is NOT Availble to Caitlin\");\n                        }}\n                        icon={faUserAltSlash}\n                        size=\"lg\"\n                      />\n                    </div>\n                  )}\n                  {/* <ShowATList /> */}\n                </Row>\n                <Row style ={{marginTop:\"15px\", marginBottom: \"10px\"}}>\n                  <DeleteISItem\n                    deleteIndex={i}\n                    ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                    ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.refreshISItem}\n                  />\n\n                  <EditIS\n                    marginLeftV= \"-170px\"\n                    i={i} //index to edit\n                    ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                    FBPath={this.state.singleAT.fbPath} //holds the fbPath to arr to be updated\n                    refresh={this.refreshISItem} //function to refresh IS data\n                  />\n                </Row>\n              </Col>\n            </Row>\n            ) : (\n              <div>\n              <Row style ={{marginLeft:\"100px\"}} class=\"d-flex \" >\n                  {tempAvailable ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div >\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n                {/* <ShowATList /> */}\n              </Row>\n              <Row style={{ marginTop:\"15px\", marginLeft:\"100px\"}} class=\"d-flex \" >\n                <DeleteISItem\n                  deleteIndex={i}\n                  ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                  ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.refreshISItem}\n                />\n\n                <EditIS\n                  marginLeftV= \"-130px\"\n                  i={i} //index to edit\n                  ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.singleAT.fbPath} //holds the fbPath to arr to be updated\n                  refresh={this.refreshISItem} //function to refresh IS data\n                />\n              </Row>\n              </div>\n            \n            )}\n          </ListGroup.Item>\n        </div>\n      );\n    }\n    return res;\n  };\n\n  ISonClickEvent = title => {\n    console.log(\"Inside IS Click \" + title);\n  };\n\n  /**\n   * In this function we are passed in the id title and persist property of the incoming routine/goal\n   * and we need to make return a viewable list of all the actions/tasks for this routine/goal\n   * which is done in getATList function\n   */\n  GRonClickEvent = (title, id, persist) => {\n    // console.log(id, title, persist);\n    this.getATList(id, title, persist);\n  };\n\n  /**\n   * we are passed in the action/task id and title\n   * and we will need to grab all steps/Instructions related to this action/task,\n   *\n   */\n  ATonClickEvent = (title, id) => {\n    let stepsInstructionArrayPath = this.state.firebaseRootPath\n      .collection(\"goals&routines\")\n      .doc(this.state.singleGR.id)\n      .collection(\"actions&tasks\")\n      .doc(id);\n    console.log(id, title);\n    let temp = {\n      show: true,\n      type: \"Action/Task\",\n      title: title,\n      id: id,\n      arr: [],\n      fbPath: stepsInstructionArrayPath\n    };\n    stepsInstructionArrayPath\n      .get()\n      .then(doc => {\n        if (doc.exists) {\n          // console.log(\"Grabbing steps/instructions data:\");\n          // console.log(doc.data());\n          var x = doc.data();\n          x = x[\"instructions&steps\"];\n          if (x == null) {\n            this.setState({ singleAT: temp });\n            return;\n          }\n          // console.log(x);\n          //Below is a fix for fbPath Null when we pass it\n          //createListofIS and DeleteISItem.jsx, we need a path\n          //to delete the item, so we set the path then create the\n          //the array and reset it.\n          this.setState({ singleAT: temp, singleISitemArr: x });\n          temp.arr = this.createListofIS(x);\n          this.setState({ singleAT: temp, singleISitemArr: x });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No Instruction/Step documents!\");\n        }\n      })\n      .catch(function(error) {\n        console.log(\"Error getting document:\", error);\n        alert(\"Error getting document:\", error);\n      });\n  };\n\n  /**\n   * findIndexByID:\n   * given a id, it will loop through the original goals and routine array to\n   * return the index with the corresonding id\n   */\n  findIndexByID = id => {\n    let originalGoalsAndRoutineArr = this.state.originalGoalsAndRoutineArr;\n    for (let i = 0; i < originalGoalsAndRoutineArr.length; i++) {\n      if (id === originalGoalsAndRoutineArr[i].id) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  // ListFalse = ()=>{\n  //   this.setState({\n  //     is_sublist_available:false\n  //   });\n  // };\n\n  getRoutines = () => {\n    let displayRoutines = [];\n    if (this.state.routines.length !== 0) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.state.routines.length; i++) {\n        let tempTitle = this.state.routines[i][\"title\"];\n        let tempID = this.state.routines[i][\"id\"];\n        let tempPersist = this.state.routines[i][\"is_persistent\"];\n\n        displayRoutines.push(\n          <div key={\"test0\" + i}>\n            <ListGroup.Item\n              action\n              onClick={() => {\n                this.GRonClickEvent(tempTitle, tempID, tempPersist);\n              }}\n              variant=\"light\"\n              style={{ marginBottom: \"3px\" }}\n            >\n            \n          <Row style={{ margin: \"0\", marginBottom:\"10px\"}} className=\"d-flex flex-row-center\">\n            <Col>\n                  <div className=\"fancytext\">\n                    {this.state.routines[i][\"title\"]}\n                  </div>\n                </Col>\n          </Row>\n           {this.state.routines[i][\"photo\"] ? (\n          <Row >\n            <Col xs={7}\n                style={{  paddingRight:\"0px\"}}\n              >\n                  <img\n                    src={this.state.routines[i][\"photo\"]}\n                    alt=\"Routines\"\n                    className=\"center\"\n                    height=\"80px\"\n                    width=\"auto\"\n                  />\n              </Col>\n              <Col style = {{paddingLeft: \"0px\"}}>\n                <Row style = {{marginTop:\"10px\"}}>\n                    {this.state.routines[i][\"is_available\"]  ? (\n                    <div style={{ marginLeft: \"5px\" }}>\n                      <FontAwesomeIcon\n                        title=\"Available to Cailin\"\n                        style={{ color: this.state.availabilityColorCode }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is Availble to Caitlin\");\n                        }}\n                        icon={faUser}\n                        size=\"lg\"\n                      />{\" \"}\n                    </div>\n                  ) : (\n                    <div >\n                      <FontAwesomeIcon\n                        title=\"Unavailable to Caitlin\"\n                        style={{ color: \"#000000\" }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is NOT Availble to Caitlin\");\n                        }}\n                        icon={faUserAltSlash}\n                        size=\"lg\"\n                      />\n                    </div>\n                  )}\n                  <ShowATList  \n                    Index={this.findIndexByID(tempID)}\n                    Array={this.state.originalGoalsAndRoutineArr}\n                    Path={this.state.firebaseRootPath}\n                    // ListCameBackFalse= {this.ListFalse}\n                  />\n                </Row>\n                <Row style ={{marginTop:\"15px\", marginBottom: \"10px\"}}>\n                  <DeleteGR\n                    deleteIndex={this.findIndexByID(tempID)}\n                    Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                    Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.grabFireBaseRoutinesGoalsData}\n                  />\n                 \n                  <EditGR\n                    marginLeftV= \"-170px\"\n                    i={this.findIndexByID(tempID)} //index to edit\n                    ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                    FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                    is_sublist_available= {this.is_sublist_available}\n                  />\n                </Row>\n              </Col>\n            </Row>\n            ) : (\n              <div>\n              <Row style ={{marginLeft:\"100px\"}} className=\"d-flex \" >\n                  {this.state.routines[i][\"is_available\"] ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n                <ShowATList \n                  Index={this.findIndexByID(tempID)}\n                  Array={this.state.originalGoalsAndRoutineArr}\n                  Path={this.state.firebaseRootPath}\n                  />\n              </Row>\n              <Row style={{ marginTop:\"15px\", marginLeft:\"100px\"}} className=\"d-flex \" >\n                <DeleteGR\n                  deleteIndex={this.findIndexByID(tempID)}\n                  Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData}\n                />\n                <EditGR\n                  marginLeftV= \"-130px\"\n                  i={this.findIndexByID(tempID)} //index to edit\n                  ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                />\n              </Row>\n             </div>\n            )}\n              <Row>\n                <div style={{ fontSize: \"12px\" }}>\n                  {this.state.routines[i][\"datetime_started\"] ? (\n                    <div style={{ marginTop: \"3px\" }}>\n                      {\"Previous Start Time: \" +\n                        this.formatDateTime(\n                          this.state.routines[i][\"datetime_started\"]\n                        )}{\" \"}\n                    </div>\n                  ) : (\n                    <div> </div>\n                  )}\n                  {this.state.routines[i][\"datetime_completed\"] ? (\n                    <div>\n                      {\"Previous Completed Time: \" +\n                        this.formatDateTime(\n                          this.state.routines[i][\"datetime_completed\"]\n                        )}{\" \"}\n                    </div>\n                  ) : (\n                    <div> </div>\n                  )}\n                </div>\n              </Row>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    return displayRoutines;\n  };\n\n  getGoals = () => {\n    let displayGoals = [];\n    if (this.state.goals.length != null) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.state.goals.length; i++) {\n        let tempTitle = this.state.goals[i][\"title\"];\n        let tempID = this.state.goals[i][\"id\"];\n        let tempPersist = this.state.goals[i][\"is_persistent\"];\n        displayGoals.push(\n          <div key={\"test1\" + i}>\n            <ListGroup.Item\n              action\n              onClick={() => {\n                this.GRonClickEvent(tempTitle, tempID, tempPersist);\n              }}\n              variant=\"light\"\n              style={{ marginBottom: \"3px\" }}\n            >\n            \n\n            <Row style={{ margin: \"0\", marginBottom:\"10px\"}} className=\"d-flex flex-row-center\">\n            <Col>\n              <div className=\"fancytext\">{tempTitle}</div>\n            </Col>\n          </Row>\n           {this.state.goals[i][\"photo\"] ? (\n          <Row >\n            <Col xs={7}\n                style={{  paddingRight:\"0px\"}}\n              >\n                  <img\n                    src={this.state.goals[i][\"photo\"]}\n                    alt=\"Instructions/Steps\"\n                    className=\"center\"\n                    height=\"80px\"\n                    width=\"auto\"\n                  />\n              </Col>\n              <Col style = {{paddingLeft: \"0px\"}}>\n                <Row style = {{marginTop:\"10px\"}}>\n                    {this.state.goals[i][\"is_available\"] ? (\n                    <div style={{ marginLeft: \"5px\" }}>\n                      <FontAwesomeIcon\n                        title=\"Available to Cailin\"\n                        style={{ color: this.state.availabilityColorCode }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is Availble to Caitlin\");\n                        }}\n                        icon={faUser}\n                        size=\"lg\"\n                      />{\" \"}\n                    </div>\n                  ) : (\n                    <div >\n                      <FontAwesomeIcon\n                        title=\"Unavailable to Caitlin\"\n                        style={{ color: \"#000000\" }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is NOT Availble to Caitlin\");\n                        }}\n                        icon={faUserAltSlash}\n                        size=\"lg\"\n                      />\n                    </div>\n                  )}\n                  <ShowATList\n                    Index={this.findIndexByID(tempID)} \n                    Array={this.state.originalGoalsAndRoutineArr}\n                    Path={this.state.firebaseRootPath}\n                    />\n                </Row>\n                <Row style ={{marginTop:\"15px\", marginBottom: \"10px\"}}>\n                  <DeleteGR\n                    deleteIndex={this.findIndexByID(tempID)}\n                    Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                    Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.grabFireBaseRoutinesGoalsData}\n                  />\n                  <EditGR\n                    marginLeftV= \"-170px\"\n                    i={this.findIndexByID(tempID)} //index to edit\n                    ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                    FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                  />\n                </Row>\n              </Col>\n            </Row>\n            ) : (\n              <div>\n              <Row style ={{marginLeft:\"100px\"}} className=\"d-flex \" >\n                  {this.state.goals[i][\"is_available\"] ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n                <ShowATList \n                  Index={this.findIndexByID(tempID)} \n                  Array={this.state.originalGoalsAndRoutineArr}\n                  Path={this.state.firebaseRootPath}\n                />\n              </Row>\n              <Row style={{ marginTop:\"15px\", marginLeft:\"100px\"}} class=\"d-flex \" >\n                <DeleteGR\n                  deleteIndex={this.findIndexByID(tempID)}\n                  Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData}\n                />\n                <EditGR\n                  marginLeftV= \"-130px\"\n                  i={this.findIndexByID(tempID)} //index to edit\n                  ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                />\n              </Row>\n              </div>\n            \n            )}\n\n\n\n\n\n\n              {/* <Row style={{ margin: \"0\" }} className=\"d-flex justify-content-between\">\n              <ShowATList />\n                {this.state.goals[i][\"is_available\"] ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n                 \n              </Row>\n             \n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\n                  <div className=\"fancytext\">\n                    {\" \"}\n                    {this.state.goals[i][\"title\"]}\n                  </div>\n                  {/* <div className=\"fancytext\"> Time: {Math.floor(1 + Math.random() * (45 - 1))} Minutes </div> */}\n                {/* </Col>\n                <Col\n                  sm=\"auto\"\n                  md=\"auto\"\n                  lg=\"auto\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  {this.state.goals[i][\"photo\"] ? (\n                    <img\n                      src={this.state.goals[i][\"photo\"]}\n                      alt=\"Goals\"\n                      className=\"center\"\n                      height={this.state.thumbnailHeight}\n                      width={this.state.thumbnailWidth}\n                    />\n                  ) : (\n                    <div></div>\n                  )}\n                </Col>\n              </Row>\n              <Row\n                className=\"d-flex flex-row-center\"\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginTop: \"10px\",\n                  marginBottom: \"10px\"\n                }}\n              >\n                <DeleteGR\n                  deleteIndex={this.findIndexByID(tempID)}\n                  Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData}\n                />\n                <EditGR\n                  i={this.findIndexByID(tempID)} //index to edit\n                  ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                />\n              </Row>  */}\n\n              <div style={{ fontSize: \"12px\" }}>\n                {this.state.goals[i][\"datetime_started\"] ? (\n                  <div style={{ marginTop: \"3px\" }}>\n                    {\"Previous Start Time: \" +\n                      this.formatDateTime(\n                        this.state.goals[i][\"datetime_started\"]\n                      )}{\" \"}\n                  </div>\n                ) : (\n                  <div> </div>\n                )}\n\n                {this.state.goals[i][\"datetime_completed\"] ? (\n                  <div>\n                    {\"Previous Completed Time: \" +\n                      this.formatDateTime(\n                        this.state.goals[i][\"datetime_completed\"]\n                      )}{\" \"}\n                  </div>\n                ) : (\n                  <div> </div>\n                )}\n              </div>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\n    return displayGoals;\n  };\n\n  getGoalsStatus = () => {\n    let displayGoals = [];\n    if (this.state.goals.length != null) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.state.goals.length; i++) {\n        let tempTitle = this.state.goals[i][\"title\"];\n        // let tempID = this.state.goals[i][\"id\"];\n        let isComplete = this.state.goals[i][\"is_complete\"];\n        if (!this.state.goals[i][\"is_available\"]) {\n          continue; //skip if not available\n        }\n        displayGoals.push(\n          <div key={\"goalStatus\" + i}>\n            <ListGroup.Item\n              action\n              variant=\"light\"\n              style={{ width: \"100%\", marginBottom: \"3px\" }}\n            >\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\n                  <div className=\"fancytext\"> {tempTitle}</div>\n                </Col>\n              </Row>\n              <Row\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                }}\n              >\n                {isComplete ? (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Completed\");\n                      }}\n                      icon={faTrophy}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Not Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: \"black\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Not Completed\");\n                      }}\n                      icon={faRunning}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n              </Row>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\n    return displayGoals;\n  };\n\n  getRoutinesStatus = () => {\n    let displayRoutines = [];\n    if (this.state.routines.length != null) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.state.routines.length; i++) {\n        let tempTitle = this.state.routines[i][\"title\"];\n        // let tempID = this.state.routines[i]['id'];\n        let isComplete = this.state.routines[i][\"is_complete\"];\n        if (!this.state.routines[i][\"is_available\"]) {\n          continue; //skip if not available\n        }\n        displayRoutines.push(\n          <div key={\"goalStatus\" + i}>\n            <ListGroup.Item\n              action\n              variant=\"light\"\n              style={{ marginBottom: \"3px\" }}\n            >\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\n                  <div className=\"fancytext\"> {tempTitle}</div>\n                </Col>\n              </Row>\n              <Row\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                }}\n              >\n                {isComplete ? (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Completed\");\n                      }}\n                      icon={faTrophy}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Not Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: \"black\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Not Completed\");\n                      }}\n                      icon={faRunning}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n              </Row>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\n    return displayRoutines;\n  };\n\n  render() {\n    // console.log(\"ran render firebasev2\");\n    var displayRoutines = this.getRoutines();\n    var displayGoals = this.getGoals();\n    var displayCompletedGoals = this.getGoalsStatus();\n    var displayCompletedRoutines = this.getRoutinesStatus();\n    return (\n      <div style={{ marginTop: \"0\" }}>\n        {/* <div style={{ marginTop: \"40px\" }}> */}\n        {this.props.showRoutineGoalModal ? (\n          <Col\n            style={{\n              width: this.state.modalWidth,\n              marginTop: \"0\",\n              marginRight: \"15px\"\n            }}\n            sm=\"auto\"\n            md=\"auto\"\n            lg=\"auto\"\n          >\n            <div\n              style={{\n                borderRadius: \"15px\",\n                boxShadow:\n                  \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n              }}\n            >\n              {this.abstractedRoutineGoalStatusList(\n                displayCompletedRoutines,\n                displayCompletedGoals\n              )}\n            </div>\n          </Col>\n        ) : (\n          <div> </div>\n        )}\n\n        {this.props.showRoutine ? (\n          <Col\n            style={{\n              width: this.state.modalWidth,\n              marginTop: \"0\",\n              marginRight: \"15px\"\n            }}\n            sm=\"auto\"\n            md=\"auto\"\n            lg=\"auto\"\n          >\n            <div style={{ borderRadius: \"15px\" }}>\n              {this.abstractedRoutineList(displayRoutines)}\n            </div>\n          </Col>\n        ) : (\n          <div> </div>\n        )}\n\n        {this.props.showGoal ? (\n          <Col\n            style={{\n              width: this.state.modalWidth,\n              marginTop: \"0\",\n              marginRight: \"15px\"\n            }}\n            sm=\"auto\"\n            md=\"auto\"\n            lg=\"auto\"\n          >\n            <div style={{ borderRadius: \"15px\" }}>\n              {this.abstractedGoalsList(displayGoals)}\n            </div>\n          </Col>\n        ) : (\n          <div> </div>\n        )}\n      </div>\n    );\n  }\n\n  /*\nabstractedGoalsList:\nshows entire list of goals and routines\n*/\n  abstractedGoalsList = displayGoals => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          marginTop: \"0\",\n          width: this.state.modalWidth,\n          marginLeft: \"0\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n        }}\n      >\n        <Modal.Header onHide={this.props.closeGoal} closeButton>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Goals</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/**\n           * To allow for the Modals to pop up in front of one another\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.addNewGRModalShow ? this.AddNewGRModalAbstracted() : \"\"}\n          </div>\n\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.singleGR.show ? (\n              this.abstractedActionsAndTaskList()\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"650px\", overflow: \"scroll\" }}>\n              {displayGoals}\n            </div>\n            {/* Button to add new Goal */}\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewGRModalShow: true, isRoutine: false });\n            }}\n          >\n            Add Goal\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n  /*\n    abstractedRoutineList:\n    shows entire list of routines\n    */\n  abstractedRoutineList = displayRoutines => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          marginTop: \"0\",\n          width: this.state.modalWidth,\n          marginLeft: \"0px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n        }}\n      >\n        <Modal.Header onHide={this.props.closeRoutine} closeButton>\n          <Modal.Title>\n            {\" \"}\n            <h5 className=\"normalfancytext\">Routines</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/**\n           * To allow for the Modals to pop up in front of one another\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\n\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.addNewGRModalShow ? this.AddNewGRModalAbstracted() : \"\"}\n          </div>\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.singleGR.show ? (\n              this.abstractedActionsAndTaskList()\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"650px\", overflow: \"scroll\" }}>\n              {displayRoutines}\n            </div>\n          </ListGroup>\n          {/* Button To add new Routine */}\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewGRModalShow: true, isRoutine: true });\n            }}\n          >\n            Add Routine\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  /**\n   * AddNewGRModalAbstracted:\n   * returns a modal showing us a slot to add a new Goal/Routine\n   */\n  AddNewGRModalAbstracted = () => {\n    return (\n      <AddNewGRItem\n        closeModal={() => {\n          this.setState({ addNewGRModalShow: false });\n        }}\n        ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n        refresh={this.grabFireBaseRoutinesGoalsData}\n        isRoutine={this.state.isRoutine}\n        width={this.state.modalWidth}\n      />\n    );\n  };\n\n  /*\n    abstractedInstructionsAndStepsList:\n    currently only shows the single Action/Task Title with no steps\n    */\n\n  /**\n   * abstractedInstructionsAndStepsList:\n   * Shows a single Task / Action as Title with\n   * the list of instructions/steps underneath of it\n   *\n   */\n  abstractedInstructionsAndStepsList = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          marginTop: \"0\",\n          marginLeft: \"0\",\n          width: this.state.modalWidth\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({ singleAT: { show: false } });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">{this.state.singleAT.title}</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.addNewISModalShow ? (\n              <AddNewISItem\n                ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                refresh={this.refreshISItem}\n                hideNewISModal={\n                  //function to hide the modal\n                  () => {\n                    this.setState({ addNewISModalShow: false });\n                  }\n                }\n                width={this.state.modalWidth}\n              />\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"500px\", overflow: \"scroll\" }}>\n              {this.state.singleAT.arr}\n            </div>\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewISModalShow: true });\n            }}\n          >\n            Add Step\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  /**\n   * abstractedActionsAndTaskList -\n   * returns modal with with a single Routine/ Goal as title\n   * and beneath it is the list of action/ task associated with the\n   * goal/ routine\n   */\n  abstractedActionsAndTaskList = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          marginTop: \"0\",\n          marginLeft: \"0\",\n          width: this.state.modalWidth\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({ singleGR: { show: false } });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">{this.state.singleGR.title}</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.addNewATModalShow ? (\n              <AddNewATItem\n                refresh={this.refreshATItem} //refreshes the list of AT\n                ATArray={this.state.singleATitemArr}\n                ATItem={this.state.singleGR} //The parent item\n                hideNewATModal={() => {\n                  this.setState({ addNewATModalShow: false });\n                }}\n                width={this.state.modalWidth}\n              />\n            ) : (\n              <div></div>\n            )}\n          </div>\n          {/**\n           * Here Below, the IS list will pop up inside the AT list\n           */}\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.singleAT.show ? (\n              this.abstractedInstructionsAndStepsList()\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"500px\", overflow: \"scroll\" }}>\n              {this.state.singleGR.arr}\n            </div>\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewATModalShow: true });\n            }}\n          >\n            Add Action/Task\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  addNewTaskInputBox = () => {\n    return (\n      <InputGroup size=\"lg\" style={{ marginTop: \"20px\" }} className=\"mb-3\">\n        <FormControl\n          onChange={() => {\n            console.log(\"addNewGoalInputBox\");\n          }}\n          placeholder=\"\"\n        />\n        <InputGroup.Append>\n          <Button variant=\"outline-secondary\">Add</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    );\n  };\n\n  /*\n    abstractedRoutineGoalStatusList:\n    shows entire list of goals and routines\n    */\n  abstractedRoutineGoalStatusList = (displayRoutines, displayGoals) => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          marginTop: \"0\",\n          width: this.state.modalWidth,\n          marginLeft: \"0\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n        }}\n      >\n        <Modal.Header onHide={this.props.closeRoutineGoalModal} closeButton>\n          <Modal.Title>\n            {\" \"}\n            <h5 className=\"normalfancytext\">Current Status</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h2 className=\"normalfancytext\">Routines:</h2>\n\n          {/**\n           * To allow for the Modals to pop up in front of one another\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\n\n          {/* <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\n                        {(this.state.singleGR.show) ? this.abstractedActionsAndTaskList() : (<div></div>)}\n                    </div> */}\n\n          <ListGroup style={{ height: \"350px\", overflow: \"scroll\" }}>\n            {displayRoutines}\n            {/* <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: true }) }} >Add Routine</button> */}\n          </ListGroup>\n          {/* Button To add new Routine */}\n          <h2 className=\"normalfancytext\" style={{ marginTop: \"50px\" }}>\n            Goals:\n          </h2>\n          <ListGroup style={{ height: \"250px\", overflow: \"scroll\" }}>\n            {displayGoals}\n            {/* Button to add new Goal */}\n            {/* <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: false }) }}>Add Goal</button> */}\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer></Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  addNewGoalInputBox = () => {\n    return (\n      <InputGroup\n        size=\"lg\"\n        style={{ marginTop: \"20px\", width: this.state.modalWidth }}\n        className=\"mb-3\"\n      >\n        <FormControl\n          onChange={() => {\n            console.log(\"addNewGoalInputBox\");\n          }}\n          placeholder=\"place holder!!\"\n        />\n        <InputGroup.Append>\n          <Button variant=\"outline-secondary\">Add</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    );\n  };\n}\n","import React from 'react';\nimport moment from 'moment';\n\nexport default class TylersCalendarv1 extends React.Component {\n\n  componentDidMount() {\n  }\n\n  weekdays = moment.weekdays();\n  weekdaysShort = moment.weekdaysShort(); // [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n\n  componentWillUnmount() {\n\n  }\n\n  year = () => {\n    return this.props.dateContext.format(\"Y\");\n  }\n\n  currentDay = () => {\n    return this.props.dateObject.format(\"D\");\n  };\n  month = () => {\n    return this.props.dateContext.format(\"MMMM\");\n  }\n\n  daysInMonth = () => {\n    return this.props.dateContext.daysInMonth();\n  }\n\n  firstDayOfMonth = () => {\n    let dateContext = this.props.dateContext;\n    let firstDay = moment(dateContext)\n      .startOf(\"month\")\n      .format(\"d\"); // Day of week 0...1..5...6\n    return firstDay;\n  };\n\n  //Returns a dense populated set of icons to be pushed onto a day i\n  //into the table\n\n  getEventsforDay = (i) => {\n\n    var res = [];\n    var tempStart = null;\n    var tempEnd = null;\n    if (this.props.originalEvents == null) {\n      return []\n    }\n    // console.log(this.props.originalEvents);\n    for (let j = 0; j < this.props.originalEvents.length; ++j) {\n      if (this.props.originalEvents[j].start.dateTime) {\n        tempStart = this.props.originalEvents[j].start.dateTime;\n        tempEnd = this.props.originalEvents[j].end.dateTime;\n        let startDate = new Date(tempStart).getDate();\n        let endDate = new Date(tempEnd).getDate();\n        // console.log(startDate)\n        if (i >= startDate && i <= endDate) {\n          res.push(<div key={'event' + j}><button\n            value={j}\n            onClick={this.onEventClick}\n            className=\"btn btn-sm\" style={{\n              padding: '3px',\n              paddingLeft: '4px',\n              paddingRight: '4px',\n              fontSize: '9px', color: \"white\",\n              borderRadius: '4px', background: \"#42B8DD\",\n              textShadow: \"0 1px 1px rgba(0, 0, 0, 0.2)\", marginBottom: \"3px\"\n            }} >{this.props.originalEvents[j].summary}</button><br /></div>);\n        }\n      }\n      else {\n        tempStart = this.props.originalEvents[j].start.date;\n        // console.log('start date');\n        // console.log(this.props.originalEvents[j].start.date);\n        tempEnd = this.props.originalEvents[j].end.date;\n        let startDate = new Date(tempStart).getDate();\n        let endDate = new Date(tempEnd).getDate();\n        // console.log(startDate)\n        if (i > startDate && i <= endDate) {\n          // console.log('sss' + i, startDate, endDate);\n          res.push(<div key={'event' + j}><button\n            value={j}\n            onClick={this.onEventClick}\n            className=\"btn btn-sm\" style={{\n              padding: '3px',\n              paddingLeft: '4px',\n              paddingRight: '4px',\n              fontSize: '9px', color: \"white\",\n              borderRadius: '3px', background: \"CornflowerBlue\",\n              textShadow: \"0 1px 1px rgba(0, 0, 0, 0.2), \", marginBottom: \"3px\"\n            }} >{this.props.originalEvents[j].summary}</button><br /></div>);\n        }\n      }\n\n    }\n    return res;\n  }\n\n  onEventClick = (x) => {\n    x.stopPropagation();\n    this.props.eventClick(x.target.value);\n  }\n\n  onDayClick = (d) => {\n    this.props.handleDateClick(this.props.dateContext.format(\"M\") + '/' + d + '/' + this.props.dateContext.format(\"Y\"));\n  }\n\n  onExpandClick = (d) => {\n    this.props.handleExpandClick(this.props.dateContext.format(\"M\") + '/' + d + '/' + this.props.dateContext.format(\"Y\"));\n  }\n\n  render() {\n    let daysInMonth = [];\n    let weekdays = this.weekdays.map((day) => {\n      return (\n        <td className=\"fancytext\" key={day}>{day}</td>\n      )\n    });\n\n    //create the blank slots to push day 1 to right day\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(<td key={'empty' + i} className=\"calendar-day empty\">{\"\"}</td>);\n    }\n\n    //The variable below tells us if the current month we are at is today's month\n    var sameDate = this.props.dateObject.format(\"MM/YYYY\") === this.props.dateContext.format(\"MM/YYYY\");\n\n    // console.log(this.props.dateObject.format(\"DD/MM/YYYY\") + \"  == \" + this.props.dateContext.format(\"DD/MM/YYYY\"));\n    for (var d = 1; d <= this.daysInMonth(); d++) {\n      // let currentDay = d == this.currentDay() ? \"today\" : \"\";\n\n      // const todayStyle = { boxShadow: '4px 4px 8px 4px rgba(0, 0, 0, 0.2)' };\n\n      daysInMonth.push(\n        <td key={d} onClick={this.onDayClick.bind(this, d)}>\n          <div style={{ padding: '0', margin: '0', height: '110px', width: \"100px\", overflow: 'auto' }}>\n            {\n              // eslint-disable-next-line max-len\n            }\n              <div className={(sameDate && (d === parseInt(this.currentDay(), 10))) ? \"numberCircleCurrent\" : \"numberCircle\"} onClick={this.onExpandClick.bind(this, d)}>\n                <a className=\"fancytext\"> {d} </a>\n              </div>\n            {this.getEventsforDay(d)}\n          </div>\n        </td>\n      );\n    }\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalSlots.length - 1) {\n        // let insertRow = cells.slice();\n        rows.push(cells);\n      }\n    });\n\n    var daysinmonth = rows.map((data, i) => {\n      return <tr style={{ padding: '0px' }} key={i * 11}>{data}</tr>;\n    });\n\n    return (\n      <div>\n        <table className=\"table\" style={{ height: '450px', tableLayout: 'fixed', width: '910px' }}>\n          <thead>\n            <tr>\n              {weekdays}\n            </tr>\n          </thead>\n          <tbody style={{ height: '450px', width: '600px' }}>\n            {daysinmonth}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n// import axios from 'axios';\nimport moment from 'moment';\nimport { Container, Row, Col} from 'react-bootstrap';\n\nimport firebase from \"./firebase\";\nexport default class DayRoutines extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            firebaseRootPath: firebase.firestore().collection('users').doc('7R6hAVmDrNutRkG3sVRy'),\n            goals: [], //array to hold all  goals\n            routines: [], // array to hold all routines\n            dayEvents: [], //holds google events data for a single day\n            todayDateObject: moment(\"03/02/2020\"), //this is the date of interset for events to be displaye\n            pxPerHour: \"30px\", //preset size for all columns\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n            eventBoxSize: \"200\", //width size for event box\n        }\n    }\n\n    componentDidMount() {\n        this.grabFireBaseRoutinesGoalsData();\n    }\n\n    /**\n * grabFireBaseRoutinesGoalsData:\n * this function grabs the goals&routines array from the path located in this function\n * which will then populate the goals, routines,originalGoalsAndRoutineArr array\n * separately. The arrays will be used for display and data manipulation later.\n *\n*/\n    grabFireBaseRoutinesGoalsData = () => {\n        const db = firebase.firestore();\n        // console.log('DayRoutine component did mount');\n        const docRef = db.collection('users').doc('7R6hAVmDrNutRkG3sVRy');\n        docRef.get().then((doc) => {\n            if (doc.exists) {\n                // console.log(doc.data());\n                var x = doc.data();\n                // console.log(\"from DayRoutines\");\n                // console.log(x['goals&routines']);\n                x = x['goals&routines'];\n                let routine = [];\n                let goal = [];\n                for (let i = 0; i < x.length; ++i) {\n                    if (!x[i]['deleted'] && x[i]['is_persistent']) {\n                        // console.log(\"routine \" + x[i]['title']);\n                        routine.push(x[i]);\n                    }\n                    else if (!x[i]['deleted'] && !x[i]['is_persistent']) {\n                        // console.log(\"not routine \" + x[i]['title']);\n                        goal.push(x[i]);\n                    }\n                }\n                this.setState({\n                    originalGoalsAndRoutineArr: x,\n                    goals: goal,\n                    routines: routine\n                })\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n        }).catch(function (error) {\n            console.log(\"Error getting document:\", error);\n        });\n    }\n\n\n    dayView = () => { //this essentially creates the time row\n        let arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayDayViewRoutines\" + i}>\n                    <Col style={{\n                        borderTop: \"1px solid  mistyrose\",\n                    textAlign: \"right\",\n                    height: this.state.pxPerHour }}>\n                        {i}:00\n                    </Col >\n                </Row>\n            )\n        }\n        return arr\n    }\n\n    RoutineClicked = () =>{\n        this.props.dayRoutineClick();\n    }\n\n    /**\n     * getEventItem: given an hour, this will return all events that was started during that hour\n     *\n    */\n    getEventItem = (hour) => {\n        var res = []\n        var arr = this.state.routines;\n        var sameTimeEventCount = 0;\n        let itemWidth = this.state.eventBoxSize;\n        // var overlapEvent = 0;\n        var addmarginLeft = 0;\n        var fontSize = 10;\n        for (let i = 0; i < arr.length; i++) {\n\n            let start_dateObj = new Date();\n            let start_dateStr = start_dateObj.toISOString().split('T').shift();\n            let start_timeStr = arr[i].available_start_time;\n            let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n            let end_dateObj = new Date();\n            let end_dateStr = end_dateObj.toISOString().split('T').shift();\n            let end_timeStr = arr[i].available_end_time;\n            let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n            let tempStartTime = start_timeAndDate;\n            let tempEndTime = end_timeAndDate;\n            /**\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\n            */\n            if (tempStartTime.getHours() === hour) {\n                // console.log(\"matched\" + i );\n                let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                let minDiff = (tempEndTime.getMinutes()) / 60;\n                let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                let color = 'PaleTurquoise';\n\n                sameTimeEventCount++;\n                //check if there is already an event there overlapping from another hour\n                for(let i = 0; i < arr.length; i++){\n                    let start_dateObj = new Date();\n                    let start_dateStr = start_dateObj.toISOString().split('T').shift();\n                    let start_timeStr = arr[i].available_start_time;\n                    let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n        \n                    let end_dateObj = new Date();\n                    let end_dateStr = end_dateObj.toISOString().split('T').shift();\n                    let end_timeStr = arr[i].available_end_time;\n                    let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n        \n                    let tempStartTime = start_timeAndDate;\n                    let tempEndTime = end_timeAndDate;\n                    if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\n                        // console.log(\"We ARE IN HEREEEE\");\n                        addmarginLeft += 20;\n                        itemWidth = itemWidth - 20;\n                        // overlapEvent++;\n                    }\n                }\n                \n                if(sameTimeEventCount > 1  ){\n                     addmarginLeft += 20; \n                    // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                    // itemWidth = itemWidth/(sameHourItems-1);\n                    itemWidth = itemWidth - 20;\n                    // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\n                }\n                \n                //chnage font size if not enough space \n                if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\n                    fontSize = 8;\n                }\n                // change color if more than one event in same time. \n                if(sameTimeEventCount <= 1){\n                     color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\n                }\n                else if( sameTimeEventCount === 2){\n                    color = 'skyblue';\n                }\n                else{\n                    color = 'blue';\n                }\n                let newElement =\n                    (<div key={\"dayRoutineItem\" + i}\n                    data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n\n                        onMouseOver={e => {\n                            e.target.style.color = \"#FFFFFF\";\n                            e.target.style.background = \"RebeccaPurple\";\n                            // e.target.style.marginLeft = \"5px\";\n                            // e.target.style.border= \"3px solid w\";\n                            e.target.style.zIndex=\"2\";\n\n\n\n\n                        }}\n                        onMouseOut={e => {\n                            e.target.style.zIndex=\"1\";\n\n                            // e.target.style.marginLeft = \"0px\";\n                             e.target.style.color = \"#000000\";\n                            //  e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\n                             e.target.style.border= \"1px lightgray solid\";\n\n                             e.target.style.background = color;\n\n\n                            }}\n\n                        onClick = {this.RoutineClicked}\n                        style={{\n                            zIndex: this.state.zIndex,\n                            marginTop: minsToMarginTop + \"px\",\n                            padding: \"5px\",\n                            // fontSize: \"10px\",\n                            border: \"1px lightgray solid \",\n                            // float: \"left\",\n                            borderRadius: \"5px\", \n                            // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\n                            //  width: this.state.eventBoxSize,\n                            position: \"absolute\", \n                            height: height + \"px\",\n\n                            fontSize: fontSize + \"px\",\n                            background: color,\n                            width: itemWidth + \"px\",\n                            marginLeft: addmarginLeft + \"px\"\n                        }}>\n                        {arr[i].title}\n                    </div>);\n                res.push(newElement);\n            }\n        }\n        return res;\n    }\n\n    /**\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\n    */\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n        var arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayRoutine\" + i} style={{ position: \"relative\" }}>\n                    <Col\n                        style={{\n                            position: \"relative\",\n                            borderTop: \"1px solid mistyrose\",\n                            width: '180px',\n                            background: \"aliceblue\",\n                            height: this.state.pxPerHour\n                        }}>\n                        {this.getEventItem(i)}\n                    </Col >\n                </Row>\n            )\n        }\n        return arr;\n    }\n\n    render() {\n        return (\n            <div style={{\n                padding: '20px',\n                // marginTop: \"10px\",\n                width: \"300px\",\n                borderRadius: \"20px\" }}>\n                Today's Routines:\n                <Container style={{}}>\n                    <Row >\n                        <Col>\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.dayViewItems()}\n                            </Container>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n\n}\n","import React, { Component } from 'react'\n// import axios from 'axios';\nimport moment from 'moment';\nimport {  Container, Row, Col} from 'react-bootstrap';\n\nimport firebase from \"./firebase\";\nexport default class DayGoals extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            firebaseRootPath: firebase.firestore().collection('users').doc('7R6hAVmDrNutRkG3sVRy'),\n            goals: [], //array to hold all  goals\n            routines: [], // array to hold all routines\n            dayEvents: [], //holds google events data for a single day\n            todayDateObject: moment(\"03/02/2020\"), //this is the date of interset for events to be displaye\n            pxPerHour: \"30px\", //preset size for all columns\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n            eventBoxSize: \"200\", //width size for event box\n        }\n    }\n\n    componentDidMount() {\n        this.grabFireBaseRoutinesGoalsData();\n    }\n\n    /**\n * grabFireBaseRoutinesGoalsData:\n * this function grabs the goals&routines array from the path located in this function\n * which will then populate the goals, routines,originalGoalsAndRoutineArr array\n * separately. The arrays will be used for display and data manipulation later.\n *\n*/\n    grabFireBaseRoutinesGoalsData = () => {\n        const db = firebase.firestore();\n        const docRef = db.collection('users').doc('7R6hAVmDrNutRkG3sVRy');\n        docRef.get().then((doc) => {\n            if (doc.exists) {\n                // console.log(doc.data());\n                var x = doc.data();\n                // console.log(\"from DayRoutines\");\n                // console.log(x['goals&routines']);\n                x = x['goals&routines'];\n                let routine = [];\n                let goal = [];\n                for (let i = 0; i < x.length; ++i) {\n                    if (!x[i]['deleted'] && x[i]['is_persistent']) {\n                        // console.log(\"routine \" + x[i]['title']);\n                        routine.push(x[i]);\n                    }\n                    else if (!x[i]['deleted'] && !x[i]['is_persistent']) {\n                        // console.log(\"not routine \" + x[i]['title']);\n                        goal.push(x[i]);\n                    }\n                }\n                this.setState({\n                    originalGoalsAndRoutineArr: x,\n                    goals: goal,\n                    routines: routine\n                })\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n        }).catch(function (error) {\n            console.log(\"Error getting document:\", error);\n        });\n    }\n\n\n    dayView = () => { //this essentially creates the time row\n        let arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayDayViewGoals\" + i}>\n                    <Col style={{ borderTop: \"1px solid mistyrose\", textAlign: \"right\", height: this.state.pxPerHour }}>\n                        {i}:00\n                    </Col >\n                </Row>\n            )\n        }\n        return arr\n    }\n   \n    GoalClicked  = ()=>{\n        this.props.dayGoalClick();\n    }\n    /**\n     * getEventItem: given an hour, this will return all events that was started during that hour\n     *\n    */\n    getEventItem = (hour) => {\n        var res = []\n        var arr = this.state.goals;\n        var sameTimeEventCount = 0;\n        let itemWidth = this.state.eventBoxSize;\n        // var overlapEvent = 0;\n        var addmarginLeft = 0;\n        var fontSize = 10;\n        for (let i = 0; i < arr.length; i++) {\n\n            let start_dateObj = new Date();\n            let start_dateStr = start_dateObj.toISOString().split('T').shift();\n            let start_timeStr = arr[i].available_start_time;\n            let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n            let end_dateObj = new Date();\n            let end_dateStr = end_dateObj.toISOString().split('T').shift();\n            let end_timeStr = arr[i].available_end_time;\n            let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n            let tempStartTime = start_timeAndDate;\n            let tempEndTime = end_timeAndDate;\n            /**\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\n            */\n            if (tempStartTime.getHours() === hour) {\n                // addmarginLeft = 0;\n                // itemWidth = this.state.eventBoxSize;\n                // itemWidth = 0;\n                // console.log(\"matched\" + i );\n                let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                let minDiff = (tempEndTime.getMinutes()) / 60;\n                let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                let color = 'PaleTurquoise';\n\n                sameTimeEventCount++;\n                //check if there is already an event there overlapping from another hour\n                for(let i = 0; i < arr.length; i++){\n                    let start_dateObj = new Date();\n                    let start_dateStr = start_dateObj.toISOString().split('T').shift();\n                    let start_timeStr = arr[i].available_start_time;\n                    let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n                    let end_dateObj = new Date();\n                    let end_dateStr = end_dateObj.toISOString().split('T').shift();\n                    let end_timeStr = arr[i].available_end_time;\n                    let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n                    let tempStartTime = start_timeAndDate;\n                    let tempEndTime = end_timeAndDate;\n                    if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\n                        //  console.log(\"this is statr time :\"+ tempStartTime.getHours() );\n                        //  console.log(\"this is end time :\"+ tempEndTime.getHours() );\n                        //  console.log(\"add 20\");\n                        addmarginLeft += 20;\n                        itemWidth = itemWidth - 20;\n                        // console.log(addmarginLeft);\n                        // overlapEvent++;\n                    }\n                }\n                \n                \n                if(sameTimeEventCount > 1  ){\n                    // console.log(\"In here because same hour  \");\n                    // console.log(\"add 20\");\n                     addmarginLeft += 20; \n                    // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                    // itemWidth = itemWidth/(sameHourItems-1);\n                    itemWidth = itemWidth - 20;\n                    // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\n                    // console.log(addmarginLeft);\n                }\n                // console.log(addmarginLeft);\n                // console.log(\"end of this element \");\n                \n                //chnage font size if not enough space \n                if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\n                    fontSize = 8;\n                }\n                // change color if more than one event in same time. \n                if(sameTimeEventCount <= 1){\n                     color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\n                }\n                else if( sameTimeEventCount === 2){\n                    color = 'skyblue';\n                }\n                else{\n                    color = 'blue';\n                }\n                let newElement =\n                    (<div key={\"dayGoalItem\" + i}\n                    data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n\n                        onMouseOver={e => {\n                            e.target.style.color = \"#FFFFFF\";\n                            e.target.style.background = \"RebeccaPurple\";\n                            // e.target.style.marginLeft = \"5px\";\n                            e.target.style.zIndex=\"2\";\n\n                        }}\n                        onMouseOut={e => {\n                            e.target.style.zIndex=\"1\";\n                            // e.target.style.marginLeft = \"0px\";\n                            e.target.style.color = \"#000000\";\n                            e.target.style.background = color;\n                            e.target.style.border= \"1px lightgray solid\";\n                            // e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\n                        }}\n                        onClick = {this.GoalClicked}\n                        style={{\n                            zIndex: this.state.zIndex,\n                            marginTop: minsToMarginTop + \"px\",\n                            padding: \"5px\",\n                            // fontSize: \"10px\",\n                            border: \"1px lightgray solid \",\n                            // float: \"left\",\n                            borderRadius: \"5px\", \n                            // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\n                            // width: this.state.eventBoxSize,\n                            position: \"absolute\", \n                            height: height + \"px\",\n\n                            fontSize: fontSize + \"px\",\n                            background: color,\n                            width: itemWidth + \"px\",\n                            marginLeft: addmarginLeft + \"px\"\n                        }}>\n                        {arr[i].title}\n                    </div>);\n                res.push(newElement);\n            }\n        }\n        return res;\n    }\n\n    /**\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\n    */\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n        var arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayGoal\" + i} style={{ position: \"relative\" }}>\n                    <Col\n                        style={{\n                            position: \"relative\",\n                            borderTop: \"1px solid mistyrose\",\n                            width: '180px',\n                            background: \"aliceblue\",\n                            height: this.state.pxPerHour\n                        }}>\n                        {this.getEventItem(i)}\n                    </Col >\n                </Row>\n            )\n        }\n        return arr;\n    }\n\n    render() {\n        return (\n\n\n            <div style={{margin:'20px',\n            padding: '20px',\n            marginTop: \"0px\",\n            width: \"300px\",\n            borderRadius: \"20px\" }}>\n                Today's Goals:\n                <Container style={{}}>\n                    <Row >\n                        {/* <div class=\"table col-md-1\" > */}\n                        <Col>\n                            {/* this is for the actual event slots */}\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.dayViewItems()}\n                            </Container>\n                            {/* </div> */}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n\n}\n","import React, { Component } from 'react'\n// import axios from 'axios';\n// import moment from 'moment';\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\nexport default class DayEvents extends Component {\n\n    constructor(props) {\n        super(props);\n        // console.log(this.props.dateContext);\n        this.state = {\n            //dayEvents: [], //holds google events data for a single day\n            // todayDateObject: moment(\"03/07/2020\"), //this is the date of interset for events to be displaye\n            pxPerHour: \"30px\", //preset size for all columns\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n            eventBoxSize: 150, //width size for event box\n            marginFromLeft: 0\n        }\n    }\n\n    timeDisplay = () => { //this essentially creates the time row\n        let arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayEvent\" + i}>\n                    <Col style={{\n                        borderTop: \"1px solid lavender\",\n                        textAlign: \"right\",\n                        height: this.state.pxPerHour\n                    }}>\n                        {i}:00\n                    </Col >\n                </Row>\n            )\n        }\n        return arr\n    }\n\n    onEventClick = (e, i) => {\n        var arr = this.props.dayEvents;\n        e.stopPropagation();\n        this.props.eventClickDayView(arr[i]);\n    }\n\n\n    /*\n     * TODO: events spanning multiple days\n     * getEventItem: given an hour, this will return all events that was started during that hour\n     *\n    */\n    getEventItem = (hour) => {\n        var res = []\n        var tempStart = null;\n        var tempEnd = null;\n        var arr = this.props.dayEvents;\n        var sameTimeEventCount = 0;\n        var addmarginLeft = 0;\n        let itemWidth = this.state.eventBoxSize;\n        var fontSize = 10;\n\n        for (let i = 0; i < arr.length; i++) {\n            tempStart = arr[i].start.dateTime;\n            tempEnd = arr[i].end.dateTime;\n            /**\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\n            */\n            let tempStartTime = new Date(tempStart);\n            let tempEndTime = new Date(tempEnd);\n            let curDate = this.props.dateContext.get('date')\n            if (tempStartTime.getDate() ===  curDate) {\n              if (tempStartTime.getHours() == hour) {\n                if (tempStartTime.getDate() !==  tempEndTime.getDate()) {\n                  let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                  let hourDiff = 24 - tempStartTime.getHours();\n                  let minDiff = 0;\n                  let color = 'lavender';\n                  let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                  sameTimeEventCount++;\n                  let newElement =\n                      (\n                          <div key={\"event\" + i}>\n                              <div\n\n                                  data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                  onMouseOver={e => {\n                                      e.target.style.color = \"#FFFFFF\";\n                                      e.target.style.background = \"RebeccaPurple\";\n                                      e.target.style.zIndex = \"2\";\n                                  }}\n                                  onMouseOut={e => {\n                                      e.target.style.zIndex = \"1\";\n                                      e.target.style.color = \"#000000\";\n                                      e.target.style.background = color;\n                                  }}\n                                  key={i}\n                                  // value = {i}\n                                  onClick={e => this.onEventClick(e, i)}\n                                  style={{\n                                      zIndex: this.state.zIndex,\n                                      marginTop: minsToMarginTop + \"px\",\n                                      padding: \"5px\",\n                                      fontSize: fontSize + \"px\",\n                                      border: \"1px lightgray solid \",\n                                      float: \"left\",\n                                      //  verticalAlign: \" \",\n                                      // verticalAlign: 'text-top',\n                                      // textAlign:\"left\",\n                                      borderRadius: \"5px\",\n                                      background: color,\n                                      // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                      width: itemWidth + \"px\",\n                                      position: \"absolute\",\n                                      height: height + \"px\",\n                                      marginLeft: addmarginLeft + \"px\"\n                                  }}>\n                                  {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                  {arr[i].summary}\n                              </div>\n                          </div>\n                      );\n                  res.push(newElement);\n                } else {\n                  // addmarginLeft = 0;\n                  // itemWidth = this.state.eventBoxSize;\n                  let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                  let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                  let minDiff = (tempEndTime.getMinutes()) / 60;\n                  let color = 'PaleTurquoise';\n                  let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                  sameTimeEventCount++;\n                  //check if there is already an event there overlapping from another hour\n                  for (let i = 0; i < arr.length; i++) {\n                      tempStart = arr[i].start.dateTime;\n                      tempEnd = arr[i].end.dateTime;\n                      let tempStartTime = new Date(tempStart);\n                      let tempEndTime = new Date(tempEnd);\n                      if (tempStartTime.getHours() < hour && tempEndTime.getHours() > hour) {\n                          addmarginLeft += 20;\n                          itemWidth = itemWidth - 20;\n                      }\n                  }\n\n                  if (sameTimeEventCount > 1) {\n                      // console.log(\"add 20 in day\");\n                      addmarginLeft += 20;\n                      // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                      // itemWidth = itemWidth/(sameHourItems-1);\n                      itemWidth = itemWidth - 20;\n                  }\n                  //chnage font size if not enough space\n                  if ((tempEndTime.getHours() - tempStartTime.getHours()) < 2) {\n                      fontSize = 8;\n                  }\n\n                  // change color if more than one event in same time.\n                  if (sameTimeEventCount <= 1) {\n                      color = (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue');\n                  }\n                  else if (sameTimeEventCount == 2) {\n                      color = 'skyblue';\n                  }\n                  else {\n                      color = 'blue';\n                  }\n\n                  let newElement =\n                      (\n\n                          <div key={\"event\" + i}>\n                              <div\n\n                                  data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                  onMouseOver={e => {\n                                      e.target.style.color = \"#FFFFFF\";\n                                      e.target.style.background = \"RebeccaPurple\";\n                                      e.target.style.zIndex = \"2\";\n                                  }}\n                                  onMouseOut={e => {\n                                      e.target.style.zIndex = \"1\";\n                                      e.target.style.color = \"#000000\";\n                                      e.target.style.background = color;\n                                  }}\n                                  key={i}\n                                  // value = {i}\n                                  onClick={e => this.onEventClick(e, i)}\n                                  style={{\n                                      zIndex: this.state.zIndex,\n                                      marginTop: minsToMarginTop + \"px\",\n                                      padding: \"5px\",\n                                      fontSize: fontSize + \"px\",\n                                      border: \"1px lightgray solid \",\n                                      float: \"left\",\n                                      //  verticalAlign: \" \",\n                                      // verticalAlign: 'text-top',\n                                      // textAlign:\"left\",\n                                      borderRadius: \"5px\",\n                                      background: color,\n                                      // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                      width: itemWidth + \"px\",\n                                      position: \"absolute\",\n                                      height: height + \"px\",\n                                      marginLeft: addmarginLeft + \"px\"\n                                  }}>\n                                  {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                  {arr[i].summary}\n                              </div>\n                          </div>\n                      );\n                  res.push(newElement);\n                }\n              }\n            } else if ( hour === 0 && tempEndTime.getDate() ===  curDate) {\n              let minsToMarginTop = 0\n              let hourDiff = tempEndTime.getHours();\n              let minDiff = (tempEndTime.getMinutes()) / 60;\n              let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n              let color = 'lavender';\n              sameTimeEventCount++;\n              let newElement =\n                  (\n                      <div key={\"event\" + i}>\n                          <div\n                              data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                              onMouseOver={e => {\n                                  e.target.style.color = \"#FFFFFF\";\n                                  e.target.style.background = \"RebeccaPurple\";\n                                  e.target.style.zIndex = \"2\";\n                              }}\n                              onMouseOut={e => {\n                                  e.target.style.zIndex = \"1\";\n                                  e.target.style.color = \"#000000\";\n                                  e.target.style.background = color;\n                              }}\n                              key={i}\n                              // value = {i}\n                              onClick={e => this.onEventClick(e, i)}\n                              style={{\n                                  zIndex: this.state.zIndex,\n                                  marginTop: minsToMarginTop + \"px\",\n                                  padding: \"5px\",\n                                  fontSize: fontSize + \"px\",\n                                  border: \"1px lightgray solid \",\n                                  float: \"left\",\n                                  //  verticalAlign: \" \",\n                                  // verticalAlign: 'text-top',\n                                  // textAlign:\"left\",\n                                  borderRadius: \"5px\",\n                                  background: color,\n                                  // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                  width: itemWidth + \"px\",\n                                  position: \"absolute\",\n                                  height: height + \"px\",\n                                  marginLeft: addmarginLeft + \"px\"\n                              }}>\n                              {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                              {arr[i].summary}\n                          </div>\n                      </div>\n                  );\n                  res.push(newElement);\n            } else if ( hour === 0 && tempStartTime.getDate() < curDate && tempEndTime.getDate() > curDate ){\n              let minsToMarginTop = 0\n              let hourDiff = 24\n              let height = (hourDiff) * this.state.pxPerHourForConversion;\n              let color = 'lavender';\n              sameTimeEventCount++;\n              let newElement =\n                  (\n                      <div key={\"event\" + i}>\n                          <div\n                              data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                              onMouseOver={e => {\n                                  e.target.style.color = \"#FFFFFF\";\n                                  e.target.style.background = \"RebeccaPurple\";\n                                  e.target.style.zIndex = \"2\";\n                              }}\n                              onMouseOut={e => {\n                                  e.target.style.zIndex = \"1\";\n                                  e.target.style.color = \"#000000\";\n                                  e.target.style.background = color;\n                              }}\n                              key={i}\n                              // value = {i}\n                              onClick={e => this.onEventClick(e, i)}\n                              style={{\n                                  zIndex: this.state.zIndex,\n                                  marginTop: minsToMarginTop + \"px\",\n                                  padding: \"5px\",\n                                  fontSize: fontSize + \"px\",\n                                  border: \"1px lightgray solid \",\n                                  float: \"left\",\n                                  //  verticalAlign: \" \",\n                                  // verticalAlign: 'text-top',\n                                  // textAlign:\"left\",\n                                  borderRadius: \"5px\",\n                                  background: color,\n                                  // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                  width: itemWidth + \"px\",\n                                  position: \"absolute\",\n                                  height: height + \"px\",\n                                  marginLeft: addmarginLeft + \"px\"\n                              }}>\n                              {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                              {arr[i].summary}\n                          </div>\n                      </div>\n                  );\n              res.push(newElement);\n            }\n        }\n        return res;\n    }\n\n    onDayClick = (e, i) => {\n\n        console.log(\"this is the hour:\" + i);\n        this.props.handleDateClick((this.props.dateContext.format(\"M\") + '/' + this.props.dateContext.format(\"D\") + '/' + this.props.dateContext.format(\"Y\")), i);\n    }\n\n\n    /**\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\n    */\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n        var arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayEvent\" + i} style={{ position: \"relative\" }}>\n                    <Col\n                        style={{\n                            position: \"relative\",\n                            borderTop: \"1px solid lavender\",\n                            width: '180px', //lyman change width to adjust\n                            background: \"aliceblue\",\n                            height: this.state.pxPerHour\n                        }}\n                        onClick={e => this.onDayClick(e, i)}\n                    >\n                        {this.getEventItem(i)}\n                    </Col >\n                </Row>\n            )\n        }\n        return arr;\n    }\n\n    render() {\n        return (\n            <div style={{\n                padding: '20px',\n                width: \"300px\",\n                borderRadius: \"20px\"\n            }}>\n                Today's Events:\n                <Container style={{}}>\n                    <Row >\n                        <Col >\n                            {/* this is Just for the time */}\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.timeDisplay()}\n                            </Container>\n                        </Col>\n                        <Col>\n                            {/* this is for the actual event slots */}\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.dayViewItems()}\n                            </Container>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment';\nimport axios from \"axios\";\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\nexport default class WeekEvents extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          pxPerHour: \"30px\", //preset size for all columns\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n          eventBoxSize: 80, //width size for event box\n          marginFromLeft: 0\n      }\n      // console.log(this.props.dateContext.format('MM/DD/YYYY'))\n      // dateContext prop should be Sunday of current week\n  }\n\n\n  timeDisplay = () => { //this essentially creates the time row\n      let arr = [];\n      for (let i = 0; i < 24; ++i) {\n          arr.push(\n              <Row key={\"dayEvent\" + i}>\n                  <Col style={{\n                      borderTop: \"1px solid lavender\",\n                      textAlign: \"right\",\n                      height: this.state.pxPerHour,\n                  }}>\n                      {i}:00\n                  </Col >\n              </Row>\n          )\n      }\n      return arr\n  }\n\n  onEventClick = (e, i) => {\n    var arr = this.props.weekEvents;\n    e.stopPropagation();\n    this.props.eventClick(arr[i]);\n}\n\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n      var res= [];\n      for (let i = 0; i < 7; ++i) {\n          var arr = []\n          for( let j = 0; j < 24; ++j) {\n            arr.push(\n              <Container key={\"weekEvent\" + i + j}>\n                <Row style={{ position: \"relative\"}}>\n                  <Col\n                      style={{\n                          position: \"relative\",\n                          borderTop: \"1px solid lavender\",\n                          background: \"aliceblue\",\n                          height: this.state.pxPerHour,\n                          width: '80px',\n                      }}\n                  >\n                      {this.getEventItem(i,j)}\n                  </Col >\n                </Row>\n              </Container>\n            );\n          }\n        res.push(\n          <Col key={\"dayEvent\" + i}>\n            {arr}\n          </Col>\n        );\n      }\n      return res;\n  }\n\n  // TODO: Fix problem with events spanning multiple days in same week\n  getEventItem = (day, hour) => {\n      let startObject = this.props.dateContext.clone();\n      let startDay = startObject.startOf(\"week\");\n      var res = []\n      var tempStart = null;\n      var tempEnd = null;\n      var arr = this.props.weekEvents;\n      var sameTimeEventCount = 0;\n      var addmarginLeft = 0;\n      let itemWidth = this.state.eventBoxSize;\n      var fontSize = 10;\n      for (let i = 0; i < arr.length; i++) {\n          tempStart = arr[i].start.dateTime;\n          tempEnd = arr[i].end.dateTime;\n          /**\n           * TODO: add the case where arr[i].start.dateTime doesn't exists\n          */\n          let tempStartTime = new Date(tempStart);\n          let tempEndTime = new Date(tempEnd);\n          let startDate = moment(tempStartTime);\n          let endDate = moment(tempEndTime)\n          for(let dateContext = startDate.clone(); dateContext.isSameOrBefore(endDate,'day'); dateContext.add(1,'days')) {\n            let curDate = dateContext.get('date');\n            if (dateContext.get('day') === day) {\n                if (tempStartTime.getDate() ===  curDate) {\n                    if (tempStartTime.getHours() === hour) {\n                        if (tempStartTime.getDate() !==  tempEndTime.getDate()) {\n                            let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                            let hourDiff = 24 - tempStartTime.getHours();\n                            let minDiff = 0;\n                            let color = 'lavender';\n                            let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                            sameTimeEventCount++;\n                            let newElement =\n                                (\n                                    <div key={\"event\" + i}>\n                                        <div\n\n                                            data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                            onMouseOver={e => {\n                                                e.target.style.color = \"#FFFFFF\";\n                                                e.target.style.background = \"RebeccaPurple\";\n                                                e.target.style.zIndex = \"2\";\n                                            }}\n                                            onMouseOut={e => {\n                                                e.target.style.zIndex = \"1\";\n                                                e.target.style.color = \"#000000\";\n                                                e.target.style.background = color;\n                                            }}\n                                            key={i}\n                                            // value = {i}\n                                            onClick={e => this.onEventClick(e, i)}\n                                            style={{\n                                                zIndex: this.state.zIndex,\n                                                marginTop: minsToMarginTop + \"px\",\n                                                padding: \"5px\",\n                                                fontSize: fontSize + \"px\",\n                                                border: \"1px lightgray solid \",\n                                                float: \"left\",\n                                                //  verticalAlign: \" \",\n                                                // verticalAlign: 'text-top',\n                                                // textAlign:\"left\",\n                                                borderRadius: \"5px\",\n                                                background: color,\n                                                // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                                width: itemWidth + \"px\",\n                                                position: \"absolute\",\n                                                height: height + \"px\",\n                                                marginLeft: addmarginLeft + \"px\"\n                                            }}>\n                                            {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                            {arr[i].summary}\n                                        </div>\n                                    </div>\n                                );\n                            res.push(newElement);\n                        } else if (tempStartTime.getDate() ===  tempEndTime.getDate()) {\n                            // addmarginLeft = 0;\n                            // itemWidth = this.state.eventBoxSize;\n                            let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                            let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                            let minDiff = (tempEndTime.getMinutes()) / 60;\n                            let color = 'PaleTurquoise';\n                            let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                            sameTimeEventCount++;\n                            //check if there is already an event there overlapping from another hour\n                            for (let i = 0; i < arr.length; i++) {\n                                tempStart = arr[i].start.dateTime;\n                                tempEnd = arr[i].end.dateTime;\n                                let tempStartTime = new Date(tempStart);\n                                let tempEndTime = new Date(tempEnd);\n                                if (tempStartTime.getHours() < hour && tempEndTime.getHours() > hour) {\n                                    addmarginLeft += 20;\n                                    itemWidth = itemWidth - 20;\n                                }\n                            }\n\n                            if (sameTimeEventCount > 1) {\n                                // console.log(\"add 20 in day\");\n                                addmarginLeft += 20;\n                                // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                                // itemWidth = itemWidth/(sameHourItems-1);\n                                itemWidth = itemWidth - 20;\n                            }\n                            //chnage font size if not enough space\n                            if ((tempEndTime.getHours() - tempStartTime.getHours()) < 2) {\n                                fontSize = 8;\n                            }\n\n                            // change color if more than one event in same time.\n                            if (sameTimeEventCount <= 1) {\n                                color = (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue');\n                            }\n                            else if (sameTimeEventCount == 2) {\n                                color = 'skyblue';\n                            }\n                            else {\n                                color = 'blue';\n                            }\n\n                            let newElement =\n                                (\n\n                                    <div key={\"event\" + i}>\n                                        <div\n\n                                            data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                            onMouseOver={e => {\n                                                e.target.style.color = \"#FFFFFF\";\n                                                e.target.style.background = \"RebeccaPurple\";\n                                                e.target.style.zIndex = \"2\";\n                                            }}\n                                            onMouseOut={e => {\n                                                e.target.style.zIndex = \"1\";\n                                                e.target.style.color = \"#000000\";\n                                                e.target.style.background = color;\n                                            }}\n                                            key={i}\n                                            // value = {i}\n                                            onClick={e => this.onEventClick(e, i)}\n                                            style={{\n                                                zIndex: this.state.zIndex,\n                                                marginTop: minsToMarginTop + \"px\",\n                                                padding: \"5px\",\n                                                fontSize: fontSize + \"px\",\n                                                border: \"1px lightgray solid \",\n                                                float: \"left\",\n                                                //  verticalAlign: \" \",\n                                                // verticalAlign: 'text-top',\n                                                // textAlign:\"left\",\n                                                borderRadius: \"5px\",\n                                                background: color,\n                                                // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                                width: itemWidth + \"px\",\n                                                position: \"absolute\",\n                                                height: height + \"px\",\n                                                marginLeft: addmarginLeft + \"px\"\n                                            }}>\n                                            {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                            {arr[i].summary}\n                                        </div>\n                                    </div>\n                                );\n                            res.push(newElement);\n                        }\n                    } else if ( hour === 0 && tempStartTime.getDate() !== curDate && tempEndTime.getDate() ===  curDate) {\n                        let minsToMarginTop = 0\n                        let hourDiff = tempEndTime.getHours();\n                        let minDiff = (tempEndTime.getMinutes()) / 60;\n                        let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                        let color = 'lavender';\n                        sameTimeEventCount++;\n                        let newElement =\n                            (\n                                <div key={\"event\" + i}>\n                                    <div\n                                        data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                        onMouseOver={e => {\n                                            e.target.style.color = \"#FFFFFF\";\n                                            e.target.style.background = \"RebeccaPurple\";\n                                            e.target.style.zIndex = \"2\";\n                                        }}\n                                        onMouseOut={e => {\n                                            e.target.style.zIndex = \"1\";\n                                            e.target.style.color = \"#000000\";\n                                            e.target.style.background = color;\n                                        }}\n                                        key={i}\n                                        // value = {i}\n                                        onClick={e => this.onEventClick(e, i)}\n                                        style={{\n                                            zIndex: this.state.zIndex,\n                                            marginTop: minsToMarginTop + \"px\",\n                                            padding: \"5px\",\n                                            fontSize: fontSize + \"px\",\n                                            border: \"1px lightgray solid \",\n                                            float: \"left\",\n                                            //  verticalAlign: \" \",\n                                            // verticalAlign: 'text-top',\n                                            // textAlign:\"left\",\n                                            borderRadius: \"5px\",\n                                            background: color,\n                                            // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                            width: itemWidth + \"px\",\n                                            position: \"absolute\",\n                                            height: height + \"px\",\n                                            marginLeft: addmarginLeft + \"px\"\n                                        }}>\n                                        {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                        {arr[i].summary}\n                                    </div>\n                                </div>\n                            );\n                            res.push(newElement);\n                    } else if (hour === 0 && tempStartTime.getDate() < curDate &&tempEndTime.getDate() > curDate) {\n                        let minsToMarginTop = 0\n                        let hourDiff = 24\n                        let height = (hourDiff) * this.state.pxPerHourForConversion;\n                        let color = 'lavender';\n                        sameTimeEventCount++;\n                        let newElement =\n                            (\n                                <div key={\"event\" + i}>\n                                    <div\n                                        data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                        onMouseOver={e => {\n                                            e.target.style.color = \"#FFFFFF\";\n                                            e.target.style.background = \"RebeccaPurple\";\n                                            e.target.style.zIndex = \"2\";\n                                        }}\n                                        onMouseOut={e => {\n                                            e.target.style.zIndex = \"1\";\n                                            e.target.style.color = \"#000000\";\n                                            e.target.style.background = color;\n                                        }}\n                                        key={i}\n                                        // value = {i}\n                                        onClick={e => this.onEventClick(e, i)}\n                                        style={{\n                                            zIndex: this.state.zIndex,\n                                            marginTop: minsToMarginTop + \"px\",\n                                            padding: \"5px\",\n                                            fontSize: fontSize + \"px\",\n                                            border: \"1px lightgray solid \",\n                                            float: \"left\",\n                                            //  verticalAlign: \" \",\n                                            // verticalAlign: 'text-top',\n                                            // textAlign:\"left\",\n                                            borderRadius: \"5px\",\n                                            background: color,\n                                            // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                            width: itemWidth + \"px\",\n                                            position: \"absolute\",\n                                            height: height + \"px\",\n                                            marginLeft: addmarginLeft + \"px\"\n                                        }}>\n                                        {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                        {arr[i].summary}\n                                    </div>\n                                </div>\n                            );\n                        res.push(newElement);\n                    }\n                }\n            }\n        }\n      }\n      return res;\n  }\n\n render() {\n    let weekdays = moment.weekdays().map((day) => {\n      return (\n        <Col key={\"event\"+day} className=\"fancytext\">{day}</Col>\n      )\n    });\n     return (\n         <Container style={{ height: 'auto', width: '1000px'}}>\n           <Row>\n             Events\n           </Row>\n           <Row>\n             <Col className=\"fancytext\">Time</Col>\n             {weekdays}\n           </Row>\n           <Row style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\n             <Col>\n                 <Container style={{ margin: '0', padding: '0'}}>\n                     {this.timeDisplay()}\n                 </Container>\n             </Col>\n             {this.weekViewItems()}\n           </Row>\n         </Container>\n     )\n }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment';\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\nexport default class WeekRoutines extends Component {\n  constructor(props) {\n      super(props);\n      // console.log(this.props.dateContext);\n      this.state = {\n          dayEvents: [], //holds google events data for a single day\n          todayDateObject: moment(\"03/07/2020\"), //this is the date of interset for events to be displaye\n          pxPerHour: \"30px\", //preset size for all columns\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n          eventBoxSize: 130, //width size for event box\n          marginFromLeft: 0\n      }\n  }\n\n  timeDisplay = () => { //this essentially creates the time row\n      let arr = [];\n      for (let i = 0; i < 24; ++i) {\n          arr.push(\n              <Row key={\"dayEvent\" + i}>\n                  <Col style={{\n                      borderTop: \"1px solid lavender\",\n                      textAlign: \"right\",\n                      height: this.state.pxPerHour,\n                  }}>\n                      {i}:00\n                  </Col >\n              </Row>\n          )\n      }\n      return arr\n  }\n\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n      var res= [];\n      for (let i = 0; i < 7; ++i) {\n          var arr = []\n          for( let j = 0; j < 24; ++j) {\n            arr.push(\n              <Container key={\"weekRoutine\" + i + j}>\n                <Row style={{ position: \"relative\"}}>\n                  <Col\n                      style={{\n                          position: \"relative\",\n                          borderTop: \"1px solid lavender\",\n                          background: \"aliceblue\",\n                          height: this.state.pxPerHour,\n                      }}\n                  >\n                      {/*TODO: Place Routine events {i} {j}*/}\n                  </Col >\n                </Row>\n              </Container>\n            );\n          }\n        res.push(\n          <Col key={\"dayRoutine\" + i}>\n            {arr}\n          </Col>\n        );\n      }\n      return res;\n  }\n\n render() {\n    let weekdays = moment.weekdays().map((day) => {\n      return (\n        <Col key={\"routine\"+day} className=\"fancytext\">{day}</Col>\n      )\n    });\n     return (\n         <Container style={{ height: 'auto', width: '1000px'}}>\n           <Row>\n             Routines\n           </Row>\n           <Row>\n             <Col className=\"fancytext\">Time</Col>\n             {weekdays}\n           </Row>\n           <Row style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\n             <Col >\n                 <Container style={{ margin: '0', padding: '0', width: '80px' }}>\n                     {this.timeDisplay()}\n                 </Container>\n             </Col>\n             {this.weekViewItems()}\n           </Row>\n         </Container>\n     )\n }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment';\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\nexport default class WeekGoals extends Component {\n  constructor(props) {\n      super(props);\n      // console.log(this.props.dateContext);\n      this.state = {\n          dayEvents: [], //holds google events data for a single day\n          todayDateObject: moment(\"03/07/2020\"), //this is the date of interset for events to be displaye\n          pxPerHour: \"30px\", //preset size for all columns\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n          eventBoxSize: 130, //width size for event box\n          marginFromLeft: 0\n      }\n  }\n\n  timeDisplay = () => { //this essentially creates the time row\n      let arr = [];\n      for (let i = 0; i < 24; ++i) {\n          arr.push(\n              <Row key={\"dayEvent\" + i}>\n                  <Col style={{\n                      borderTop: \"1px solid lavender\",\n                      textAlign: \"right\",\n                      height: this.state.pxPerHour,\n                  }}>\n                      {i}:00\n                  </Col >\n              </Row>\n          )\n      }\n      return arr\n  }\n\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n      var res= [];\n      for (let i = 0; i < 7; ++i) {\n          var arr = []\n          for( let j = 0; j < 24; ++j) {\n            arr.push(\n              <Container key={\"weekGoal\" + i + j}>\n                <Row style={{ position: \"relative\"}}>\n                  <Col\n                      style={{\n                          position: \"relative\",\n                          borderTop: \"1px solid lavender\",\n                          background: \"aliceblue\",\n                          height: this.state.pxPerHour,\n                      }}\n                  >\n                      {/*TODO: Place Goal events {i} {j}*/}\n                  </Col >\n                </Row>\n              </Container>\n            );\n          }\n        res.push(\n          <Col key={\"dayGoal\" + i}>\n            {arr}\n          </Col>\n        );\n      }\n      return res;\n  }\n\n render() {\n    let weekdays = moment.weekdays().map((day) => {\n      return (\n        <Col key={\"goal\"+day} className=\"fancytext\">{day}</Col>\n      )\n    });\n     return (\n         <Container style={{ height: 'auto', width: '1000px'}}>\n           <Row>\n             Goals\n           </Row>\n           <Row>\n             <Col className=\"fancytext\">Time</Col>\n             {weekdays}\n           </Row>\n           <Row style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\n             <Col >\n                 <Container style={{ margin: '0', padding: '0', width: '80px' }}>\n                     {this.timeDisplay()}\n                 </Container>\n             </Col>\n             {this.weekViewItems()}\n           </Row>\n         </Container>\n     )\n }\n}\n","import React from 'react';\nimport { Form,Row,Col ,Modal,Button,Container} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faImage\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass AboutModal extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state={\n            file: null,\n            // image1Click: null\n            file2: null,\n            file3: null,\n            file4: null\n        }\n    }\n\n    handleFileSelected = event => {\n      console.log(event.target.files[0]);\n      if(event.target.files[0] != null){\n      event.preventDefault(); event.stopPropagation()\n      this.setState({\n        file: URL.createObjectURL(event.target.files[0])\n      });\n     }\n    };\n  \n    hideAboutForm = e => {\n      this.props.CameBackFalse();   \n    };\n\n    // handleImageClick = ()=> {\n    //     console.log(\"I am in here\");\n    //     this.setState({\n    //         image1Click: true\n    //       });\n    // }\n\n    handleImpPeople1 = (event) =>{\n        if(event.target.files[0] != null){\n        this.setState({\n            file2: URL.createObjectURL(event.target.files[0])\n          });\n        }\n    }\n    handleImpPeople2 = (event) =>{\n        if(event.target.files[0] != null){\n        this.setState({\n            file3: URL.createObjectURL(event.target.files[0])\n          });\n        }\n    }\n    handleImpPeople3 = (event) =>{\n        if(event.target.files[0] != null){\n        this.setState({\n            file4: URL.createObjectURL(event.target.files[0])\n          });\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <Modal.Dialog\n                    style={{\n                    borderRadius: \"15px\",\n                    boxShadow:\n                        \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n                    marginLeft: \"35px\",\n                    width: \"350px\",\n                    marginTop: \"0\"\n                    }}\n                >\n                <Modal.Header\n                closeButton\n                onHide={() => {\n                    // this.setState({\n                    // showAboutModal: false\n                    // });\n                    this.hideAboutForm();\n                }}\n                >\n                    <Modal.Title>\n                        <h5 className=\"normalfancytext\">About Me</h5>{\" \"}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Row>\n                        <Col>\n                            {(this.state.file === null ? \n                            <FontAwesomeIcon icon={faImage} size=\"6x\"/> : \n                            <img style = \n                                {{display: \"block\",\n                                marginLeft: \"auto\",\n                                marginRight:\"auto\" ,\n                                width: \"100%\",\n                                height:\"70px\",\n                                }}\n                                accept=\"image/*\"\n                                src={this.state.file } alt=\"Profile Picture\"\n                            /> )}\n                        </Col>\n                        <Col xs={8}>\n                        <label >Upload A New Image</label>\n                        <input\n                            type=\"file\"\n                            onChange={this.handleFileSelected}\n                            id=\"ProfileImage\"\n                        />\n                        </Col>\n                    </Row>\n\n                    <Form.Group controlId=\"AboutMessage\" style={{ marginTop: \"10px\" }}>\n                        <Form.Label>Message (My Day):</Form.Label>\n                        <Form.Control\n                        as=\"textarea\"\n                        rows=\"4\"\n                        // value={this.state.newEventDescription}\n                        type=\"text\"\n                        placeholder=\"You are a strong ...\"\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"AboutMessageCard\">\n                        <Form.Label>Message (My Card):</Form.Label>\n                        <Form.Control\n                        as=\"textarea\"\n                        rows=\"4\"\n                        type=\"text\"\n                        placeholder=\"You are a safe ...\"\n                        />\n                    </Form.Group>\n                    <Form.Group >\n                        <Form.Label>Important People</Form.Label>\n                        <Row>\n                            <Col>\n                                {/* <FontAwesomeIcon icon={faImage} size=\"6x\"  /> */}\n                                {(this.state.file2 === null ? \n                                <FontAwesomeIcon icon={faImage} size=\"6x\"  /> : \n                                <img style = \n                                    {{display: \"block\",\n                                    marginLeft: \"auto\",\n                                    marginRight:\"auto\" ,\n                                    width: \"100%\",\n                                    height:\"90px\",\n                                    }}\n                                    src={this.state.file2 } alt=\"Important People 1\"\n                                /> )}\n                                \n                            </Col>\n                            <Col xs={8}>\n                                <Form.Control type=\"text\" placeholder=\"Relationship\" />\n                                <Form.Control type=\"text\" placeholder=\"Phone Number\" />\n                                <input type= \"file\" onChange={this.handleImpPeople1}/>\n                            </Col>\n                        </Row>\n                        <Row style={{ marginTop: \"20px\" }}>\n                            <Col>\n                                {/* <FontAwesomeIcon icon={faImage} size=\"5x\" /> */}\n                                {(this.state.file3 === null ? \n                                <FontAwesomeIcon icon={faImage} size=\"6x\"  /> : \n                                <img style = \n                                    {{display: \"block\",\n                                    marginLeft: \"auto\",\n                                    marginRight:\"auto\" ,\n                                    width: \"100%\",\n                                    height:\"90px\",\n                                    }}\n                                    src={this.state.file3 } alt=\"Important People 2\"\n                                /> )}\n                            </Col>\n                            <Col xs={8}>\n                                <Form.Control type=\"text\" placeholder=\"Relationship\" />\n                                <Form.Control type=\"text\" placeholder=\"Phone Number\" />\n                                <input type= \"file\" onChange={this.handleImpPeople2}/>\n                            </Col>\n                        </Row>\n                        <Row style={{ marginTop: \"20px\" }}>\n                            <Col>\n                                {/* <FontAwesomeIcon icon={faImage} size=\"5x\" /> */}\n                                {(this.state.file4 === null ? \n                                <FontAwesomeIcon icon={faImage} size=\"6x\"  /> : \n                                <img style = \n                                    {{display: \"block\",\n                                    marginLeft: \"auto\",\n                                    marginRight:\"auto\" ,\n                                    width: \"100%\",\n                                    height:\"90px\",\n                                    }}\n                                    src={this.state.file4 } alt=\"Important People 3\"\n                                /> )}\n                            </Col>\n                            <Col xs={8}>\n                                <Form.Control type=\"text\" placeholder=\"Relationship\" />\n                                <Form.Control type=\"text\" placeholder=\"Phone Number\" />\n                                <input type= \"file\" onChange={this.handleImpPeople3}/>\n                            </Col>\n                        </Row>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Container fluid>\n                        <Row>\n                            <Col xs={4}>\n                                <Button variant=\"info\" type=\"submit\">\n                                Save\n                                </Button>\n                            </Col>\n                            <Col xs={4}>\n                                <Button variant=\"secondary\" onClick={this.hideAboutForm}>\n                                Cancel\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Modal.Footer>\n            </Modal.Dialog>\n         </div>\n        );\n    }\n}\n\nexport default AboutModal;","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Modal,\n  Dropdown,\n  DropdownButton,\n} from \"react-bootstrap\";\nimport Firebasev2 from \"./Firebasev2.jsx\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport TylersCalendarv1 from \"./TCal.jsx\";\nimport DayRoutines from \"./DayRoutines.jsx\";\nimport DayGoals from \"./DayGoals.jsx\";\nimport DayEvents from \"./DayEvents.jsx\";\nimport WeekEvents from \"./WeekEvents.jsx\";\nimport WeekRoutines from \"./WeekRoutines.jsx\";\nimport WeekGoals from \"./WeekGoals.jsx\";\nimport AboutModal from \"./AboutModal.jsx\";\n// import RepeatModal from \"./RepeatModal.jsx\";\n// import EventBeforeChecked from \"./EventBeforeChecked.jsx\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalEvents: [], //holds the google events data in it's original JSON form\n      dayEvents: [], //holds google events data for a single day\n      weekEvents: [], //holds google events data for a week\n      showRoutineGoalModal: false,\n      showGoalModal: false,\n      showRoutineModal: false,\n      showAboutModal: false,\n      dayEventSelected: false, //use to show modal to create new event\n      // modelSelected: false, // use to display the routine/goals modal\n      newEventID: \"\", //save the event ID for possible future use\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventNotification: 30,\n      newEventDescription: \"\",\n      newEventStart0: new Date(), //start and end for a event... it's currently set to today\n      newEventEnd0: new Date(), //start and end for a event... it's currently set to today\n      isEvent: false, // use to check whether we clicked on a event and populate extra buttons in event form\n      //////////New additions for new calendar\n      dateContext: moment(), //Keep track of day and month\n      todayDateObject: moment(), //Remember today's date to create the circular effect over todays day\n      calendarView: \"Day\", // decides which type of calendar to display\n      showRepeatModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      notificationBeforeChecked: false,\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      repeatSummary: \"\",\n      recurrenceRule: \"\",\n      // repeatOccurrence: newEventStart0\n    };\n  }\n\n  handleRepeatDropDown = (eventKey, week_days) => {\n    if (eventKey === \"WEEK\") {\n      const newByDay = {\n        ...this.state.byDay_temp,\n        [this.state.newEventStart0.getDay()]: week_days[\n          this.state.newEventStart0.getDay()\n        ],\n      };\n      this.setState({\n        repeatDropDown_temp: eventKey,\n        byDay_temp: newByDay,\n      });\n    }\n    this.setState({\n      repeatDropDown_temp: eventKey,\n    });\n  };\n\n  handleRepeatMonthlyDropDown = (eventKey) => {\n    this.setState({\n      repeatMonthlyDropDown: eventKey,\n    });\n  };\n\n  handleRepeatEndDate = (date) => {\n    this.setState(\n      {\n        repeatEndDate_temp: date,\n      },\n      console.log(\"handleRepeatEndDate\", date, this.state.repeatEndDate)\n    );\n  };\n\n  handleRepeatInputValue = (eventKey) => {\n    this.setState({\n      repeatInputValue_temp: eventKey,\n    });\n  };\n\n  handleRepeatOccurrence = (eventKey) => {\n    this.setState({\n      repeatOccurrence_temp: eventKey,\n    });\n  };\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    this.updateEventsArray();\n  }\n  /*\n  getThisMonthEvents:\n  By passing in a empty interval, this method will get a response from the server with\n  the current month's events\n  */\n  getThisMonthEvents = () => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {},\n      })\n      .then((response) => {\n        var events = response.data;\n        this.setState({ originalEvents: events }, () => {\n          console.log(\"New Events Arrived cdm\", events);\n        });\n      })\n      .catch((error) => {\n        //console.log('Error Occurred ' + error);\n      });\n  };\n\n  handleDayEventClick = (A) => {\n    var guestList = \"\";\n    console.log(A, \"handleDayEventClick\");\n    if (A.attendees) {\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\n        return guestList + \" \" + nextGuest.email;\n      }, \"\");\n      console.log(\"Guest List:\", A.attendees, guestList);\n    }\n    this.setState({\n      newEventID: A.id,\n      newEventStart0: A.start.dateTime\n        ? new Date(A.start.dateTime)\n        : new Date(A.start.date),\n      newEventEnd0: A.end.dateTime\n        ? new Date(A.end.dateTime)\n        : new Date(A.end.date),\n      newEventName: A.summary,\n      newEventGuests: guestList,\n      newEventLocation: A.location ? A.location : \"\",\n      newEventNotification: A.reminders.overrides\n        ? A.reminders.overrides[0].minutes\n        : \"\",\n      newEventDescription: A.description ? A.description : \"\",\n      dayEventSelected: true,\n      isEvent: true,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n    });\n  };\n\n  handleWeekEventClick = A => {\n    var guestList = \"\";\n    if (A.attendees) {\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\n        return guestList + \" \" + nextGuest.email;\n      }, \"\");\n      console.log(\"Guest List:\", A.attendees, guestList);\n    }\n    this.setState({\n      newEventID: A.id,\n      newEventStart0: A.start.dateTime\n        ? new Date(A.start.dateTime)\n        : new Date(A.start.date),\n      newEventEnd0: A.end.dateTime\n        ? new Date(A.end.dateTime)\n        : new Date(A.end.date),\n      newEventName: A.summary,\n      newEventGuests: guestList,\n      newEventLocation: A.location ? A.location : \"\",\n      newEventNotification: A.reminders.overrides\n        ? A.reminders.overrides[0].minutes\n        : \"\",\n      newEventDescription: A.description ? A.description : \"\",\n      dayEventSelected: true,\n      isEvent: true,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\"\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\"\n      }\n    });\n  }\n  repeatSummaryCompute = () => {\n    const { recurrenceRule } = this.state;\n\n    let untilSubString = \"\";\n    let untilIndex = recurrenceRule.indexOf(\"UNTIL\");\n    if (untilIndex !== -1) {\n      untilSubString = recurrenceRule.substring(untilIndex);\n    }\n    if (untilSubString.includes(\";\")) {\n      let endUntilIndex = untilSubString.indexOf(\";\");\n      untilSubString = moment(untilSubString.substring(6, endUntilIndex))\n        .add(-1, \"days\")\n        .format(\"LL\");\n    } else if (untilSubString) {\n      untilSubString = moment(untilSubString.substring(5))\n        .add(-1, \"days\")\n        .format(\"LL\");\n    }\n    console.log(untilSubString);\n\n    let countSubString = \"\";\n    let countIndex = recurrenceRule.indexOf(\"COUNT\");\n    if (countIndex !== -1) {\n      countSubString = recurrenceRule.substring(countIndex);\n    }\n    if (countSubString.includes(\";\")) {\n      let endCountIndex = countSubString.indexOf(\";\");\n      countSubString = countSubString.substring(6, endCountIndex);\n    } else if (countSubString) {\n      countSubString = countSubString.substring(5);\n    }\n\n    console.log(countSubString, \"countSubString\");\n\n    let intervalSubString = \"\";\n    let intervalIndex = recurrenceRule.indexOf(\"INTERVAL\");\n    if (intervalIndex !== -1) {\n      intervalSubString = recurrenceRule.substring(intervalIndex);\n    }\n    if (intervalSubString.includes(\";\")) {\n      let endIntervalIndex = intervalSubString.indexOf(\";\");\n      intervalSubString = intervalSubString.substring(9, endIntervalIndex);\n    } else if (intervalSubString) {\n      intervalSubString = intervalSubString.substring(9);\n    }\n\n    let byDaySubString = \"\";\n    let byDayArray = [];\n    let byDayIndex = recurrenceRule.indexOf(\"BYDAY\");\n    if (byDayIndex !== -1) {\n      byDaySubString = recurrenceRule.substring(byDayIndex);\n    }\n    console.log(byDaySubString);\n\n    if (byDaySubString.includes(\";\")) {\n      let endByDayIndex = byDaySubString.indexOf(\";\");\n      byDaySubString = byDaySubString.substring(6, endByDayIndex);\n    } else if (byDaySubString) {\n      byDaySubString = byDaySubString.substring(6);\n    }\n\n    byDayArray = byDaySubString.split(\",\");\n    console.log(byDayArray);\n\n    // If freq is daily in rrule\n    if (recurrenceRule.includes(\"FREQ=DAILY\")) {\n      if (intervalSubString === \"1\") {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: \"Daily\",\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Daily, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Daily, ${countSubString} times`,\n            });\n          }\n        }\n      } else {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} days`,\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} days, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} days, ${countSubString} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If freq is weekly in rrule\n    else if (recurrenceRule.includes(\"FREQ=WEEKLY\")) {\n      if (intervalSubString === \"1\") {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          if (byDayArray.length === 7) {\n            this.setState({\n              repeatOptionDropDown: \"Weekly on all days\",\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${byDayArray.join(\", \")}`,\n            });\n          }\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          if (byDayArray.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Weekly on all days, until ${untilSubString}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${byDayArray.join(\n                \", \"\n              )}, until ${untilSubString}`,\n            });\n          }\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            if (byDayArray.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Weekly on all days, ${countSubString} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Weekly on ${byDayArray.join(\n                  \", \"\n                )}, ${countSubString} times`,\n              });\n            }\n          }\n        }\n      } else {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          if (byDayArray.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on all days`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on ${byDayArray.join(\n                \", \"\n              )}`,\n            });\n          }\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          if (byDayArray.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on all days, until ${untilSubString}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on ${byDayArray.join(\n                \", \"\n              )}, until ${untilSubString}`,\n            });\n          }\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: \"Once\",\n            });\n          } else {\n            if (byDayArray.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Every ${intervalSubString} weeks on all days, ${countSubString} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Every ${intervalSubString} weeks on ${byDayArray.join(\n                  \", \"\n                )}, ${countSubString} times`,\n              });\n            }\n          }\n        }\n      }\n    }\n\n    // If freq is monthly in rrule\n    else if (recurrenceRule.includes(\"FREQ=MONTHLY\")) {\n      if (intervalSubString === \"1\") {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: \"Monthly\",\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Monthly, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Monthly, ${countSubString} times`,\n            });\n          }\n        }\n      } else {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} months`,\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} months, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} months, ${countSubString} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If freq is yearly in rrule\n    else if (recurrenceRule.includes(\"FREQ=YEARLY\")) {\n      if (intervalSubString === \"1\") {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: \"Annually\",\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Annually, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Annually, ${countSubString} times`,\n            });\n          }\n        }\n      } else {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} years`,\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} years, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} years, ${countSubString} times`,\n            });\n          }\n        }\n      }\n    }\n  };\n\n  /*\n  handleEventClick For Month View.\n  when a event on the calendar is clicked, the function below\n  will execute and save the clicked event varibles to this.state and\n  passed that into the form where the user can edit that data\n\n  TODO: set dateContext to the date clicked\n  */\n  handleEventClick = (i) => {\n    // bind with an arrow function\n    let A = this.state.originalEvents[i];\n    console.log(\"A\", A.recurringEventId);\n    if (A.recurringEventId) {\n      axios\n        .get(\"/getRecurringRules\", {\n          params: {\n            recurringEventId: A.recurringEventId,\n          },\n        })\n        .then((res) => {\n          console.log(res.data, \"getRecurringRules\");\n          this.setState(\n            {\n              recurrenceRule: res.data[0],\n            },\n            () => {\n              this.repeatSummaryCompute();\n            }\n          );\n        });\n    }\n    //Guest list erroneously includes owner's email as well\n    var guestList = \"\";\n    if (A.attendees) {\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\n        return guestList + \" \" + nextGuest.email;\n      }, \"\");\n      console.log(\"Guest List:\", A.attendees, guestList);\n    }\n    this.setState(\n      {\n        newEventID: A.id,\n        newEventStart0: A.start.dateTime\n          ? new Date(A.start.dateTime)\n          : new Date(A.start.date),\n        newEventEnd0: A.end.dateTime\n          ? new Date(A.end.dateTime)\n          : new Date(A.end.date),\n        newEventName: A.summary,\n        newEventGuests: guestList,\n        newEventLocation: A.location ? A.location : \"\",\n        newEventNotification: A.reminders.overrides\n          ? A.reminders.overrides[0].minutes\n          : \"\",\n        newEventDescription: A.description ? A.description : \"\",\n        dayEventSelected: true,\n        isEvent: true,\n        showRepeatModal: false,\n        repeatOption: false,\n        repeatOptionDropDown: \"Does not repeat\",\n        repeatDropDown: \"DAY\",\n        repeatDropDown_temp: \"DAY\",\n        repeatMonthlyDropDown: \"Monthly on day 13\",\n        repeatInputValue: \"1\",\n        repeatInputValue_temp: \"1\",\n        repeatOccurrence: \"1\",\n        repeatOccurrence_temp: \"1\",\n        repeatRadio: \"Never\",\n        repeatRadio_temp: \"Never\",\n        repeatEndDate: \"\",\n        repeatEndDate_temp: \"\",\n        showNoTitleError: \"\",\n        showDateError: \"\",\n        showAboutModal: false,\n        byDay: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\",\n        },\n        byDay_temp: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\",\n        },\n      },\n      () => {\n        console.log(\"callback from handEventClick\");\n      }\n    );\n  };\n\n  handleDateClickOnDayView = (arg, i) => {\n    var newStart = new Date(arg);\n    newStart.setHours(i, 0, 0);\n    var newEnd = new Date(arg);\n    newEnd.setHours(i + 1, 0, 0);\n    this.setState({\n      newEventID: \"\",\n      newEventStart0: newStart,\n      newEventEnd0: newEnd,\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventNotification: 30,\n      newEventDescription: \"\",\n      dayEventSelected: true,\n      isEvent: false,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n    });\n  };\n\n  /*\n  handleDateClick on Month View.\n  This will trigger when a date is clicked, it will present\n  the user with a new form to create a event\n  */\n  //TODO: Initialize Date, set other properties to empty\n  handleDateClick = (arg) => {\n    var newStart = new Date(arg);\n    newStart.setHours(0, 0, 0, 0);\n    var newEnd = new Date(arg);\n    newEnd.setHours(23, 59, 59, 59);\n    this.setState(\n      {\n        newEventID: \"\",\n        newEventStart0: newStart,\n        newEventEnd0: newEnd,\n        newEventName: \"\",\n        newEventGuests: \"\",\n        newEventLocation: \"\",\n        newEventNotification: 30,\n        newEventDescription: \"\",\n        dayEventSelected: true,\n        isEvent: false,\n        repeatOption: false,\n        repeatOptionDropDown: \"Does not repeat\",\n        repeatDropDown: \"DAY\",\n        repeatDropDown_temp: \"DAY\",\n        repeatMonthlyDropDown: \"Monthly on day 13\",\n        repeatInputValue: \"1\",\n        repeatInputValue_temp: \"1\",\n        repeatOccurrence: \"1\",\n        repeatOccurrence_temp: \"1\",\n        repeatRadio: \"Never\",\n        repeatRadio_temp: \"Never\",\n        repeatEndDate: \"\",\n        repeatEndDate_temp: \"\",\n        showNoTitleError: \"\",\n        showDateError: \"\",\n        showAboutModal: false,\n        byDay: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\",\n        },\n        byDay_temp: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\",\n        },\n      },\n      console.log(\"handledateclick\")\n    );\n  };\n\n  validate = () => {\n    let titleError = \"\";\n    let dayError = \"\";\n    var startDay = new Date(this.state.newEventStart0).getDate();\n    var endDay = new Date(this.state.newEventEnd0).getDate();\n    var startMonth = new Date(this.state.newEventStart0).getUTCMonth();\n    var endMonth = new Date(this.state.newEventEnd0).getUTCMonth();\n    var startYear = new Date(this.state.newEventStart0).getFullYear();\n    var endYear = new Date(this.state.newEventEnd0).getFullYear();\n    var startHour = new Date(this.state.newEventStart0).getHours();\n    var endHour = new Date(this.state.newEventEnd0).getHours();\n    if (\n      (startDay > endDay && startMonth === endMonth) ||\n      (startMonth > endMonth && startYear === endYear) ||\n      startYear > endYear ||\n      (startHour > endHour && startDay === endDay)\n    ) {\n      dayError = \"Invalid: start date is before end date\";\n    }\n    if (this.state.newEventName === \"\") {\n      titleError = \"Invalid: No Title\";\n    }\n    //empty string evalutes to false.\n    if (titleError || dayError) {\n      this.setState({ showNoTitleError: titleError, showDateError: dayError });\n      return false;\n    }\n    return true;\n  };\n\n  // handleSubmit:\n\n  handleExpandClick = (arg) => {\n    let newDate = new Date(arg);\n    console.log(newDate);\n    this.setState(\n      {\n        dateContext: moment(newDate),\n        calendarView: \"Day\",\n      },\n      this.updateEventsArray\n    );\n  };\n\n  // handleSubmit:\n\n  // submits the data to be passed up to be integrated into google calendar\n\n  handleSubmit = (event) => {\n    if (this.state.start === \"\" || this.state.end === \"\") {\n      console.log(\"invalid params\");\n      return;\n    }\n    const isValid = this.validate();\n    if (isValid) {\n      event.preventDefault();\n      this.createEvent(this.state.newEventName);\n      this.setState({ showNoTitleError: \"\", showDateError: \"\" });\n    }\n  };\n\n  updateEventClick = (event) => {\n    event.preventDefault();\n    const isValid = this.validate();\n    if (isValid) {\n      if (this.state.newEventID === \"\") {\n        return;\n      } else {\n        for (let i = 0; i < this.state.originalEvents.length; i++) {\n          if (this.state.originalEvents[i].id === this.state.newEventID) {\n            this.updateRequest(i);\n          }\n        }\n      }\n    }\n  };\n\n  /*\n  updateRequest:\n  updates the google calendar based  on\n  */\n  updateRequest = (index) => {\n    const guests = this.state.newEventGuests;\n    var formattedEmail = null;\n    const emailList = guests.match(\n      /[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*(\\.)?/g\n    );\n    if (emailList) {\n      formattedEmail = emailList.map((guests) => {\n        return {\n          email: guests,\n          responseStatus: \"needsAction\",\n        };\n      });\n    }\n\n    var minutesNotification = 30;\n    if (this.state.newEventNotification) {\n      minutesNotification = this.state.newEventNotification;\n    }\n\n    let updatedEvent = this.state.originalEvents[index];\n    updatedEvent.summary = this.state.newEventName;\n    updatedEvent.attendees = formattedEmail;\n    updatedEvent.location = this.state.newEventLocation;\n    updatedEvent.description = this.state.newEventDescription;\n    updatedEvent.start.dateTime = this.state.newEventStart0.toISOString();\n    updatedEvent.start.timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    updatedEvent.end.dateTime = this.state.newEventEnd0.toISOString();\n    updatedEvent.end.timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    updatedEvent.recurrence =\n      this.state.repeatOption && this.defineRecurrence();\n    updatedEvent.reminders = {\n      overrides: [\n        {\n          method: \"popup\",\n          minutes: minutesNotification,\n        },\n      ],\n      useDefault: false,\n      sequence: 0,\n    };\n\n    axios\n      .put(\"/updateEvent\", {\n        extra: updatedEvent,\n        ID: this.state.newEventID,\n      })\n      .then((response) => {\n        this.setState({\n          dayEventSelected: false,\n          newEventName: \"\",\n          newEventStart0: new Date(),\n          newEventEnd0: new Date(),\n        });\n\n        this.updateEventsArray();\n      })\n\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  defineRecurrence = () => {\n    // frequency in RRULE\n    let frequency =\n      this.state.repeatDropDown === \"DAY\"\n        ? \"DAILY\"\n        : this.state.repeatDropDown.concat(\"LY\");\n\n    // recurrence string\n    let rrule = `RRULE:FREQ=${frequency};INTERVAL=${this.state.repeatInputValue}`;\n    let recurrence = [];\n    let exdate = \"\";\n\n    // If seleted WEEK, add BYDAY to recurrence string\n    if (this.state.repeatDropDown === \"WEEK\") {\n      let selectedDays = [];\n      for (let [key, value] of Object.entries(this.state.byDay)) {\n        // Excluding today if today is not selected\n        if (key === this.state.newEventStart0.getDay().toString()) {\n          if (value === \"\") {\n            exdate = `EXDATE;TZID=America/Los_Angeles:${moment(\n              this.state.newEventStart0\n            ).format(\"YYYYMMDD\")}T070000Z`;\n            recurrence.unshift(exdate);\n          }\n        }\n        value !== \"\" && selectedDays.push(value.substring(0, 2).toUpperCase());\n      }\n      rrule = rrule.concat(`;BYDAY=${selectedDays.toString()}`);\n    }\n\n    // If selected After, add COUNT to recurrence string\n    if (this.state.repeatRadio === \"After\")\n      rrule = rrule.concat(`;COUNT=${this.state.repeatOccurrence}`);\n\n    // If selected On, add UNTIL to recurrence string\n    if (this.state.repeatRadio === \"On\") {\n      let repeat_end_date = moment(this.state.repeatEndDate).add(1, \"days\");\n      rrule = rrule.concat(`;UNTIL=${repeat_end_date.format(\"YYYYMMDD\")}`);\n    }\n\n    recurrence.push(rrule);\n    console.log(\"recurrence\", recurrence);\n    return recurrence;\n  };\n\n  /*\n  calls the backend API to delete a item with a particular eventID\n  */\n\n  deleteSubmit = () => {\n    if (this.state.newEventID === \"\") {\n      return;\n    }\n    axios\n      .post(\"/deleteEvent\", {\n        ID: this.state.newEventID,\n      })\n      .then(response => {\n        this.setState({\n          dayEventSelected: false\n        });\n        this.updateEventsArray();\n      })\n\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  /*\n  createEvent:\n  Basically creates a new event based on details given\n  */\n  /*\n   * TODO: Replace formatting email with function\n   */\n  /*\n   * https://tools.ietf.org/html/rfc3696 for what is valid email addresses\n   *\n   * local-part@domain-part\n   * local-part: alphanumeric, symbols ! # $ % & ' * + - / = ?  ^ _ ` . { | } ~ with restriction no two . in a row\n   * localWord = [a-zA-Z!#$%&'*+\\-/=?^_`{|}~]+\n   * localPart = localWord (\\.localWord)*\n   * domain-part:\n   * domains: alphanumeric, symbol - with restriction - not at beginning or end\n   * dot separate domains, top level domain can have optional . at end\n   * domain = [a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?\n   * domainPart = domain(\\.domain)*\\.domain(\\.)?\n   * email: localPart@domainPart\n   */\n  //Note: This works, but does not email the guests that they are invited to the event\n  createEvent = (newTitle) => {\n    const guests = this.state.newEventGuests;\n    var formattedEmail = null;\n    const emailList = guests.match(\n      /[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*(\\.)?/g\n    );\n    if (emailList) {\n      formattedEmail = emailList.map((guests) => {\n        return {\n          email: guests,\n          responseStatus: \"needsAction\",\n        };\n      });\n    }\n\n    var minutesNotification = 30;\n    if (this.state.newEventNotification) {\n      minutesNotification = this.state.newEventNotification;\n    }\n\n    let event = {\n      summary: this.state.newEventName,\n      location: this.state.newEventLocation,\n      description: this.state.newEventDescription,\n      reminders: {\n        useDefault: false,\n        sequence: 0,\n        overrides: [\n          {\n            method: \"popup\",\n            minutes: minutesNotification,\n          },\n        ],\n      },\n      start: {\n        dateTime: this.state.newEventStart0.toISOString(),\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      },\n      end: {\n        dateTime: this.state.newEventEnd0.toISOString(),\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      },\n      recurrence: this.state.repeatOption && this.defineRecurrence(),\n      attendees: formattedEmail,\n    };\n    axios\n      .post(\"/createNewEvent\", {\n        newEvent: event,\n        reminderTime: minutesNotification,\n        title: newTitle,\n        start: this.state.newEventStart0.toISOString(),\n        end: this.state.newEventEnd0.toISOString(),\n      })\n      .then((response) => {\n        console.log(\"createnewevent\", response);\n        this.setState({\n          dayEventSelected: false,\n        });\n        this.updateEventsArray();\n      })\n      .catch(function (error) {\n        // console.log(error);\n      });\n  };\n\n  /*\n  handleModalClicked:\n  this will toggle show hide of the firebase modal currently\n  */\n  // handleModalClicked = arg => {\n  //   // bind with an arrow function\n  //   this.setState({\n  //     modelSelected: !this.state.modelSelected\n  //   });\n  // };\n\n  nextMonth = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).add(1, \"month\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        originalEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  prevMonth = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"month\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        originalEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  nextDay = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).add(1, \"day\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  prevDay = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"day\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  nextWeek = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).add(1, \"week\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: []\n      },\n      this.updateEventsArray\n    );\n  };\n\n  prevWeek = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"week\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: []\n      },\n      this.updateEventsArray\n    );\n  };\n\n  /*\n  updateEventsArray:\n  updates the array if the month view changes to a different month.\n  */\n\n  updateEventsArray = () => {\n    if (this.state.calendarView === \"Month\") {\n      //The month view has transferred to a different month\n      let startObject = this.state.dateContext.clone();\n      let endObject = this.state.dateContext.clone();\n      let startDay = startObject.startOf(\"month\");\n      let endDay = endObject.endOf(\"month\");\n      let startDate = new Date(startDay.format(\"MM/DD/YYYY\"));\n      let endDate = new Date(endDay.format(\"MM/DD/YYYY\"));\n      startDate.setHours(0, 0, 0);\n      endDate.setHours(23, 59, 59);\n      this.getEventsByInterval(startDate.toString(), endDate.toString());\n    } else if (this.state.calendarView === \"Day\") {\n      this.getEventsByIntervalDayVersion(\n        this.state.dateContext.format(\"MM/DD/YYYY\")\n      );\n    } else if (this.state.calendarView === 'Week') {\n      let startObject = this.state.dateContext.clone();\n      let endObject = this.state.dateContext.clone();\n      let startDay = startObject.startOf(\"week\");\n      let endDay = endObject.endOf(\"week\");\n      let startDate = new Date(startDay.format(\"MM/DD/YYYY\"));\n      let endDate = new Date(endDay.format(\"MM/DD/YYYY\"));\n      this.getEventsByIntervalWeekVersion(startObject.toDate(),endObject.toDate());\n    }\n  };\n\n  /*\n  openRepeatModal:\n  this will open repeat modal.\n  */\n  openRepeatModal = () => {\n    this.setState((prevState) => {\n      return { showRepeatModal: !prevState.showRepeatModal };\n    });\n  };\n\n  /*\n  closeRepeatModal:\n  this will close repeat modal.\n  */\n  closeRepeatModal = () => {\n    this.setState((prevState) => ({\n      showRepeatModal: false,\n      repeatInputValue_temp: prevState.repeatInputValue,\n      repeatOccurrence_temp: prevState.repeatOccurrence,\n      repeatDropDown_temp: prevState.repeatDropDown,\n      repeatRadio_temp: prevState.repeatRadio,\n      repeatEndDate_temp: prevState.repeatEndDate,\n      byDay_temp: prevState.byDay,\n    }));\n    if (!this.state.repeatOption) {\n      this.setState({\n        repeatOptionDropDown: \"Does not repeat\",\n      });\n    }\n  };\n\n  /*\n  saveRepeatChanges:\n  this will close repeat modal.\n  */\n  saveRepeatChanges = () => {\n    const {\n      // repeatOptionDropDown,\n      repeatDropDown_temp,\n      repeatInputValue_temp,\n      repeatOccurrence_temp,\n      repeatRadio_temp,\n      repeatEndDate_temp,\n      byDay_temp,\n    } = this.state;\n\n    this.setState((prevState) => ({\n      showRepeatModal: false,\n      repeatOption: true,\n      repeatInputValue: prevState.repeatInputValue_temp,\n      repeatOccurrence: prevState.repeatOccurrence_temp,\n      repeatDropDown: prevState.repeatDropDown_temp,\n      repeatRadio: prevState.repeatRadio_temp,\n      repeatEndDate: prevState.repeatEndDate_temp,\n      byDay: prevState.byDay_temp,\n    }));\n\n    // If repeatDropDown_temp is DAY\n    if (repeatDropDown_temp === \"DAY\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Daily\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Daily, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Daily, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} days, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is WEEK\n    else if (repeatDropDown_temp === \"WEEK\") {\n      let selectedDays = [];\n      for (let [key, value] of Object.entries(byDay_temp)) {\n        value !== \"\" && selectedDays.push(value);\n      }\n      console.log(selectedDays, \"selectedDays week\");\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: \"Weekly on all days\",\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\", \")}`,\n            });\n          }\n        } else if (repeatRadio_temp === \"On\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Weekly on all days, until ${moment(\n                repeatEndDate_temp\n              ).format(\"LL\")}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\n                \", \"\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`,\n            });\n          }\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            if (selectedDays.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Weekly on all days, , ${repeatOccurrence_temp} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Weekly on ${selectedDays.join(\n                  \", \"\n                )}, ${repeatOccurrence_temp} times`,\n              });\n            }\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                \", \"\n              )}`,\n            });\n          }\n        } else if (repeatRadio_temp === \"On\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, until ${moment(\n                repeatEndDate_temp\n              ).format(\"LL\")}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                \", \"\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`,\n            });\n          }\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: \"Once\",\n            });\n          } else {\n            if (selectedDays.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, ${repeatOccurrence_temp} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                  \", \"\n                )}, ${repeatOccurrence_temp} times`,\n              });\n            }\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is MONTH\n    else if (repeatDropDown_temp === \"MONTH\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Monthly\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Monthly, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Monthly, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} months, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is YEAR\n    else if (repeatDropDown_temp === \"YEAR\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Annually\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Annually, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Annually, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} years, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n  };\n\n\n  hideAboutForm = e => {\n    this.setState({\n      showAboutModal: false\n    });\n  };\n\n  showDayViewOrAboutView = () => {\n    if (this.state.dayEventSelected) {\n      return this.eventFormAbstracted();\n    } else if (this.state.showAboutModal) {\n      // return this.aboutFormAbstracted();\n      return <AboutModal CameBackFalse={this.hideAboutForm}/>\n    }\n  };\n\n  showCalendarView = () => {\n    if(this.state.calendarView === \"Month\")\n      return this.calendarAbstracted()\n    else if(this.state.calendarView === \"Day\")\n      return this.dayViewAbstracted()\n    else if(this.state.calendarView === \"Week\")\n      return this.weekViewAbstracted()\n  }\n\n  render() {\n    //The variable below will help decide whether to center the Calendar object or not\n    var onlyCal =\n      !this.state.showRoutineGoalModal &&\n      !this.state.showGoalModal &&\n      !this.state.showRoutineModal;\n\n    return (\n      //width and height is fixed now but should be by % percentage later on\n      <div\n        className=\"normalfancytext\"\n        style={{\n          marginLeft: \"0px\",\n          height: \"100%\",\n          width: \"2000px\",\n          // width: \"100%\",\n          // display: \"flex\",\n          // flexDirection: \"column\",\n          // justifyContent: \"center\",\n          // alignItems: \"center\",\n          // background: \"lightblue\",\n        }}\n      >\n        <div\n          style = {{\n            margin:'0',\n            padding:\"0\",\n            width:\"100%\"\n          }}\n        >\n          <Row style={{ margin: \"0\"}} className=\"d-flex flex-row\">\n            <div style={{float: \"right\", width: \"80px\", height: \"70px\"}}>\n              <FontAwesomeIcon icon={faImage} size=\"5x\"/> \n            </div>\n            <div style={{float: \"left\", width: \"227px\", height: \"50px\"}}>\n              <p style = {{ marginTop:\"25px\"}}>First Last</p>\n            </div>\n            {/* <Col xs={1} style = {{paddingRight:\"0px\", textAlign:\"left\"}}>\n              <FontAwesomeIcon icon={faImage} size=\"5x\"/> \n            </Col>\n            <Col xs={9} style = {{paddingLeft: \"0px\"}}>\n              <p style = {{marginBottom:\"0px\", marginTop:\"15px\"}}>First Last</p>\n            </Col> */}\n              {/* <col style = {{marginLeft:\"20px\", marginRight:\"20px\"}}>\n                <FontAwesomeIcon icon={faImage} size=\"5x\"/> \n                <p style = {{marginBottom:\"0px\"}}>First Last</p>\n              </span> */}\n          </Row>\n        </div>\n\n        <div\n          style={{\n            margin: \"0\",\n            padding: \"0\",\n            width: \"100%\",\n          }}\n        >\n          {this.abstractedMainEventGRShowButtons()}\n        </div>\n        <Container\n          fluid\n          style={{\n            marginTop: \"15px\",\n            marginLeft: \"0\",\n            // display: \"flex\",\n            // flexDirection: \"column\",\n            // justifyContent: \"center\",\n            // alignItems: \"center\",\n            // width: \"100%\"\n          }}\n        >\n          <Row\n            style={{\n              marginTop: \"0\",\n              // width: \"100%\",\n              // display: \"flex\",\n              // flexDirection: \"column\",\n              // justifyContent: \"center\"\n              // alignItems: \"center\"\n            }}\n          >\n            {/* the modal for routine/goal is called Firebasev2 currently */}\n            <Firebasev2\n              closeRoutineGoalModal={() => {\n                this.setState({ showRoutineGoalModal: false });\n              }}\n              showRoutineGoalModal={this.state.showRoutineGoalModal}\n              closeGoal={() => {\n                this.setState({ showGoalModal: false });\n              }}\n              closeRoutine={() => {\n                this.setState({ showRoutineModal: false });\n              }}\n              showRoutine={this.state.showRoutineModal}\n              showGoal={this.state.showGoalModal}\n            />\n            <Col\n              sm=\"auto\"\n              md=\"auto\"\n              lg=\"auto\"\n              style={onlyCal ? { marginLeft: \"20%\" } : { marginLeft: \"35px\" }}\n            >\n              {this.showCalendarView()}\n              <div\n                style={{ marginTop: \"50px\", textAlign: \"center\" }}\n                className=\"fancytext\"\n              >\n                Dedicated to Caitlin Little\n              </div>\n            </Col>\n            {/* <Col style={{ marginLeft: \"25px\" }}> */}\n            <Col >\n              {this.showDayViewOrAboutView()}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n\n  dayViewAbstracted = () => {\n    return (\n      <div\n        style={{\n          borderRadius: \"20px\",\n          backgroundColor: \"white\",\n          width: \"100%\",\n          marginLeft: \"10px\",\n          padding: \"20px\",\n          // border:\"1px black solid\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <Container>\n          <Row style={{ marginTop: \"0px\" }}>\n            <Col>\n              <div>\n                <FontAwesomeIcon\n                  style={{ marginLeft: \"50%\" }}\n                  icon={faChevronLeft}\n                  size=\"2x\"\n                  className=\"X\"\n                  onClick={(e) => {\n                    this.prevDay();\n                  }}\n                />\n              </div>\n            </Col>\n            <Col style={{ textAlign: \"center\" }} className=\"bigfancytext\">\n              <p>\n                {\" \"}\n                {this.getDay()} {this.getMonth()} {this.getYear()}{\" \"}\n              </p>\n            </Col>\n            <Col>\n              <FontAwesomeIcon\n                style={{ marginLeft: \"50%\" }}\n                icon={faChevronRight}\n                size=\"2x\"\n                className=\"X\"\n                onClick={(e) => {\n                  this.nextDay();\n                }}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <Row>\n          <DayEvents\n            dateContext={this.state.dateContext}\n            eventClickDayView={this.handleDayEventClick}\n            handleDateClick={this.handleDateClickOnDayView}\n            dayEvents={this.state.dayEvents}\n            getEventsByInterval={this.getEventsByIntervalDayVersion}\n          />\n          <DayRoutines dayRoutineClick={this.toggleShowRoutine} />\n          <DayGoals dayGoalClick={this.toggleShowGoal} />\n        </Row>\n      </div>\n    );\n  };\n\n  weekViewAbstracted = () => {\n    let startObject = this.state.dateContext.clone();\n    let startWeek = startObject.startOf('week')\n    return (\n      <div\n        style={{\n        borderRadius: \"20px\",\n        backgroundColor: \"white\",\n        width: \"100%\",\n        marginLeft: \"10px\",\n        padding: \"20px\",\n        // border:\"1px black solid\",\n        boxShadow:\n          \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n      }}>\n        <Container>\n        <Container>\n          <Row style={{ marginTop: \"0px\" }}>\n            <Col>\n              <div>\n                <FontAwesomeIcon\n                  style={{ marginLeft: \"50%\" }}\n                  icon={faChevronLeft}\n                  size=\"2x\"\n                  className=\"X\"\n                  onClick={e => {\n                    this.prevWeek();\n                  }}\n                />\n              </div>\n            </Col>\n            <Col md=\"auto\" style={{ textAlign: \"center\" }} className=\"bigfancytext\">\n              <p>\n                {\" \"}\n                Week of {startWeek.format('D MMMM YYYY')}{\" \"}\n              </p>\n            </Col>\n            <Col>\n              <FontAwesomeIcon\n                style={{ marginLeft: \"50%\" }}\n                icon={faChevronRight}\n                size=\"2x\"\n                className=\"X\"\n                onClick={e => {\n                  this.nextWeek();\n                }}\n              />\n            </Col>\n          </Row>\n        </Container>\n          <Row>\n              <WeekEvents\n                weekEvents={this.state.weekEvents}\n                dateContext={this.state.dateContext}\n                eventClick={this.handleWeekEventClick}\n              />\n          </Row>\n          <Row>\n              <WeekGoals />\n          </Row>\n          <Row>\n              <WeekRoutines />\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n\n  toggleShowRoutine = () => {\n    this.setState({\n      showRoutineModal: !this.state.showRoutineModal,\n      showGoalModal: false,\n      showRoutineGoalModal: false,\n    });\n  };\n\n  toggleShowGoal = () => {\n    this.setState({\n      showGoalModal: !this.state.showGoalModal,\n      showRoutineModal: false,\n      showRoutineGoalModal: false,\n    });\n  };\n\n  showEventsFormbyCreateNewEventButton = () => {\n    var newStart, newEnd;\n    if (this.state.calendarView === \"Month\") {\n      newStart = new Date();\n      newStart.setHours(0, 0, 0, 0);\n      newEnd = new Date();\n      newEnd.setHours(23, 59, 59, 59);\n    } else if (this.state.calendarView === \"Day\") {\n      newStart = new Date(this.state.dateContext.toDate());\n      newStart.setHours(0, 0, 0, 0);\n      newEnd = new Date(this.state.dateContext.toDate());\n      newEnd.setHours(23, 59, 59, 59);\n    }\n\n    this.setState({\n      newEventID: \"\",\n      newEventStart0: newStart,\n      newEventEnd0: newEnd,\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventDescription: \"\",\n      dayEventSelected: true,\n      isEvent: false,\n    });\n  };\n\n  changeCalendarView = (view) => {\n    this.setState(\n      {\n        calendarView: view,\n      },\n      this.updateEventsArray\n    );\n  };\n\n  abstractedMainEventGRShowButtons = () => {\n    // Redefine the width of those buttons; Should fix to be 100% and make\n    // enclosing div to be based on % and not 2000px\n\n    return (\n      // <Row>\n      \n        \n      \n      <Row\n        style={{\n          display: \"block\",\n          textAlign: \"center\",\n          fontSize: \"20px\",\n          paddingRight: \"165px\",\n          // display: \"flex\",\n          // justifyContent: \"center\",\n          // alignItems: \"center\"\n        }}\n      >\n        <div\n          style={{\n            display: \"inline-block\",\n            margin: \"10px\",\n            marginBottom: \"0\",\n            marginTop: \"10px\",\n          }}\n        >\n        <DropdownButton\n          style={{ top: \"5px\" }}\n          title={this.state.calendarView}\n        >\n          <Dropdown.Item\n            onClick={e => {\n              this.changeCalendarView(\"Month\");\n            }}\n          >\n            {\" \"}\n            Month{\" \"}\n          </Dropdown.Item>\n          <Dropdown.Item\n            onClick={e => {\n              this.changeCalendarView(\"Day\");\n            }}\n          >\n            {\" \"}\n            Day{\" \"}\n          </Dropdown.Item>\n          <Dropdown.Item\n            onClick={e => {\n              this.changeCalendarView(\"Week\");\n            }}\n          >\n            {\" \"}\n            Week{\" \"}\n          </Dropdown.Item>\n        </DropdownButton>\n        </div>\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState({\n              dateContext: moment()\n            },\n            this.updateEventsArray\n          );\n          }}\n        >\n          Today\n        </Button>\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState(\n              {\n                showAboutModal: false,\n                // dayEventSelected: !this.state.dayEventSelected\n              },\n              () => {\n                this.showEventsFormbyCreateNewEventButton();\n              }\n            );\n          }}\n        >\n          New Event\n        </Button>\n\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={this.toggleShowRoutine}\n        >\n          Routines\n        </Button>\n\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={this.toggleShowGoal}\n        >\n          {\" \"}\n          Goals{\" \"}\n        </Button>\n\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState({\n              showRoutineGoalModal: !this.state.showRoutineGoalModal,\n              showGoalModal: false,\n              showRoutineModal: false,\n            });\n          }}\n        >\n          Current Status\n        </Button>\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\", marginRight:\"200px\"}}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState({\n              showAboutModal: !this.state.showAboutModal,\n              dayEventSelected: false,\n            });\n          }}\n        >\n          About\n        </Button>\n       \n      </Row>\n        // <Button >\n        //   <FontAwesomeIcon icon={faImage} size=\"5x\"/> \n        //   <p>First Last</p>\n        // </Button>\n      // </Row>\n    );\n  };\n\n  calendarAbstracted = () => {\n    return (\n      <div\n        style={{\n          borderRadius: \"2%\",\n          backgroundColor: \"white\",\n          width: \"1000px\",\n          // marginLeft: \"10px\",\n          padding: \"45px\",\n          paddingBottom: \"10px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <div>\n          <Row style={{ marginTop: \"0px\" }}>\n            <Col>\n              <div>\n                <FontAwesomeIcon\n                  style={{ marginLeft: \"50%\" }}\n                  icon={faChevronLeft}\n                  size=\"2x\"\n                  className=\"X\"\n                  onClick={(e) => {\n                    this.prevMonth();\n                  }}\n                />\n              </div>\n            </Col>\n            <Col style={{ textAlign: \"center\" }} className=\"bigfancytext\">\n              <p>\n                {this.getMonth()} {this.getYear()}\n              </p>\n            </Col>\n            <Col>\n              <FontAwesomeIcon\n                style={{ marginLeft: \"50%\" }}\n                icon={faChevronRight}\n                size=\"2x\"\n                className=\"X\"\n                onClick={(e) => {\n                  this.nextMonth();\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n        <TylersCalendarv1\n          eventClick={this.handleEventClick}\n          handleDateClick={this.handleDateClick}\n          handleExpandClick={this.handleExpandClick}\n          originalEvents={this.state.originalEvents}\n          dateObject={this.state.todayDateObject}\n          today={this.state.today}\n          dateContext={this.state.dateContext}\n          // selectedDay={this.state.selectedDay}\n        />\n      </div>\n    );\n  };\n\n  /**\n   * This is where the event form is made\n   *\n   */\n  eventFormAbstracted = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n          marginLeft: \"35px\",\n          width: \"350px\",\n          marginTop: \"0\",\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({\n              dayEventSelected: false,\n              repeatOptionDropDown: \"Does not repeat\",\n            });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Event Form</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {\n            this.state.showRepeatModal && this.repeatModal()\n            // <RepeatModal\n            //   closeRepeatModal={this.closeRepeatModal}\n            //   todayObject={this.state.todayDateObject}\n            //   newEventStart0={this.state.newEventStart0}\n            // />\n          }\n          {this.eventFormInputArea()}\n        </Modal.Body>\n        <Modal.Footer>\n          <Container fluid>\n            <Row>\n              <Col style={{ float: \"right\", marginBottom: \"10px\" }}>\n                <Button\n                  variant=\"outline-primary\"\n                  onClick={() => {\n                    this.openRepeatModal();\n                    console.log(\"repeating\", this.state.newEventStart0);\n                  }}\n                >\n                  Repeating Options\n                </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col style={this.state.isEvent ? { display: \"none\" } : {}} xs={4}>\n                <Button\n                  onClick={this.handleSubmit}\n                  variant=\"info\"\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </Col>\n              <Col\n                style={\n                  this.state.isEvent\n                    ? { marginTop: \"0px\" }\n                    : { display: \"none\" }\n                }\n                xs={4}\n              >\n                <Button\n                  onClick={this.updateEventClick}\n                  className=\"btn btn-info\"\n                >\n                  Update\n                </Button>\n              </Col>\n              <Col xs={4}>\n                <Button variant=\"secondary\" onClick={this.hideEventForm}>\n                  Cancel\n                </Button>\n              </Col>\n              <Col xs={4}>\n                <Button\n                  style={this.state.isEvent ? {} : { display: \"none\" }}\n                  variant=\"danger\"\n                  onClick={this.deleteSubmit}\n                >\n                  {\" \"}\n                  Delete\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  repeatModal = () => {\n    // const [title, setTitle] = useState(\"DAY\");\n    // const [monthly, setMonthly] = useState(\"Monthly on day 13\");\n    // const [endDate, setEndDate] = useState(this.state.newEventStart0);\n    // const [inputValue, setInputValue] = useState(1);\n\n    // this.state.repeatEndDate = this.state.newEventStart0;\n\n    const week_days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    const d = new Date();\n\n    // Custom styles\n    const modalStyle = {\n      position: \"absolute\",\n      zIndex: \"5\",\n      left: \"50%\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"400px\",\n    };\n\n    const inputStyle = {\n      padding: \"8px 5px 8px 15px\",\n      marginLeft: \"8px\",\n      background: \"#F8F9FA\",\n      border: \"none\",\n      width: \"70px\",\n      borderRadius: \"4px\",\n      marginRight: \"8px\",\n    };\n\n    const selectStyle = {\n      display: \"inline-block\",\n    };\n\n    const weekStyle = {\n      display: \"flex\",\n      alignItems: \"center\",\n      textAlign: \"center\",\n      marginTop: \"10px\",\n    };\n\n    // const radioInputStyle = { display: \"flex\", alignItems: \"center\" };\n\n    // onClick event handler for the circles\n    const selectedDot = (e, index) => {\n      let curClass = e.target.classList;\n      if (curClass.contains(\"selected\")) {\n        curClass.remove(\"selected\");\n        const newByDay = { ...this.state.byDay_temp, [index]: \"\" };\n        this.setState({\n          byDay_temp: newByDay,\n        });\n      } else {\n        curClass.add(\"selected\");\n        const newByDay = {\n          ...this.state.byDay_temp,\n          [index]: week_days[index],\n        };\n        this.setState({\n          byDay_temp: newByDay,\n        });\n      }\n    };\n\n    let selectedDays = [];\n    for (let [key, value] of Object.entries(this.state.byDay_temp)) {\n      if (value !== \"\") selectedDays.push(key);\n    }\n    // If selected repeat every week, the following shows.\n    const weekSelected = (\n      <>\n        Repeat On\n        <div style={weekStyle}>\n          {week_days.map((day, i) => {\n            if (selectedDays.includes(i.toString())) {\n              return (\n                <span\n                  key={i}\n                  className=\"dot selected\"\n                  onClick={(e) => selectedDot(e, i)}\n                >\n                  {day.charAt(0)}\n                </span>\n              );\n            } else {\n              return (\n                <span\n                  key={i}\n                  className=\"dot\"\n                  onClick={(e) => selectedDot(e, i)}\n                >\n                  {day.charAt(0)}\n                </span>\n              );\n            }\n          })}\n        </div>\n      </>\n    );\n\n    // If selected repeat every month, the following shows.\n    // const monthSelected = (\n    //   <DropdownButton\n    //     title={this.state.repeatMonthlyDropDown}\n    //     variant=\"light\"\n    //     style={{ marginTop: \"20px\" }}\n    //   >\n    //     <Dropdown.Item\n    //       eventKey=\"Monthly on day 13\"\n    //       onSelect={eventKey => this.handleRepeatMonthlyDropDown(eventKey)}\n    //     >\n    //       Monthly on day 13\n    //     </Dropdown.Item>\n    //     <Dropdown.Item\n    //       eventKey=\"Monthly on the second Friday\"\n    //       onSelect={eventKey => this.handleRepeatMonthlyDropDown(eventKey)}\n    //     >\n    //       Monthly on the second Friday\n    //     </Dropdown.Item>\n    //   </DropdownButton>\n    // );\n\n    return (\n      <Modal.Dialog style={modalStyle}>\n        <Modal.Header closeButton onHide={this.closeRepeatModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Repeating Options</h5>\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            <Form.Group\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginLeft: \"5px\",\n              }}\n            >\n              Repeat every\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"10000\"\n                value={this.state.repeatInputValue_temp}\n                style={inputStyle}\n                onChange={(e) => this.handleRepeatInputValue(e.target.value)}\n              />\n              <DropdownButton\n                title={this.state.repeatDropDown_temp}\n                style={selectStyle}\n                variant=\"light\"\n              >\n                <Dropdown.Item\n                  eventKey=\"DAY\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  day\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"WEEK\"\n                  onSelect={(eventKey) =>\n                    this.handleRepeatDropDown(eventKey, week_days)\n                  }\n                >\n                  week\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"MONTH\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  month\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"YEAR\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  year\n                </Dropdown.Item>\n              </DropdownButton>\n            </Form.Group>\n            <Form.Group style={{ marginLeft: \"5px\" }}>\n              {this.state.repeatDropDown_temp === \"WEEK\" && weekSelected}\n            </Form.Group>\n            {/* {this.state.repeatDropDown === \"MONTH\" && monthSelected} */}\n            <Form.Group\n              style={{\n                height: \"140px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n                marginTop: \"20px\",\n                marginLeft: \"5px\",\n              }}\n              className=\"repeat-form\"\n              onChange={(e) => {\n                if (e.target.type === \"radio\") {\n                  this.setState({\n                    repeatRadio_temp: e.target.value,\n                  });\n                }\n              }}\n            >\n              Ends\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"Never\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"Never\" && true\n                    }\n                  />\n                  Never\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    name=\"radios\"\n                    value=\"On\"\n                    style={{ marginTop: \"10px\" }}\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"On\" && true\n                    }\n                  />\n                  On\n                  <DatePicker\n                    className=\"date-picker-btn btn btn-light\"\n                    selected={this.state.repeatEndDate_temp}\n                    onChange={(date) => this.handleRepeatEndDate(date)}\n                  ></DatePicker>\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    name=\"radios\"\n                    value=\"After\"\n                    style={{ marginTop: \"12px\" }}\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"After\" && true\n                    }\n                  />\n                  After\n                  <span style={{ marginLeft: \"60px\" }}>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"10000\"\n                      value={this.state.repeatOccurrence_temp}\n                      onChange={(e) =>\n                        this.handleRepeatOccurrence(e.target.value)\n                      }\n                      style={inputStyle}\n                      className=\"input-exception\"\n                    />\n                    occurrence\n                  </span>\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeRepeatModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={this.saveRepeatChanges}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  eventFormInputArea = () => {\n    return (\n      <Form>\n        <Row>\n          <Col>\n            <div style={{ width: \"300px\" }}>\n              <Form.Group>\n                <Form.Label>Event Name</Form.Label>\n                <Form.Control\n                  value={this.state.newEventName}\n                  onChange={this.handleNameChange}\n                  type=\"text\"\n                  placeholder=\"Title\"\n                />\n                <div style={{ color: \"red\" }}>\n                  {\" \"}\n                  {this.state.showNoTitleError}\n                </div>\n              </Form.Group>\n              <Form.Group value={this.state.newEventStart0} controlId=\"Y\">\n                <Form.Label>Start Time</Form.Label> <br />\n                {this.startTimePicker()}\n              </Form.Group>\n              <Form.Group value={this.state.newEventEnd0} controlId=\"X\">\n                <Form.Label>End Time</Form.Label>\n                <br />\n                {this.endTimePicker()}\n                <div style={{ color: \"red\" }}> {this.state.showDateError}</div>\n              </Form.Group>\n              <Form.Group style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <Form.Label>Repeating Options</Form.Label>\n                <DropdownButton\n                  className=\"repeatOptionDropDown\"\n                  // onClick={this.openRepeatModal}\n                  title={this.state.repeatOptionDropDown}\n                  variant=\"light\"\n                >\n                  <Dropdown.Item\n                    eventKey=\"Does not repeat\"\n                    onSelect={(eventKey) =>\n                      this.setState({\n                        repeatOptionDropDown: eventKey,\n                        repeatOption: false,\n                      })\n                    }\n                  >\n                    Does not repeat\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    eventKey=\"Custom...\"\n                    onSelect={(eventKey) => {\n                      this.openRepeatModal();\n                      // this.setState({ repeatOptionDropDown: eventKey });\n                    }}\n                  >\n                    Custom...\n                  </Dropdown.Item>\n                </DropdownButton>\n              </Form.Group>\n              <Form.Group value={\"Extra Slot\"}>\n                <Form.Label>Guests</Form.Label>\n                <Form.Control\n                  value={this.state.newEventGuests}\n                  onChange={this.handleGuestChange}\n                  type=\"email\"\n                  placeholder=\"example@gmail.com\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"Location\">\n                <Form.Label>Location:</Form.Label>\n                <Form.Control\n                  value={this.state.newEventLocation}\n                  onChange={this.handleLocationChange}\n                  type=\"text\"\n                  placeholder=\"Location\"\n                />\n              </Form.Group>\n              <Form.Group >\n                <Form.Label>Notifications:</Form.Label>\n                <Row>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Control\n                      value={this.state.newEventNotification}\n                      onChange={this.handleNotificationChange}\n                      type=\"number\"\n\n                      placeholder=\"5\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n\n                    />\n                  </Col>\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}>\n                      {\" \"}\n                      Min Before Start Time\n                    </Form.Text>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"15px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Control\n                      // value={this.state.newEventNotification}\n                      // onChange={this.handleNotificationChange}\n                      type=\"number\"\n                      placeholder=\"30\"\n                      style={{ width: \"70px\", marginTop: \".25rem\" }}\n                    />\n                  </Col>\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}>\n                      {\" \"}\n                      Min After Start Time\n                    </Form.Text>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"15px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Control\n                      // value={this.state.newEventNotification}\n                      // onChange={this.handleNotificationChange}\n                      type=\"number\"\n\n                      placeholder=\"5\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n\n                    />\n                  </Col>\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}>\n                      {\" \"}\n                      Min After End Time\n                    </Form.Text>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"15px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n              </Form.Group>\n\n              {/* <Form.Group controlId=\"formBasicCheckbox\">\n                <Row style={{ height: \"30px\" }}>\n                  <Col>\n                    <Form.Check type=\"checkbox\">\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        onChange={e => this.notifyBefore(e)}\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                  <Col>\n                    <Form.Check type=\"checkbox\">\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        onChange={e => this.notifyBefore(e)}\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                      <Form.Check.Label style={{ marginLeft: \"10px\" }}>\n                        Before\n                      </Form.Check.Label>\n                    </Form.Check>\n                  </Col>\n                </Row>\n                {this.state.notificationBeforeChecked && <EventBeforeChecked />}\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Row style={{ height: \"30px\" }}>\n                  <Col>\n                    <Form.Check type=\"checkbox\">\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                      <Form.Check.Label style={{ marginLeft: \"10px\" }}>\n                        During\n                      </Form.Check.Label>\n                    </Form.Check>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Row style={{ height: \"30px\" }}>\n                  <Col>\n                    <Form.Check type=\"checkbox\">\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                      <Form.Check.Label style={{ marginLeft: \"10px\" }}>\n                        After\n                      </Form.Check.Label>\n                    </Form.Check>\n                  </Col>\n                </Row>\n              </Form.Group> */}\n\n              {/* End here */}\n              <Form.Group controlId=\"Description\">\n                <Form.Label>Description:</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  value={this.state.newEventDescription}\n                  onChange={this.handleDescriptionChange}\n                  type=\"text\"\n                  placeholder=\"Description\"\n                />\n              </Form.Group>\n            </div>\n          </Col>\n        </Row>\n      </Form>\n    );\n  };\n\n  notifyBefore = (e) => {\n    console.log(\"this is result of checked:\");\n    console.log(e.target.checked);\n    let beforeChecked = e.target.checked;\n    this.setState({ notificationBeforeChecked: beforeChecked });\n  };\n\n  startTimePicker = () => {\n    // const [startDate, setStartDate] = useState(new Date());\n    return (\n      <DatePicker\n        className=\"form-control\"\n        type=\"text\"\n        selected={this.state.newEventStart0}\n        onChange={(date) => {\n          this.setState(\n            {\n              newEventStart0: date,\n            },\n            () => {\n              console.log(\"starttimepicker\", this.state.newEventStart0);\n            }\n          );\n        }}\n        showTimeSelect\n        timeIntervals={15}\n        timeCaption=\"time\"\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\n      />\n    );\n  };\n\n  endTimePicker = () => {\n    // const [startDate, setStartDate] = useState(new Date());\n    return (\n      <DatePicker\n        className=\"form-control\"\n        type=\"text\"\n        style={{ width: \"100%\" }}\n        selected={this.state.newEventEnd0}\n        onChange={(date) => {\n          this.setState(\n            {\n              newEventEnd0: date,\n            },\n            () => {\n              console.log(this.state.newEventEnd0);\n            }\n          );\n        }}\n        showTimeSelect\n        timeIntervals={15}\n        timeCaption=\"time\"\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\n      />\n    );\n  };\n  /*\n  getYear:\n  returns the year based on year format\n  */\n  getYear = () => {\n    return this.state.dateContext.format(\"Y\");\n  };\n\n  /*\n  getMonth:\n  returns the month based on the month of the dateContext\n  in english word form\n  */\n  getMonth = () => {\n    return this.state.dateContext.format(\"MMMM\");\n  };\n\n  getDay = () => {\n    return this.state.dateContext.format(\"D\");\n  };\n\n  /*\n  hideEventForm:\n  Hides the create/edit events form when a date or event is clicked\n  */\n  hideEventForm = (e) => {\n    //console.log(\"Tyler says: Hello\");\n    this.setState({\n      dayEventSelected: false,\n      repeatOptionDropDown: \"Does not repeat\",\n    });\n  };\n\n  /*\nAll functions below will change a variables\nwhen there is a change in the event form\n*/\n\n  handleNameChange = (event) => {\n    this.setState({ newEventName: event.target.value });\n  };\n\n  handleGuestChange = (event) => {\n    this.setState({ newEventGuests: event.target.value });\n  };\n\n  handleLocationChange = (event) => {\n    this.setState({ newEventLocation: event.target.value });\n  };\n\n  handleNotificationChange = (event) => {\n    this.setState({ newEventNotification: event.target.value });\n  };\n\n  handleDescriptionChange = (event) => {\n    this.setState({ newEventDescription: event.target.value });\n  };\n\n  /*\n  *\n  getEvents:\n  this essentially gets the events data from google calendar and puts it\n  into the proper state variables. Currently the parsed data for full calendar\n  is used but the unfiltered data from google calendar API is not used but\n  in case we do need it, it's saved in this.state.originalEvents\n  *\n  *\n  */\n  getEventsByInterval = (start0, end0) => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {\n          start: start0,\n          end: end0,\n        },\n      })\n      .then((response) => {\n        var events = response.data;\n        this.setState(\n          {\n            newEventID: \"\",\n            newEventName: \"\",\n            // newEventStart: \"\",\n            // newEventEnd: \"\",\n            originalEvents: events,\n          },\n          () => {\n            console.log(\"New Events Arrived\", events);\n          }\n        );\n      })\n      .catch((error) => {\n        console.log(\"Error Occurred \" + error);\n      });\n  };\n\n  /*\n   * getEventsByIntervalDayVersion:\n   * gets exactly the days worth of events from the google calendar\n   */\n  getEventsByIntervalDayVersion = (day) => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {\n          start: day.toString(),\n          end: day.toString(),\n        },\n      })\n      .then((response) => {\n        var events = response.data;\n        this.setState(\n          {\n            dayEvents: events,\n          },\n          () => {\n            console.log(\"New Events Arrived\", events);\n          }\n        );\n      })\n      .catch((error) => {\n        console.log(\"Error Occurred \" + error);\n      });\n  };\n\n  //Get and store events by week, take first and last day of the week as parameters as date object\n  getEventsByIntervalWeekVersion = (start0, end0) => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {\n          start: start0,\n          end: end0\n        }\n      })\n      .then(response => {\n        var events = response.data;\n        this.setState(\n          {\n            weekEvents: events\n          },\n          // () => {\n          //   console.log(\"New Events Arrived\");\n          //   console.log(this.state.weekEvents)\n          // }\n        );\n      })\n      .catch(error => {\n        console.log(\"Error Occurred \" + error);\n      });\n  };\n}\n","import React, { Component } from \"react\";\n\n// import { BrowserRouter as Router } from \"react-router-dom\";\n\nimport MainPage from \"./components/Main.jsx\";\n// import Header from './components/Header.jsx'\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        {/* <header className=\"App-header\"> */}\n        {/* <Router> */}\n        {/* <Header /> */}\n        {/* <div> */}\n        <MainPage />\n        {/* </div> */}\n\n        {/* </Router> */}\n        {/* </ header> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n<BrowserRouter>\n\t<App />\n\t</BrowserRouter>\n, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}