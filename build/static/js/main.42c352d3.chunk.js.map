{"version":3,"sources":["components/firebase.js","components/ShowNotifications.jsx","components/addNewGRItem.jsx","components/addNewATItem.jsx","components/addNewISItem.jsx","components/DeleteISItem.jsx","components/deleteAT.jsx","components/deleteGR.jsx","components/editGR.jsx","components/editIS.jsx","components/EditAT.jsx","components/ShowATList.jsx","components/ShowISList.jsx","components/Firebasev2.jsx","components/TCal.jsx","components/DayRoutines.jsx","components/DayGoals.jsx","components/DayEvents.jsx","components/WeekEvents.jsx","components/WeekRoutines.jsx","components/WeekGoals.jsx","components/AddNewPeople.jsx","components/AboutModal.jsx","components/CreateNewAccountModal.jsx","components/Main.jsx","App.js","registerServiceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","signInAnonymously","catch","error","code","message","storage","ShowNotifications","props","convertTimeToHRMMSS","e","hours","target","value","rhours","Math","floor","minutes","rminutes","round","toString","length","convertToMinutes","myStr","myStr2","split","hrToMin","state","Form","Group","controlId","Row","Col","style","paddingRight","Control","type","placeholder","width","marginTop","this","itemToEditPassedIn","ta_notifications","before","time","onChange","stopPropagation","temp","user_notifications","notificationChange","xs","paddingLeft","Text","fontSize","Check","Input","height","checked","is_enabled","as","rows","marginLeft","preventDefault","onKeyDown","keyCode","during","after","React","Component","AddNewGRItem","grArr","itemToEdit","title","id","is_persistent","isRoutine","photo","is_complete","is_available","available_end_time","available_start_time","datetime_completed","datetime_started","audio","is_timed","expected_completion_time","is_sublist_available","is_set","routineDocsPath","firestore","collection","doc","theCurrentUserId","arrPath","showRepeatModal","repeatOption","repeatOptionDropDown","repeatDropDown","repeatDropDown_temp","repeatMonthlyDropDown","repeatInputValue","repeatInputValue_temp","repeatOccurrence","repeatOccurrence_temp","repeatRadio","repeatRadio_temp","repeatEndDate","repeatEndDate_temp","byDay","0","1","2","3","4","5","6","byDay_temp","repeatSummary","getGRDataFromFB","console","log","get","then","exists","x","data","undefined","setState","alert","newInputSubmit","addNewDoc","closeModal","add","ref","newArr","ATArray","push","updateEntireArray","update","refresh","handleNotificationChange","startTimePicker","className","selected","date","prevState","showTimeSelect","timeIntervals","timeCaption","dateFormat","endTimePicker","openRepeatModal","closeRepeatModal","saveRepeatChanges","moment","format","selectedDays","Object","entries","join","handleRepeatEndDate","handleRepeatDropDown","eventKey","week_days","newByDay","handleRepeatInputValue","handleRepeatOccurrence","repeatModal","inputStyle","Date","padding","background","border","borderRadius","marginRight","selectedDot","index","curClass","classList","contains","remove","key","weekSelected","display","alignItems","textAlign","map","day","i","includes","onClick","charAt","Modal","Dialog","position","zIndex","left","top","transform","Header","closeButton","onHide","Title","Body","min","max","DropdownButton","variant","Dropdown","Item","onSelect","flexDirection","justifyContent","margin","Label","name","defaultChecked","Footer","Button","AddNewATItem","ATItem","fbPath","hideNewATModal","newActionTitle","AddNewISItem","atArr","newInstructionTitle","handleInputChange","ISArray","ISItem","hideNewISModal","pop","DeleteISItem","submitRequest","items","deleteIndex","slice","concat","confirmation","window","confirm","onMouseOver","event","color","onMouseOut","icon","faTrashAlt","size","deleteAT","tempdeleteArrPortion","Array","Data","path","param","headers","body","JSON","stringify","method","fetch","response","json","result","deleteArrPortion","deleteGR","Path","editGR","FBPath","showEditModal","showTimeSelectOnly","editGRForm","start_time","end_time","marginLeftV","showIcon","faEdit","prevProps","editIS","editISForm","editAT","editATForm","ShowATList","editFirBaseFalse","iconShow","Index","editFirBaseTrue","faList","faSlash","ShowISList","FirebaseV2","firebaseRootPath","theCurrentUserID","singleGR","show","arr","singleAT","singleATitemArr","singleISitemArr","modalWidth","addNewGRModalShow","addNewATModalShow","addNewISModalShow","thumbnailWidth","thumbnailHeight","thumbnailWidthV2","thumbnailHeightV2","availabilityColorCode","refreshATItem","resArr","createListofAT","refreshISItem","createListofIS","singleAt","grabFireBaseRoutinesGoalsData","getATList","persist","db","docRef","A","res","tempID","tempPhoto","tempTitle","tempAvailable","ListGroup","action","ATonClickEvent","marginBottom","src","alt","faUser","faUserAltSlash","ISonClickEvent","GRonClickEvent","stepsInstructionArrayPath","findIndexByID","originalGoalsAndRoutineArr","getRoutines","displayRoutines","routines","tempPersist","formatDateTime","getGoals","displayGoals","goals","getGoalsStatus","isComplete","faTrophy","faRunning","getRoutinesStatus","abstractedGoalsList","boxShadow","closeGoal","AddNewGRModalAbstracted","abstractedActionsAndTaskList","overflow","abstractedRoutineList","closeRoutine","addRoutineOnClick","newStart","newEnd","calendarView","setHours","dateContext","toDate","todayDateObject","abstractedInstructionsAndStepsList","addNewTaskInputBox","InputGroup","FormControl","Append","abstractedRoutineGoalStatusList","closeRoutineGoalModal","addNewGoalInputBox","str","formattedStr","replace","displayCompletedGoals","displayCompletedRoutines","showRoutineGoalModal","sm","md","lg","showRoutine","showGoal","TylersCalendarv1","weekdays","weekdaysShort","year","currentDay","dateObject","month","daysInMonth","firstDayOfMonth","startOf","getEventsforDay","tempStart","tempEnd","originalEvents","j","start","dateTime","end","startDate","getDate","endDate","onEventClick","textShadow","summary","eventClick","onDayClick","d","handleDateClick","onExpandClick","handleExpandClick","blanks","sameDate","bind","parseInt","totalSlots","cells","forEach","row","daysinmonth","tableLayout","DayRoutines","dayView","borderTop","pxPerHour","RoutineClicked","dayRoutineClick","getEventItem","hour","sameTimeEventCount","itemWidth","eventBoxSize","addmarginLeft","start_dateStr","toISOString","shift","start_timeStr","start_timeAndDate","end_dateStr","end_timeStr","end_timeAndDate","tempStartTime","tempEndTime","getHours","minsToMarginTop","getMinutes","pxPerHourForConversion","newElement","data-toggle","data-placement","dayViewItems","Container","DayGoals","GoalClicked","dayGoalClick","DayEvents","timeDisplay","dayEvents","eventClickDayView","curDate","hourDiff","float","minDiff","marginFromLeft","WeekEvents","dateDisplay","clone","weekEvents","onWeekClick","weekViewItems","isSameOrAfter","isSameOrBefore","hourDisplay","createRef","curHour","current","scrollTop","overflowX","overflowY","WeekRoutines","WeekGoals","AddNewPeople","have_pic","important","phone_number","pic","relationship","unique_id","saveChangesButtonEnabled","peopleDocsPath","currentUserId","handleFileSelected","file","files","targetFile","put","on","snapshot","percentage","bytesTransfered","totalBytes","err","child","getDownloadURL","url","newPersonInputSubmit","updateWithId","newPersonAdded","accept","disabled","AboutModal","hideAboutForm","CameBackFalse","saveButtonEnabled","keys","aboutMeObject","handleImpPeople1","file2","importantPeople1","handleImpPeople2","file3","importantPeople2","handleImpPeople3","file4","importantPeople3","grabFireBaseAllPeopleNames","peoplesArray","importantPeopleArray","importantPeopleReferencid","test","docs","peopleNamesArray","enableDropDown","importantPoeplArrayLength","importantPeople1id","importantPeople2id","importantPeople3id","grabFireBaseAboutMeData","firstName","first_name","lastName","last_name","hidePeopleModal","showAddNewPeopleModal","updatePeopleArray","changeImpPersonOne","Reference","temp2","ImporPersonOneChange","importantPeople1Previous","importantPeople1DocRefChanged","changeImpPersonTwo","ImporPersonTwoChange","importantPeople2Previous","importantPeople2DocRefChanged","changeImpPersonThree","ImporPersonThreeChange","importantPeople3Previous","importantPeople3DocRefChanged","updateProfilePic","message_card","message_day","faImage","keyName","keyIndex","fluid","email_id","google_auth_token","google_refresh_token","UserDocsPath","newUserInputSubmit","newUserAdded","MainPage","routine","goal","newEventStart0","getDay","handleRepeatMonthlyDropDown","updateProfileFromFirebase","usersArray","nameIdObject","profilePicURLArray","theCurrentUserName","theCurrentUserPic","user","picURL","userIdAndNames","enableNameDropDown","userPicsArray","currentUserPicUrl","currentUserName","getThisMonthEvents","axios","params","events","handleDayEventClick","guestList","attendees","reduce","nextGuest","email","newEventID","newEventEnd0","newEventName","newEventGuests","newEventLocation","location","newEventNotification","reminders","overrides","newEventDescription","description","dayEventSelected","isEvent","showNoTitleError","showDateError","showAboutModal","recurrenceRule","showDeleteRecurringModal","deleteRecurringOption","showEditRecurringModal","editRecurringOption","handleWeekEventClick","repeatSummaryCompute","untilSubString","untilIndex","indexOf","substring","endUntilIndex","countSubString","countIndex","endCountIndex","intervalSubString","intervalIndex","endIntervalIndex","byDaySubString","byDayArray","byDayIndex","endByDayIndex","handleEventClick","recurringEventId","newEvent","newEventRecurringID","handleDateClickOnWeekView","arg","handleDateClickOnDayView","validate","titleError","dayError","startDay","endDay","startMonth","getUTCMonth","endMonth","startYear","getFullYear","endYear","startHour","endHour","newDate","updateEventsArray","handleSubmit","createEvent","updateEventClick","eventList","updateRequest","a","guests","formattedEmail","emailList","match","responseStatus","minutesNotification","updatedEvent","timeZone","Intl","DateTimeFormat","resolvedOptions","recurrence","defineRecurrence","useDefault","sequence","ID","creator","created","organizer","status","newRecurrenceRule","newUntilSubString","diff","duration","asDays","Error","post","extra","frequency","rrule","exdate","unshift","toUpperCase","repeat_end_date","deleteSubmit","newTitle","reminderTime","nextMonth","assign","prevMonth","subtract","nextDay","prevDay","nextWeek","prevWeek","startObject","endObject","endOf","getEventsByInterval","getEventsByIntervalDayVersion","getEventsByIntervalWeekVersion","hideNewAccountForm","showNewAccountmodal","theNewUserAdded","updatePic","changeUser","showDayViewOrAboutView","eventFormAbstracted","showCalendarView","calendarAbstracted","dayViewAbstracted","weekViewAbstracted","backgroundColor","faChevronLeft","getMonth","getYear","faChevronRight","toggleShowRoutine","toggleShowGoal","startWeek","showRoutineModal","showGoalModal","showEventsFormbyCreateNewEventButton","changeCalendarView","view","abstractedMainEventGRShowButtons","paddingBottom","today","deleteRecurringModal","editRecurringModal","eventFormInputArea","openEditRecurringModal","hideEventForm","openDeleteRecurringModal","closeEditRecurringModal","closeDeleteRecurringModal","deleteRecurring","timeMin","timeMax","delete","array","handleNameChange","handleGuestChange","handleLocationChange","handleDescriptionChange","start0","end0","eventNotifications","onlyCal","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.42c352d3.chunk.js","sourcesContent":["import * as firebase from 'firebase';\n// import { storage } from 'firebase-admin';\nimport 'firebase/storage';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDBgPVcjoV8LbR4hDA7tm3UoP0abMw8guE\",\n    authDomain: \"project-caitlin-c71a9.firebaseapp.com\",\n    databaseURL: \"https://project-caitlin-c71a9.firebaseio.com\",\n    projectId: \"project-caitlin-c71a9\",\n    storageBucket: \"project-caitlin-c71a9.appspot.com\",\n    messagingSenderId: \"711685546849\",\n    appId: \"1:711685546849:web:5c7a982748eb3bec35db20\",\n    measurementId: \"G-DCQF4LY5ZH\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  firebase.auth().signInAnonymously().catch(function(error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    // ...\n  });\n  var storage = firebase.storage();\n  // var admin = require(\"firebase-admin\");\n  // var storage = firebase.storage();\n\n// export default !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\nexport {storage, firebase as default};","import React from 'react';\nimport { Form,Row,Col} from \"react-bootstrap\";\n\n\nclass ShowNotifications extends React.Component{\n  constructor(props) {\n    super(props)\n    \n    this.state={\n       \n    };\n  }\n\n  convertTimeToHRMMSS =  (e) => {\n        \n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num/60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours)* 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length === 1) {\n        rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length === 1) {\n        rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours+\":\" + rminutes +\":\" + \"00\";\n  }\n\n  convertToMinutes = (myStr) => {\n      // console.log(myStr);\n      if(myStr === 0 ){\n        return 0; \n      }\n      let myStr2 = myStr.split(':');\n      let hours = myStr2[0];\n      let hrToMin = hours* 60;\n      let minutes = (myStr2[1] * 1 )+ hrToMin;\n      // let seconds = myStr2[2];\n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n      return minutes;\n  }\n    render(){\n        return (\n            <div> \n                <Form.Group controlId=\"Notification\">\n                <Row>\n                  <Col style = {{paddingRight: \"0px\" }}>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"5\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n                      value = {this.convertToMinutes(this.props.itemToEditPassedIn.ta_notifications.before.time)}\n                      onChange={\n                        (e) => { e.stopPropagation(); \n                          let temp = this.props.itemToEditPassedIn; \n                          temp.ta_notifications.before.time = this.convertTimeToHRMMSS(e);\n                          temp.user_notifications.before.time = this.convertTimeToHRMMSS(e);\n                          this.props.notificationChange(temp)\n                        }\n                      }\n                    />\n                  </Col>\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min Before Start Time</Form.Text>\n                  </Col>\n                </Row>\n                <Row style = {{ marginTop:\"15px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.user_notifications.before.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.user_notifications.before.is_enabled = !temp.user_notifications.before.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.user_notifications.before.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.user_notifications.before.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.user_notifications.before.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.ta_notifications.before.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.ta_notifications.before.is_enabled = !temp.ta_notifications.before.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.ta_notifications.before.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.ta_notifications.before.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.ta_notifications.before.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\" }}>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"30\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n                      value = {this.convertToMinutes(this.props.itemToEditPassedIn.ta_notifications.during.time)}\n                      onChange={\n                        (e) => { e.stopPropagation(); \n                          let temp = this.props.itemToEditPassedIn; \n                          temp.ta_notifications.during.time = this.convertTimeToHRMMSS(e);\n                          temp.user_notifications.during.time = this.convertTimeToHRMMSS(e);\n                          this.props.notificationChange(temp)\n                          }\n                      }\n                    />\n                  </Col>\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min After Start Time</Form.Text>\n                  </Col>\n                </Row>\n                <Row style = {{ marginTop:\"15px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.user_notifications.during.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.user_notifications.during.is_enabled = !temp.user_notifications.during.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.user_notifications.during.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.user_notifications.during.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.user_notifications.during.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}} >\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.ta_notifications.during.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.ta_notifications.during.is_enabled = !temp.ta_notifications.during.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.ta_notifications.during.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.ta_notifications.during.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if(e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.ta_notifications.during.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\" }}>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"5\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n                      value = {this.convertToMinutes(this.props.itemToEditPassedIn.ta_notifications.after.time)}\n                      onChange={\n                        (e) => { e.stopPropagation(); \n                          let temp = this.props.itemToEditPassedIn; \n                          temp.ta_notifications.after.time = this.convertTimeToHRMMSS(e);\n                          temp.user_notifications.after.time = this.convertTimeToHRMMSS(e);\n                          this.props.notificationChange(temp)\n                          }\n                      }\n                    />\n                  </Col>\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min After End Time</Form.Text>\n                  </Col>\n                </Row>\n                <Row style = {{ marginTop:\"15px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.user_notifications.after.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.user_notifications.after.is_enabled = !temp.user_notifications.after.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.user_notifications.after.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.user_notifications.after.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.user_notifications.after.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}} >\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.ta_notifications.after.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.ta_notifications.after.is_enabled = !temp.ta_notifications.after.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.ta_notifications.after.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.ta_notifications.after.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.ta_notifications.after.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n              \n              </Form.Group>\n            </div>\n        );\n    }\n}\n\nexport default ShowNotifications;","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport { Button, Dropdown, DropdownButton, Modal } from \"react-bootstrap\";\nimport ShowNotifications from \"./ShowNotifications\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport { Form, Row, Col } from \"react-bootstrap\";\n\nexport default class AddNewGRItem extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Is this a Routine? \" + this.props.isRoutine);\n  }\n  state = {\n    grArr: [], //goal, routine original array,\n    // startTime: this.props.singleGR.available_start_time,\n    // endTime: this.props.singleGR.available_end_time,\n    itemToEdit: {\n      title: \"\",\n      id: \"\",\n      is_persistent: this.props.isRoutine,\n      photo: \"\",\n      is_complete: false,\n      is_available: true,\n      // todayDateObject: this.props.todayDateObject,\n      // available_end_time: this.props.singleGR.available_end_time,\n      // available_start_time: this.props.singleGR.available_start_time,\n      available_end_time: \"23:59:59\",\n      available_start_time: \"00:00:00\",\n      datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      audio: \"\",\n      is_timed: false,\n      expected_completion_time: \"01:00:00\",\n      is_sublist_available: true,\n      ta_notifications: {\n        before: {\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\",\n        },\n        during: {\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:30:00\",\n        },\n        after: {\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\",\n        },\n      },\n      user_notifications: {\n        before: {\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\",\n        },\n        during: {\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:30:00\",\n        },\n        after: {\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\",\n        },\n      },\n    }, //this is essentially the new item\n    //below are references to firebase directories\n    routineDocsPath: firebase\n      .firestore()\n      .collection(\"users\")\n      // .doc(\"7R6hAVmDrNutRkG3sVRy\")\n      .doc(this.props.theCurrentUserId)\n      .collection(\"goals&routines\"),\n    arrPath: firebase\n      .firestore()\n      .collection(\"users\")\n\n      .doc(this.props.theCurrentUserId),\n    // .doc(\"7R6hAVmDrNutRkG3sVRy\"),\n\n    // .doc(\"7R6hAVmDrNutRkG3sVRy\"),\n    showRepeatModal: false,\n    repeatOption: false,\n    repeatOptionDropDown: \"Does not repeat\",\n    repeatDropDown: \"DAY\",\n    repeatDropDown_temp: \"DAY\",\n    repeatMonthlyDropDown: \"Monthly on day 13\",\n    repeatInputValue: \"1\",\n    repeatInputValue_temp: \"1\",\n    repeatOccurrence: \"1\",\n    repeatOccurrence_temp: \"1\",\n    repeatRadio: \"Never\",\n    repeatRadio_temp: \"Never\",\n    repeatEndDate: \"\",\n    repeatEndDate_temp: \"\",\n    byDay: {\n      0: \"\",\n      1: \"\",\n      2: \"\",\n      3: \"\",\n      4: \"\",\n      5: \"\",\n      6: \"\",\n    },\n    byDay_temp: {\n      0: \"\",\n      1: \"\",\n      2: \"\",\n      3: \"\",\n      4: \"\",\n      5: \"\",\n      6: \"\",\n    },\n    repeatSummary: \"\",\n  };\n\n  componentDidMount() {\n    this.props.isRoutine\n      ? console.log(\"Routine Input\")\n      : console.log(\"Goal Input\");\n\n    this.getGRDataFromFB();\n  }\n\n  getGRDataFromFB = () => {\n    //Grab the goals/routine array from firebase and then store it in state varible grArr\n    console.log(\n      \"this is the goals and rountins from firebase\",\n      this.state.arrPath\n    );\n    this.state.arrPath\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          console.log(\"getGRDataFromFB DATA:\");\n          // console.log(doc.data());\n          var x = doc.data();\n          if (x[\"goals&routines\"] != undefined) {\n            x = x[\"goals&routines\"];\n            console.log(\"this is the goals and routines\", x);\n            this.setState({\n              grArr: x,\n            });\n          }\n          // x = x[\"goals&routines\"];\n          // console.log(x);\n          // this.setState({\n          //   grArr: x,\n          // });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document! 2\");\n        }\n      })\n      .catch(function (error) {\n        console.log(\"Error getting document:\", error);\n        alert(\"Error getting document:\", error);\n      });\n  };\n\n  newInputSubmit = () => {\n    if (this.state.itemToEdit.title === \"\") {\n      alert(\"Invalid Input\");\n      return;\n    }\n    if (this.state.itemToEdit.photo === \"\") {\n      if (this.props.isRoutine) {\n        this.state.itemToEdit.photo =\n          \"https://firebasestorage.googleapis.com/v0/b/project-caitlin-c71a9.appspot.com/o/Routines-1.png?alt=media&token=5534e930-7cc1-4c5d-a6f3-fb8b6053a6a2\";\n      } else {\n        this.state.itemToEdit.photo =\n          \"https://firebasestorage.googleapis.com/v0/b/project-caitlin-c71a9.appspot.com/o/Goals-1.png?alt=media&token=3a5fa4f2-a136-4fdd-acf7-9007c08ccdf2\";\n      }\n    }\n    this.addNewDoc();\n    this.props.closeModal();\n  };\n\n  addNewDoc = () => {\n    this.state.routineDocsPath\n      .add({\n        title: this.state.itemToEdit.title,\n        \"actions&tasks\": [],\n      })\n      .then((ref) => {\n        if (ref.id === null) {\n          alert(\"Fail to add new routine / goal item\");\n          return;\n        }\n        console.log(ref);\n        let newArr = this.props.ATArray;\n        let temp = this.state.itemToEdit;\n        temp.id = ref.id;\n        temp.available_start_time = this.state.itemToEdit.available_start_time;\n        temp.available_end_time = this.state.itemToEdit.available_end_time;\n        console.log(\"Added document with ID: \", ref.id);\n        // this.state.grArr.push(temp);\n        newArr.push(temp);\n        this.updateEntireArray(newArr);\n      });\n  };\n\n  //This function will below will essentially take in a array and have a key map to it\n  updateEntireArray = (newArr) => {\n    // 2. update adds to the document\n    let db = this.state.arrPath;\n    db.update({ \"goals&routines\": newArr }).then((doc) => {\n      console.log(\"updateEntireArray Finished\");\n      console.log(doc);\n      this.getGRDataFromFB();\n      if (this.props != null) {\n        console.log(\"refreshing FireBasev2 from AddNewGRItem\");\n        this.props.refresh();\n      }\n    });\n  };\n\n  convertTimeToHRMMSS = (e) => {\n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num / 60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours) * 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length === 1) {\n      rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length === 1) {\n      rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours + \":\" + rminutes + \":\" + \"00\";\n  };\n\n  convertToMinutes = () => {\n    let myStr = this.state.itemToEdit.expected_completion_time.split(\":\");\n    let hours = myStr[0];\n    let hrToMin = hours * 60;\n    let minutes = myStr[1] * 1 + hrToMin;\n    // let seconds = myStr[2];\n\n    // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n    return minutes;\n  };\n\n  handleNotificationChange = (temp) => {\n    // console.log(temp);\n    this.setState({ itemToEdit: temp });\n  };\n\n  startTimePicker = () => {\n    // const [startDate, setStartDate] = useState(new Date());\n    console.log(this.state.itemToEdit.expected_completion_time);\n    return (\n      <DatePicker\n        className=\"form-control\"\n        type=\"text\"\n        selected={this.state.itemToEdit.available_start_time}\n        onChange={(date) => {\n          this.setState(\n            (prevState) => ({\n              itemToEdit: {\n                ...prevState.itemToEdit,\n                available_start_time: date,\n              },\n            }),\n            () => {\n              console.log(\n                \"starttimepicker\",\n                this.state.itemToEdit.available_start_time\n              );\n            }\n          );\n        }}\n        showTimeSelect\n        timeIntervals={15}\n        timeCaption=\"time\"\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\n      />\n    );\n  };\n\n  endTimePicker = () => {\n    // const [startDate, setStartDate] = useState(new Date());\n    return (\n      <DatePicker\n        className=\"form-control\"\n        type=\"text\"\n        selected={this.state.itemToEdit.available_end_time}\n        onChange={(date) => {\n          this.setState(\n            (prevState) => ({\n              itemToEdit: {\n                ...prevState.itemToEdit,\n                available_end_time: date,\n              },\n            }),\n            () => {\n              console.log(\n                \"endtimepicker\",\n                this.state.itemToEdit.available_end_time\n              );\n            }\n          );\n        }}\n        showTimeSelect\n        timeIntervals={15}\n        timeCaption=\"time\"\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\n      />\n    );\n  };\n\n  /*\n  openRepeatModal:\n  this will open repeat modal.\n  */\n  openRepeatModal = () => {\n    this.setState((prevState) => {\n      return { showRepeatModal: !prevState.showRepeatModal };\n    });\n  };\n\n  /*\ncloseRepeatModal:\nthis will close repeat modal.\n*/\n  closeRepeatModal = () => {\n    this.setState((prevState) => ({\n      showRepeatModal: false,\n      repeatInputValue_temp: prevState.repeatInputValue,\n      repeatOccurrence_temp: prevState.repeatOccurrence,\n      repeatDropDown_temp: prevState.repeatDropDown,\n      repeatRadio_temp: prevState.repeatRadio,\n      repeatEndDate_temp: prevState.repeatEndDate,\n      byDay_temp: prevState.byDay,\n    }));\n    if (\n      !this.state.repeatOption &&\n      this.state.repeatOptionDropDown === \"Custom...\"\n    ) {\n      this.setState({\n        repeatOptionDropDown: \"Does not repeat\",\n      });\n    }\n  };\n\n  /*\nsaveRepeatChanges:\nthis will close repeat modal.\n*/\n  saveRepeatChanges = () => {\n    const {\n      // repeatOptionDropDown,\n      repeatDropDown_temp,\n      repeatInputValue_temp,\n      repeatOccurrence_temp,\n      repeatRadio_temp,\n      repeatEndDate_temp,\n      byDay_temp,\n    } = this.state;\n\n    this.setState((prevState) => ({\n      showRepeatModal: false,\n      repeatOption: true,\n      repeatInputValue: prevState.repeatInputValue_temp,\n      repeatOccurrence: prevState.repeatOccurrence_temp,\n      repeatDropDown: prevState.repeatDropDown_temp,\n      repeatRadio: prevState.repeatRadio_temp,\n      repeatEndDate: prevState.repeatEndDate_temp,\n      byDay: prevState.byDay_temp,\n    }));\n\n    // If repeatDropDown_temp is DAY\n    if (repeatDropDown_temp === \"DAY\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Daily\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Daily, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Daily, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} days, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is WEEK\n    else if (repeatDropDown_temp === \"WEEK\") {\n      let selectedDays = [];\n      for (let [key, value] of Object.entries(byDay_temp)) {\n        value !== \"\" && selectedDays.push(value);\n      }\n      console.log(selectedDays, \"selectedDays week\");\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: \"Weekly on all days\",\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\", \")}`,\n            });\n          }\n        } else if (repeatRadio_temp === \"On\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Weekly on all days, until ${moment(\n                repeatEndDate_temp\n              ).format(\"LL\")}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\n                \", \"\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`,\n            });\n          }\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            if (selectedDays.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Weekly on all days, , ${repeatOccurrence_temp} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Weekly on ${selectedDays.join(\n                  \", \"\n                )}, ${repeatOccurrence_temp} times`,\n              });\n            }\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                \", \"\n              )}`,\n            });\n          }\n        } else if (repeatRadio_temp === \"On\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, until ${moment(\n                repeatEndDate_temp\n              ).format(\"LL\")}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                \", \"\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`,\n            });\n          }\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: \"Once\",\n            });\n          } else {\n            if (selectedDays.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, ${repeatOccurrence_temp} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                  \", \"\n                )}, ${repeatOccurrence_temp} times`,\n              });\n            }\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is MONTH\n    else if (repeatDropDown_temp === \"MONTH\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Monthly\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Monthly, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Monthly, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} months, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is YEAR\n    else if (repeatDropDown_temp === \"YEAR\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Annually\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Annually, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Annually, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} years, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n  };\n\n  handleRepeatEndDate = (date) => {\n    this.setState(\n      {\n        repeatEndDate_temp: date,\n      },\n      console.log(\"handleRepeatEndDate\", date, this.state.repeatEndDate)\n    );\n  };\n\n  handleRepeatDropDown = (eventKey, week_days) => {\n    if (eventKey === \"WEEK\") {\n      const newByDay = {\n        ...this.state.byDay_temp,\n        // [this.state.newEventStart0.getDay()]: week_days[\n        //   this.state.newEventStart0.getDay()\n        // ],\n      };\n      this.setState({\n        repeatDropDown_temp: eventKey,\n        byDay_temp: newByDay,\n      });\n    }\n    this.setState({\n      repeatDropDown_temp: eventKey,\n    });\n  };\n\n  handleRepeatInputValue = (eventKey) => {\n    this.setState({\n      repeatInputValue_temp: eventKey,\n    });\n  };\n\n  handleRepeatOccurrence = (eventKey) => {\n    this.setState({\n      repeatOccurrence_temp: eventKey,\n    });\n  };\n\n  repeatModal = () => {\n    const week_days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    const d = new Date();\n\n    // Custom styles\n    const modalStyle = {\n      position: \"absolute\",\n      zIndex: \"5\",\n      left: \"50%\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"340px\",\n    };\n\n    const inputStyle = {\n      padding: \"8px 5px 8px 15px\",\n      marginLeft: \"8px\",\n      background: \"#F8F9FA\",\n      border: \"none\",\n      width: \"70px\",\n      borderRadius: \"4px\",\n      marginRight: \"8px\",\n    };\n\n    const selectStyle = {\n      display: \"inline-block\",\n    };\n\n    const weekStyle = {\n      display: \"flex\",\n      alignItems: \"center\",\n      textAlign: \"center\",\n      marginTop: \"10px\",\n    };\n\n    // const radioInputStyle = { display: \"flex\", alignItems: \"center\" };\n\n    // onClick event handler for the circles\n    const selectedDot = (e, index) => {\n      let curClass = e.target.classList;\n      if (curClass.contains(\"selected\")) {\n        curClass.remove(\"selected\");\n        const newByDay = { ...this.state.byDay_temp, [index]: \"\" };\n        this.setState({\n          byDay_temp: newByDay,\n        });\n      } else {\n        curClass.add(\"selected\");\n        const newByDay = {\n          ...this.state.byDay_temp,\n          [index]: week_days[index],\n        };\n        this.setState({\n          byDay_temp: newByDay,\n        });\n      }\n    };\n\n    let selectedDays = [];\n    for (let [key, value] of Object.entries(this.state.byDay_temp)) {\n      if (value !== \"\") selectedDays.push(key);\n    }\n    // If selected repeat every week, the following shows.\n    const weekSelected = (\n      <>\n        Repeat On\n        <div style={weekStyle}>\n          {week_days.map((day, i) => {\n            if (selectedDays.includes(i.toString())) {\n              return (\n                <span\n                  key={i}\n                  className=\"dot selected\"\n                  onClick={(e) => selectedDot(e, i)}\n                >\n                  {day.charAt(0)}\n                </span>\n              );\n            } else {\n              return (\n                <span\n                  key={i}\n                  className=\"dot\"\n                  onClick={(e) => selectedDot(e, i)}\n                >\n                  {day.charAt(0)}\n                </span>\n              );\n            }\n          })}\n        </div>\n      </>\n    );\n\n    return (\n      <Modal.Dialog style={modalStyle}>\n        <Modal.Header closeButton onHide={this.closeRepeatModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Repeating Options</h5>\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            <Form.Group\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginLeft: \"5px\",\n              }}\n            >\n              Repeat every\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"10000\"\n                value={this.state.repeatInputValue_temp}\n                style={inputStyle}\n                onChange={(e) => this.handleRepeatInputValue(e.target.value)}\n              />\n              <DropdownButton\n                title={this.state.repeatDropDown_temp}\n                style={selectStyle}\n                variant=\"light\"\n              >\n                <Dropdown.Item\n                  eventKey=\"DAY\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  day\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"WEEK\"\n                  onSelect={(eventKey) =>\n                    this.handleRepeatDropDown(eventKey, week_days)\n                  }\n                >\n                  week\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"MONTH\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  month\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"YEAR\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  year\n                </Dropdown.Item>\n              </DropdownButton>\n            </Form.Group>\n            <Form.Group>\n              {this.state.repeatDropDown_temp === \"WEEK\" && weekSelected}\n            </Form.Group>\n            {/* {this.state.repeatDropDown === \"MONTH\" && monthSelected} */}\n            <Form.Group\n              style={{\n                height: \"140px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n                marginTop: \"20px\",\n                marginLeft: \"5px\",\n              }}\n              className=\"repeat-form\"\n              onChange={(e) => {\n                if (e.target.type === \"radio\") {\n                  this.setState({\n                    repeatRadio_temp: e.target.value,\n                  });\n                }\n              }}\n            >\n              Ends\n              <Form.Check type=\"radio\" style={{ margin: \"15px 0\" }}>\n                <Form.Check.Label>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"Never\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"Never\" && true\n                    }\n                  />\n                  Never\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\" className=\"editGR-datepicker\">\n                <Form.Check.Label>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    name=\"radios\"\n                    value=\"On\"\n                    style={{ marginTop: \"10px\" }}\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"On\" && true\n                    }\n                  />\n                  On\n                  <DatePicker\n                    className=\"date-picker-btn btn btn-light\"\n                    selected={this.state.repeatEndDate_temp}\n                    onChange={(date) => this.handleRepeatEndDate(date)}\n                  ></DatePicker>\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\" style={{ margin: \"15px 0\" }}>\n                <Form.Check.Label>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    name=\"radios\"\n                    value=\"After\"\n                    style={{ marginTop: \"12px\" }}\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"After\" && true\n                    }\n                  />\n                  After\n                  <span style={{ marginLeft: \"30px\" }}>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"10000\"\n                      value={this.state.repeatOccurrence_temp}\n                      onChange={(e) =>\n                        this.handleRepeatOccurrence(e.target.value)\n                      }\n                      style={inputStyle}\n                      className=\"input-exception\"\n                    />\n                    occurrence\n                  </span>\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeRepeatModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={this.saveRepeatChanges}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  render() {\n    return (\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\n        <Modal.Header closeButton onHide={this.props.closeModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">\n              Add New {this.props.isRoutine ? \"Routine\" : \"Goal\"}\n            </h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {this.state.showRepeatModal && this.repeatModal()}\n          <Form>\n            {/* <Row>\n          <Col>\n          <div style={{ width: \"300px\" }}> */}\n            <Form.Group>\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                value={this.state.itemToEdit.title}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.title = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n                type=\"text\"\n                placeholder=\"Enter Title\"\n              />\n              {/* <div style={{ color: \"red\" }}> {this.state.showNoTitleError}</div> */}\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Photo URL</Form.Label>\n              <Form.Control\n                value={this.state.itemToEdit.photo}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.photo = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n                type=\"text\"\n                placeholder=\"Enter Photo URL\"\n              />\n            </Form.Group>\n\n            {/* <Form.Group\n              value={this.state.itemToEdit.available_start_time}\n              controlId=\"Y\"\n            >\n              <Form.Label>Start Time</Form.Label> <br />\n              {this.startTimePicker()}\n            </Form.Group>\n\n            <Form.Group\n              value={this.state.itemToEdit.available_end_time}\n              controlId=\"X\"\n            >\n              <Form.Label>End Time</Form.Label>\n              <br />\n              {this.endTimePicker()}\n              <div style={{ color: \"red\" }}> {this.state.showDateError}</div>\n            </Form.Group> */}\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_start_time}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_start_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_end_time}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_end_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div>\n              <label>Repeating Options</label>\n              <DropdownButton\n                className=\"repeatOptionDropDown\"\n                // onClick={this.openRepeatModal}\n                title={this.state.repeatOptionDropDown}\n                variant=\"light\"\n              >\n                <Dropdown.Item\n                  eventKey=\"Does not repeat\"\n                  onSelect={(eventKey) =>\n                    this.setState({\n                      repeatOptionDropDown: eventKey,\n                      repeatOption: false,\n                    })\n                  }\n                >\n                  Does not repeat\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"Custom...\"\n                  onSelect={(eventKey) => {\n                    this.openRepeatModal();\n                    // this.setState({ repeatOptionDropDown: eventKey });\n                  }}\n                >\n                  Custom...\n                </Dropdown.Item>\n              </DropdownButton>\n            </div>\n\n            <div style={{ marginTop: \"20px\" }}>\n              <label>This Takes Me</label>\n              <Row>\n                <Col style={{ paddingRight: \"0px\" }}>\n                  <Form.Control\n                    type=\"number\"\n                    placeholder=\"30\"\n                    value={this.convertToMinutes()}\n                    style={{ marginTop: \".25rem\", paddingRight: \"0px\" }}\n                    onChange={(e) => {\n                      e.stopPropagation();\n                      let temp = this.state.itemToEdit;\n                      temp.expected_completion_time = this.convertTimeToHRMMSS(\n                        e\n                      );\n                      this.setState({ itemToEdit: temp });\n                    }}\n                  />\n                </Col>\n                <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                  <p style={{ marginLeft: \"10px\", marginTop: \"5px\" }}>\n                    minutes\n                  </p>\n                </Col>\n              </Row>\n            </div>\n\n            <div className=\"input-group mb-3\" style={{ marginTop: \"10px\" }}>\n              <label className=\"form-check-label\">Time?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_timed}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  console.log(temp.is_timed);\n                  temp.is_timed = !temp.is_timed;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Available to Caitlin?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Available\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_available}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_available = e.target.checked;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            {this.state.itemToEdit.is_available && (\n              <ShowNotifications\n                itemToEditPassedIn={this.state.itemToEdit}\n                notificationChange={this.handleNotificationChange}\n              />\n            )}\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.closeModal}>\n            Close\n          </Button>\n          <Button variant=\"info\" onClick={this.newInputSubmit}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import firebase from \"./firebase\";\nimport ShowNotifications from \"./ShowNotifications\"\nimport { Button, Modal } from \"react-bootstrap\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\nexport default class AddNewATItem extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"AddNewATItem constructor\");\n    this.state = {\n      newActionTitle: \"\", //Old delete Later\n      itemToEdit: {\n        id: \"\",\n        title: \"\",\n        photo: \"\",\n        audio: \"\",\n        is_complete: false,\n        is_available: true,\n        available_end_time: \"23:59:59\",\n        available_start_time: \"00:00:00\",\n        datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n        datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n        is_timed: false,\n        expected_completion_time: \"00:11:00\",\n        is_sublist_available: true,\n        ta_notifications:{\n          before:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          },\n          during:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:30:00\"\n          },\n          after:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          }\n        },\n        user_notifications:{\n          before:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          },\n          during:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:30:00\"\n          },\n          after:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          }\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    // console.log(\"AddNewATItem did mount\");\n    // console.log(this.props.ATItem);\n    // console.log(this.props.ATItem.fbPath);\n    // console.log(this.props.ATItem.arr);\n    // console.log(this.props.ATArray);\n  }\n\n  newInputSubmit = () => {\n    if (this.state.itemToEdit.title === \"\") {\n      alert(\"Invalid Input\");\n      return;\n    }\n    // console.log(\"Submitting Input: \" + this.state.itemToEdit.title);\n    this.addNewDoc();\n  };\n\n  addNewDoc = () => {\n    this.props.ATItem.fbPath\n      .collection(\"actions&tasks\")\n      .add({\n        title: this.state.itemToEdit.title,\n        \"instructions&steps\": []\n      })\n      .then(ref => {\n        if (ref.id === null) {\n          alert(\"Fail to add new Action / Task item\");\n          return;\n        }\n        console.log(\"Added document with ID: \", ref.id);\n        let newArr = this.props.ATArray;\n        let temp = this.state.itemToEdit;\n        temp.id = ref.id;\n        newArr.push(temp);\n        console.log(newArr);\n        console.log(\"adding new item\");\n        this.updateEntireArray(newArr);\n      });\n  };\n\n  //This function will below will essentially take in a array and have a key map to it\n  updateEntireArray = newArr => {\n    // 2. update adds to the document\n    this.props.ATItem.fbPath.update({ \"actions&tasks\": newArr }).then(doc => {\n      console.log(\"updateEntireArray Finished\");\n      console.log(doc);\n      if (this.props != null) {\n        this.props.hideNewATModal();\n        console.log(\"refreshing FireBasev2 from AddNewATItem\");\n        this.props.refresh(newArr);\n      }\n    });\n  };\n\n  convertTimeToHRMMSS =  (e) => {\n        \n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num/60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours)* 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length === 1) {\n        rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length === 1) {\n        rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours+\":\" + rminutes +\":\" + \"00\";\n  }\n\n  convertToMinutes = () => {\n      let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n      let hours = myStr[0];\n      let hrToMin = hours* 60;\n      let minutes = (myStr[1] * 1 )+ hrToMin;\n      // let seconds = myStr[2];\n      \n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n      return minutes;\n  }\n\n  handleNotificationChange = (temp) => {\n    // console.log(temp);\n    this.setState({ itemToEdit: temp });\n  }\n\n  render() {\n    return (\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.props.hideNewATModal();\n            console.log(\"closed button clicked\");\n          }}\n        >\n          <Modal.Title>\n            <h2 className=\"normalfancytext\">Add New Task/Action</h2>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* <AddNewGRItem refresh={this.grabFireBaseRoutinesGoalsData} isRoutine={this.state.isRoutine} /> */}\n          <div>\n            <label>Title</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Title\"\n                value={this.state.itemToEdit.title}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.title = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Photo URL \"\n                value={this.state.itemToEdit.photo}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.photo = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\n                value={this.state.itemToEdit.available_start_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_start_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_end_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_end_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        type=\"number\"\n                        placeholder=\"30\"\n                        value = {this.convertToMinutes()}\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                        onChange={\n                            (e) => { e.stopPropagation(); \n                            let temp = this.state.itemToEdit; \n                            temp.expected_completion_time = this.convertTimeToHRMMSS(e);\n                             this.setState({ itemToEdit: temp }) }\n                        }\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n\n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n              <label className=\"form-check-label\" >Time?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_timed}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_timed = !temp.is_timed;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Available to Caitlin?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Available\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_available}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_available = !temp.is_available;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            {this.state.itemToEdit.is_available && \n              <ShowNotifications \n                itemToEditPassedIn = {this.state.itemToEdit}\n                notificationChange = {this.handleNotificationChange}\n              />\n            }\n            \n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              this.props.hideNewATModal();\n              console.log(\"closed button clicked\");\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              this.newInputSubmit();\n            }}\n          >\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import firebase from \"./firebase\";\nimport ShowNotifications from \"./ShowNotifications\"\nimport { Button, Modal } from \"react-bootstrap\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\n/**\n *\n * This class is responsible for adding a new elemnt to the\n * firebase database. If it becomes successful then we update\n * the view on the firebasev2\n */\n\nexport default class AddNewISItem extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"AddNewISItem constructor\");\n  }\n\n  state = {\n    atArr: [], //goal, routine original array\n    newInstructionTitle: \"\",\n    itemToEdit: {\n      //new item to add to array\n      id: \"\",\n      title: \"\",\n      photo: \"\",\n      is_complete: false,\n      is_available: true,\n      available_end_time: \"23:59:59\",\n      available_start_time: \"00:00:00\",\n      datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      audio: \"\",\n      is_timed: false,\n      expected_completion_time: \"00:10:00\",\n      ta_notifications:{\n        before:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        },\n        during:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:30:00\"\n        },\n        after:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        }\n      },\n      user_notifications:{\n        before:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        },\n        during:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:30:00\"\n        },\n        after:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        }\n      }\n    }\n  };\n\n  componentDidMount() {\n    // console.log(\"AddNewISItem did mount\");\n    // console.log(this.props.ISArray);\n    // console.log(this.props.ISItem);\n  }\n\n  handleInputChange = e => {\n    console.log(e.target.value);\n    this.setState({\n      newInstructionTitle: e.target.value\n    });\n  };\n\n  newInputSubmit = () => {\n    if (this.state.itemToEdit.title === \"\") {\n      alert(\"Invalid Input\");\n      return;\n    }\n    console.log(\"Submitting Input: \" + this.state.itemToEdit.title);\n\n    this.props.ISArray.push(this.state.itemToEdit);\n    this.updateEntireArray(this.props.ISArray);\n  };\n\n  //This function will below will essentially take in a array and have a key map to it\n  updateEntireArray = newArr => {\n    // 2. update adds to the document\n\n    this.props.ISItem.fbPath\n      .update({ \"instructions&steps\": newArr })\n      .then(doc => {\n        console.log(\"updateEntireArray Finished\");\n        console.log(doc);\n        if (this.props != null) {\n          this.props.hideNewISModal();\n          console.log(\"refreshing FireBasev2 from ISItem\");\n          this.props.refresh(newArr);\n        } else {\n          console.log(\"removing newly added item due to failure\");\n          this.props.ISArray.pop();\n        }\n      });\n  };\n\n  convertTimeToHRMMSS =  (e) => {\n        \n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num/60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours)* 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length === 1) {\n        rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length === 1) {\n        rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours+\":\" + rminutes +\":\" + \"00\";\n  }\n\n  convertToMinutes = () => {\n      let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n      let hours = myStr[0];\n      let hrToMin = hours* 60;\n      let minutes = (myStr[1] * 1 )+ hrToMin;\n      // let seconds = myStr[2];\n      \n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n      return minutes;\n  }\n\n  handleNotificationChange = (temp) => {\n    // console.log(temp);\n    this.setState({ itemToEdit: temp });\n  }\n\n  render() {\n    return (\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.props.hideNewISModal();\n            console.log(\"closed button clicked\");\n          }}\n        >\n          <Modal.Title>\n            <h2 className=\"normalfancytext\">Add New Step</h2>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* <AddNewGRItem refresh={this.grabFireBaseRoutinesGoalsData} isRoutine={this.state.isRoutine} /> */}\n          <div>\n            <label>Title</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Title\"\n                value={this.state.itemToEdit.title}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.title = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Photo URL \"\n                value={this.state.itemToEdit.photo}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.photo = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\n                value={this.state.itemToEdit.available_start_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_start_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_end_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_end_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n            \n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        // value={this.state.newEventNotification}\n                        // onChange={this.handleNotificationChange}\n                        type=\"number\"\n                        placeholder=\"30\"\n                        value = {this.convertToMinutes()}\n                        // value = {this.state.itemToEdit.expected_completion_time}\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                        onChange={\n                            // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\n                            (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\n                        }\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n\n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n              <label className=\"form-check-label\" >Time?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_timed}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_timed = !temp.is_timed;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Available to Caitlin?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Available\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_available}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_available = !temp.is_available;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            {this.state.itemToEdit.is_available && \n              <ShowNotifications \n                itemToEditPassedIn = {this.state.itemToEdit}\n                notificationChange = {this.handleNotificationChange}\n              />\n            }\n\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              this.props.hideNewISModal();\n              console.log(\"closed button clicked\");\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              this.newInputSubmit();\n            }}\n          >\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n","import React, { Component } from 'react'\n// import { Button, Row, Col, Modal, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n/**\n * \n * This class is responsible for adding a new elemnt to the\n * firebase database. If it becomes successful then we update\n * the view on the firebasev2\n*/\nexport default class DeleteISItem extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('DeleteISItem constructor');\n        // console.log('delete index ' + this.props.deleteIndex)\n        // console.log(this.props.ISItem)\n        // console.log(this.props.ISArray)\n    }\n\n    componentDidMount() {\n        // console.log('DeleteISItem did mount');\n    }\n\n\n    submitRequest = () => {\n        //Delete from the firebase\n        /*const url = \"https://cors-anywhere.herokuapp.com/https://us-central1-project-caitlin-c71a9.cloudfunctions.net/RecursiveDelete\";\n        const Data = {\n            data : {\n                \"path\" : this.props.ISItem.fbPath.path //<<<<< Entire path of the document to delete\n            }\n        };\n        console.log(\"path \" +  this.props.ISItem.fbPath.path);\n        \n        const param = {\n            headers:{\n                //\"content-type\":\"application/json; charset=UTF-8\"\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(Data),\n            method: \"POST\"\n        };\n        \n        fetch(url, param)\n        .then((response) => response.json())\n        .then((result) => { console.log(result); } )\n        .catch((error) => { console.error(error); });*/\n        \n        // console.log(\"request was made to delete for element \" +  this.props.deleteIndex);\n        let items = [...this.props.ISArray];\n        // console.log(\"delete with: \")\n        // console.log(items)\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length))\n        // console.log(\"delete 2 with: \")\n        // console.log(newArr)\n        this.props.ISItem.fbPath.update({ 'instructions&steps': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\n                    this.props.refresh(newArr);\n                }\n                else{\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    confirmation = () => {\n        const r = window.confirm(\"Confirm Delete\"); \n        if(r === true){ \n            // console.log(\"Delete Confirm\")\n            this.submitRequest();\n            return;\n        }\n        // console.log(\"Delete Not Confirm\")\n    }\n\n\n    render() {\n        return (\n            < div>\n                <FontAwesomeIcon \n                    onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut ={event => {event.target.style.color = \"#000000\";}}\n                    style ={{color:  \"#000000\", marginRight:\"15px\", marginLeft: \"5px\" }}\n                    onClick={(e)=>{e.stopPropagation(); this.confirmation()}}\n                    icon={faTrashAlt} size=\"lg\" \n                />\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n// import { Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nexport default class deleteAT extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    /**\n     * Does a check to make sure the element is within bounds and then calls then right function to\n     * delete the stupid AT\n    */\n    submitRequest = () => {\n        if (this.props.deleteIndex < 0) {\n            console.log(\"deleteAT index error\")\n            return;\n        }\n        this.tempdeleteArrPortion();\n    }\n\n    tempdeleteArrPortion = () => {\n        \n        //Delete from the firebase\n        let arr = [...this.props.Array];\n        let j = this.props.deleteIndex;\n        var id = arr[j]['id']\n        const url = \"https://cors-anywhere.herokuapp.com/https://us-central1-project-caitlin-c71a9.cloudfunctions.net/RecursiveDelete\";\n        const Data = {\n            data : {\n                \"path\" : this.props.Item.fbPath.path + \"/\" + this.props.type + \"/\" + id//<<<<< Entire path of the document to delete\n            }\n        };\n        console.log(\"path \" +  this.props.Item.fbPath.path);\n        \n        const param = {\n            headers:{\n                //\"content-type\":\"application/json; charset=UTF-8\"\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(Data),\n            method: \"POST\"\n        };\n        \n        fetch(url, param)\n        .then((response) => response.json())\n        .then((result) => { console.log(result); } )\n        .catch((error) => { console.error(error); });\n        \n        // console.log(\"request was made to delete this index \" + this.props.deleteIndex);\n        let items = [...this.props.Array];\n        let i = this.props.deleteIndex;\n        //items[i]['deleted'] = true;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\n        this.props.Item.fbPath.update({ 'actions&tasks': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    this.props.refresh(items);\n                }\n                else {\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n\n    /**\n     * \n     * deleteArrPortion :\n     * this function will go into the array of that action&task and delete that specific element, after which\n     * it will update the array in firestore and refresh the page once that is completed\n    */\n    deleteArrPortion = () => {\n        \n        // console.log(\"request was made to delete this  element \" + this.props.deleteIndex);\n        let items = [...this.props.Array];\n        // console.log(\"delete with: \");\n        // console.log(items);\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\n        // console.log(\"delete 2 with: \");\n        // console.log(newArr);\n        this.props.Item.fbPath.update({ 'actions&tasks': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\n                    this.props.refresh(newArr);\n                }\n                else {\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    \n    confirmation = () => {\n        const r = window.confirm(\"Confirm Delete\"); \n        if(r === true){ \n            // console.log(\"Delete Confirm\")\n            this.submitRequest();\n            return;\n        }\n        // console.log(\"Delete Not Confirm\")\n    }\n\n    render() {\n        return (\n            <div style={{ marginLeft: \"5px\" }} >\n                <FontAwesomeIcon\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style ={{marginRight: '15px', color:  \"#000000\" }}\n                    onClick={(e) => { e.stopPropagation(); this.confirmation() }}\n                    icon={faTrashAlt} size=\"lg\"\n                />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt} from '@fortawesome/free-solid-svg-icons';\nexport default class deleteGR extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('Delete AT constructor');  \n       \n    }\n\n    submitRequest = () => {\n        // console.log(\"request to delete GR\")\n        // console.log('delete index ' + this.props.deleteIndex)\n        // console.log(this.props.Item)\n        // console.log(this.props.Array)\n        if (this.props.deleteIndex < 0){\n            console.log(\"invalid index exiting delete\");\n            return;\n        }\n        this.tempdeleteArrPortion();\n    } \n\n    tempdeleteArrPortion= () => {\n        \n        //Delete from the firebase\n        let arr = [...this.props.Array];\n        var id = arr[this.props.deleteIndex]['id']\n        const url = \"https://cors-anywhere.herokuapp.com/https://us-central1-project-caitlin-c71a9.cloudfunctions.net/RecursiveDelete\";\n        const Data = {\n            data : {\n                \"path\" : this.props.Path.path + \"/goals&routines/\" + id//<<<<< Entire path of the document to delete\n            }\n        };\n        console.log(\"path \" +  this.props.Path.path + \"/\" + this.props.type + \"/\" + id);\n        \n        const param = {\n            headers:{\n                //\"content-type\":\"application/json; charset=UTF-8\"\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(Data),\n            method: \"POST\"\n        };\n        \n        fetch(url, param)\n        .then((response) => response.json())\n        .then((result) => { console.log(result); } )\n        .catch((error) => { console.error(error); });\n        \n        let items = [...this.props.Array];\n        //items[this.props.deleteIndex]['deleted'] = true;\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\n        \n        this.props.Path.update({ 'goals&routines': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete GRItem\");\n                    this.props.refresh();\n                }\n                else{\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    deleteArrPortion = () => {\n        \n        // console.log(\"request was made to delete this  element \" +  this.props.deleteIndex);\n        let items = [...this.props.Array];\n        // console.log(\"delete with: \");\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\n        // console.log(\"delete 2 with: \");\n        // console.log(newArr);\n        this.props.Path.update({ 'goals&routines': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\n                    this.props.refresh();\n                }\n                else{\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    confirmation = () => {\n        const r = window.confirm(\"Confirm Delete\"); \n        if(r === true){ \n            // console.log(\"Delete Confirm\")\n            this.submitRequest();\n            return;\n        }\n        console.log(\"Delete Not Confirm\")\n    }\n\n\n    render() {\n        return (\n            <div  style={{ marginLeft: \"5px\" }}>\n            \n            <FontAwesomeIcon \n                title = \"Delete Item\"\n                onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\n                onMouseOut ={event => {event.target.style.color = \"#000000\";}}\n                style ={{marginRight: '15px', color:  \"#000000\" }}\n                // style ={{ color:  \"#000000\" }}\n                onClick={(e)=>{ e.stopPropagation(); this.confirmation()}}\n                icon={faTrashAlt} size=\"lg\" \n            />\n        </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Dropdown, DropdownButton, Modal } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport ShowNotifications from \"./ShowNotifications\";\n// import ShowATList from \"./ShowNotifications.jsx\";\nimport moment from \"moment\";\nimport { Form, Row, Col } from \"react-bootstrap\";\n\nexport default class editGR extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEditModal: false,\n      itemToEdit: this.props.ATArray[this.props.i],\n      showRepeatModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      repeatSummary: \"\",\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"this is the previous ATarry\",prevProps.ATArray );\n    // console.log(\"this is the ATarry\",this.props.ATArray );\n    if(prevProps.ATArray !== this.props.ATArray){\n      // console.log(\"going in here so musttttttttttttttttttttttttttttt update\");\n      this.setState({itemToEdit: this.props.ATArray[this.props.i]})\n      // this.forceUpdate();\n    }   \n  }\n\n  newInputSubmit = () => {\n    // console.log(\"submitting GR edited formed to firebase\");\n    let newArr = this.props.ATArray;\n\n    newArr[this.props.i] = this.state.itemToEdit;\n\n    //Add the below attributes in case they don't already exists\n\n    if (!newArr[this.props.i][\"audio\"]) {\n      newArr[this.props.i][\"audio\"] = \"\";\n    }\n    if (!newArr[this.props.i][\"datetime_completed\"]) {\n      newArr[this.props.i][\"datetime_completed\"] =\n        \"Sun, 23 Feb 2020 00:08:43 GMT\";\n    }\n\n    if (!newArr[this.props.i][\"datetime_started\"]) {\n      newArr[this.props.i][\"datetime_started\"] =\n        \"Sun, 23 Feb 2020 00:08:43 GMT\";\n    }\n\n    this.props.FBPath.update({ \"goals&routines\": newArr }).then((doc) => {\n      this.setState({ showEditModal: false });\n      if (this.props != null) {\n        // console.log(\"refreshing FireBasev2 from updating GR ITEM \");\n        this.props.refresh(newArr);\n      } else {\n        console.log(\"update failure\");\n      }\n    });\n  };\n\n  //For possible future use because we currently just typing out the time.\n  startTimePicker = () => {\n    return (\n      <DatePicker\n        className=\"form-control form-control-lg\"\n        type=\"text\"\n        style={{ width: \"100%\" }}\n        showTimeSelect\n        showTimeSelectOnly\n        timeIntervals={15}\n        timeCaption=\"Time\"\n        dateFormat=\"h:mm aa\"\n        selected={\n          this.state.itemToEdit.available_start_time\n            ? this.state.itemToEdit.available_start_time\n            : new Date()\n        }\n        onChange={(date) => {\n          let temp = this.state.itemToEdit;\n          temp.available_start_time = date;\n          this.setState({\n            itemToEdit: temp,\n          });\n        }}\n      />\n    );\n  };\n\n  convertTimeToHRMMSS = (e) => {\n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num / 60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours) * 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length === 1) {\n      rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length === 1) {\n      rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours + \":\" + rminutes + \":\" + \"00\";\n  };\n\n  convertToMinutes = () => {\n    let myStr = this.state.itemToEdit.expected_completion_time.split(\":\");\n    let hours = myStr[0];\n    let hrToMin = hours * 60;\n    let minutes = myStr[1] * 1 + hrToMin;\n    // let seconds = myStr[2];\n\n    // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n    return minutes;\n  };\n\n  handleNotificationChange = (temp) => {\n    // console.log(temp);\n    this.setState({ itemToEdit: temp });\n  };\n\n  /*\n  openRepeatModal:\n  this will open repeat modal.\n  */\n  openRepeatModal = () => {\n    this.setState((prevState) => {\n      return { showRepeatModal: !prevState.showRepeatModal };\n    });\n  };\n\n  /*\n  closeRepeatModal:\n  this will close repeat modal.\n  */\n  closeRepeatModal = () => {\n    this.setState((prevState) => ({\n      showRepeatModal: false,\n      repeatInputValue_temp: prevState.repeatInputValue,\n      repeatOccurrence_temp: prevState.repeatOccurrence,\n      repeatDropDown_temp: prevState.repeatDropDown,\n      repeatRadio_temp: prevState.repeatRadio,\n      repeatEndDate_temp: prevState.repeatEndDate,\n      byDay_temp: prevState.byDay,\n    }));\n    if (\n      !this.state.repeatOption &&\n      this.state.repeatOptionDropDown === \"Custom...\"\n    ) {\n      this.setState({\n        repeatOptionDropDown: \"Does not repeat\",\n      });\n    }\n  };\n\n  /*\n  saveRepeatChanges:\n  this will close repeat modal.\n  */\n  saveRepeatChanges = () => {\n    const {\n      // repeatOptionDropDown,\n      repeatDropDown_temp,\n      repeatInputValue_temp,\n      repeatOccurrence_temp,\n      repeatRadio_temp,\n      repeatEndDate_temp,\n      byDay_temp,\n    } = this.state;\n\n    this.setState((prevState) => ({\n      showRepeatModal: false,\n      repeatOption: true,\n      repeatInputValue: prevState.repeatInputValue_temp,\n      repeatOccurrence: prevState.repeatOccurrence_temp,\n      repeatDropDown: prevState.repeatDropDown_temp,\n      repeatRadio: prevState.repeatRadio_temp,\n      repeatEndDate: prevState.repeatEndDate_temp,\n      byDay: prevState.byDay_temp,\n    }));\n\n    // If repeatDropDown_temp is DAY\n    if (repeatDropDown_temp === \"DAY\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Daily\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Daily, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Daily, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} days, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is WEEK\n    else if (repeatDropDown_temp === \"WEEK\") {\n      let selectedDays = [];\n      for (let [key, value] of Object.entries(byDay_temp)) {\n        value !== \"\" && selectedDays.push(value);\n      }\n      console.log(selectedDays, \"selectedDays week\");\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: \"Weekly on all days\",\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\", \")}`,\n            });\n          }\n        } else if (repeatRadio_temp === \"On\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Weekly on all days, until ${moment(\n                repeatEndDate_temp\n              ).format(\"LL\")}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\n                \", \"\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`,\n            });\n          }\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            if (selectedDays.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Weekly on all days, , ${repeatOccurrence_temp} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Weekly on ${selectedDays.join(\n                  \", \"\n                )}, ${repeatOccurrence_temp} times`,\n              });\n            }\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                \", \"\n              )}`,\n            });\n          }\n        } else if (repeatRadio_temp === \"On\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, until ${moment(\n                repeatEndDate_temp\n              ).format(\"LL\")}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                \", \"\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`,\n            });\n          }\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: \"Once\",\n            });\n          } else {\n            if (selectedDays.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, ${repeatOccurrence_temp} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                  \", \"\n                )}, ${repeatOccurrence_temp} times`,\n              });\n            }\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is MONTH\n    else if (repeatDropDown_temp === \"MONTH\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Monthly\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Monthly, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Monthly, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} months, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is YEAR\n    else if (repeatDropDown_temp === \"YEAR\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Annually\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Annually, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Annually, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} years, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n  };\n\n  handleRepeatEndDate = (date) => {\n    this.setState(\n      {\n        repeatEndDate_temp: date,\n      },\n      console.log(\"handleRepeatEndDate\", date, this.state.repeatEndDate)\n    );\n  };\n\n  handleRepeatDropDown = (eventKey, week_days) => {\n    if (eventKey === \"WEEK\") {\n      const newByDay = {\n        ...this.state.byDay_temp,\n        // [this.state.newEventStart0.getDay()]: week_days[\n        //   this.state.newEventStart0.getDay()\n        // ],\n      };\n      this.setState({\n        repeatDropDown_temp: eventKey,\n        byDay_temp: newByDay,\n      });\n    }\n    this.setState({\n      repeatDropDown_temp: eventKey,\n    });\n  };\n\n  handleRepeatInputValue = (eventKey) => {\n    this.setState({\n      repeatInputValue_temp: eventKey,\n    });\n  };\n\n  handleRepeatOccurrence = (eventKey) => {\n    this.setState({\n      repeatOccurrence_temp: eventKey,\n    });\n  };\n\n  editGRForm = () => {\n    // console.log(this.state.itemToEdit.available_end_time, \"itemToEdit\");\n    // {console.log(\"this is what it is seeing \", this.state.itemToEdit)}\n    let start_time = moment(this.state.itemToEdit.available_start_time).format(\n      \"LLL\"\n    );\n    let end_time = moment(this.state.itemToEdit.available_end_time).format(\n      \"LLL\"\n    );\n    console.log(start_time);\n    return (\n      \n      // <div style={{ border: \"2px\", margin: '0', width: \"315px\", padding: '20px' }}>\n      <Row\n        style={{\n          marginLeft: this.props.marginLeftV,\n          border: \"2px\",\n          padding: \"20px\",\n          marginTop: \"10px\",\n        }}\n      >\n        <label>Title</label>\n        <div className=\"input-group mb-3\">\n          <input\n            style={{ width: \"200px\" }}\n            placeholder=\"Enter Title\"\n            value={this.state.itemToEdit.title}\n            onChange={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              let temp = this.state.itemToEdit;\n              temp.title = e.target.value;\n              this.setState({ itemToEdit: temp });\n            }}\n            //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n            onKeyDown={(e) => {\n              if (e.keyCode === 32) {\n                let temp = this.state.itemToEdit;\n                temp.title = e.target.value + \" \";\n                this.setState({ itemToEdit: temp });\n                e.preventDefault();\n                e.stopPropagation();\n              }\n            }}\n          />\n        </div>\n\n        <label>Photo URL</label>\n        <div className=\"input-group mb-3\">\n          <input\n            style={{ width: \"200px\" }}\n            placeholder=\"Enter Photo URL \"\n            value={this.state.itemToEdit.photo}\n            onChange={(e) => {\n              e.stopPropagation();\n              let temp = this.state.itemToEdit;\n              temp.photo = e.target.value;\n              this.setState({ itemToEdit: temp });\n            }}\n          />\n        </div>\n\n        <label>Available Start Time</label>\n        <div className=\"input-group mb-3\">\n          <input\n            style={{ width: \"200px\" }}\n            placeholder=\"HH:MM:SS (ex: 08:20:00) \"\n            value={\n              start_time.includes(\"date\")\n                ? this.state.itemToEdit.available_start_time\n                : start_time\n            }\n            onChange={(e) => {\n              e.stopPropagation();\n              let temp = this.state.itemToEdit;\n              temp.available_start_time = e.target.value;\n              this.setState({ itemToEdit: temp });\n            }}\n          />\n        </div>\n\n        <label>Available End Time</label>\n        <div className=\"input-group mb-3\">\n          <input\n            style={{ width: \"200px\" }}\n            placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n            value={\n              end_time.includes(\"date\")\n                ? this.state.itemToEdit.available_end_time\n                : end_time\n            }\n            onChange={(e) => {\n              e.stopPropagation();\n              let temp = this.state.itemToEdit;\n              temp.available_end_time = e.target.value;\n              this.setState({ itemToEdit: temp });\n            }}\n          />\n        </div>\n\n        <div>\n          <label>Repeating Options</label>\n          <DropdownButton\n            className=\"repeatOptionDropDown\"\n            // onClick={this.openRepeatModal}\n            title={this.state.repeatOptionDropDown}\n            variant=\"light\"\n          >\n            <Dropdown.Item\n              eventKey=\"Does not repeat\"\n              onSelect={(eventKey) =>\n                this.setState({\n                  repeatOptionDropDown: eventKey,\n                  repeatOption: false,\n                })\n              }\n            >\n              Does not repeat\n            </Dropdown.Item>\n            <Dropdown.Item\n              eventKey=\"Custom...\"\n              onSelect={(eventKey) => {\n                this.openRepeatModal();\n                // this.setState({ repeatOptionDropDown: eventKey });\n              }}\n            >\n              Custom...\n            </Dropdown.Item>\n          </DropdownButton>\n        </div>\n\n        <div style={{ marginTop: \"20px\" }}>\n          <label>This Takes Me</label>\n          <Row>\n            <Col style={{ paddingRight: \"0px\" }}>\n              <Form.Control\n                // value={this.state.newEventNotification}\n                // onChange={this.handleNotificationChange}\n                type=\"number\"\n                placeholder=\"30\"\n                value={this.convertToMinutes()}\n                // value = {this.state.itemToEdit.expected_completion_time}\n                style={{ marginTop: \".25rem\", paddingRight: \"0px\" }}\n                onChange={\n                  // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\n                  (e) => {\n                    e.stopPropagation();\n                    let temp = this.state.itemToEdit;\n                    temp.expected_completion_time = this.convertTimeToHRMMSS(e);\n                    this.setState({ itemToEdit: temp });\n                  }\n                }\n              />\n            </Col>\n            <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n              <p style={{ marginLeft: \"10px\", marginTop: \"5px\" }}>minutes</p>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"input-group mb-3\" style={{ marginTop: \"10px\" }}>\n          <label className=\"form-check-label\">Time?</label>\n\n          <input\n            style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n            name=\"Timed\"\n            type=\"checkbox\"\n            checked={this.state.itemToEdit.is_timed}\n            onChange={(e) => {\n              e.stopPropagation();\n              let temp = this.state.itemToEdit;\n              // console.log(temp.is_timed)\n              temp.is_timed = !temp.is_timed;\n              this.setState({ itemToEdit: temp });\n            }}\n          />\n        </div>\n\n        <div className=\"input-group mb-3\" style={{ marginTop: \"10px\" }}>\n          <label className=\"form-check-label\">Available to Caitlin?</label>\n          <input\n            style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n            name=\"Available\"\n            type=\"checkbox\"\n            checked={this.state.itemToEdit.is_available}\n            onChange={(e) => {\n              e.stopPropagation();\n              let temp = this.state.itemToEdit;\n              temp.is_available = !temp.is_available;\n              this.setState({ itemToEdit: temp });\n            }}\n          />\n        </div>\n\n        {this.state.itemToEdit.is_available && (\n          <ShowNotifications\n            itemToEditPassedIn={this.state.itemToEdit}\n            notificationChange={this.handleNotificationChange}\n          />\n        )}\n\n        <Button\n          variant=\"secondary\"\n          onClick={(e) => {\n            e.stopPropagation();\n            this.setState({ showEditModal: false });\n          }}\n        >\n          Close\n        </Button>\n        <Button\n          variant=\"info\"\n          onClick={(e) => {\n            e.stopPropagation();\n            this.newInputSubmit();\n          }}\n        >\n          Save changes\n        </Button>\n      </Row>\n    );\n  };\n\n  repeatModal = () => {\n    const week_days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    // const d = new Date();\n\n    // Custom styles\n    const modalStyle = {\n      position: \"absolute\",\n      zIndex: \"5\",\n      left: \"-20%\",\n      top: \"45%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"300px\",\n    };\n\n    const inputStyle = {\n      padding: \"8px 5px 8px 15px\",\n      marginLeft: \"8px\",\n      background: \"#F8F9FA\",\n      border: \"none\",\n      width: \"70px\",\n      borderRadius: \"4px\",\n      marginRight: \"8px\",\n    };\n\n    const selectStyle = {\n      display: \"inline-block\",\n    };\n\n    const weekStyle = {\n      display: \"flex\",\n      alignItems: \"center\",\n      textAlign: \"center\",\n      marginTop: \"10px\",\n    };\n\n    // const radioInputStyle = { display: \"flex\", alignItems: \"center\" };\n\n    // onClick event handler for the circles\n    const selectedDot = (e, index) => {\n      let curClass = e.target.classList;\n      if (curClass.contains(\"selected\")) {\n        curClass.remove(\"selected\");\n        const newByDay = { ...this.state.byDay_temp, [index]: \"\" };\n        this.setState({\n          byDay_temp: newByDay,\n        });\n      } else {\n        curClass.add(\"selected\");\n        const newByDay = {\n          ...this.state.byDay_temp,\n          [index]: week_days[index],\n        };\n        this.setState({\n          byDay_temp: newByDay,\n        });\n      }\n    };\n\n    let selectedDays = [];\n    for (let [key, value] of Object.entries(this.state.byDay_temp)) {\n      if (value !== \"\") selectedDays.push(key);\n    }\n    // If selected repeat every week, the following shows.\n    const weekSelected = (\n      <>\n        Repeat On\n        <div style={weekStyle}>\n          {week_days.map((day, i) => {\n            if (selectedDays.includes(i.toString())) {\n              return (\n                <span\n                  key={i}\n                  className=\"dot selected\"\n                  onClick={(e) => selectedDot(e, i)}\n                >\n                  {day.charAt(0)}\n                </span>\n              );\n            } else {\n              return (\n                <span\n                  key={i}\n                  className=\"dot\"\n                  onClick={(e) => selectedDot(e, i)}\n                >\n                  {day.charAt(0)}\n                </span>\n              );\n            }\n          })}\n        </div>\n      </>\n    );\n\n    return (\n      <Modal.Dialog style={modalStyle}>\n        <Modal.Header closeButton onHide={this.closeRepeatModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Repeating Options</h5>\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            <Form.Group\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginLeft: \"5px\",\n              }}\n            >\n              Repeat every\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"10000\"\n                value={this.state.repeatInputValue_temp}\n                style={inputStyle}\n                onChange={(e) => this.handleRepeatInputValue(e.target.value)}\n              />\n              <DropdownButton\n                title={this.state.repeatDropDown_temp}\n                style={selectStyle}\n                variant=\"light\"\n              >\n                <Dropdown.Item\n                  eventKey=\"DAY\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  day\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"WEEK\"\n                  onSelect={(eventKey) =>\n                    this.handleRepeatDropDown(eventKey, week_days)\n                  }\n                >\n                  week\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"MONTH\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  month\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"YEAR\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  year\n                </Dropdown.Item>\n              </DropdownButton>\n            </Form.Group>\n            <Form.Group>\n              {this.state.repeatDropDown_temp === \"WEEK\" && weekSelected}\n            </Form.Group>\n            {/* {this.state.repeatDropDown === \"MONTH\" && monthSelected} */}\n            <Form.Group\n              style={{\n                height: \"140px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n                marginTop: \"20px\",\n                marginLeft: \"5px\",\n              }}\n              className=\"repeat-form\"\n              onChange={(e) => {\n                if (e.target.type === \"radio\") {\n                  this.setState({\n                    repeatRadio_temp: e.target.value,\n                  });\n                }\n              }}\n            >\n              Ends\n              <Form.Check type=\"radio\" style={{ margin: \"15px 0\" }}>\n                <Form.Check.Label>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"Never\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"Never\" && true\n                    }\n                  />\n                  Never\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\" className=\"editGR-datepicker\">\n                <Form.Check.Label>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    name=\"radios\"\n                    value=\"On\"\n                    style={{ marginTop: \"10px\" }}\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"On\" && true\n                    }\n                  />\n                  On\n                  <DatePicker\n                    className=\"date-picker-btn btn btn-light\"\n                    selected={this.state.repeatEndDate_temp}\n                    onChange={(date) => this.handleRepeatEndDate(date)}\n                  ></DatePicker>\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\" style={{ margin: \"15px 0\" }}>\n                <Form.Check.Label>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    name=\"radios\"\n                    value=\"After\"\n                    style={{ marginTop: \"12px\" }}\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"After\" && true\n                    }\n                  />\n                  After\n                  <span style={{ marginLeft: \"30px\" }}>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"10000\"\n                      value={this.state.repeatOccurrence_temp}\n                      onChange={(e) =>\n                        this.handleRepeatOccurrence(e.target.value)\n                      }\n                      style={inputStyle}\n                      className=\"input-exception\"\n                    />\n                    occurrence\n                  </span>\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeRepeatModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={this.saveRepeatChanges}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  showIcon = () => {\n    return (\n      <div style={{ marginLeft: \"5px\" }}>\n        <FontAwesomeIcon\n          title=\"Edit Item\"\n          onMouseOver={(event) => {\n            event.target.style.color = \"#48D6D2\";\n          }}\n          onMouseOut={(event) => {\n            event.target.style.color = \"#000000\";\n          }}\n          style={{ color: \"#000000\" }}\n          onClick={(e) => {\n            e.stopPropagation();\n            this.setState({ showEditModal: true });\n          }}\n          icon={faEdit}\n          size=\"lg\"\n        />\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n      >\n        {this.state.showEditModal ? <div></div> : this.showIcon()}\n        {this.state.showEditModal ? this.editGRForm() : <div> </div>}\n        {this.state.showRepeatModal && this.repeatModal()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from 'react-bootstrap';\nimport ShowNotifications from \"./ShowNotifications\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\n\nexport default class editIS extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            showEditModal: false,\n            itemToEdit: this.props.ISArray[this.props.i]\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.ISArray !== this.props.ISArray){\n          this.setState({itemToEdit: this.props.ISArray[this.props.i]})\n        }   \n      }\n\n    newInputSubmit = () => {\n        let newArr  = this.props.ISArray;\n        newArr[this.props.i] = this.state.itemToEdit;\n\n        //Add the below attributes in case they don't already exists\n        if(!newArr[this.props.i]['datetime_completed']){\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n        if(!newArr[this.props.i]['datetime_started']){\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        if(!newArr[this.props.i]['audio']){\n            newArr[this.props.i]['audio'] = '';\n        }\n        this.props.FBPath.update({ 'instructions&steps': newArr }).then(\n            (doc) => {\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from updating ISItem\");\n                    this.setState({ showEditModal: false })\n                    this.props.refresh(newArr);\n                }\n                else{\n                    console.log(\"update failure\");\n                }\n            }\n        )\n    }\n    convertTimeToHRMMSS =  (e) => {\n        \n        // console.log(e.target.value);\n        let num = e.target.value;\n        let hours = num/60;\n        let rhours = Math.floor(hours);\n        let minutes = (hours - rhours)* 60;\n        let rminutes = Math.round(minutes);\n        if (rhours.toString().length === 1) {\n            rhours = \"0\" + rhours;\n        }\n        if (rminutes.toString().length === 1) {\n            rminutes = \"0\" + rminutes;\n        }\n        // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n        return rhours+\":\" + rminutes +\":\" + \"00\";\n    }\n\n    convertToMinutes = () => {\n        let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n        let hours = myStr[0];\n        let hrToMin = hours* 60;\n        let minutes = (myStr[1] * 1 )+ hrToMin;\n        // let seconds = myStr[2];\n        \n        // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n        return minutes;\n    }\n    \n    handleNotificationChange = (temp) => {\n        // console.log(temp);\n        this.setState({ itemToEdit: temp });\n    }\n    \n    editISForm = () => {\n        return (\n            // <div style={{margin: '0', width: \"315px\", padding:'20px'}}>\n            <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\n            <label>Title</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        // value={this.state.newEventNotification}\n                        // onChange={this.handleNotificationChange}\n                        type=\"number\"\n                        placeholder=\"30\"\n                        value = {this.convertToMinutes()}\n                        // value = {this.state.itemToEdit.expected_completion_time}\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                        onChange={\n                            // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\n                            (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\n                        }\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n            \n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n                <label className=\"form-check-label\">Time?</label>\n                <input\n                    style={{ marginTop: '5px', marginLeft: '5px' }}\n                    name=\"Timed\"\n                    type=\"checkbox\"\n                    checked={this.state.itemToEdit.is_timed}\n                    onChange={(e) => {\n                        e.stopPropagation();\n                        let temp = this.state.itemToEdit;\n                        // console.log(temp.is_timed)\n                        temp.is_timed = !temp.is_timed;\n                        this.setState({ itemToEdit: temp })\n                    }} />\n            </div>\n            \n            <div className=\"input-group mb-3\" >\n                <label className=\"form-check-label\">Available to Caitlin?</label>\n                <input\n                    style={{ marginTop: '5px', marginLeft: '5px' }}\n                    name=\"Available\"\n                    type=\"checkbox\"\n                    checked={this.state.itemToEdit.is_available}\n                    onChange={(e) => {\n                        e.stopPropagation();\n                        let temp = this.state.itemToEdit;\n                        // console.log(temp.is_available)\n                        temp.is_available = !temp.is_available;\n                        this.setState({ itemToEdit: temp })\n                    }} />\n            </div >\n\n            {this.state.itemToEdit.is_available && \n                <ShowNotifications \n                    itemToEditPassedIn = {this.state.itemToEdit}\n                    notificationChange = {this.handleNotificationChange}\n                />\n            }\n\n\n            <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\n            <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\n        {/* </div> */}\n        </Row>\n        )\n    }\n\n    showIcon = () => {\n        return (\n            <div>\n                <FontAwesomeIcon\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: \"#000000\", marginLeft:\"5px\" }}\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\n                    icon={faEdit} size=\"lg\"\n                />\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {/* {(this.state.showEditModal) ? <div> </div> : this.showIcon()}\n                {(this.state.showEditModal ? this.editISForm() : <div> </div>)} */}\n                {this.state.showEditModal ? this.editISForm() : this.showIcon()}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {  Button } from 'react-bootstrap';\nimport ShowNotifications from \"./ShowNotifications\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\n\nexport default class editAT extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('editAT constructor');\n        // console.log('Edit index ' + this.props.i)\n        // console.log(this.props.FBPath)\n        // console.log(this.props.ATArray)\n\n        this.state = {\n            showEditModal: false,\n            itemToEdit: this.props.ATArray[this.props.i]\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.ATArray !== this.props.ATArray){\n          this.setState({itemToEdit: this.props.ATArray[this.props.i]})\n        }   \n      }\n\n    newInputSubmit = () => {\n        // console.log(\"submitting edited formed to firebase\");\n        let newArr  = this.props.ATArray;\n        newArr[this.props.i] = this.state.itemToEdit;\n        \n        //Add the below attributes in case they don't already exists\n        if(!newArr[this.props.i]['datetime_completed']){\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n        if(!newArr[this.props.i]['audio']){\n            newArr[this.props.i]['audio'] = '';\n        }\n\n        if(!newArr[this.props.i]['datetime_started']){\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        this.props.FBPath.update({ 'actions&tasks': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from updating ISItem\");\n                    this.setState({ showEditModal: false })\n                    this.props.refresh(newArr);\n                }\n                else{\n                    console.log(\"update failure\");\n                }\n            }\n        )\n    }\n    convertTimeToHRMMSS =  (e) => {\n        \n        // console.log(e.target.value);\n        let num = e.target.value;\n        let hours = num/60;\n        let rhours = Math.floor(hours);\n        let minutes = (hours - rhours)* 60;\n        let rminutes = Math.round(minutes);\n        if (rhours.toString().length === 1) {\n            rhours = \"0\" + rhours;\n        }\n        if (rminutes.toString().length === 1) {\n            rminutes = \"0\" + rminutes;\n        }\n        // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n        return rhours+\":\" + rminutes +\":\" + \"00\";\n    }\n\n    convertToMinutes = () => {\n        let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n        let hours = myStr[0];\n        let hrToMin = hours* 60;\n        let minutes = (myStr[1] * 1 )+ hrToMin;\n        // let seconds = myStr[2];\n        \n        // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n        return minutes;\n    }\n    handleNotificationChange = (temp) => {\n        // console.log(temp);\n        this.setState({ itemToEdit: temp });\n    }\n\n    editATForm = () => {\n        return (\n            // <div style={{ margin: '0', width: \"315px\", padding:'20px'}}>\n                <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\n                  <label>Title</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } \n                            \n                            //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                    onKeyDown={\n                        (e) => {\n                            if (e.keyCode === 32) {\n                                 \n                                let temp = this.state.itemToEdit; temp.title = e.target.value + \" \"; this.setState({ itemToEdit: temp })\n                                e.preventDefault(); e.stopPropagation()\n                            }\n                        }}\n                            />\n                        </div >\n\n                        <label>Photo URL</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } />\n                        </div >\n\n                        <label>Available Start Time</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } />\n                        </div >\n\n                        <label>Available End Time</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } />\n                        </div >\n\n                        <label>This Takes Me</label>\n                        <Row>\n                            <Col  style = {{paddingRight: \"0px\" }}>  \n                                <Form.Control\n                                    // value={this.state.newEventNotification}\n                                    // onChange={this.handleNotificationChange}\n                                    type=\"number\"\n                                    placeholder=\"30\"\n                                    value = {this.convertToMinutes()}\n                                    // value = {this.state.itemToEdit.expected_completion_time}\n                                    style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                                    onChange={\n                                        // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\n                                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\n                                    }\n                                />\n                            </Col>\n                            <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                                <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                            </Col>\n                        </Row>\n\n                        <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n                            <label className=\"form-check-label\">Time?</label>\n                            <input\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\n                                name=\"Timed\"\n                                type=\"checkbox\"\n                                checked={this.state.itemToEdit.is_timed}\n                                onChange={(e) => {\n                                    e.stopPropagation();\n                                    let temp = this.state.itemToEdit;\n                                    // console.log(temp.is_timed)\n                                    temp.is_timed = !temp.is_timed;\n                                    this.setState({ itemToEdit: temp })\n                                }} />\n                        </div >\n\n                        <div className=\"input-group mb-3\" >\n                            <label className=\"form-check-label\">Available to Caitlin?</label>\n                            <input\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\n                                name=\"Available\"\n                                type=\"checkbox\"\n                                checked={this.state.itemToEdit.is_available}\n                                onChange={(e) => {\n                                    e.stopPropagation();\n                                    let temp = this.state.itemToEdit;\n                                    // console.log(temp.is_available)\n                                    temp.is_available = !temp.is_available;\n                                    this.setState({ itemToEdit: temp })\n                                }} />\n                        </div >\n\n                        {this.state.itemToEdit.is_available && \n                            <ShowNotifications \n                                itemToEditPassedIn = {this.state.itemToEdit}\n                                notificationChange = {this.handleNotificationChange}\n                            />\n                        }\n                        \n\n                        \n\n                <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\n                <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\n             {/* </div> */}\n            </Row>\n        )\n    }\n\n    showIcon = () => {\n        return (\n            <div>\n          <FontAwesomeIcon\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: \"#000000\" }}\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\n                    icon={faEdit} size=\"lg\"\n                />\n                </div>\n        )\n    }\n\n    render() {\n        return (\n            // <div style={{ marginLeft: \"5px\" }} onClick={(e) => { e.stopPropagation();}}>\n            <div  style={{ marginLeft: \"5px\" }} onClick={(e) => { e.stopPropagation();}}>\n                {(this.state.showEditModal ? this.editATForm() : <div> </div>)}\n                {  (this.state.showEditModal) ? <div> </div> : this.showIcon()}\n\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlash, faList} from '@fortawesome/free-solid-svg-icons';\n\n\n\nexport default class ShowATList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            iconShow: true\n        };\n    }\n    componentDidUpdate(prevProps, prevState) {\n      if(prevProps.Array != this.props.Array){\n        // console.log(\"is is going in here at least\");\n        let items = [...this.props.Array];\n        // console.log(\"this is the item\");\n        // console.log(\"this si the for the person 2\",items[this.props.Index] )\n        // console.log(\"this is what it is supposed to be 2\",items[this.props.Index]['is_sublist_available']);\n        this.setState({iconShow: items[this.props.Index]['is_sublist_available']});\n      }   \n    }\n\n    componentDidMount() {\n        let items = [...this.props.Array];\n        // console.log(\"this si the for the person\",items[this.props.Index] )\n        // console.log(\"this is what it is supposed to be\",items[this.props.Index]['is_sublist_available']);\n        this.setState({iconShow: items[this.props.Index]['is_sublist_available']});\n    }\n \n  \n\n    editFirBaseFalse = e =>{\n      // console.log(\"this should be false\");\n      this.setState({iconShow: false}, () => {\n        let items = [...this.props.Array];\n        items[this.props.Index]['is_sublist_available'] = false;\n        this.props.Path.update({ 'goals&routines': items }).then(\n            (doc) => {\n            }\n        )\n      })\n    }\n\n    editFirBaseTrue = e =>{\n      this.setState({iconShow: true}, () => {\n        let items = [...this.props.Array];\n        items[this.props.Index]['is_sublist_available'] = true;\n        this.props.Path.update({ 'goals&routines': items }).then(\n            (doc) => {\n            }\n        )\n      })\n    }\n\n    render() {\n        return (\n            <div>\n              {/* {console.log(\"this state is \", this.state.iconShow)} */}\n                {this.state.iconShow &&  \n                    <div  >\n                        <FontAwesomeIcon\n                            icon={faList}\n                            title = \"SubList Available\"\n                            style ={{ color:   \"#D6A34C\", marginLeft:\"20px\"}}\n                            // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShow: false}); this.editFirBaseFalse()}}\n                            onClick={(e)=>{ e.stopPropagation(); this.editFirBaseFalse()}}\n                            //onClick={this.ListFalse}\n                            size=\"lg\" \n                            />\n                    </div>\n                }\n                {!this.state.iconShow &&  \n                  <div  \n                  // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShowATModal: false})}}>\n                  >\n                    <span className =\"fa-layers fa-fw\" style = {{marginLeft:\"20px\"}} >\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                          icon={faList} \n                          title = \"SubList Unavailable\"\n                          onClick={(e)=>{ e.stopPropagation();  this.editFirBaseTrue()}}\n                          size=\"lg\" \n                        />\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                          icon={faSlash} \n                          title = \"SubList Unavilable\"\n                          onClick={(e)=>{ e.stopPropagation(); this.editFirBaseTrue()}}\n                          size=\"lg\" \n                      />\n                    </span>\n                  </div>\n                }\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlash, faList} from '@fortawesome/free-solid-svg-icons';\n\n\n\nexport default class ShowISList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            iconShow: true\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      if(prevProps.Array !== this.props.Array){\n        // console.log(\"is is going in here at least\");\n        let items = [...this.props.Array];\n        // console.log(\"this is the item\");\n        // console.log(\"this si the for the person 2\",items[this.props.Index] )\n        // console.log(\"this is what it is supposed to be 2\",items[this.props.Index]['is_sublist_available']);\n        this.setState({iconShow: items[this.props.Index]['is_sublist_available']});\n      }\n      \n    }\n  componentDidMount() {\n      let items = [...this.props.Array];\n      this.setState({iconShow: items[this.props.Index]['is_sublist_available']});\n  }\n \n\n    editFirBaseFalse = e =>{\n      this.setState({iconShow: false})\n      let items = [...this.props.Array]; \n        items[this.props.Index]['is_sublist_available'] = false;\n        this.props.Path.update({ 'actions&tasks': items }).then(\n            (doc) => {\n            }\n        )\n    }\n\n    editFirBaseTrue = e =>{\n      this.setState({iconShow: true})\n      let items = [...this.props.Array];\n        items[this.props.Index]['is_sublist_available'] = true;\n        this.props.Path.update({ 'actions&tasks': items }).then(\n            (doc) => {\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.iconShow &&  \n                    <div  >\n                        <FontAwesomeIcon\n                            icon={faList}\n                            title = \"Show List Item\"\n                            style ={{ color:   \"#D6A34C\", marginLeft:\"20px\"}}\n                            // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShow: false}); this.editFirBaseFalse()}}\n                            onClick={(e)=>{ e.stopPropagation(); this.editFirBaseFalse()}}\n                            size=\"lg\" \n                            />\n                    </div>\n                }\n                {!this.state.iconShow &&  \n                  <div  \n                  >\n                    <span className =\"fa-layers fa-fw\" style = {{marginLeft:\"20px\"}} >\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                          icon={faList} \n                          title = \"Don't Show List Item\"\n                          onClick={(e)=>{ e.stopPropagation();  this.editFirBaseTrue()}}\n                          size=\"lg\" \n                        />\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                          icon={faSlash} \n                          title = \"Don't Show List Item\"\n                          onClick={(e)=>{ e.stopPropagation(); this.editFirBaseTrue()}}\n                          size=\"lg\" \n                      />\n                    </span>\n                  </div>\n                }\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport firebase from \"./firebase\";\nimport {\n  ListGroup,\n  Button,\n  Row,\n  Col,\n  Modal,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport AddNewGRItem from \"./addNewGRItem.jsx\";\nimport AddNewATItem from \"./addNewATItem.jsx\";\nimport AddNewISItem from \"./addNewISItem.jsx\";\nimport DeleteISItem from \"./DeleteISItem.jsx\";\nimport DeleteAT from \"./deleteAT.jsx\";\nimport DeleteGR from \"./deleteGR.jsx\";\nimport EditGR from \"./editGR.jsx\";\nimport EditIS from \"./editIS.jsx\";\nimport EditAT from \"./EditAT.jsx\";\nimport ShowATList from \"./ShowATList\";\nimport ShowISList from \"./ShowISList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faUserAltSlash,\n  faTrophy,\n  faRunning,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport moment from \"moment\";\n\n/**\n * Notes from Tyler:\n * 2/17/2020\n * TODOs:\n *\n * 1.Times from GR are not passed down to AT and times from AT are not passed\n * to IS\n *\n * 2.Clicking on the Goal and Routine at the top level should closed previous\n * AT and IS Modals.\n *\n *\n *\n */\n\nexport default class FirebaseV2 extends React.Component {\n  state = {\n    firebaseRootPath: firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(this.props.theCurrentUserID),\n    // .doc(\"7R6hAVmDrNutRkG3sVRy\"),\n    is_sublist_available: true,\n    //This single GR item is passed to AddNewATItem to help processed the new item\n    singleGR: {\n      //everytime a goal/routine is clicked, we open a modal and the modal info will be provided by this object\n      show: false, // Show the modal\n      type: \"None\",\n      title: \"GR Name\",\n      photo: \"\",\n      available_end_time: new Date(), //TODO get these used\n      available_start_time: new Date(), //TODO get these used\n      id: null,\n      arr: [],\n      fbPath: null,\n    },\n\n    singleAT: {\n      //for each action/task we click on, we open a new modal to show the steps/instructions affiliate\n      //with the task\n      show: false, // Show the model\n      type: \"None\", // Action or Task\n      title: \"AT Name\", //Title of action task ,\n      available_end_time: new Date(), //TODO get these used\n      available_start_time: new Date(), //TODO get these used\n      photo: \"\",\n      id: null, //id of Action Task\n      arr: [], //array of instruction/steps formatted to display as a list\n      fbPath: null, //Firebase direction to the arr\n    },\n    singleATitemArr: [], //temp fix for my bad memory of forgetting to add this in singleGR\n    singleISitemArr: [], //temp fix for my bad memory of forgetting to add this in singleAT\n    modalWidth: \"350px\", //primary width size for all modals\n\n    //Use to decided whether to show the respective modals\n    addNewGRModalShow: false,\n    addNewATModalShow: false,\n    addNewISModalShow: false,\n\n    //used to determine thumbnail picture size\n    thumbnailWidth: \"150px\",\n    thumbnailHeight: \"100px\",\n    thumbnailWidthV2: \"200px\",\n    thumbnailHeightV2: \"50px\",\n\n    //isRoutine is to check whether we clicked on add routine or add goal\n    isRoutine: true,\n    availabilityColorCode: \"#D6A34C\",\n\n    //used for the list item icon.If at GR and this icon is turned off. then wont be able to show Action and taske list.\n    // iconShowATModal: true\n  };\n\n  /**\n   * refreshATItem:\n   * Given a array, it will replace the current array of singleGR which holds the layout\n   * list of all action task under it and singleATitemArr which just holds the raw data.\n   *\n   */\n  refreshATItem = (arr) => {\n    // console.log(\"refreshATItem was called\");\n\n    this.setState({ singleATitemArr: arr });\n    let resArr = this.createListofAT(arr);\n    let singleGR = this.state.singleGR;\n    singleGR.arr = resArr;\n    this.setState({ singleGR: singleGR });\n  };\n\n  /**\n   *\n   * refreshISItem - given A array item,\n   * this method will take those items,\n   * put it in the list form to present\n   * as a list of instructions and the\n   * it will also update the array of\n   * the normal list of instructions with\n   * the one passed in.\n   */\n  refreshISItem = (arr) => {\n    // console.log(\"refreshISItem new arr\");\n    // console.log(arr);\n    this.setState({\n      singleISitemArr: arr,\n    });\n    let resArr = this.createListofIS(arr);\n    let singleAt = this.state.singleAT;\n    singleAt.arr = resArr;\n    this.setState({ singleAT: singleAt });\n  };\n\n  constructor(props) {\n    // serves almost no purpose currently\n    super(props);\n    // console.log(\"running Firebase 2\");\n    // this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    //Grab the\n    this.grabFireBaseRoutinesGoalsData();\n    // console.log(\"going into compoent did mount\");\n  }\n\n  /**\n   * grabFireBaseRoutinesGoalsData:\n   * this function grabs the goals&routines array from the path located in this function\n   * which will then populate the goals, routines,originalGoalsAndRoutineArr array\n   * separately. The arrays will be used for display and data manipulation later.\n   *\n   */\n  grabFireBaseRoutinesGoalsData = () => {\n    this.props.grabFireBaseRoutinesGoalsData();\n  };\n\n  componentWillUnmount() {\n    console.log(\" FirebaseV2 will unmount web\");\n  }\n\n  formatDateTime(str) {\n    const formattedStr = str.replace(/\\//g, \"-\");\n    const time = moment(formattedStr);\n    return time.format(\"YYYY MMM DD HH:mm\");\n  }\n\n  // onInputChange = (e) => {\n  //   const inputField = e.target.value;\n  //   // console.log(\"FirebaseV2.jsx :: onInputChange :: \" + inputField);\n  // };\n  //This function essentially grabs all action/tasks\n  //for the routine or goal passed in and pops open the\n  //modal for the action/task\n  getATList = (id, title, persist) => {\n    const db = firebase.firestore();\n    console.log(\"getATList function with id : \" + id);\n    let docRef = db\n      .collection(\"users\")\n      .doc(this.props.theCurrentUserID)\n      // .doc(\"7R6hAVmDrNutRkG3sVRy\")\n      .collection(\"goals&routines\")\n      .doc(id);\n    console.log(\"this si the correct path\", docRef);\n    docRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          console.log(doc.data());\n          var x = doc.data()[\"actions&tasks\"];\n          console.log(x);\n          if (x == null) {\n            // console.log(\"No actions&tasks array!\");\n            let singleGR = {\n              //Variable to hold information about the parent Goal/ Routine\n              show: true,\n              type: persist ? \"Routine\" : \"Goal\",\n              title: title,\n              id: id,\n              arr: [],\n              fbPath: docRef,\n            };\n            this.setState({\n              singleGR: singleGR,\n              singleATitemArr: [],\n            });\n            return;\n          }\n\n          let singleGR = {\n            //initialise without list to pass fbPath to child\n            show: true,\n            type: persist ? \"Routine\" : \"Goal\",\n            title: title,\n            id: id,\n            arr: [], //array of current action/task in this singular Routine\n            fbPath: docRef,\n          };\n\n          this.setState({\n            singleGR: singleGR,\n            singleATitemArr: x,\n          });\n\n          let resArr = this.createListofAT(x);\n          //assemble singleGR template here:\n\n          singleGR = {\n            show: true,\n            type: persist ? \"Routine\" : \"Goal\",\n            title: title,\n            id: id,\n            arr: resArr, //array of current action/task in this singular Routine\n            fbPath: docRef,\n          };\n\n          this.setState({\n            singleGR: singleGR,\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      })\n      .catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n  };\n\n  //Creates a array of all actions/task for get getATList function\n  //getATList stands for get all action/task\n  createListofAT = (A) => {\n    let res = [];\n    for (let i = 0; i < A.length; i++) {\n      // console.log(A[i][\"title\"]);\n      if (!A[i][\"id\"] || !A[i][\"title\"]) {\n        // console.log(\"missing title, or id at index : \" + i);\n        return [];\n      }\n      let tempID = A[i][\"id\"];\n      let tempPhoto = A[i][\"photo\"];\n      // console.log(tempPhoto);\n      let tempTitle = A[i][\"title\"];\n      let tempAvailable = A[i][\"is_available\"];\n      res.push(\n        <div key={\"AT\" + i}>\n          <ListGroup.Item\n            action\n            onClick={() => {\n              this.ATonClickEvent(tempTitle, tempID);\n            }}\n            variant=\"light\"\n            style={{ marginBottom: \"3px\" }}\n          >\n            <Row\n              style={{ margin: \"0\", marginBottom: \"10px\" }}\n              className=\"d-flex flex-row-center\"\n            >\n              <Col>\n                <div className=\"fancytext\">{tempTitle}</div>\n              </Col>\n            </Row>\n\n            {tempPhoto ? (\n              <Row>\n                <Col\n                  xs={7}\n                  // sm=\"auto\"\n                  // md=\"auto\"\n                  // lg=\"auto\"\n                  style={{ paddingRight: \"0px\" }}\n                >\n                  <img\n                    src={tempPhoto}\n                    alt=\"Action/Task\"\n                    // height={this.state.thumbnailHeight}\n                    // width={this.state.thumbnailWidth}\n                    className=\"center\"\n                    height=\"80px\"\n                    width=\"auto\"\n                  />\n                </Col>\n                <Col style={{ paddingLeft: \"0px\" }}>\n                  <Row style={{ marginTop: \"10px\" }}>\n                    {tempAvailable ? (\n                      <div style={{ marginLeft: \"5px\" }}>\n                        <FontAwesomeIcon\n                          title=\"Available to Cailin\"\n                          style={{ color: this.state.availabilityColorCode }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is Availble to Caitlin\");\n                          }}\n                          icon={faUser}\n                          size=\"lg\"\n                        />{\" \"}\n                      </div>\n                    ) : (\n                      <div>\n                        <FontAwesomeIcon\n                          title=\"Unavailable to Caitlin\"\n                          style={{ color: \"#000000\" }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is NOT Availble to Caitlin\");\n                          }}\n                          icon={faUserAltSlash}\n                          size=\"lg\"\n                        />\n                      </div>\n                    )}\n                    {/* Index={this.findIndexByID(tempID)}\n                    Array={this.state.originalGoalsAndRoutineArr}\n                    Path={this.state.firebaseRootPath} */}\n                    <ShowISList\n                      Index={i}\n                      Array={this.state.singleATitemArr}\n                      Path={this.state.singleGR.fbPath}\n                    />\n                  </Row>\n                  <Row style={{ marginTop: \"15px\", marginBottom: \"10px\" }}>\n                    <DeleteAT\n                      deleteIndex={i}\n                      type={\"actions&tasks\"}\n                      Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                      Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\n                      refresh={this.refreshATItem}\n                    />\n                    <EditAT\n                      marginLeftV=\"-170px\"\n                      i={i} //index to edit\n                      ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                      FBPath={this.state.singleGR.fbPath} //holds the path to the array data\n                      refresh={this.refreshATItem} //function to refresh AT data\n                    />\n                  </Row>\n                </Col>\n              </Row>\n            ) : (\n              <div>\n                <Row style={{ marginLeft: \"100px\" }} className=\"d-flex \">\n                  {tempAvailable ? (\n                    <div style={{ marginLeft: \"5px\" }}>\n                      <FontAwesomeIcon\n                        title=\"Available to Cailin\"\n                        style={{ color: this.state.availabilityColorCode }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          alert(\"Item Is Availble to Caitlin\");\n                        }}\n                        icon={faUser}\n                        size=\"lg\"\n                      />{\" \"}\n                    </div>\n                  ) : (\n                    <div>\n                      <FontAwesomeIcon\n                        title=\"Unavailable to Caitlin\"\n                        style={{ color: \"#000000\" }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          alert(\"Item Is NOT Availble to Caitlin\");\n                        }}\n                        icon={faUserAltSlash}\n                        size=\"lg\"\n                      />\n                    </div>\n                  )}\n                  <ShowISList\n                    Index={i}\n                    Array={this.state.singleATitemArr}\n                    Path={this.state.singleGR.fbPath}\n                  />\n                </Row>\n                <Row\n                  style={{ marginTop: \"15px\", marginLeft: \"100px\" }}\n                  className=\"d-flex \"\n                >\n                  <DeleteAT\n                    deleteIndex={i}\n                    type={\"actions&tasks\"}\n                    Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                    Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.refreshATItem}\n                  />\n                  <EditAT\n                    marginLeftV=\"-130px\"\n                    i={i} //index to edit\n                    ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                    FBPath={this.state.singleGR.fbPath} //holds the path to the array data\n                    refresh={this.refreshATItem} //function to refresh AT data\n                  />\n                </Row>\n              </div>\n            )}\n\n            {/* This is the V1 */}\n            {/* <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-reverse\">\n              {tempAvailable ? (\n                <div style={{ marginLeft: \"5px\" }}>\n                  <FontAwesomeIcon\n                    title=\"Available to Cailin\"\n                    // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: this.state.availabilityColorCode }}\n                    onClick={e => {\n                      e.stopPropagation();\n                      alert(\"Item Is Availble to Caitlin\");\n                    }}\n                    icon={faUser}\n                    size=\"lg\"\n                  />{\" \"}\n                </div>\n              ) : (\n                <div style={{ marginLeft: \"5px\" }}>\n                  <FontAwesomeIcon\n                    title=\"Unavailable to Caitlin\"\n                    style={{ color: \"#000000\" }}\n                    onClick={e => {\n                      e.stopPropagation();\n                      alert(\"Item Is NOT Availble to Caitlin\");\n                    }}\n                    icon={faUserAltSlash}\n                    size=\"lg\"\n                  />\n                </div>\n              )}\n            </Row>\n\n            <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n              <Col>\n                <div className=\"fancytext\">{tempTitle}</div>\n              </Col>\n\n              <Col\n                sm=\"auto\"\n                md=\"auto\"\n                lg=\"auto\"\n                style={{ width: \"100%\", height: \"100%\" }}\n              >\n                {tempPhoto ? (\n                  <img\n                    src={tempPhoto}\n                    alt=\"Routine\"\n                    height={this.state.thumbnailHeight}\n                    width={this.state.thumbnailWidth}\n                    className=\"center\"\n                  />\n                ) : (\n                  <div></div>\n                )}\n              </Col>\n            </Row>\n\n            <Row\n              style={{\n                margin: \"0\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              }}\n            >\n              <DeleteAT\n                deleteIndex={i}\n                type={\"actions&tasks\"}\n                Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\n                refresh={this.refreshATItem}\n              />\n\n              <EditAT\n                i={i} //index to edit\n                ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                FBPath={this.state.singleGR.fbPath} //holds the path to the array data\n                refresh={this.refreshATItem} //function to refresh AT data\n              />\n            </Row> */}\n          </ListGroup.Item>\n        </div>\n      );\n    }\n    return res;\n  };\n\n  /**\n   * takes the list of steps/instructions and returns\n   * it in the form of a ListGroup for presentation\n   */\n  createListofIS = (A) => {\n    let res = [];\n    for (let i = 0; i < A.length; i++) {\n      // console.log(A[i][\"title\"]);\n      // console.log(A[i][\"id\"]);\n      /**\n       * TODO: notify jeremy of this issue:\n       * Some of these here don't have IDs, so we need to\n       * ignore it for now\n       */\n      let tempPhoto = A[i][\"photo\"];\n      // console.log(\"IS index \" + i + \" photo url :\" + tempPhoto);\n      let tempTitle = A[i][\"title\"];\n      let tempAvailable = A[i][\"is_available\"];\n      res.push(\n        <div key={\"IS\" + i} style={{ width: \"100%\" }}>\n          <ListGroup.Item\n            action\n            onClick={() => {\n              this.ISonClickEvent(tempTitle);\n            }}\n            variant=\"light\"\n            style={{ width: \"100%\", marginBottom: \"3px\" }}\n          >\n            <Row\n              style={{ margin: \"0\", marginBottom: \"10px\" }}\n              className=\"d-flex flex-row-center\"\n            >\n              <Col>\n                <div className=\"fancytext\">{tempTitle}</div>\n              </Col>\n            </Row>\n            {tempPhoto ? (\n              <Row>\n                <Col xs={7} style={{ paddingRight: \"0px\" }}>\n                  <img\n                    src={tempPhoto}\n                    alt=\"Action/Task\"\n                    className=\"center\"\n                    height=\"80px\"\n                    width=\"auto\"\n                  />\n                </Col>\n                <Col style={{ paddingLeft: \"0px\" }}>\n                  <Row style={{ marginTop: \"10px\" }}>\n                    {tempAvailable ? (\n                      <div style={{ marginLeft: \"5px\" }}>\n                        <FontAwesomeIcon\n                          title=\"Available to Cailin\"\n                          style={{ color: this.state.availabilityColorCode }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is Availble to Caitlin\");\n                          }}\n                          icon={faUser}\n                          size=\"lg\"\n                        />{\" \"}\n                      </div>\n                    ) : (\n                      <div>\n                        <FontAwesomeIcon\n                          title=\"Unavailable to Caitlin\"\n                          style={{ color: \"#000000\" }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is NOT Availble to Caitlin\");\n                          }}\n                          icon={faUserAltSlash}\n                          size=\"lg\"\n                        />\n                      </div>\n                    )}\n                    {/* <ShowATList /> */}\n                  </Row>\n                  <Row style={{ marginTop: \"15px\", marginBottom: \"10px\" }}>\n                    <DeleteISItem\n                      deleteIndex={i}\n                      ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                      ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                      refresh={this.refreshISItem}\n                    />\n\n                    <EditIS\n                      marginLeftV=\"-170px\"\n                      i={i} //index to edit\n                      ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                      FBPath={this.state.singleAT.fbPath} //holds the fbPath to arr to be updated\n                      refresh={this.refreshISItem} //function to refresh IS data\n                    />\n                  </Row>\n                </Col>\n              </Row>\n            ) : (\n              <div>\n                <Row style={{ marginLeft: \"100px\" }} className=\"d-flex \">\n                  {tempAvailable ? (\n                    <div style={{ marginLeft: \"5px\" }}>\n                      <FontAwesomeIcon\n                        title=\"Available to Cailin\"\n                        style={{ color: this.state.availabilityColorCode }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          alert(\"Item Is Availble to Caitlin\");\n                        }}\n                        icon={faUser}\n                        size=\"lg\"\n                      />{\" \"}\n                    </div>\n                  ) : (\n                    <div>\n                      <FontAwesomeIcon\n                        title=\"Unavailable to Caitlin\"\n                        style={{ color: \"#000000\" }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          alert(\"Item Is NOT Availble to Caitlin\");\n                        }}\n                        icon={faUserAltSlash}\n                        size=\"lg\"\n                      />\n                    </div>\n                  )}\n                  {/* <ShowATList /> */}\n                </Row>\n                <Row\n                  style={{ marginTop: \"15px\", marginLeft: \"100px\" }}\n                  className=\"d-flex \"\n                >\n                  <DeleteISItem\n                    deleteIndex={i}\n                    ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                    ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.refreshISItem}\n                  />\n\n                  <EditIS\n                    marginLeftV=\"-130px\"\n                    i={i} //index to edit\n                    ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                    FBPath={this.state.singleAT.fbPath} //holds the fbPath to arr to be updated\n                    refresh={this.refreshISItem} //function to refresh IS data\n                  />\n                </Row>\n              </div>\n            )}\n          </ListGroup.Item>\n        </div>\n      );\n    }\n    return res;\n  };\n\n  ISonClickEvent = (title) => {\n    console.log(\"Inside IS Click \" + title);\n  };\n\n  /**\n   * In this function we are passed in the id title and persist property of the incoming routine/goal\n   * and we need to make return a viewable list of all the actions/tasks for this routine/goal\n   * which is done in getATList function\n   */\n  GRonClickEvent = (title, id, persist) => {\n    // console.log(id, title, persist);\n    this.getATList(id, title, persist);\n  };\n\n  /**\n   * we are passed in the action/task id and title\n   * and we will need to grab all steps/Instructions related to this action/task,\n   *\n   */\n  ATonClickEvent = (title, id) => {\n    // let stepsInstructionArrayPath = this.state.firebaseRootPath\n    let stepsInstructionArrayPath = firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(this.props.theCurrentUserID)\n      .collection(\"goals&routines\")\n      .doc(this.state.singleGR.id)\n      .collection(\"actions&tasks\")\n      .doc(id);\n    console.log(this.state.singleGR.id);\n    console.log(id, title);\n    let temp = {\n      show: true,\n      type: \"Action/Task\",\n      title: title,\n      id: id,\n      arr: [],\n      fbPath: stepsInstructionArrayPath,\n    };\n    console.log(\"this is the path\", stepsInstructionArrayPath);\n    stepsInstructionArrayPath\n      .get()\n      .then((doc) => {\n        console.log(\"ths is the doc that doesn exist\", doc);\n        if (doc.exists) {\n          console.log(\"Grabbing steps/instructions data:\");\n          console.log(doc.data());\n          var x = doc.data();\n          x = x[\"instructions&steps\"];\n          if (x == null) {\n            this.setState({ singleAT: temp });\n            return;\n          }\n          // console.log(x);\n          //Below is a fix for fbPath Null when we pass it\n          //createListofIS and DeleteISItem.jsx, we need a path\n          //to delete the item, so we set the path then create the\n          //the array and reset it.\n          this.setState({ singleAT: temp, singleISitemArr: x });\n          temp.arr = this.createListofIS(x);\n          this.setState({ singleAT: temp, singleISitemArr: x });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No Instruction/Step documents!\");\n        }\n      })\n      .catch(function (error) {\n        console.log(\"Error getting document:\", error);\n        alert(\"Error getting document:\", error);\n      });\n  };\n\n  /**\n   * findIndexByID:\n   * given a id, it will loop through the original goals and routine array to\n   * return the index with the corresonding id\n   */\n  findIndexByID = (id) => {\n    let originalGoalsAndRoutineArr = this.props.originalGoalsAndRoutineArr;\n    for (let i = 0; i < originalGoalsAndRoutineArr.length; i++) {\n      if (id === originalGoalsAndRoutineArr[i].id) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  // ListFalse = ()=>{\n  //   this.setState({\n  //     is_sublist_available:false\n  //   });\n  // };\n\n  getRoutines = () => {\n    let displayRoutines = [];\n    if (this.props.routines.length !== 0) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.props.routines.length; i++) {\n        let tempTitle = this.props.routines[i][\"title\"];\n        let tempID = this.props.routines[i][\"id\"];\n        let tempPersist = this.props.routines[i][\"is_persistent\"];\n\n        displayRoutines.push(\n          <div key={\"test0\" + i}>\n            <ListGroup.Item\n              action\n              onClick={() => {\n                this.GRonClickEvent(tempTitle, tempID, tempPersist);\n              }}\n              variant=\"light\"\n              style={{ marginBottom: \"3px\" }}\n            >\n              <Row\n                style={{ margin: \"0\", marginBottom: \"10px\" }}\n                className=\"d-flex flex-row-center\"\n              >\n                <Col>\n                  <div className=\"fancytext\">\n                    {this.props.routines[i][\"title\"]}\n                  </div>\n                </Col>\n              </Row>\n              {this.props.routines[i][\"photo\"] ? (\n                <Row>\n                  <Col xs={7} style={{ paddingRight: \"0px\" }}>\n                    <img\n                      src={this.props.routines[i][\"photo\"]}\n                      alt=\"Routines\"\n                      className=\"center\"\n                      height=\"80px\"\n                      width=\"auto\"\n                    />\n                  </Col>\n                  <Col style={{ paddingLeft: \"0px\" }}>\n                    <Row style={{ marginTop: \"10px\" }}>\n                      {this.props.routines[i][\"is_available\"] ? (\n                        <div style={{ marginLeft: \"5px\" }}>\n                          <FontAwesomeIcon\n                            title=\"Available to Cailin\"\n                            style={{ color: this.state.availabilityColorCode }}\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              alert(\"Item Is Availble to Caitlin\");\n                            }}\n                            icon={faUser}\n                            size=\"lg\"\n                          />{\" \"}\n                        </div>\n                      ) : (\n                        <div>\n                          <FontAwesomeIcon\n                            title=\"Unavailable to Caitlin\"\n                            style={{ color: \"#000000\" }}\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              alert(\"Item Is NOT Availble to Caitlin\");\n                            }}\n                            icon={faUserAltSlash}\n                            size=\"lg\"\n                          />\n                        </div>\n                      )}\n                      <ShowATList\n                        Index={this.findIndexByID(tempID)}\n                        Array={this.props.originalGoalsAndRoutineArr}\n                        // Path={this.state.firebaseRootPath}\n                        Path={firebase\n                          .firestore()\n                          .collection(\"users\")\n                          .doc(this.props.theCurrentUserID)}\n                        // ListCameBackFalse= {this.ListFalse}\n                      />\n                    </Row>\n                    <Row style={{ marginTop: \"15px\", marginBottom: \"10px\" }}>\n                      <DeleteGR\n                        deleteIndex={this.findIndexByID(tempID)}\n                        Array={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                        // Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                        Path={firebase\n                          .firestore()\n                          .collection(\"users\")\n                          .doc(this.props.theCurrentUserID)}\n                        refresh={this.grabFireBaseRoutinesGoalsData}\n                      />\n\n                      <EditGR\n                        marginLeftV=\"-170px\"\n                        i={this.findIndexByID(tempID)} //index to edit\n                        ATArray={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                        // FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                        FBPath={firebase\n                          .firestore()\n                          .collection(\"users\")\n                          .doc(this.props.theCurrentUserID)}\n                       \n                        refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                        is_sublist_available={this.is_sublist_available}\n                      />\n                    </Row>\n                  </Col>\n                </Row>\n              ) : (\n                <div>\n                  <Row style={{ marginLeft: \"100px\" }} className=\"d-flex \">\n                    {this.props.routines[i][\"is_available\"] ? (\n                      <div style={{ marginLeft: \"5px\" }}>\n                        <FontAwesomeIcon\n                          title=\"Available to Cailin\"\n                          style={{ color: this.state.availabilityColorCode }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is Availble to Caitlin\");\n                          }}\n                          icon={faUser}\n                          size=\"lg\"\n                        />{\" \"}\n                      </div>\n                    ) : (\n                      <div>\n                        <FontAwesomeIcon\n                          title=\"Unavailable to Caitlin\"\n                          style={{ color: \"#000000\" }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is NOT Availble to Caitlin\");\n                          }}\n                          icon={faUserAltSlash}\n                          size=\"lg\"\n                        />\n                      </div>\n                    )}\n                    <ShowATList\n                      Index={this.findIndexByID(tempID)}\n                      Array={this.props.originalGoalsAndRoutineArr}\n                      // Path={this.state.firebaseRootPath}\n                      Path={firebase\n                        .firestore()\n                        .collection(\"users\")\n                        .doc(this.props.theCurrentUserID)}\n                    />\n                  </Row>\n                  <Row\n                    style={{ marginTop: \"15px\", marginLeft: \"100px\" }}\n                    className=\"d-flex \"\n                  >\n                    <DeleteGR\n                      deleteIndex={this.findIndexByID(tempID)}\n                      Array={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                      // Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                      Path={firebase\n                        .firestore()\n                        .collection(\"users\")\n                        .doc(this.props.theCurrentUserID)}\n                      refresh={this.grabFireBaseRoutinesGoalsData}\n                    />\n                    <EditGR\n                      marginLeftV=\"-130px\"\n                      i={this.findIndexByID(tempID)} //index to edit\n                      ATArray={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                      // FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                      FBPath={firebase\n                        .firestore()\n                        .collection(\"users\")\n                        .doc(this.props.theCurrentUserID)}\n                      refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                    />\n                  </Row>\n                </div>\n              )}\n              <Row>\n                <div style={{ fontSize: \"12px\" }}>\n                  {this.props.routines[i][\"datetime_started\"] ? (\n                    <div style={{ marginTop: \"3px\" }}>\n                      {\"Previous Start Time: \" +\n                        this.formatDateTime(\n                          this.props.routines[i][\"datetime_started\"]\n                        )}{\" \"}\n                    </div>\n                  ) : (\n                    <div> </div>\n                  )}\n                  {this.props.routines[i][\"datetime_completed\"] ? (\n                    <div>\n                      {\"Previous Completed Time: \" +\n                        this.formatDateTime(\n                          this.props.routines[i][\"datetime_completed\"]\n                        )}{\" \"}\n                    </div>\n                  ) : (\n                    <div> </div>\n                  )}\n                </div>\n              </Row>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    return displayRoutines;\n  };\n\n  getGoals = () => {\n    let displayGoals = [];\n    if (this.props.goals.length != null) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.props.goals.length; i++) {\n        let tempTitle = this.props.goals[i][\"title\"];\n        let tempID = this.props.goals[i][\"id\"];\n        let tempPersist = this.props.goals[i][\"is_persistent\"];\n        displayGoals.push(\n          <div key={\"test1\" + i}>\n            <ListGroup.Item\n              action\n              onClick={() => {\n                this.GRonClickEvent(tempTitle, tempID, tempPersist);\n              }}\n              variant=\"light\"\n              style={{ marginBottom: \"3px\" }}\n            >\n              <Row\n                style={{ margin: \"0\", marginBottom: \"10px\" }}\n                className=\"d-flex flex-row-center\"\n              >\n                <Col>\n                  <div className=\"fancytext\">{tempTitle}</div>\n                </Col>\n              </Row>\n              {this.props.goals[i][\"photo\"] ? (\n                <Row>\n                  <Col xs={7} style={{ paddingRight: \"0px\" }}>\n                    <img\n                      src={this.props.goals[i][\"photo\"]}\n                      alt=\"Instructions/Steps\"\n                      className=\"center\"\n                      height=\"80px\"\n                      width=\"auto\"\n                    />\n                  </Col>\n                  <Col style={{ paddingLeft: \"0px\" }}>\n                    <Row style={{ marginTop: \"10px\" }}>\n                      {this.props.goals[i][\"is_available\"] ? (\n                        <div style={{ marginLeft: \"5px\" }}>\n                          <FontAwesomeIcon\n                            title=\"Available to Cailin\"\n                            style={{ color: this.state.availabilityColorCode }}\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              alert(\"Item Is Availble to Caitlin\");\n                            }}\n                            icon={faUser}\n                            size=\"lg\"\n                          />{\" \"}\n                        </div>\n                      ) : (\n                        <div>\n                          <FontAwesomeIcon\n                            title=\"Unavailable to Caitlin\"\n                            style={{ color: \"#000000\" }}\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              alert(\"Item Is NOT Availble to Caitlin\");\n                            }}\n                            icon={faUserAltSlash}\n                            size=\"lg\"\n                          />\n                        </div>\n                      )}\n                      <ShowATList\n                        Index={this.findIndexByID(tempID)}\n                        Array={this.props.originalGoalsAndRoutineArr}\n                        // Path={this.state.firebaseRootPath}\n                        Path={firebase\n                          .firestore()\n                          .collection(\"users\")\n                          .doc(this.props.theCurrentUserID)}\n                      />\n                    </Row>\n                    <Row style={{ marginTop: \"15px\", marginBottom: \"10px\" }}>\n                      <DeleteGR\n                        deleteIndex={this.findIndexByID(tempID)}\n                        Array={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                        // Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                        Path={firebase\n                          .firestore()\n                          .collection(\"users\")\n                          .doc(this.props.theCurrentUserID)}\n                        refresh={this.grabFireBaseRoutinesGoalsData}\n                      />\n                      {/* {console.log(\"this si the originalGoals and Routines Arr\", this.props.originalGoalsAndRoutineArr)} */}\n                      <EditGR\n                        marginLeftV=\"-170px\"\n                        i={this.findIndexByID(tempID)} //index to edit\n                       \n                        ATArray={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                        // FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                        FBPath={firebase\n                          .firestore()\n                          .collection(\"users\")\n                          .doc(this.props.theCurrentUserID)}\n                        refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                      />\n                    </Row>\n                  </Col>\n                </Row>\n              ) : (\n                <div>\n                  <Row style={{ marginLeft: \"100px\" }} className=\"d-flex \">\n                    {this.props.goals[i][\"is_available\"] ? (\n                      <div style={{ marginLeft: \"5px\" }}>\n                        <FontAwesomeIcon\n                          title=\"Available to Cailin\"\n                          style={{ color: this.state.availabilityColorCode }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is Availble to Caitlin\");\n                          }}\n                          icon={faUser}\n                          size=\"lg\"\n                        />{\" \"}\n                      </div>\n                    ) : (\n                      <div>\n                        <FontAwesomeIcon\n                          title=\"Unavailable to Caitlin\"\n                          style={{ color: \"#000000\" }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is NOT Availble to Caitlin\");\n                          }}\n                          icon={faUserAltSlash}\n                          size=\"lg\"\n                        />\n                      </div>\n                    )}\n                    <ShowATList\n                      Index={this.findIndexByID(tempID)}\n                      Array={this.props.originalGoalsAndRoutineArr}\n                      // Path={this.state.firebaseRootPath}\n                      Path={firebase\n                        .firestore()\n                        .collection(\"users\")\n                        .doc(this.props.theCurrentUserID)}\n                    />\n                  </Row>\n                  <Row\n                    style={{ marginTop: \"15px\", marginLeft: \"100px\" }}\n                    className=\"d-flex \"\n                  >\n                    <DeleteGR\n                      deleteIndex={this.findIndexByID(tempID)}\n                      Array={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                      // Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                      Path={firebase\n                        .firestore()\n                        .collection(\"users\")\n                        .doc(this.props.theCurrentUserID)}\n                      refresh={this.grabFireBaseRoutinesGoalsData}\n                    />\n                    <EditGR\n                      marginLeftV=\"-130px\"\n                      i={this.findIndexByID(tempID)} //index to edit\n                      ATArray={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                      // FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                      FBPath={firebase\n                        .firestore()\n                        .collection(\"users\")\n                        .doc(this.props.theCurrentUserID)}\n                      refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                    />\n                  </Row>\n                </div>\n              )}\n\n              {/* <Row style={{ margin: \"0\" }} className=\"d-flex justify-content-between\">\n              <ShowATList />\n                {this.state.goals[i][\"is_available\"] ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n              </Row>\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\n                  <div className=\"fancytext\">\n                    {\" \"}\n                    {this.state.goals[i][\"title\"]}\n                  </div>\n                  {/* <div className=\"fancytext\"> Time: {Math.floor(1 + Math.random() * (45 - 1))} Minutes </div> */}\n              {/* </Col>\n                <Col\n                  sm=\"auto\"\n                  md=\"auto\"\n                  lg=\"auto\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  {this.state.goals[i][\"photo\"] ? (\n                    <img\n                      src={this.state.goals[i][\"photo\"]}\n                      alt=\"Goals\"\n                      className=\"center\"\n                      height={this.state.thumbnailHeight}\n                      width={this.state.thumbnailWidth}\n                    />\n                  ) : (\n                    <div></div>\n                  )}\n                </Col>\n              </Row>\n              <Row\n                className=\"d-flex flex-row-center\"\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginTop: \"10px\",\n                  marginBottom: \"10px\"\n                }}\n              >\n                <DeleteGR\n                  deleteIndex={this.findIndexByID(tempID)}\n                  Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData}\n                />\n                <EditGR\n                  i={this.findIndexByID(tempID)} //index to edit\n                  ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                />\n              </Row>  */}\n\n              <div style={{ fontSize: \"12px\" }}>\n                {this.props.goals[i][\"datetime_started\"] ? (\n                  <div style={{ marginTop: \"3px\" }}>\n                    {\"Previous Start Time: \" +\n                      this.formatDateTime(\n                        this.props.goals[i][\"datetime_started\"]\n                      )}{\" \"}\n                  </div>\n                ) : (\n                  <div> </div>\n                )}\n\n                {this.props.goals[i][\"datetime_completed\"] ? (\n                  <div>\n                    {\"Previous Completed Time: \" +\n                      this.formatDateTime(\n                        this.props.goals[i][\"datetime_completed\"]\n                      )}{\" \"}\n                  </div>\n                ) : (\n                  <div> </div>\n                )}\n              </div>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\n    return displayGoals;\n  };\n\n  getGoalsStatus = () => {\n    let displayGoals = [];\n    if (this.props.goals.length != null) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.props.goals.length; i++) {\n        let tempTitle = this.props.goals[i][\"title\"];\n        // let tempID = this.state.goals[i][\"id\"];\n        let isComplete = this.props.goals[i][\"is_complete\"];\n        if (!this.props.goals[i][\"is_available\"]) {\n          continue; //skip if not available\n        }\n        displayGoals.push(\n          <div key={\"goalStatus\" + i}>\n            <ListGroup.Item\n              action\n              variant=\"light\"\n              style={{ width: \"100%\", marginBottom: \"3px\" }}\n            >\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\n                  <div className=\"fancytext\"> {tempTitle}</div>\n                </Col>\n              </Row>\n              <Row\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                {isComplete ? (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        alert(\"Item Is Completed\");\n                      }}\n                      icon={faTrophy}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Not Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: \"black\" }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        alert(\"Item Is Not Completed\");\n                      }}\n                      icon={faRunning}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n              </Row>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\n    return displayGoals;\n  };\n\n  getRoutinesStatus = () => {\n    let displayRoutines = [];\n    if (this.props.routines.length != null) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.props.routines.length; i++) {\n        let tempTitle = this.props.routines[i][\"title\"];\n        // let tempID = this.state.routines[i]['id'];\n        let isComplete = this.props.routines[i][\"is_complete\"];\n        if (!this.props.routines[i][\"is_available\"]) {\n          continue; //skip if not available\n        }\n        displayRoutines.push(\n          <div key={\"goalStatus\" + i}>\n            <ListGroup.Item\n              action\n              variant=\"light\"\n              style={{ marginBottom: \"3px\" }}\n            >\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\n                  <div className=\"fancytext\"> {tempTitle}</div>\n                </Col>\n              </Row>\n              <Row\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                {isComplete ? (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        alert(\"Item Is Completed\");\n                      }}\n                      icon={faTrophy}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Not Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: \"black\" }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        alert(\"Item Is Not Completed\");\n                      }}\n                      icon={faRunning}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n              </Row>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\n    return displayRoutines;\n  };\n\n  render() {\n    // console.log(\"ran render firebasev2\");\n    var displayRoutines = this.getRoutines();\n    var displayGoals = this.getGoals();\n    var displayCompletedGoals = this.getGoalsStatus();\n    var displayCompletedRoutines = this.getRoutinesStatus();\n    return (\n      <div style={{ marginTop: \"0\" }}>\n        {/* <div style={{ marginTop: \"40px\" }}> */}\n        {this.props.showRoutineGoalModal ? (\n          <Col\n            style={{\n              width: this.state.modalWidth,\n              marginTop: \"0\",\n              marginRight: \"15px\",\n            }}\n            sm=\"auto\"\n            md=\"auto\"\n            lg=\"auto\"\n          >\n            <div\n              style={{\n                borderRadius: \"15px\",\n                boxShadow:\n                  \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n              }}\n            >\n              {this.abstractedRoutineGoalStatusList(\n                displayCompletedRoutines,\n                displayCompletedGoals\n              )}\n            </div>\n          </Col>\n        ) : (\n          <div> </div>\n        )}\n\n        {this.props.showRoutine ? (\n          <Col\n            style={{\n              width: this.state.modalWidth,\n              marginTop: \"0\",\n              marginRight: \"15px\",\n            }}\n            sm=\"auto\"\n            md=\"auto\"\n            lg=\"auto\"\n          >\n            <div style={{ borderRadius: \"15px\" }}>\n              {this.abstractedRoutineList(displayRoutines)}\n            </div>\n          </Col>\n        ) : (\n          <div> </div>\n        )}\n\n        {this.props.showGoal ? (\n          <Col\n            style={{\n              width: this.state.modalWidth,\n              marginTop: \"0\",\n              marginRight: \"15px\",\n            }}\n            sm=\"auto\"\n            md=\"auto\"\n            lg=\"auto\"\n          >\n            <div style={{ borderRadius: \"15px\" }}>\n              {this.abstractedGoalsList(displayGoals)}\n            </div>\n          </Col>\n        ) : (\n          <div> </div>\n        )}\n      </div>\n    );\n  }\n\n  /*\nabstractedGoalsList:\nshows entire list of goals and routines\n*/\n  abstractedGoalsList = (displayGoals) => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          marginTop: \"0\",\n          width: this.state.modalWidth,\n          marginLeft: \"0\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <Modal.Header onHide={this.props.closeGoal} closeButton>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Goals</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/**\n           * To allow for the Modals to pop up in front of one another\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.addNewGRModalShow ? this.AddNewGRModalAbstracted() : \"\"}\n          </div>\n\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.singleGR.show ? (\n              this.abstractedActionsAndTaskList()\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"650px\", overflow: \"scroll\" }}>\n              {displayGoals}\n            </div>\n            {/* Button to add new Goal */}\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewGRModalShow: true, isRoutine: false });\n            }}\n          >\n            Add Goal\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n  /*\n    abstractedRoutineList:\n    shows entire list of routines\n    */\n  abstractedRoutineList = (displayRoutines) => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          marginTop: \"0\",\n          width: this.state.modalWidth,\n          marginLeft: \"0px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <Modal.Header onHide={this.props.closeRoutine} closeButton>\n          <Modal.Title>\n            {\" \"}\n            <h5 className=\"normalfancytext\">Routines</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/**\n           * To allow for the Modals to pop up in front of one another\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\n\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.addNewGRModalShow ? this.AddNewGRModalAbstracted() : \"\"}\n          </div>\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.singleGR.show ? (\n              this.abstractedActionsAndTaskList()\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"650px\", overflow: \"scroll\" }}>\n              {displayRoutines}\n            </div>\n          </ListGroup>\n          {/* Button To add new Routine */}\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.addRoutineOnClick();\n            }}\n          >\n            Add Routine\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  addRoutineOnClick = () => {\n    let newStart, newEnd;\n    if (this.props.calendarView === \"Month\") {\n      newStart = new Date();\n      newStart.setHours(0, 0, 0, 0);\n      newEnd = new Date();\n      newEnd.setHours(23, 59, 59, 59);\n    } else if (this.props.calendarView === \"Day\") {\n      newStart = new Date(this.props.dateContext.toDate());\n      newStart.setHours(0, 0, 0, 0);\n      newEnd = new Date(this.props.dateContext.toDate());\n      newEnd.setHours(23, 59, 59, 59);\n    }\n\n    console.log(newStart, newEnd, \"newstart\");\n\n    this.setState({\n      singleGR: {\n        id: \"\",\n        available_start_time: newStart,\n        available_end_time: newEnd,\n        type: \"None\",\n        title: \"GR Name\",\n        photo: \"\",\n        arr: [],\n        fbPath: null,\n      },\n      addNewGRModalShow: true,\n      isRoutine: true,\n    });\n  };\n\n  /**\n   * AddNewGRModalAbstracted:\n   * returns a modal showing us a slot to add a new Goal/Routine\n   */\n  AddNewGRModalAbstracted = () => {\n    return (\n      <AddNewGRItem\n        closeModal={() => {\n          this.setState({ addNewGRModalShow: false });\n        }}\n        ATArray={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n        refresh={this.grabFireBaseRoutinesGoalsData}\n        isRoutine={this.state.isRoutine}\n        width={this.state.modalWidth}\n        todayDateObject={this.props.todayDateObject}\n        theCurrentUserId={this.props.theCurrentUserID}\n        singleGR={this.state.singleGR}\n      />\n    );\n  };\n\n  /*\n    abstractedInstructionsAndStepsList:\n    currently only shows the single Action/Task Title with no steps\n    */\n\n  /**\n   * abstractedInstructionsAndStepsList:\n   * Shows a single Task / Action as Title with\n   * the list of instructions/steps underneath of it\n   *\n   */\n  abstractedInstructionsAndStepsList = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          marginTop: \"0\",\n          marginLeft: \"0\",\n          width: this.state.modalWidth,\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({ singleAT: { show: false } });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">{this.state.singleAT.title}</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.addNewISModalShow ? (\n              <AddNewISItem\n                ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                refresh={this.refreshISItem}\n                hideNewISModal={\n                  //function to hide the modal\n                  () => {\n                    this.setState({ addNewISModalShow: false });\n                  }\n                }\n                width={this.state.modalWidth}\n              />\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"500px\", overflow: \"scroll\" }}>\n              {this.state.singleAT.arr}\n            </div>\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewISModalShow: true });\n            }}\n          >\n            Add Step\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  /**\n   * abstractedActionsAndTaskList -\n   * returns modal with with a single Routine/ Goal as title\n   * and beneath it is the list of action/ task associated with the\n   * goal/ routine\n   */\n  abstractedActionsAndTaskList = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          marginTop: \"0\",\n          marginLeft: \"0\",\n          width: this.state.modalWidth,\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({ singleGR: { show: false } });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">{this.state.singleGR.title}</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.addNewATModalShow ? (\n              <AddNewATItem\n                refresh={this.refreshATItem} //refreshes the list of AT\n                ATArray={this.state.singleATitemArr}\n                ATItem={this.state.singleGR} //The parent item\n                hideNewATModal={() => {\n                  this.setState({ addNewATModalShow: false });\n                }}\n                width={this.state.modalWidth}\n              />\n            ) : (\n              <div></div>\n            )}\n          </div>\n          {/**\n           * Here Below, the IS list will pop up inside the AT list\n           */}\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.singleAT.show ? (\n              this.abstractedInstructionsAndStepsList()\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"500px\", overflow: \"scroll\" }}>\n              {this.state.singleGR.arr}\n            </div>\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewATModalShow: true });\n            }}\n          >\n            Add Action/Task\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  addNewTaskInputBox = () => {\n    return (\n      <InputGroup size=\"lg\" style={{ marginTop: \"20px\" }} className=\"mb-3\">\n        <FormControl\n          onChange={() => {\n            console.log(\"addNewGoalInputBox\");\n          }}\n          placeholder=\"\"\n        />\n        <InputGroup.Append>\n          <Button variant=\"outline-secondary\">Add</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    );\n  };\n\n  /*\n    abstractedRoutineGoalStatusList:\n    shows entire list of goals and routines\n    */\n  abstractedRoutineGoalStatusList = (displayRoutines, displayGoals) => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          marginTop: \"0\",\n          width: this.state.modalWidth,\n          marginLeft: \"0\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <Modal.Header onHide={this.props.closeRoutineGoalModal} closeButton>\n          <Modal.Title>\n            {\" \"}\n            <h5 className=\"normalfancytext\">Current Status</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h2 className=\"normalfancytext\">Routines:</h2>\n\n          {/**\n           * To allow for the Modals to pop up in front of one another\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\n\n          {/* <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\n                        {(this.state.singleGR.show) ? this.abstractedActionsAndTaskList() : (<div></div>)}\n                    </div> */}\n\n          <ListGroup style={{ height: \"350px\", overflow: \"scroll\" }}>\n            {displayRoutines}\n            {/* <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: true }) }} >Add Routine</button> */}\n          </ListGroup>\n          {/* Button To add new Routine */}\n          <h2 className=\"normalfancytext\" style={{ marginTop: \"50px\" }}>\n            Goals:\n          </h2>\n          <ListGroup style={{ height: \"250px\", overflow: \"scroll\" }}>\n            {displayGoals}\n            {/* Button to add new Goal */}\n            {/* <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: false }) }}>Add Goal</button> */}\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer></Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  addNewGoalInputBox = () => {\n    return (\n      <InputGroup\n        size=\"lg\"\n        style={{ marginTop: \"20px\", width: this.state.modalWidth }}\n        className=\"mb-3\"\n      >\n        <FormControl\n          onChange={() => {\n            console.log(\"addNewGoalInputBox\");\n          }}\n          placeholder=\"place holder!!\"\n        />\n        <InputGroup.Append>\n          <Button variant=\"outline-secondary\">Add</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    );\n  };\n}\n","import React from 'react';\nimport moment from 'moment';\n\nexport default class TylersCalendarv1 extends React.Component {\n\n  componentDidMount() {\n  }\n\n  weekdays = moment.weekdays();\n  weekdaysShort = moment.weekdaysShort(); // [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n\n  componentWillUnmount() {\n\n  }\n\n  year = () => {\n    return this.props.dateContext.format(\"Y\");\n  }\n\n  currentDay = () => {\n    return this.props.dateObject.format(\"D\");\n  };\n  month = () => {\n    return this.props.dateContext.format(\"MMMM\");\n  }\n\n  daysInMonth = () => {\n    return this.props.dateContext.daysInMonth();\n  }\n\n  firstDayOfMonth = () => {\n    let dateContext = this.props.dateContext;\n    let firstDay = moment(dateContext)\n      .startOf(\"month\")\n      .format(\"d\"); // Day of week 0...1..5...6\n    return firstDay;\n  };\n\n  //Returns a dense populated set of icons to be pushed onto a day i\n  //into the table\n\n  getEventsforDay = (i) => {\n\n    var res = [];\n    var tempStart = null;\n    var tempEnd = null;\n    if (this.props.originalEvents == null) {\n      return []\n    }\n    // console.log(this.props.originalEvents);\n    for (let j = 0; j < this.props.originalEvents.length; ++j) {\n      if (this.props.originalEvents[j].start.dateTime) {\n        tempStart = this.props.originalEvents[j].start.dateTime;\n        tempEnd = this.props.originalEvents[j].end.dateTime;\n        let startDate = new Date(tempStart).getDate();\n        let endDate = new Date(tempEnd).getDate();\n        // console.log(startDate)\n        if (i >= startDate && i <= endDate) {\n          res.push(<div key={'event' + j}><button\n            value={j}\n            onClick={this.onEventClick}\n            className=\"btn btn-sm\" style={{\n              padding: '3px',\n              paddingLeft: '4px',\n              paddingRight: '4px',\n              fontSize: '9px', color: \"white\",\n              borderRadius: '4px', background: \"#42B8DD\",\n              textShadow: \"0 1px 1px rgba(0, 0, 0, 0.2)\", marginBottom: \"3px\"\n            }} >{this.props.originalEvents[j].summary}</button><br /></div>);\n        }\n      }\n      else {\n        tempStart = this.props.originalEvents[j].start.date;\n        // console.log('start date');\n        // console.log(this.props.originalEvents[j].start.date);\n        tempEnd = this.props.originalEvents[j].end.date;\n        let startDate = new Date(tempStart).getDate();\n        let endDate = new Date(tempEnd).getDate();\n        // console.log(startDate)\n        if (i > startDate && i <= endDate) {\n          // console.log('sss' + i, startDate, endDate);\n          res.push(<div key={'event' + j}><button\n            value={j}\n            onClick={this.onEventClick}\n            className=\"btn btn-sm\" style={{\n              padding: '3px',\n              paddingLeft: '4px',\n              paddingRight: '4px',\n              fontSize: '9px', color: \"white\",\n              borderRadius: '3px', background: \"CornflowerBlue\",\n              textShadow: \"0 1px 1px rgba(0, 0, 0, 0.2), \", marginBottom: \"3px\"\n            }} >{this.props.originalEvents[j].summary}</button><br /></div>);\n        }\n      }\n\n    }\n    return res;\n  }\n\n  onEventClick = (x) => {\n    x.stopPropagation();\n    this.props.eventClick(x.target.value);\n  }\n\n  onDayClick = (d) => {\n    this.props.handleDateClick(this.props.dateContext.format(\"M\") + '/' + d + '/' + this.props.dateContext.format(\"Y\"));\n  }\n\n  onExpandClick = (d) => {\n    this.props.handleExpandClick(this.props.dateContext.format(\"M\") + '/' + d + '/' + this.props.dateContext.format(\"Y\"));\n  }\n\n  render() {\n    let daysInMonth = [];\n    let weekdays = this.weekdays.map((day) => {\n      return (\n        <td className=\"fancytext\" key={day}>{day}</td>\n      )\n    });\n\n    //create the blank slots to push day 1 to right day\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(<td key={'empty' + i} className=\"calendar-day empty\">{\"\"}</td>);\n    }\n\n    //The variable below tells us if the current month we are at is today's month\n    var sameDate = this.props.dateObject.format(\"MM/YYYY\") === this.props.dateContext.format(\"MM/YYYY\");\n\n    // console.log(this.props.dateObject.format(\"DD/MM/YYYY\") + \"  == \" + this.props.dateContext.format(\"DD/MM/YYYY\"));\n    for (var d = 1; d <= this.daysInMonth(); d++) {\n      // let currentDay = d == this.currentDay() ? \"today\" : \"\";\n\n      // const todayStyle = { boxShadow: '4px 4px 8px 4px rgba(0, 0, 0, 0.2)' };\n\n      daysInMonth.push(\n        <td key={d} onClick={this.onDayClick.bind(this, d)}>\n          <div style={{ padding: '0', margin: '0', height: '110px', width: \"100px\", overflow: 'auto' }}>\n            {\n              // eslint-disable-next-line max-len\n            }\n              <div className={(sameDate && (d === parseInt(this.currentDay(), 10))) ? \"numberCircleCurrent\" : \"numberCircle\"} onClick={this.onExpandClick.bind(this, d)}>\n                <a className=\"fancytext\"> {d} </a>\n              </div>\n            {this.getEventsforDay(d)}\n          </div>\n        </td>\n      );\n    }\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalSlots.length - 1) {\n        // let insertRow = cells.slice();\n        rows.push(cells);\n      }\n    });\n\n    var daysinmonth = rows.map((data, i) => {\n      return <tr style={{ padding: '0px' }} key={i * 11}>{data}</tr>;\n    });\n\n    return (\n      <div>\n        <table className=\"table\" style={{ height: '450px', tableLayout: 'fixed', width: '910px' }}>\n          <thead>\n            <tr>\n              {weekdays}\n            </tr>\n          </thead>\n          <tbody style={{ height: '450px', width: '600px' }}>\n            {daysinmonth}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\n// import axios from 'axios';\nimport moment from \"moment\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n// import firebase from \"./firebase\";\nexport default class DayRoutines extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      routines: [], // array to hold all routines\n      pxPerHour: \"30px\", //preset size for all columns\n      pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n      zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n      eventBoxSize: \"200\", //width size for event box\n    };\n  }\n\n  dayView = () => {\n    //this essentially creates the time row\n    let arr = [];\n    for (let i = 0; i < 24; ++i) {\n      arr.push(\n        <Row key={\"dayDayViewRoutines\" + i}>\n          <Col\n            style={{\n              borderTop: \"1px solid  mistyrose\",\n              textAlign: \"right\",\n              height: this.state.pxPerHour,\n            }}\n          >\n            {i}:00\n          </Col>\n        </Row>\n      );\n    }\n    return arr;\n  };\n\n  RoutineClicked = () => {\n    this.props.dayRoutineClick();\n  };\n\n  /**\n   * getEventItem: given an hour, this will return all events that was started during that hour\n   *\n   */\n  getEventItem = (hour) => {\n    var res = [];\n    var arr = this.props.routines;\n    var sameTimeEventCount = 0;\n    let itemWidth = this.state.eventBoxSize;\n    // var overlapEvent = 0;\n    var addmarginLeft = 0;\n    var fontSize = 10;\n    for (let i = 0; i < arr.length; i++) {\n      let start_dateObj = new Date();\n      let start_dateStr = start_dateObj.toISOString().split(\"T\").shift();\n      let start_timeStr = arr[i].available_start_time;\n      let start_timeAndDate = moment(\n        start_dateStr + \" \" + start_timeStr\n      ).toDate();\n\n      let end_dateObj = new Date();\n      let end_dateStr = end_dateObj.toISOString().split(\"T\").shift();\n      let end_timeStr = arr[i].available_end_time;\n      let end_timeAndDate = moment(end_dateStr + \" \" + end_timeStr).toDate();\n\n      let tempStartTime = start_timeAndDate;\n      let tempEndTime = end_timeAndDate;\n      /**\n       * TODO: add the case where arr[i].start.dateTime doesn't exists\n       */\n      if (tempStartTime.getHours() === hour) {\n        // console.log(\"matched\" + i );\n        let minsToMarginTop =\n          (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n        let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n        let minDiff = tempEndTime.getMinutes() / 60;\n        let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n        let color = \"PaleTurquoise\";\n\n        sameTimeEventCount++;\n        //check if there is already an event there overlapping from another hour\n        for (let i = 0; i < arr.length; i++) {\n          let start_dateObj = new Date();\n          let start_dateStr = start_dateObj.toISOString().split(\"T\").shift();\n          let start_timeStr = arr[i].available_start_time;\n          let start_timeAndDate = moment(\n            start_dateStr + \" \" + start_timeStr\n          ).toDate();\n\n          let end_dateObj = new Date();\n          let end_dateStr = end_dateObj.toISOString().split(\"T\").shift();\n          let end_timeStr = arr[i].available_end_time;\n          let end_timeAndDate = moment(\n            end_dateStr + \" \" + end_timeStr\n          ).toDate();\n\n          let tempStartTime = start_timeAndDate;\n          let tempEndTime = end_timeAndDate;\n          if (\n            tempStartTime.getHours() < hour &&\n            tempEndTime.getHours() > hour\n          ) {\n            // console.log(\"We ARE IN HEREEEE\");\n            addmarginLeft += 20;\n            itemWidth = itemWidth - 20;\n            // overlapEvent++;\n          }\n        }\n\n        if (sameTimeEventCount > 1) {\n          addmarginLeft += 20;\n          // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n          // itemWidth = itemWidth/(sameHourItems-1);\n          itemWidth = itemWidth - 20;\n          // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\n        }\n\n        //chnage font size if not enough space\n        if (tempEndTime.getHours() - tempStartTime.getHours() < 2) {\n          fontSize = 8;\n        }\n        // change color if more than one event in same time.\n        if (sameTimeEventCount <= 1) {\n          color = hour % 2 === 0 ? \"PaleTurquoise\" : \"skyblue\";\n        } else if (sameTimeEventCount === 2) {\n          color = \"skyblue\";\n        } else {\n          color = \"blue\";\n        }\n        let newElement = (\n          <div\n            key={\"dayRoutineItem\" + i}\n            data-toggle=\"tooltip\"\n            data-placement=\"right\"\n            title={\n              arr[i].title +\n              \"\\nStart: \" +\n              tempStartTime +\n              \"\\nEnd: \" +\n              tempEndTime\n            }\n            onMouseOver={(e) => {\n              e.target.style.color = \"#FFFFFF\";\n              e.target.style.background = \"RebeccaPurple\";\n              // e.target.style.marginLeft = \"5px\";\n              // e.target.style.border= \"3px solid w\";\n              e.target.style.zIndex = \"2\";\n            }}\n            onMouseOut={(e) => {\n              e.target.style.zIndex = \"1\";\n\n              // e.target.style.marginLeft = \"0px\";\n              e.target.style.color = \"#000000\";\n              //  e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\n              e.target.style.border = \"1px lightgray solid\";\n\n              e.target.style.background = color;\n            }}\n            onClick={this.RoutineClicked}\n            style={{\n              zIndex: this.state.zIndex,\n              marginTop: minsToMarginTop + \"px\",\n              padding: \"5px\",\n              // fontSize: \"10px\",\n              border: \"1px lightgray solid \",\n              // float: \"left\",\n              borderRadius: \"5px\",\n              // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\n              //  width: this.state.eventBoxSize,\n              position: \"absolute\",\n              height: height + \"px\",\n\n              fontSize: fontSize + \"px\",\n              background: color,\n              width: itemWidth + \"px\",\n              marginLeft: addmarginLeft + \"px\",\n            }}\n          >\n            {arr[i].title}\n          </div>\n        );\n        res.push(newElement);\n      }\n    }\n    return res;\n  };\n\n  /**\n   * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\n   */\n  dayViewItems = () => {\n    // this creates the events adjusting their div size to reflecting the time it's slotted for\n    var arr = [];\n    for (let i = 0; i < 24; ++i) {\n      arr.push(\n        <Row key={\"dayRoutine\" + i} style={{ position: \"relative\" }}>\n          <Col\n            style={{\n              position: \"relative\",\n              borderTop: \"1px solid mistyrose\",\n              width: \"180px\",\n              background: \"aliceblue\",\n              height: this.state.pxPerHour,\n            }}\n          >\n            {this.getEventItem(i)}\n          </Col>\n        </Row>\n      );\n    }\n    return arr;\n  };\n\n  render() {\n    // console.log(this.state.routines, \"dayroutines\");\n    return (\n      <div\n        style={{\n          padding: \"20px\",\n          // marginTop: \"10px\",\n          width: \"300px\",\n          borderRadius: \"20px\",\n        }}\n      >\n        Today's Routines:\n        <Container style={{}}>\n          <Row>\n            <Col>\n              <Container style={{ margin: \"0\", padding: \"0\" }}>\n                {this.dayViewItems()}\n              </Container>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n// import axios from 'axios';\nimport moment from 'moment';\nimport {  Container, Row, Col} from 'react-bootstrap';\n\n// import firebase from \"./firebase\";\nexport default class DayGoals extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pxPerHour: \"30px\", //preset size for all columns\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n            eventBoxSize: \"200\", //width size for event box\n        }\n    }\n\n    dayView = () => { //this essentially creates the time row\n        let arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayDayViewGoals\" + i}>\n                    <Col style={{ borderTop: \"1px solid mistyrose\", textAlign: \"right\", height: this.state.pxPerHour }}>\n                        {i}:00\n                    </Col >\n                </Row>\n            )\n        }\n        return arr\n    }\n\n    GoalClicked  = ()=>{\n        this.props.dayGoalClick();\n    }\n    /**\n     * getEventItem: given an hour, this will return all events that was started during that hour\n     *\n    */\n    getEventItem = (hour) => {\n        var res = []\n        var arr = this.props.goals;\n        var sameTimeEventCount = 0;\n        let itemWidth = this.state.eventBoxSize;\n        // var overlapEvent = 0;\n        var addmarginLeft = 0;\n        var fontSize = 10;\n        for (let i = 0; i < arr.length; i++) {\n\n            let start_dateObj = new Date();\n            let start_dateStr = start_dateObj.toISOString().split('T').shift();\n            let start_timeStr = arr[i].available_start_time;\n            let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n            let end_dateObj = new Date();\n            let end_dateStr = end_dateObj.toISOString().split('T').shift();\n            let end_timeStr = arr[i].available_end_time;\n            let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n            let tempStartTime = start_timeAndDate;\n            let tempEndTime = end_timeAndDate;\n            /**\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\n            */\n            if (tempStartTime.getHours() === hour) {\n                // addmarginLeft = 0;\n                // itemWidth = this.state.eventBoxSize;\n                // itemWidth = 0;\n                // console.log(\"matched\" + i );\n                let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                let minDiff = (tempEndTime.getMinutes()) / 60;\n                let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                let color = 'PaleTurquoise';\n\n                sameTimeEventCount++;\n                //check if there is already an event there overlapping from another hour\n                for(let i = 0; i < arr.length; i++){\n                    let start_dateObj = new Date();\n                    let start_dateStr = start_dateObj.toISOString().split('T').shift();\n                    let start_timeStr = arr[i].available_start_time;\n                    let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n                    let end_dateObj = new Date();\n                    let end_dateStr = end_dateObj.toISOString().split('T').shift();\n                    let end_timeStr = arr[i].available_end_time;\n                    let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n                    let tempStartTime = start_timeAndDate;\n                    let tempEndTime = end_timeAndDate;\n                    if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\n                        //  console.log(\"this is statr time :\"+ tempStartTime.getHours() );\n                        //  console.log(\"this is end time :\"+ tempEndTime.getHours() );\n                        //  console.log(\"add 20\");\n                        addmarginLeft += 20;\n                        itemWidth = itemWidth - 20;\n                        // console.log(addmarginLeft);\n                        // overlapEvent++;\n                    }\n                }\n\n\n                if(sameTimeEventCount > 1  ){\n                    // console.log(\"In here because same hour  \");\n                    // console.log(\"add 20\");\n                     addmarginLeft += 20;\n                    // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                    // itemWidth = itemWidth/(sameHourItems-1);\n                    itemWidth = itemWidth - 20;\n                    // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\n                    // console.log(addmarginLeft);\n                }\n                // console.log(addmarginLeft);\n                // console.log(\"end of this element \");\n\n                //chnage font size if not enough space\n                if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\n                    fontSize = 8;\n                }\n                // change color if more than one event in same time.\n                if(sameTimeEventCount <= 1){\n                     color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\n                }\n                else if( sameTimeEventCount === 2){\n                    color = 'skyblue';\n                }\n                else{\n                    color = 'blue';\n                }\n                let newElement =\n                    (<div key={\"dayGoalItem\" + i}\n                    data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n\n                        onMouseOver={e => {\n                            e.target.style.color = \"#FFFFFF\";\n                            e.target.style.background = \"RebeccaPurple\";\n                            // e.target.style.marginLeft = \"5px\";\n                            e.target.style.zIndex=\"2\";\n\n                        }}\n                        onMouseOut={e => {\n                            e.target.style.zIndex=\"1\";\n                            // e.target.style.marginLeft = \"0px\";\n                            e.target.style.color = \"#000000\";\n                            e.target.style.background = color;\n                            e.target.style.border= \"1px lightgray solid\";\n                            // e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\n                        }}\n                        onClick = {this.GoalClicked}\n                        style={{\n                            zIndex: this.state.zIndex,\n                            marginTop: minsToMarginTop + \"px\",\n                            padding: \"5px\",\n                            // fontSize: \"10px\",\n                            border: \"1px lightgray solid \",\n                            // float: \"left\",\n                            borderRadius: \"5px\",\n                            // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\n                            // width: this.state.eventBoxSize,\n                            position: \"absolute\",\n                            height: height + \"px\",\n\n                            fontSize: fontSize + \"px\",\n                            background: color,\n                            width: itemWidth + \"px\",\n                            marginLeft: addmarginLeft + \"px\"\n                        }}>\n                        {arr[i].title}\n                    </div>);\n                res.push(newElement);\n            }\n        }\n        return res;\n    }\n\n    /**\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\n    */\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n        var arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayGoal\" + i} style={{ position: \"relative\" }}>\n                    <Col\n                        style={{\n                            position: \"relative\",\n                            borderTop: \"1px solid mistyrose\",\n                            width: '180px',\n                            background: \"aliceblue\",\n                            height: this.state.pxPerHour\n                        }}>\n                        {this.getEventItem(i)}\n                    </Col >\n                </Row>\n            )\n        }\n        return arr;\n    }\n\n    render() {\n        return (\n\n\n            <div style={{margin:'20px',\n            padding: '20px',\n            marginTop: \"0px\",\n            width: \"300px\",\n            borderRadius: \"20px\" }}>\n                Today's Goals:\n                <Container style={{}}>\n                    <Row >\n                        {/* <div class=\"table col-md-1\" > */}\n                        <Col>\n                            {/* this is for the actual event slots */}\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.dayViewItems()}\n                            </Container>\n                            {/* </div> */}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n\n}\n","import React, { Component } from \"react\";\n// import axios from 'axios';\n// import moment from \"moment\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nexport default class DayEvents extends Component {\n  constructor(props) {\n    super(props);\n    // console.log(this.props.dateContext);\n    this.state = {\n      //dayEvents: [], //holds google events data for a single day\n      // todayDateObject: moment(\"03/07/2020\"), //this is the date of interset for events to be displaye\n      pxPerHour: \"30px\", //preset size for all columns\n      pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n      zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n      eventBoxSize: 150, //width size for event box\n      marginFromLeft: 0,\n    };\n  }\n\n  timeDisplay = () => {\n    //this essentially creates the time row\n    let arr = [];\n    for (let i = 0; i < 24; ++i) {\n      arr.push(\n        <Row key={\"dayEvent\" + i}>\n          <Col\n            style={{\n              borderTop: \"1px solid lavender\",\n              textAlign: \"right\",\n              height: this.state.pxPerHour,\n            }}\n          >\n            {i}:00\n          </Col>\n        </Row>\n      );\n    }\n    return arr;\n  };\n\n\n  onEventClick = (e, i) => {\n    var arr = this.props.dayEvents;\n    e.stopPropagation();\n    this.props.eventClickDayView(arr[i]);\n  };\n\n\n  /*\n   * TODO: events spanning multiple days\n   * getEventItem: given an hour, this will return all events that was started during that hour\n   *\n   */\n  getEventItem = (hour) => {\n    var res = [];\n    var tempStart = null;\n    var tempEnd = null;\n    var arr = this.props.dayEvents;\n    var sameTimeEventCount = 0;\n    var addmarginLeft = 0;\n    let itemWidth = this.state.eventBoxSize;\n    var fontSize = 10;\n\n\n    for (let i = 0; i < arr.length; i++) {\n      tempStart = arr[i].start.dateTime;\n      tempEnd = arr[i].end.dateTime;\n      /**\n       * TODO: add the case where arr[i].start.dateTime doesn't exists\n       */\n      let tempStartTime = new Date(tempStart);\n      let tempEndTime = new Date(tempEnd);\n      let curDate = this.props.dateContext.get(\"date\");\n      console.log(curDate, tempStartTime.getDate(), tempStartTime.getHours());\n      if (tempStartTime.getDate() === curDate) {\n        if (tempStartTime.getHours() === hour) {\n          if (tempStartTime.getDate() !== tempEndTime.getDate()) {\n            let minsToMarginTop =\n              (tempStartTime.getMinutes() / 60) *\n              this.state.pxPerHourForConversion;\n            let hourDiff = 24 - tempStartTime.getHours();\n            let minDiff = 0;\n            let color = \"lavender\";\n            let height =\n              (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n            sameTimeEventCount++;\n            let newElement = (\n              <div key={\"event\" + i}>\n                <div\n                  data-toggle=\"tooltip\"\n                  data-placement=\"right\"\n                  title={\n                    arr[i].summary +\n                    \"\\nStart: \" +\n                    tempStartTime +\n                    \"\\nEnd: \" +\n                    tempEndTime\n                  }\n                  onMouseOver={(e) => {\n                    e.target.style.color = \"#FFFFFF\";\n                    e.target.style.background = \"RebeccaPurple\";\n                    e.target.style.zIndex = \"2\";\n                  }}\n                  onMouseOut={(e) => {\n                    e.target.style.zIndex = \"1\";\n                    e.target.style.color = \"#000000\";\n                    e.target.style.background = color;\n                  }}\n                  key={i}\n                  // value = {i}\n                  onClick={(e) => this.onEventClick(e, i)}\n                  style={{\n                    zIndex: this.state.zIndex,\n                    marginTop: minsToMarginTop + \"px\",\n                    padding: \"5px\",\n                    fontSize: fontSize + \"px\",\n                    border: \"1px lightgray solid \",\n                    float: \"left\",\n                    //  verticalAlign: \" \",\n                    // verticalAlign: 'text-top',\n                    // textAlign:\"left\",\n                    borderRadius: \"5px\",\n                    background: color,\n                    // width: this.state.eventBoxSize - (addmarginLeft/16),\n                    width: itemWidth + \"px\",\n                    position: \"absolute\",\n                    height: height + \"px\",\n                    marginLeft: addmarginLeft + \"px\",\n                  }}\n                >\n                  {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                  {arr[i].summary}\n                </div>\n              </div>\n            );\n            res.push(newElement);\n          } else {\n            // addmarginLeft = 0;\n            // itemWidth = this.state.eventBoxSize;\n            let minsToMarginTop =\n              (tempStartTime.getMinutes() / 60) *\n              this.state.pxPerHourForConversion;\n            let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n            let minDiff = tempEndTime.getMinutes() / 60;\n            let color = \"PaleTurquoise\";\n            let height =\n              (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n            sameTimeEventCount++;\n            //check if there is already an event there overlapping from another hour\n            for (let i = 0; i < arr.length; i++) {\n              tempStart = arr[i].start.dateTime;\n              tempEnd = arr[i].end.dateTime;\n              let tempStartTime = new Date(tempStart);\n              let tempEndTime = new Date(tempEnd);\n              if (\n                tempStartTime.getHours() < hour &&\n                tempEndTime.getHours() > hour\n              ) {\n                addmarginLeft += 20;\n                itemWidth = itemWidth - 20;\n              }\n            }\n\n            if (sameTimeEventCount > 1) {\n              // console.log(\"add 20 in day\");\n              addmarginLeft += 20;\n              // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n              // itemWidth = itemWidth/(sameHourItems-1);\n              itemWidth = itemWidth - 20;\n            }\n            //chnage font size if not enough space\n            if (tempEndTime.getHours() - tempStartTime.getHours() < 2) {\n              fontSize = 8;\n            }\n\n            // change color if more than one event in same time.\n            if (sameTimeEventCount <= 1) {\n              color = hour % 2 == 0 ? \"PaleTurquoise\" : \"skyblue\";\n            } else if (sameTimeEventCount == 2) {\n              color = \"skyblue\";\n            } else {\n              color = \"blue\";\n            }\n\n            let newElement = (\n              <div key={\"event\" + i}>\n                <div\n                  data-toggle=\"tooltip\"\n                  data-placement=\"right\"\n                  title={\n                    arr[i].summary +\n                    \"\\nStart: \" +\n                    tempStartTime +\n                    \"\\nEnd: \" +\n                    tempEndTime\n                  }\n                  onMouseOver={(e) => {\n                    e.target.style.color = \"#FFFFFF\";\n                    e.target.style.background = \"RebeccaPurple\";\n                    e.target.style.zIndex = \"2\";\n                  }}\n                  onMouseOut={(e) => {\n                    e.target.style.zIndex = \"1\";\n                    e.target.style.color = \"#000000\";\n                    e.target.style.background = color;\n                  }}\n                  key={i}\n                  // value = {i}\n                  onClick={(e) => this.onEventClick(e, i)}\n                  style={{\n                    zIndex: this.state.zIndex,\n                    marginTop: minsToMarginTop + \"px\",\n                    padding: \"5px\",\n                    fontSize: fontSize + \"px\",\n                    border: \"1px lightgray solid \",\n                    float: \"left\",\n                    //  verticalAlign: \" \",\n                    // verticalAlign: 'text-top',\n                    // textAlign:\"left\",\n                    borderRadius: \"5px\",\n                    background: color,\n                    // width: this.state.eventBoxSize - (addmarginLeft/16),\n                    width: itemWidth + \"px\",\n                    position: \"absolute\",\n                    height: height + \"px\",\n                    marginLeft: addmarginLeft + \"px\",\n                  }}\n                >\n                  {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                  {arr[i].summary}\n                </div>\n              </div>\n            );\n            res.push(newElement);\n          }\n        }\n      } else if (hour === 0 && tempEndTime.getDate() === curDate) {\n        let minsToMarginTop = 0;\n        let hourDiff = tempEndTime.getHours();\n        let minDiff = tempEndTime.getMinutes() / 60;\n        let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n        let color = \"lavender\";\n        sameTimeEventCount++;\n        let newElement = (\n          <div key={\"event\" + i}>\n            <div\n              data-toggle=\"tooltip\"\n              data-placement=\"right\"\n              title={\n                arr[i].summary +\n                \"\\nStart: \" +\n                tempStartTime +\n                \"\\nEnd: \" +\n                tempEndTime\n              }\n              onMouseOver={(e) => {\n                e.target.style.color = \"#FFFFFF\";\n                e.target.style.background = \"RebeccaPurple\";\n                e.target.style.zIndex = \"2\";\n              }}\n              onMouseOut={(e) => {\n                e.target.style.zIndex = \"1\";\n                e.target.style.color = \"#000000\";\n                e.target.style.background = color;\n              }}\n              key={i}\n              // value = {i}\n              onClick={(e) => this.onEventClick(e, i)}\n              style={{\n                zIndex: this.state.zIndex,\n                marginTop: minsToMarginTop + \"px\",\n                padding: \"5px\",\n                fontSize: fontSize + \"px\",\n                border: \"1px lightgray solid \",\n                float: \"left\",\n                //  verticalAlign: \" \",\n                // verticalAlign: 'text-top',\n                // textAlign:\"left\",\n                borderRadius: \"5px\",\n                background: color,\n                // width: this.state.eventBoxSize - (addmarginLeft/16),\n                width: itemWidth + \"px\",\n                position: \"absolute\",\n                height: height + \"px\",\n                marginLeft: addmarginLeft + \"px\",\n              }}\n            >\n              {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n              {arr[i].summary}\n            </div>\n          </div>\n        );\n        res.push(newElement);\n      } else if (\n        hour === 0 &&\n        tempStartTime.getDate() < curDate &&\n        tempEndTime.getDate() > curDate\n      ) {\n        let minsToMarginTop = 0;\n        let hourDiff = 24;\n        let height = hourDiff * this.state.pxPerHourForConversion;\n        let color = \"lavender\";\n        sameTimeEventCount++;\n        let newElement = (\n          <div key={\"event\" + i}>\n            <div\n              data-toggle=\"tooltip\"\n              data-placement=\"right\"\n              title={\n                arr[i].summary +\n                \"\\nStart: \" +\n                tempStartTime +\n                \"\\nEnd: \" +\n                tempEndTime\n              }\n              onMouseOver={(e) => {\n                e.target.style.color = \"#FFFFFF\";\n                e.target.style.background = \"RebeccaPurple\";\n                e.target.style.zIndex = \"2\";\n              }}\n              onMouseOut={(e) => {\n                e.target.style.zIndex = \"1\";\n                e.target.style.color = \"#000000\";\n                e.target.style.background = color;\n              }}\n              key={i}\n              // value = {i}\n              onClick={(e) => this.onEventClick(e, i)}\n              style={{\n                zIndex: this.state.zIndex,\n                marginTop: minsToMarginTop + \"px\",\n                padding: \"5px\",\n                fontSize: fontSize + \"px\",\n                border: \"1px lightgray solid \",\n                float: \"left\",\n                //  verticalAlign: \" \",\n                // verticalAlign: 'text-top',\n                // textAlign:\"left\",\n                borderRadius: \"5px\",\n                background: color,\n                // width: this.state.eventBoxSize - (addmarginLeft/16),\n                width: itemWidth + \"px\",\n                position: \"absolute\",\n                height: height + \"px\",\n                marginLeft: addmarginLeft + \"px\",\n              }}\n            >\n              {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n              {arr[i].summary}\n            </div>\n          </div>\n        );\n        res.push(newElement);\n      }\n    }\n    return res;\n  };\n\n  onDayClick = (e, i) => {\n    console.log(\"this is the hour:\" + i);\n    this.props.handleDateClick(\n      this.props.dateContext.format(\"M\") +\n        \"/\" +\n        this.props.dateContext.format(\"D\") +\n        \"/\" +\n        this.props.dateContext.format(\"Y\"),\n      i\n    );\n  };\n\n  /**\n   * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\n   */\n  dayViewItems = () => {\n    // this creates the events adjusting their div size to reflecting the time it's slotted for\n    var arr = [];\n    for (let i = 0; i < 24; ++i) {\n      arr.push(\n        <Row key={\"dayEvent\" + i} style={{ position: \"relative\" }}>\n          <Col\n            style={{\n              position: \"relative\",\n              borderTop: \"1px solid lavender\",\n              width: \"180px\", //lyman change width to adjust\n              background: \"aliceblue\",\n              height: this.state.pxPerHour,\n            }}\n            onClick={(e) => this.onDayClick(e, i)}\n          >\n            {this.getEventItem(i)}\n          </Col>\n        </Row>\n      );\n    }\n    return arr;\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          padding: \"20px\",\n          width: \"300px\",\n          borderRadius: \"20px\",\n        }}\n      >\n        Today's Events:\n        <Container style={{}}>\n          <Row>\n            <Col>\n              {/* this is Just for the time */}\n              <Container style={{ margin: \"0\", padding: \"0\" }}>\n                {this.timeDisplay()}\n              </Container>\n            </Col>\n            <Col>\n              {/* this is for the actual event slots */}\n              <Container style={{ margin: \"0\", padding: \"0\" }}>\n                {this.dayViewItems()}\n              </Container>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment';\n// import axios from \"axios\";\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\nexport default class WeekEvents extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          pxPerHour: \"30px\", //preset size for all columns\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n          eventBoxSize: 80, //width size for event box\n          marginFromLeft: 0\n      }\n      this.hourDisplay = React.createRef();\n  }\n\n  componentDidMount  () {\n    // Set top most time to be current hour\n    // Browser scrolls to the bottom if hour >= 18 (tested with Chrome and Firefox)\n    let curHour = new Date().getHours();\n    this.hourDisplay.current.scrollTop = this.state.pxPerHourForConversion * curHour;\n  }\n\n  timeDisplay = () => { //this essentially creates the time row\n      let arr = [];\n      for (let i = 0; i < 24; ++i) {\n          arr.push(\n              <Row key={\"dayEvent\" + i}>\n                  <Col style={{\n                      borderTop: \"1px solid lavender\",\n                      textAlign: \"right\",\n                      height: this.state.pxPerHour,\n                  }}>\n                      {i}:00\n                  </Col >\n              </Row>\n          )\n      }\n      return arr\n  }\n\n  dateDisplay = () => {\n    let arr = [];\n    let startObject = this.props.dateContext.clone();\n    let startDay = startObject.startOf(\"week\");\n    let curDate = startDay.clone();\n    for (let i = 0; i<7; i++) {\n        arr.push(\n            <Col key={\"day\" + i}>\n                <Col style={{\n                    textAlign: \"center\",\n                    height: this.state.pxPerHour,\n                }}>\n                    {curDate.format(\"M/D\")}\n                </Col >\n            </Col>\n        );\n        curDate.add(1,\"day\");\n    }\n    return arr;\n  }\n\n  onEventClick = (e, i) => {\n    var arr = this.props.weekEvents;\n    e.stopPropagation();\n    this.props.eventClick(arr[i]);\n  }\n\n  onWeekClick = (event, day, hour) => {\n    let startObject = this.props.dateContext.clone();\n    let startDay = startObject.startOf(\"week\");\n    let curDate = startDay.clone();\n    curDate.add(24*day+hour,'hour');\n    this.props.onDayClick(curDate);\n  }\n\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n      var res= [];\n      for (let i = 0; i < 7; ++i) {\n          var arr = []\n          for( let j = 0; j < 24; ++j) {\n            arr.push(\n              <Container key={\"weekEvent\" + i + j}>\n                <Row style={{ position: \"relative\"}}>\n                  <Col\n                      style={{\n                          position: \"relative\",\n                          borderTop: \"1px solid lavender\",\n                          background: \"aliceblue\",\n                          height: this.state.pxPerHour,\n                          width: '80px',\n                      }}\n                      onClick={e => this.onWeekClick(e, i, j)}\n                  >\n                      {this.getEventItem(i,j)}\n                  </Col >\n                </Row>\n              </Container>\n            );\n          }\n        res.push(\n          <Col key={\"dayEvent\" + i}>\n            {arr}\n          </Col>\n        );\n      }\n      return res;\n  }\n\n  getEventItem = (day, hour) => {\n      let startObject = this.props.dateContext.clone();\n      let startDay = startObject.startOf(\"week\");\n      let curDate = startDay.clone();\n      curDate.add(day,'days');\n      var res = []\n      var tempStart = null;\n      var tempEnd = null;\n      var arr = this.props.weekEvents;\n      var sameTimeEventCount = 0;\n      var addmarginLeft = 0;\n      let itemWidth = this.state.eventBoxSize;\n      var fontSize = 10;\n      for (let i = 0; i < arr.length; i++) {\n          tempStart = arr[i].start.dateTime;\n          tempEnd = arr[i].end.dateTime;\n          /**\n           * TODO: add the case where arr[i].start.dateTime doesn't exists\n          */\n          let tempStartTime = new Date(tempStart);\n          let tempEndTime = new Date(tempEnd);\n          let startDate = moment(tempStartTime);\n          let endDate = moment(tempEndTime)\n          if(curDate.isSameOrAfter(startDate,'day') && curDate.isSameOrBefore(endDate,'day')) {\n            if (startDate.date() ===  curDate.date()) {\n                if (startDate.hour() === hour) {\n                    if(startDate.date() === endDate.date()) {\n                        // addmarginLeft = 0;\n                            // itemWidth = this.state.eventBoxSize;\n                            let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                            let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                            let minDiff = (tempEndTime.getMinutes()) / 60;\n                            let color = 'PaleTurquoise';\n                            let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                            sameTimeEventCount++;\n                            //check if there is already an event there overlapping from another hour\n                            for (let i = 0; i < arr.length; i++) {\n                                tempStart = arr[i].start.dateTime;\n                                tempEnd = arr[i].end.dateTime;\n                                let tempStartTime = new Date(tempStart);\n                                let tempEndTime = new Date(tempEnd);\n                                if (tempStartTime.getHours() < hour && tempEndTime.getHours() > hour) {\n                                    addmarginLeft += 20;\n                                    itemWidth = itemWidth - 20;\n                                }\n                            }\n\n                            if (sameTimeEventCount > 1) {\n                                // console.log(\"add 20 in day\");\n                                addmarginLeft += 20;\n                                // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                                // itemWidth = itemWidth/(sameHourItems-1);\n                                itemWidth = itemWidth - 20;\n                            }\n                            //chnage font size if not enough space\n                            if ((tempEndTime.getHours() - tempStartTime.getHours()) < 2) {\n                                fontSize = 8;\n                            }\n\n                            // change color if more than one event in same time.\n                            if (sameTimeEventCount <= 1) {\n                                color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\n                            }\n                            else if (sameTimeEventCount === 2) {\n                                color = 'skyblue';\n                            }\n                            else {\n                                color = 'blue';\n                            }\n\n                            let newElement =\n                                (\n\n                                    <div key={\"event\" + i}>\n                                        <div\n\n                                            data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                            onMouseOver={e => {\n                                                e.target.style.color = \"#FFFFFF\";\n                                                e.target.style.background = \"RebeccaPurple\";\n                                                e.target.style.zIndex = \"2\";\n                                            }}\n                                            onMouseOut={e => {\n                                                e.target.style.zIndex = \"1\";\n                                                e.target.style.color = \"#000000\";\n                                                e.target.style.background = color;\n                                            }}\n                                            key={i}\n                                            // value = {i}\n                                            onClick={e => this.onEventClick(e, i)}\n                                            style={{\n                                                zIndex: this.state.zIndex,\n                                                marginTop: minsToMarginTop + \"px\",\n                                                padding: \"5px\",\n                                                fontSize: fontSize + \"px\",\n                                                border: \"1px lightgray solid \",\n                                                float: \"left\",\n                                                //  verticalAlign: \" \",\n                                                // verticalAlign: 'text-top',\n                                                // textAlign:\"left\",\n                                                borderRadius: \"5px\",\n                                                background: color,\n                                                // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                                width: itemWidth + \"px\",\n                                                position: \"absolute\",\n                                                height: height + \"px\",\n                                                marginLeft: addmarginLeft + \"px\"\n                                            }}>\n                                            {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                            {arr[i].summary}\n                                        </div>\n                                    </div>\n                                );\n                            res.push(newElement);\n                    } else if(startDate.date() !== endDate.date()) {\n                        let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                            let hourDiff = 24 - tempStartTime.getHours();\n                            let minDiff = 0;\n                            let color = 'lavender';\n                            let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                            sameTimeEventCount++;\n                            let newElement =\n                                (\n                                    <div key={\"event\" + i}>\n                                        <div\n\n                                            data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                            onMouseOver={e => {\n                                                e.target.style.color = \"#FFFFFF\";\n                                                e.target.style.background = \"RebeccaPurple\";\n                                                e.target.style.zIndex = \"2\";\n                                            }}\n                                            onMouseOut={e => {\n                                                e.target.style.zIndex = \"1\";\n                                                e.target.style.color = \"#000000\";\n                                                e.target.style.background = color;\n                                            }}\n                                            key={i}\n                                            // value = {i}\n                                            onClick={e => this.onEventClick(e, i)}\n                                            style={{\n                                                zIndex: this.state.zIndex,\n                                                marginTop: minsToMarginTop + \"px\",\n                                                padding: \"5px\",\n                                                fontSize: fontSize + \"px\",\n                                                border: \"1px lightgray solid \",\n                                                float: \"left\",\n                                                //  verticalAlign: \" \",\n                                                // verticalAlign: 'text-top',\n                                                // textAlign:\"left\",\n                                                borderRadius: \"5px\",\n                                                background: color,\n                                                // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                                width: itemWidth + \"px\",\n                                                position: \"absolute\",\n                                                height: height + \"px\",\n                                                marginLeft: addmarginLeft + \"px\"\n                                            }}>\n                                            {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                            {arr[i].summary}\n                                        </div>\n                                    </div>\n                                );\n                            res.push(newElement);\n                    }\n                }\n            } else if (hour === 0) {\n                if(endDate.date() ===  curDate.date()) {\n                    let minsToMarginTop = 0\n                        let hourDiff = tempEndTime.getHours();\n                        let minDiff = (tempEndTime.getMinutes()) / 60;\n                        let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                        let color = 'lavender';\n                        sameTimeEventCount++;\n                        let newElement =\n                            (\n                                <div key={\"event\" + i}>\n                                    <div\n                                        data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                        onMouseOver={e => {\n                                            e.target.style.color = \"#FFFFFF\";\n                                            e.target.style.background = \"RebeccaPurple\";\n                                            e.target.style.zIndex = \"2\";\n                                        }}\n                                        onMouseOut={e => {\n                                            e.target.style.zIndex = \"1\";\n                                            e.target.style.color = \"#000000\";\n                                            e.target.style.background = color;\n                                        }}\n                                        key={i}\n                                        // value = {i}\n                                        onClick={e => this.onEventClick(e, i)}\n                                        style={{\n                                            zIndex: this.state.zIndex,\n                                            marginTop: minsToMarginTop + \"px\",\n                                            padding: \"5px\",\n                                            fontSize: fontSize + \"px\",\n                                            border: \"1px lightgray solid \",\n                                            float: \"left\",\n                                            //  verticalAlign: \" \",\n                                            // verticalAlign: 'text-top',\n                                            // textAlign:\"left\",\n                                            borderRadius: \"5px\",\n                                            background: color,\n                                            // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                            width: itemWidth + \"px\",\n                                            position: \"absolute\",\n                                            height: height + \"px\",\n                                            marginLeft: addmarginLeft + \"px\"\n                                        }}>\n                                        {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                        {arr[i].summary}\n                                    </div>\n                                </div>\n                            );\n                            res.push(newElement);\n                } else {\n                    let minsToMarginTop = 0\n                        let height = 24 * this.state.pxPerHourForConversion;\n                        let color = 'lavender';\n                        sameTimeEventCount++;\n                        let newElement =\n                            (\n                                <div key={\"event\" + i}>\n                                    <div\n                                        data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                        onMouseOver={e => {\n                                            e.target.style.color = \"#FFFFFF\";\n                                            e.target.style.background = \"RebeccaPurple\";\n                                            e.target.style.zIndex = \"2\";\n                                        }}\n                                        onMouseOut={e => {\n                                            e.target.style.zIndex = \"1\";\n                                            e.target.style.color = \"#000000\";\n                                            e.target.style.background = color;\n                                        }}\n                                        key={i}\n                                        // value = {i}\n                                        onClick={e => this.onEventClick(e, i)}\n                                        style={{\n                                            zIndex: this.state.zIndex,\n                                            marginTop: minsToMarginTop + \"px\",\n                                            padding: \"5px\",\n                                            fontSize: fontSize + \"px\",\n                                            border: \"1px lightgray solid \",\n                                            float: \"left\",\n                                            //  verticalAlign: \" \",\n                                            // verticalAlign: 'text-top',\n                                            // textAlign:\"left\",\n                                            borderRadius: \"5px\",\n                                            background: color,\n                                            // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                            width: itemWidth + \"px\",\n                                            position: \"absolute\",\n                                            height: height + \"px\",\n                                            marginLeft: addmarginLeft + \"px\"\n                                        }}>\n                                        {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                        {arr[i].summary}\n                                    </div>\n                                </div>\n                            );\n                            res.push(newElement);\n                }\n            }\n          }\n      }\n      return res;\n  }\n\n render() {\n    let weekdays = moment.weekdays().map((day) => {\n      return (\n        <Col key={\"event\"+day} className=\"fancytext\">{day}</Col>\n      )\n    });\n     return (\n         <Container style={{ height: 'auto', width: '1000px'}}>\n           <Row>\n             <Col>Events </Col>\n             {this.dateDisplay()}\n           </Row>\n           <Row>\n             <Col className=\"fancytext\">Time</Col>\n             {weekdays}\n           </Row>\n           <Row ref={this.hourDisplay} style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\n             <Col>\n                 <Container style={{ margin: '0', padding: '0'}}>\n                     {this.timeDisplay()}\n                 </Container>\n             </Col>\n             {this.weekViewItems()}\n           </Row>\n         </Container>\n     )\n }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment';\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\n\n\nexport default class WeekRoutines extends Component {\n  constructor(props) {\n      super(props);\n      // console.log(this.props.dateContext);\n      this.state = {\n          pxPerHour: \"30px\", //preset size for all columns\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n          eventBoxSize: 80, //width size for event box\n          marginFromLeft: 0\n      }\n      this.hourDisplay = React.createRef();\n  }\n\n  componentDidMount  () {\n    // Set top most time to be current hour\n    // Browser scrolls to the bottom if hour >= 18\n    let curHour = new Date().getHours();\n    this.hourDisplay.current.scrollTop = this.state.pxPerHourForConversion * curHour;\n  }\n\ngetEventItem = (day, hour) => {\n  var res = []\n  var arr = this.props.routines;\n  var sameTimeEventCount = 0;\n  let itemWidth = this.state.eventBoxSize;\n  // var overlapEvent = 0;\n  var addmarginLeft = 0;\n  var fontSize = 10;\n  for (let i = 0; i < arr.length; i++) {\n\n      let start_dateObj = new Date();\n      let start_dateStr = start_dateObj.toISOString().split('T').shift();\n      let start_timeStr = arr[i].available_start_time;\n      let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n      let end_dateObj = new Date();\n      let end_dateStr = end_dateObj.toISOString().split('T').shift();\n      let end_timeStr = arr[i].available_end_time;\n      let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n      let tempStartTime = start_timeAndDate;\n      let tempEndTime = end_timeAndDate;\n      /**\n       * TODO: add the case where arr[i].start.dateTime doesn't exists\n      */\n      if (tempStartTime.getHours() === hour) {\n          // console.log(\"matched\" + i );\n          let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n          let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n          let minDiff = (tempEndTime.getMinutes()) / 60;\n          let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n          let color = 'PaleTurquoise';\n\n          sameTimeEventCount++;\n          //check if there is already an event there overlapping from another hour\n          for(let i = 0; i < arr.length; i++){\n              let start_dateObj = new Date();\n              let start_dateStr = start_dateObj.toISOString().split('T').shift();\n              let start_timeStr = arr[i].available_start_time;\n              let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n              let end_dateObj = new Date();\n              let end_dateStr = end_dateObj.toISOString().split('T').shift();\n              let end_timeStr = arr[i].available_end_time;\n              let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n              let tempStartTime = start_timeAndDate;\n              let tempEndTime = end_timeAndDate;\n              if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\n                  // console.log(\"We ARE IN HEREEEE\");\n                  addmarginLeft += 20;\n                  itemWidth = itemWidth - 20;\n                  // overlapEvent++;\n              }\n          }\n\n          if(sameTimeEventCount > 1  ){\n               addmarginLeft += 20;\n              // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n              // itemWidth = itemWidth/(sameHourItems-1);\n              itemWidth = itemWidth - 20;\n              // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\n          }\n\n          //chnage font size if not enough space\n          if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\n              fontSize = 8;\n          }\n          // change color if more than one event in same time.\n          if(sameTimeEventCount <= 1){\n               color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\n          }\n          else if( sameTimeEventCount === 2){\n              color = 'skyblue';\n          }\n          else{\n              color = 'blue';\n          }\n          let newElement =\n              (<div key={\"dayRoutineItem\" + i}\n              data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n\n                  onMouseOver={e => {\n                      e.target.style.color = \"#FFFFFF\";\n                      e.target.style.background = \"RebeccaPurple\";\n                      // e.target.style.marginLeft = \"5px\";\n                      // e.target.style.border= \"3px solid w\";\n                      e.target.style.zIndex=\"2\";\n\n\n\n\n                  }}\n                  onMouseOut={e => {\n                      e.target.style.zIndex=\"1\";\n\n                      // e.target.style.marginLeft = \"0px\";\n                       e.target.style.color = \"#000000\";\n                      //  e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\n                       e.target.style.border= \"1px lightgray solid\";\n\n                       e.target.style.background = color;\n\n\n                      }}\n\n                  onClick = {this.RoutineClicked}\n                  style={{\n                      zIndex: this.state.zIndex,\n                      marginTop: minsToMarginTop + \"px\",\n                      padding: \"5px\",\n                      // fontSize: \"10px\",\n                      border: \"1px lightgray solid \",\n                      // float: \"left\",\n                      borderRadius: \"5px\",\n                      // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\n                      //  width: this.state.eventBoxSize,\n                      position: \"absolute\",\n                      height: height + \"px\",\n\n                      fontSize: fontSize + \"px\",\n                      background: color,\n                      width: itemWidth + \"px\",\n                      marginLeft: addmarginLeft + \"px\"\n                  }}>\n                  {arr[i].title}\n              </div>);\n          res.push(newElement);\n      }\n  }\n  return res;\n}\n\n  timeDisplay = () => { //this essentially creates the time row\n      let arr = [];\n      for (let i = 0; i < 24; ++i) {\n          arr.push(\n              <Row key={\"dayEvent\" + i}>\n                  <Col style={{\n                      borderTop: \"1px solid lavender\",\n                      textAlign: \"right\",\n                      height: this.state.pxPerHour,\n                  }}>\n                      {i}:00\n                  </Col >\n              </Row>\n          )\n      }\n      return arr\n  }\n\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n      var res= [];\n      for (let i = 0; i < 7; ++i) {\n          var arr = []\n          for( let j = 0; j < 24; ++j) {\n            arr.push(\n              <Container key={\"weekRoutine\" + i + j}>\n                <Row style={{ position: \"relative\"}}>\n                  <Col\n                      style={{\n                          position: \"relative\",\n                          borderTop: \"1px solid lavender\",\n                          background: \"aliceblue\",\n                          height: this.state.pxPerHour,\n                      }}\n                  >\n                      {this.getEventItem(i,j)}\n                  </Col >\n                </Row>\n              </Container>\n            );\n          }\n        res.push(\n          <Col key={\"dayRoutine\" + i}>\n            {arr}\n          </Col>\n        );\n      }\n      return res;\n  }\n\n render() {\n    let weekdays = moment.weekdays().map((day) => {\n      return (\n        <Col key={\"routine\"+day} className=\"fancytext\">{day}</Col>\n      )\n    });\n     return (\n         <Container style={{ height: 'auto', width: '1000px'}}>\n           <Row>\n             <Col>\n              Routines\n             </Col>\n           </Row>\n           <Row>\n             <Col className=\"fancytext\">Time</Col>\n             {weekdays}\n           </Row>\n           <Row ref={this.hourDisplay} style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\n             <Col >\n                 <Container style={{ margin: '0', padding: '0', width: '80px' }}>\n                     {this.timeDisplay()}\n                 </Container>\n             </Col>\n             {this.weekViewItems()}\n           </Row>\n         </Container>\n     )\n }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment';\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n// import firebase from \"./firebase\";\n\nexport default class WeekGoals extends Component {\n  constructor(props) {\n      super(props);\n      // console.log(this.props.dateContext);\n      this.state = {\n          pxPerHour: \"30px\", //preset size for all columns\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n          eventBoxSize: 80, //width size for event box\n      }\n      this.hourDisplay = React.createRef();\n  }\n\n  componentDidMount  () {\n    // Set top most time to be current hour\n    // Browser scrolls to the bottom if hour >= 18\n    let curHour = new Date().getHours();\n    this.hourDisplay.current.scrollTop = this.state.pxPerHourForConversion * curHour;\n  }\n\n  /**\n     * getEventItem: given an hour, this will return all events that was started during that hour\n     *\n    */\n   getEventItem = (day, hour) => {\n    var res = []\n    var arr = this.props.goals;\n    var sameTimeEventCount = 0;\n    let itemWidth = this.state.eventBoxSize;\n    // var overlapEvent = 0;\n    var addmarginLeft = 0;\n    var fontSize = 10;\n    for (let i = 0; i < arr.length; i++) {\n\n        let start_dateObj = new Date();\n        let start_dateStr = start_dateObj.toISOString().split('T').shift();\n        let start_timeStr = arr[i].available_start_time;\n        let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n        let end_dateObj = new Date();\n        let end_dateStr = end_dateObj.toISOString().split('T').shift();\n        let end_timeStr = arr[i].available_end_time;\n        let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n        let tempStartTime = start_timeAndDate;\n        let tempEndTime = end_timeAndDate;\n        /**\n         * TODO: add the case where arr[i].start.dateTime doesn't exists\n        */\n        if (tempStartTime.getHours() === hour) {\n            // addmarginLeft = 0;\n            // itemWidth = this.state.eventBoxSize;\n            // itemWidth = 0;\n            // console.log(\"matched\" + i );\n            let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n            let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n            let minDiff = (tempEndTime.getMinutes()) / 60;\n            let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n            let color = 'PaleTurquoise';\n\n            sameTimeEventCount++;\n            //check if there is already an event there overlapping from another hour\n            for(let i = 0; i < arr.length; i++){\n                let start_dateObj = new Date();\n                let start_dateStr = start_dateObj.toISOString().split('T').shift();\n                let start_timeStr = arr[i].available_start_time;\n                let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n                let end_dateObj = new Date();\n                let end_dateStr = end_dateObj.toISOString().split('T').shift();\n                let end_timeStr = arr[i].available_end_time;\n                let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n                let tempStartTime = start_timeAndDate;\n                let tempEndTime = end_timeAndDate;\n                if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\n                    //  console.log(\"this is statr time :\"+ tempStartTime.getHours() );\n                    //  console.log(\"this is end time :\"+ tempEndTime.getHours() );\n                    //  console.log(\"add 20\");\n                    addmarginLeft += 20;\n                    itemWidth = itemWidth - 20;\n                    // console.log(addmarginLeft);\n                    // overlapEvent++;\n                }\n            }\n\n\n            if(sameTimeEventCount > 1  ){\n                // console.log(\"In here because same hour  \");\n                // console.log(\"add 20\");\n                 addmarginLeft += 20;\n                // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                // itemWidth = itemWidth/(sameHourItems-1);\n                itemWidth = itemWidth - 20;\n                // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\n                // console.log(addmarginLeft);\n            }\n            // console.log(addmarginLeft);\n            // console.log(\"end of this element \");\n\n            //chnage font size if not enough space\n            if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\n                fontSize = 8;\n            }\n            // change color if more than one event in same time.\n            if(sameTimeEventCount <= 1){\n                 color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\n            }\n            else if( sameTimeEventCount === 2){\n                color = 'skyblue';\n            }\n            else{\n                color = 'blue';\n            }\n            let newElement =\n                (<div key={\"dayGoalItem\" + i}\n                data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n\n                    onMouseOver={e => {\n                        e.target.style.color = \"#FFFFFF\";\n                        e.target.style.background = \"RebeccaPurple\";\n                        // e.target.style.marginLeft = \"5px\";\n                        e.target.style.zIndex=\"2\";\n\n                    }}\n                    onMouseOut={e => {\n                        e.target.style.zIndex=\"1\";\n                        // e.target.style.marginLeft = \"0px\";\n                        e.target.style.color = \"#000000\";\n                        e.target.style.background = color;\n                        e.target.style.border= \"1px lightgray solid\";\n                        // e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\n                    }}\n                    onClick = {this.GoalClicked}\n                    style={{\n                        zIndex: this.state.zIndex,\n                        marginTop: minsToMarginTop + \"px\",\n                        padding: \"5px\",\n                        // fontSize: \"10px\",\n                        border: \"1px lightgray solid \",\n                        // float: \"left\",\n                        borderRadius: \"5px\",\n                        // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\n                        // width: this.state.eventBoxSize,\n                        position: \"absolute\",\n                        height: height + \"px\",\n\n                        fontSize: fontSize + \"px\",\n                        background: color,\n                        width: itemWidth + \"px\",\n                        marginLeft: addmarginLeft + \"px\"\n                    }}>\n                    {arr[i].title}\n                </div>);\n            res.push(newElement);\n        }\n    }\n    return res;\n}\n\n  timeDisplay = () => { //this essentially creates the time row\n      let arr = [];\n      for (let i = 0; i < 24; ++i) {\n          arr.push(\n              <Row key={\"dayEvent\" + i}>\n                  <Col style={{\n                      borderTop: \"1px solid lavender\",\n                      textAlign: \"right\",\n                      height: this.state.pxPerHour,\n                  }}>\n                      {i}:00\n                  </Col >\n              </Row>\n          )\n      }\n      return arr\n  }\n\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n      var res= [];\n      for (let i = 0; i < 7; ++i) {\n          var arr = []\n          for( let j = 0; j < 24; ++j) {\n            arr.push(\n              <Container key={\"weekGoal\" + i + j}>\n                <Row style={{ position: \"relative\"}}>\n                  <Col\n                      style={{\n                          position: \"relative\",\n                          borderTop: \"1px solid lavender\",\n                          background: \"aliceblue\",\n                          height: this.state.pxPerHour,\n                      }}\n                  >\n                      {this.getEventItem(i,j)}\n                  </Col >\n                </Row>\n              </Container>\n            );\n          }\n        res.push(\n          <Col key={\"dayGoal\" + i}>\n            {arr}\n          </Col>\n        );\n      }\n      return res;\n  }\n\n render() {\n    let weekdays = moment.weekdays().map((day) => {\n      return (\n        <Col key={\"goal\"+day} className=\"fancytext\">{day}</Col>\n      )\n    });\n     return (\n         <Container style={{ height: 'auto', width: '1000px'}}>\n          <Row>\n            <Col>Goals</Col>\n          </Row>\n           <Row>\n             <Col className=\"fancytext\">Time</Col>\n             {weekdays}\n           </Row>\n           <Row ref={this.hourDisplay} style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\n             <Col >\n                 <Container style={{ margin: '0', padding: '0', width: '80px' }}>\n                     {this.timeDisplay()}\n                 </Container>\n             </Col>\n             {this.weekViewItems()}\n           </Row>\n         </Container>\n     )\n }\n}\n","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport { Button, Modal} from \"react-bootstrap\";\nimport { storage } from './firebase';\n\n  export default class AddNewPeople extends Component {\n    constructor(props) {\n      super(props);\n    }\n    state = {\n      itemToEdit: {\n        have_pic: false,\n        important: false,\n        name: \"\",\n        phone_number: \"\",\n        pic: \"\",\n        relationship: \"\",\n        unique_id: \"\"\n      }, \n      saveChangesButtonEnabled: true,\n      peopleDocsPath: firebase\n        .firestore()\n        .collection(\"users\")\n        // .doc(\"7R6hAVmDrNutRkG3sVRy\")\n        .doc(this.props.currentUserId)\n        .collection(\"people\")\n    };\n  \n    handleFileSelected = event => {\n        event.preventDefault(); \n        event.stopPropagation();                \n        const file = event.target.files[0];\n        this.setState({\n            saveChangesButtonEnabled: false\n        }, ()=>{\n            let targetFile = file\n            if(targetFile != null ){\n                let temp = this.state.itemToEdit;\n    \n                // Create a reference to the firebase storage. \n                var storageRef = storage.ref('People/' + targetFile.name);\n                //upload file to firebase storage\n                var task = storageRef.put(targetFile);\n                //check on the the upload progress\n                task.on('state_changed',\n                    function progress(snapshot){\n                        //get percentage uplaoded \n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\n                        console.log(percentage);\n    \n                    },\n                    function error(err){\n                        console.log(err);\n                    },\n                    (snapshot) =>{\n                        temp.have_pic = true;\n                        console.log(\"completed\");\n                        storage.ref('People').child(targetFile.name).getDownloadURL().then(url => {\n                            temp.pic = url;\n                            this.setState({\n                                itemToEdit: temp,\n                                saveChangesButtonEnabled: true\n                            }); \n                        });\n                    }\n                );     \n            }}); \n    };\n\n    newPersonInputSubmit = ( ) => {\n        this.state.peopleDocsPath\n          .add(this.state.itemToEdit)\n          .then(ref => {\n            if (ref.id === null) {\n              alert(\"Fail to add new routine / goal item\");\n              return;\n            }\n   \n            let temp = this.state.itemToEdit;\n            temp.unique_id = ref.id;\n            console.log(\"Added document with ID: \", ref.id);\n            this.updateWithId();\n   \n          });\n    }\n\n    updateWithId = ( ) => {\n        this.state.peopleDocsPath.doc(this.state.itemToEdit.unique_id).update(this.state.itemToEdit).then(\n            (doc) => {\n                \n                this.props.closeModal(); \n                this.props.newPersonAdded(); \n            }\n        )\n    }\n\n  \n    render() {\n      return (\n        <Modal.Dialog style={{ marginLeft: \"0\", width: \"350px\" }}>\n          <Modal.Header closeButton onHide={this.props.closeModal} >\n            <Modal.Title>\n              <h5 className=\"normalfancytext\">\n                Add New People\n              </h5>{\" \"}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div>\n              <label>Name</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  style={{ width: \"200px\" }}\n                  placeholder=\"Enter Name\"\n                  value={this.state.itemToEdit.name}\n                  onChange={e => {\n                    e.stopPropagation();\n                    let temp = this.state.itemToEdit;\n                    temp.name = e.target.value;\n                    this.setState({ itemToEdit: temp });\n                  }}\n                />\n              </div>\n              <label>Relationship</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  style={{ width: \"200px\" }}\n                  placeholder=\"Enter Relationship \"\n                  value={this.state.itemToEdit.relationship}\n                  onChange={e => {\n                    e.stopPropagation();\n                    let temp = this.state.itemToEdit;\n                    temp.relationship = e.target.value;\n                    this.setState({ itemToEdit: temp });\n                  }}\n                />\n              </div>\n              <label>Phone Number</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  style={{ width: \"200px\" }}\n                  placeholder=\"Enter Phone Number\"\n                  value={this.state.itemToEdit.phone_number}\n                  onChange={e => {\n                    e.stopPropagation();\n                    let temp = this.state.itemToEdit;\n                    temp.phone_number = e.target.value;\n                    this.setState({ itemToEdit: temp });\n                  }}\n                />\n              </div>\n              \n              {/* <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n              <label className=\"form-check-label\" >Important Person?</label>\n              <input\n                style={{  marginLeft: \"10px\",width: \"20px\", height: \"20px\"}}\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.important}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                //   console.log(temp.important);\n                  temp.important = !temp.important;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div> */}\n            <label>Upload Photo</label>\n              <div className=\"input-group mb-3\">\n              <input\n                style = {{color: \"transparent\", width: \"200px\"}} \n                accept=\"image/*\"\n                type=\"file\"\n                onChange={this.handleFileSelected}\n                // id=\"ProfileImage\"\n                />\n              </div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button style = {{marginLeft:\"10px\"}} variant=\"secondary\" onClick = {this.props.closeModal}>\n              Close\n            </Button>\n            {(this.state.saveChangesButtonEnabled === false?\n              <Button variant=\"info\" style = {{marginLeft:\"50px\", marginRight:\"30px\"}} type=\"submit\" disabled>\n                Save changes\n              </Button>:\n              <Button variant=\"info\" style = {{marginLeft:\"50px\", marginRight:\"30px\"}} type=\"submit\" onClick={(e) => {e.stopPropagation(); this.newPersonInputSubmit()}} >\n                Save changes\n              </Button>\n            )}\n           \n          </Modal.Footer>\n        </Modal.Dialog>\n      );\n    }\n  }\n  \n\n  ","import React from 'react';\nimport firebase from \"./firebase\";\nimport AddNewPeople from \"./AddNewPeople\";\nimport { Form,Row,Col ,Modal,Button,Container,Dropdown,DropdownButton,} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faImage\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { storage } from './firebase';\n\nclass AboutModal extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state={\n            firebaseRootPath: firebase\n            .firestore()\n            .collection(\"users\")\n            .doc(this.props.theCurrentUserId),\n            // .doc(\"7R6hAVmDrNutRkG3sVRy\"),\n            importantPeople1id: null,\n            importantPeople2id: null,\n            importantPeople3id: null,\n            aboutMeObject: {have_pic: false, message_card:\"\", message_day:\"\",pic:\"\"},\n            firstName: \"\",\n            lastName: \"\",\n            peopleNamesArray: {},\n            importantPoeplArrayLength: \"0\",\n            importantPeople1: {have_pic: false, important:false, name: \"\", phone_number:\"\",pic:\"\",relationship:\"\", unique_id:\"\"},\n            importantPeople2: {have_pic: false, important:false, name: \"\", phone_number:\"\",pic:\"\",relationship:\"\", unique_id:\"\"},\n            importantPeople3: {have_pic: false, important:false, name: \"\", phone_number:\"\",pic:\"\",relationship:\"\", unique_id:\"\"},\n            ImporPersonOneChange: false,\n            ImporPersonTwoChange: false,\n            ImporPersonThreeChange: false,\n            importantPeople1Previous: {},\n            importantPeople2Previous: {},\n            importantPeople3Previous: {},\n            importantPeople1DocRefChanged: null,\n            importantPeople2DocRefChanged: null,\n            importantPeople3DocRefChanged: null,\n            showAddNewPeopleModal: false,\n            saveButtonEnabled: true,\n            enableDropDown: false\n            \n        }\n    }\n\n    componentDidMount() {\n        this.grabFireBaseAboutMeData();\n        this.grabFireBaseAllPeopleNames();  \n    }\n\n    hideAboutForm = e => {\n        this.props.CameBackFalse();   \n    };\n\n    handleFileSelected = event => {\n        event.preventDefault(); \n        event.stopPropagation();                \n        const file = event.target.files[0];\n        this.setState({\n            saveButtonEnabled: false\n        }, ()=>{\n            let targetFile = file\n            if(targetFile !== null && Object.keys(this.state.aboutMeObject).length !== 0 ){\n                let temp = this.state.aboutMeObject;\n    \n                // Create a reference to the firebase storage. \n                var storageRef = storage.ref('Profile_Pics/' + targetFile.name);\n                //upload file to firebase storage\n                var task = storageRef.put(targetFile);\n                //check on the the upload progress\n                task.on('state_changed',\n                    function progress(snapshot){\n                        //get percentage uplaoded \n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\n                        console.log(percentage);\n    \n                    },\n                    function error(err){\n                        console.log(err);\n                    },\n                    (snapshot) =>{\n                        temp.have_pic = true;\n                        console.log(\"completed\");\n                        storage.ref('Profile_Pics').child(targetFile.name).getDownloadURL().then(url => {\n                            temp.pic = url;\n                            this.setState({\n                                aboutMeObject: temp,\n                                saveButtonEnabled: true\n                            }); \n                        });\n                    }\n                );     \n            }}); \n    };\n\n  \n\n    handleImpPeople1 = (event) =>{\n        event.preventDefault(); \n        event.stopPropagation();                \n        const file2 = event.target.files[0];\n        this.setState({\n            saveButtonEnabled: false\n        }, ()=>{\n            let targetFile = file2\n            if(targetFile !== null && Object.keys(this.state.importantPeople1).length !== 0 ){\n                let temp = this.state.importantPeople1;\n    \n                // Create a reference to the firebase storage. \n                var storageRef = storage.ref('Important_People/' + targetFile.name);\n                //upload file to firebase storage\n                var task = storageRef.put(targetFile);\n                //check on the the upload progress\n                task.on('state_changed',\n                    function progress(snapshot){\n                        //get percentage uplaoded \n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\n                        console.log(percentage);\n    \n                    },\n                    function error(err){\n                        console.log(err);\n                    },\n                    (snapshot) =>{\n                        temp.have_pic = true;\n                        console.log(\"completed\");\n                        storage.ref('Important_People').child(targetFile.name).getDownloadURL().then(url => {\n                            // console.log(url);\n                            temp.pic = url;\n                            this.setState({\n                                importantPeople1: temp,\n                                saveButtonEnabled: true\n                            }); \n                        });\n                    }\n                );     \n            }}); \n    }\n\n    handleImpPeople2 = (event) =>{\n        event.preventDefault(); \n        event.stopPropagation();                \n        const file3 = event.target.files[0];\n        this.setState({\n            saveButtonEnabled: false\n        }, ()=>{\n            let targetFile = file3\n            if(targetFile !== null && Object.keys(this.state.importantPeople2).length !== 0 ){\n                let temp = this.state.importantPeople2;\n    \n                // Create a reference to the firebase storage. \n                var storageRef = storage.ref('Important_People/' + targetFile.name);\n                //upload file to firebase storage\n                var task = storageRef.put(targetFile);\n                //check on the the upload progress\n                task.on('state_changed',\n                    function progress(snapshot){\n                        //get percentage uplaoded \n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\n                        console.log(percentage);\n    \n                    },\n                    function error(err){\n                        console.log(err);\n                    },\n                    (snapshot) =>{\n                        temp.have_pic = true;\n                        console.log(\"completed\");\n                        storage.ref('Important_People').child(targetFile.name).getDownloadURL().then(url => {\n                            // console.log(url);\n                            temp.pic = url;\n                            this.setState({\n                                importantPeople2: temp,\n                                saveButtonEnabled: true\n                            }); \n                        });\n                    }\n                );     \n            }});\n    }\n\n    handleImpPeople3 = (event) =>{\n        event.preventDefault(); \n        event.stopPropagation();                \n        const file4 = event.target.files[0];\n        this.setState({\n            saveButtonEnabled: false\n        }, ()=>{\n            let targetFile = file4\n            if(targetFile !== null && Object.keys(this.state.importantPeople3).length !== 0 ){\n                let temp = this.state.importantPeople3;\n    \n                // Create a reference to the firebase storage. \n                var storageRef = storage.ref('Important_People/' + targetFile.name);\n                //upload file to firebase storage\n                var task = storageRef.put(targetFile);\n                //check on the the upload progress\n                task.on('state_changed',\n                    function progress(snapshot){\n                        //get percentage uplaoded \n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\n                        console.log(percentage);\n    \n                    },\n                    function error(err){\n                        console.log(err);\n                    },\n                    (snapshot) =>{\n                        temp.have_pic = true;\n                        console.log(\"completed\");\n                        storage.ref('Important_People').child(targetFile.name).getDownloadURL().then(url => {\n                            // console.log(url);\n                            temp.pic = url;\n                            this.setState({\n                                importantPeople3: temp,\n                                saveButtonEnabled: true\n                            }); \n                        });\n                    }\n                );     \n            }});\n    }\n\n    grabFireBaseAllPeopleNames = () => {\n        const db = firebase.firestore();\n        // db.collection('users').doc(\"7R6hAVmDrNutRkG3sVRy\").collection('people').get()\n        db.collection('users').doc(this.props.theCurrentUserId).collection('people').get()\n        .then((peoplesArray) => {\n            let importantPeopleArray = [];\n            let importantPeopleReferencid = [];\n            let test = {};\n            let j = 0;\n        //    console.log(\"this is the peoples array\", peoplesArray);\n            // grab the ID of all of the people in the firebase.\n            for(let i = 0; i<peoplesArray.docs.length; i++){\n                // console.log(\"should not go in here\");\n                // db.collection('users').doc(\"7R6hAVmDrNutRkG3sVRy\").collection('people').doc(peoplesArray.docs[i].id).get()\n                db.collection('users').doc(this.props.theCurrentUserId).collection('people').doc(peoplesArray.docs[i].id).get()\n                .then( (doc) => {\n                    j++;\n                    if(doc.data().important === true){\n                        importantPeopleReferencid.push(peoplesArray.docs[i].id);\n                        importantPeopleArray.push(doc.data());\n                    }\n                    test[doc.data().unique_id] = doc.data().name;\n                    if(j === peoplesArray.docs.length){\n                        if(importantPeopleArray.length >= 3){\n                            this.setState({\n                                peopleNamesArray:test,\n                                enableDropDown: true, \n                                importantPoeplArrayLength: importantPeopleArray.length,\n                                importantPeople1: importantPeopleArray[0],\n                                importantPeople2: importantPeopleArray[1],\n                                importantPeople3: importantPeopleArray[2],\n                                importantPeople1id: importantPeopleReferencid[0],\n                                importantPeople2id: importantPeopleReferencid[1],\n                                importantPeople3id: importantPeopleReferencid[2],\n                            });\n                        }\n                        else if(importantPeopleArray.length === 2){\n                            this.setState({\n                                peopleNamesArray:test,\n                                enableDropDown: true,\n                                importantPoeplArrayLength: importantPeopleArray.length, \n                                importantPeople1: importantPeopleArray[0],\n                                importantPeople2: importantPeopleArray[1],\n                                importantPeople1id: importantPeopleReferencid[0],\n                                importantPeople2id: importantPeopleReferencid[1],\n                            });\n                        }\n                        else if(importantPeopleArray.length === 1){\n                            this.setState({\n                                peopleNamesArray:test,\n                                enableDropDown: true,\n                                importantPoeplArrayLength: importantPeopleArray.length, \n                                importantPeople1: importantPeopleArray[0],\n                                importantPeople1id: importantPeopleReferencid[0],\n                            });\n                        }\n                        else if(importantPeopleArray.length === 0){\n                            this.setState({\n                                peopleNamesArray:test,\n                                enableDropDown: true,\n                                importantPoeplArrayLength: importantPeopleArray.length\n                            });\n                        }\n                    }\n                })\n                .catch((err) => {\n                    console.log('Error getting documents', err);\n                })\n            }         \n        })\n        .catch((err) => {\n            console.log('Error getting documents', err);\n        });\n    }\n\n    grabFireBaseAboutMeData = () => {\n        const db = firebase.firestore();\n        // const docRef = db.collection(\"users\").doc(\"7R6hAVmDrNutRkG3sVRy\");\n        const docRef = db.collection(\"users\").doc(this.props.theCurrentUserId);\n        docRef\n          .get()\n          .then(doc => {\n              console.log(\"this is the doc exists\", doc.exists);\n            if (doc.exists) {\n              var x = doc.data();\n              console.log(\"this is the doc data\",x)\n            //   console.log(\"this is x in the about modal\", x);\n              var firstName = x.first_name;\n              var lastName = x.last_name;\n              if(x[\"about_me\"] !== undefined){\n                x = x[\"about_me\"];\n                this.setState({\n                    aboutMeObject: x, firstName:firstName, lastName:lastName\n                });\n              }else{\n                this.setState({\n                    firstName:firstName, lastName:lastName\n                });\n              }\n              \n              \n            } else {\n              console.log(\"No such document!\");\n            }\n          })\n          .catch(function(error) {\n            console.log(\"Error getting document:\", error);\n          });\n    };\n\n    hidePeopleModal = () => {\n        this.setState({showAddNewPeopleModal: false});\n    }\n\n    updatePeopleArray = () => {\n        this.grabFireBaseAllPeopleNames();\n    }\n\n    changeImpPersonOne = (Reference) => {\n        //Set the new person as an important person.\n        this.state.firebaseRootPath.collection('people').doc(Reference).get()\n        .then((doc) => {\n           let temp  = {};\n           let temp2 = {};    \n           temp = doc.data();\n           temp.important = true;\n           if(this.state.ImporPersonOneChange === false ){\n                temp2 = this.state.importantPeople1;\n                temp2.important = false;\n           }\n           else{\n               temp2 = this.state.importantPeople1Previous;\n           }\n           this.setState({ImporPersonOneChange: true,importantPeople1Previous: temp2 , importantPeople1DocRefChanged: doc.ref.id, importantPeople1: temp});\n        })\n        .catch((err) => {\n            console.log('Error getting documents', err);\n        });\n    }\n\n    changeImpPersonTwo = (Reference) => {\n        //Set the new person as an important person.\n        this.state.firebaseRootPath.collection('people').doc(Reference).get()\n        .then((doc) => {\n           let temp  = {};\n           let temp2 = {};      \n           temp = doc.data();\n           temp.important = true;\n           if(this.state.ImporPersonTwoChange === false ){\n                temp2 = this.state.importantPeople2;\n                temp2.important = false;\n           }\n           else{\n               temp2 = this.state.importantPeople2Previous;\n           }\n           this.setState({ImporPersonTwoChange: true,importantPeople2Previous: temp2 , importantPeople2DocRefChanged: doc.ref.id, importantPeople2: temp});\n        })\n        .catch((err) => {\n            console.log('Error getting documents', err);\n        });\n    }\n    changeImpPersonThree = (Reference) => {\n        //Set the new person as an important person.\n        this.state.firebaseRootPath.collection('people').doc(Reference).get()\n        .then((doc) => {\n           let temp  = {};\n           let temp2 = {};      \n           temp = doc.data();\n           temp.important = true;\n           if(this.state.ImporPersonThreeChange === false ){\n                temp2 = this.state.importantPeople3;\n                temp2.important = false;\n           }\n           else{\n               temp2 = this.state.importantPeople3Previous;\n           }\n           this.setState({ImporPersonThreeChange: true,importantPeople3Previous: temp2 , importantPeople3DocRefChanged: doc.ref.id, importantPeople3: temp});\n        })\n        .catch((err) => {\n            console.log('Error getting documents', err);\n        });\n    }\n\n    newInputSubmit = () => {\n        if(this.state.importantPeople1.important === true){\n            if(this.state.ImporPersonOneChange === true){\n                if(this.state.importantPeople1id != null){\n                    this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople1id).update(this.state.importantPeople1Previous);\n                }\n                if(this.state.importantPeople1DocRefChanged != null){\n                    this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople1DocRefChanged).update(this.state.importantPeople1);\n                }\n            }\n            else{\n                this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople1id).update(this.state.importantPeople1);\n            }        \n        }\n        if(this.state.importantPeople2.important === true){\n            if(this.state.ImporPersonTwoChange === true){\n                if(this.state.importantPeople2id != null){\n                    this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople2id).update(this.state.importantPeople2Previous);\n                }\n                if(this.state.importantPeople2DocRefChanged != null){\n                    this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople2DocRefChanged).update(this.state.importantPeople2);\n                }\n            }\n            else{\n                this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople2id).update(this.state.importantPeople2);\n            }  \n        }\n        if(this.state.importantPeople3.important === true){\n            if(this.state.ImporPersonThreeChange === true){\n                if(this.state.importantPeople3id != null){\n                    this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople3id).update(this.state.importantPeople3Previous);\n                }\n                if(this.state.importantPeople3DocRefChanged != null){\n                    this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople3DocRefChanged).update(this.state.importantPeople3);\n                }\n            }\n            else{\n                this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople3id).update(this.state.importantPeople3);\n            } \n        } \n        this.state.firebaseRootPath.update({'first_name': this.state.firstName});\n        this.state.firebaseRootPath.update({'last_name': this.state.lastName});\n        let newArr = this.state.aboutMeObject;\n        let name = this.state.firstName + \" \" + this.state.lastName;\n        this.state.firebaseRootPath.update({ 'about_me': newArr }).then(\n           (doc) => {\n               this.props.updateProfilePic(name, this.state.aboutMeObject.pic);\n               this.hideAboutForm();   \n           }\n       )\n   }\n\n\n    render(){\n        return (\n            <div>\n                <Modal.Dialog\n                    style={{\n                    borderRadius: \"15px\",\n                    boxShadow:\n                        \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n                    marginLeft: \"35px\",\n                    width: \"350px\",\n                    marginTop: \"0\"\n                    }}\n                >\n                <Modal.Header\n                closeButton\n                onHide={() => {\n                    this.hideAboutForm();\n                }}\n                >\n                    <Modal.Title>\n                        <h5 className=\"normalfancytext\">About Me</h5>{\" \"}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Name:</Form.Label>\n                        <Row>\n                            <Col style = {{paddingRight:\"0px\"}}>\n                                <label style = {{marginTop:\"10px\", marginLeft:\"10px\"}}>First:</label>\n                            </Col>\n                            <Col xs= {9} style = {{paddingLeft:\"0px\"}}>\n                                <Form.Control\n                                type=\"text\"\n                                placeholder=\"First Last\"\n                                value={this.state.firstName || ''}\n                                onChange={\n                                    (e) => { e.stopPropagation(); this.setState({ firstName: e.target.value }) }\n                                }\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col style = {{paddingRight:\"0px\"}}>\n                                <label style = {{marginTop:\"10px\", marginLeft:\"10px\"}}>Last:</label>\n                            </Col>\n                            <Col xs= {9} style = {{paddingLeft:\"0px\"}}>\n                                <Form.Control\n                                type=\"text\"\n                                placeholder=\"First Last\"\n                                value={this.state.lastName || ''}\n                                onChange={\n                                    (e) => { e.stopPropagation();this.setState({ lastName: e.target.value }) }\n                                }\n                                />\n                            </Col>\n                        </Row>\n                        \n                    </Form.Group>\n                    <Row>\n                        <Col> \n                            {(this.state.aboutMeObject.have_pic === false  ? \n                            <FontAwesomeIcon icon={faImage} size=\"6x\"/> : \n                            <img style = \n                                {{display: \"block\",\n                                marginLeft: \"auto\",\n                                marginRight:\"auto\" ,\n                                width: \"100%\",\n                                height:\"70px\",\n                                }}\n                                src={this.state.aboutMeObject.pic}\n                                alt=\"Profile\"\n                            /> )\n                            }\n                        </Col>\n                        <Col xs={8}>\n                        <label >Upload A New Image</label>\n                        <input\n                            style = {{color: \"transparent\"}} \n                            accept=\"image/*\"\n                            type=\"file\"\n                            onChange={this.handleFileSelected}\n                            id=\"ProfileImage\"\n                        />\n                        </Col>\n                    </Row>\n                    \n                    <Form.Group controlId=\"AboutMessage\" style={{ marginTop: \"10px\" }}>\n                        <Form.Label>Message (My Day):</Form.Label>\n                        <Form.Control\n                        as=\"textarea\"\n                        rows=\"4\"\n                        type=\"text\"\n                        placeholder=\"You are a strong ...\"\n                        value={this.state.aboutMeObject.message_day || ''}\n                        onChange={\n                             (e) => { e.stopPropagation(); let temp = this.state.aboutMeObject; temp.message_day = e.target.value; this.setState({ aboutMeObject: temp }) }\n                        }\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"AboutMessageCard\">\n                        <Form.Label>Message (My Card):</Form.Label>\n                        <Form.Control\n                        as=\"textarea\"\n                        rows=\"4\"\n                        type=\"text\"\n                        placeholder=\"You are a safe ...\"\n                        value={this.state.aboutMeObject.message_card || ''}\n                        onChange={\n                            (e) => { e.stopPropagation(); let temp = this.state.aboutMeObject; temp.message_card = e.target.value; this.setState({ aboutMeObject: temp }) }\n                       }\n                        />\n                    </Form.Group>\n                    \n                    <Form.Group >\n                        <Form.Label>Important People</Form.Label>\n                        {this.state.showAddNewPeopleModal && <AddNewPeople closeModal= {this.hidePeopleModal} newPersonAdded = {this.updatePeopleArray} currentUserId={this.props.theCurrentUserId}/>}\n                        <Row>\n                            <Col>\n                                {(this.state.importantPeople1.have_pic === false ? \n                                <div >\n                                    <FontAwesomeIcon icon={faImage} size=\"6x\" style = {{marginLeft:\"5px\"}} /> \n                                    {(this.state.importantPeople1.important === false ?\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        disabled/>:\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        onChange={this.handleImpPeople1}\n                                    />\n                                    )}\n                                </div>: \n                                <div>\n                                    <img style = \n                                        {{display: \"block\",\n                                         width: \"80%\",\n                                         height:\"70px\",\n                                         marginTop:\"10px\",\n                                         marginLeft:\"5px\"\n                                        }}\n                                        src={this.state.importantPeople1.pic } \n                                        alt=\"Important Person 1\"\n                                    /> \n                                     <input \n                                      style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                      // style = {{color: \"transparent\", marginTop:\"10px\"}}\n                                      type= \"file\" accept=\"image/*\" \n                                      onChange={this.handleImpPeople1}\n                                    />\n                                </div>)} \n                            </Col>\n                            <Col xs={7} style = {{paddingLeft:\"0px\", marginTop:\"10px\"}}>\n                                <div className=\"d-flex flex-row\">\n                                    {(this.state.importantPeople1.important === false?\n                                        <Form.Control\n                                            style = {{width:\"150px\", display:\"inline-block\"}}\n                                            type=\"text\"\n                                            placeholder=\"Name ...\"\n                                            value = \"\"\n                                            disabled\n                                        />:\n                                        <Form.Control\n                                            style = {{width:\"150px\", display:\"inline-block\"}}\n                                            type=\"text\"\n                                            placeholder=\"Name ...\"\n                                            value = {this.state.importantPeople1.name || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople1; temp.name = e.target.value; this.setState({ importantPeople1: temp }) }\n                                            }\n                                        />\n                                    )}\n                                    {this.state.enableDropDown === false? \n                                    <DropdownButton\n                                        style={{ display:\"inline-block\" }}\n                                        title=\"\"\n                                        disabled>       \n                                    </DropdownButton>:\n                                        <DropdownButton\n                                        title=\"\"\n                                        >\n                                            {\n                                                Object.keys(this.state.peopleNamesArray).map((keyName, keyIndex) => (\n                                                    // use keyName to get current key's name\n                                                    // and a[keyName] to get its value\n                                                    <Dropdown.Item  key = {keyName} onClick= {e => {this.changeImpPersonOne(keyName)}}>\n                                                        {this.state.peopleNamesArray[keyName]}\n                                                    </Dropdown.Item>\n                                                ))\n                                            }\n                                        </DropdownButton>\n                                    }\n                                </div>\n                                {this.state.importantPeople1.important === false?\n                                    <div>\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Relationship\"\n                                            value = \"\"\n                                            disabled\n                                        />\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Phone Number\"\n                                            value = \"\"\n                                            disabled\n                                        />\n                                    </div>:\n                                    <div>\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Relationship\"\n                                            value = {this.state.importantPeople1.relationship || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople1; temp.relationship = e.target.value; this.setState({ importantPeople1: temp }) }\n                                            } \n                                        />\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Phone Number\"\n                                            value = {this.state.importantPeople1.phone_number || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople1; temp.phone_number = e.target.value; this.setState({ importantPeople1: temp }) }\n                                            } \n                                        />\n                                    </div>\n                                } \n                            </Col>\n                            {this.state.importantPeople1.important === false && <p style = {{fontSize:\"0.9em\", marginLeft:\"20px\"}}> Choose a person or add a new one</p>}\n                        </Row>\n                        <Row style={{ marginTop: \"20px\" }}>\n                            <Col>\n                                {(this.state.importantPeople2.have_pic === false ? \n                                <div>\n                                    <FontAwesomeIcon icon={faImage} size=\"6x\" style = {{marginLeft:\"5px\"}} /> \n                                    {(this.state.importantPeople2.important === false ?\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        disabled/>:\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        onChange={this.handleImpPeople2}\n                                    />\n                                    )} \n                                </div>: \n                                <div>\n                                    <img style = \n                                        {{display: \"block\",\n                                        width: \"80%\",\n                                        height:\"70px\",\n                                        marginTop:\"10px\",\n                                        marginLeft:\"5px\"\n                                       }}\n                                        src={this.state.importantPeople2.pic } \n                                        alt=\"Important People 2\"\n                                    />\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\"\n                                        onChange={this.handleImpPeople2}\n                                    /> \n                                </div>)}\n                                \n                            </Col>\n                            <Col xs={7} style = {{paddingLeft:\"0px\", marginTop:\"10px\"}}>\n                                <div className=\"d-flex flex-row\">\n                                    {(this.state.importantPeople2.important === false?\n                                        <Form.Control\n                                            style = {{width:\"150px\", display:\"inline-block\"}}\n                                            type=\"text\"\n                                            placeholder=\"Name ...\"\n                                            value = \"\"\n                                            disabled\n                                        />:\n                                        <Form.Control\n                                            style = {{width:\"150px\", display:\"inline-block\"}}\n                                            type=\"text\"\n                                            placeholder=\"Name ...\"\n                                            value = {this.state.importantPeople2.name || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople2; temp.name = e.target.value; this.setState({ importantPeople2: temp }) }\n                                            }\n                                        />\n                                    )}\n                                   \n                                    {this.state.enableDropDown === false? \n                                    <DropdownButton\n                                        style={{ display:\"inline-block\" }}\n                                        title=\"\"\n                                        disabled>       \n                                    </DropdownButton>:\n                                        <DropdownButton\n                                        title=\"\"\n                                        >\n                                            {\n                                                Object.keys(this.state.peopleNamesArray).map((keyName, keyIndex) => (\n                                                    // use keyName to get current key's name\n                                                    // and a[keyName] to get its value\n                                                    <Dropdown.Item  key ={keyName} onClick= {e => {this.changeImpPersonTwo(keyName)}}>\n                                                        {this.state.peopleNamesArray[keyName]}\n                                                    </Dropdown.Item>\n                                                ))\n                                            }\n                                        </DropdownButton>\n                                    }\n                                </div>\n                                {(this.state.importantPeople2.important === false?\n                                    <div>\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Relationship\"\n                                            value = \"\"\n                                            disabled\n                                        />\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Phone Number\" \n                                            value = \"\"\n                                            disabled\n                                        />\n                                    </div>:\n                                    <div>\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Relationship\"\n                                            value = {this.state.importantPeople2.relationship || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople2; temp.relationship = e.target.value; this.setState({ importantPeople2: temp }) }\n                                            }\n                                        />\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Phone Number\" \n                                            value = {this.state.importantPeople2.phone_number || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople2; temp.phone_number = e.target.value; this.setState({ importantPeople2: temp }) }\n                                            }\n                                        />\n                                    </div>\n                                )}   \n                            </Col>\n                            {this.state.importantPeople2.important === false && <p style = {{fontSize:\"0.9em\", marginLeft:\"20px\"}}> Choose a person or add a new one</p>}\n                        </Row>\n                        <Row style={{ marginTop: \"20px\" }}>\n                            <Col>\n                                {(this.state.importantPeople3.have_pic === false ? \n                                <div>\n                                    <FontAwesomeIcon icon={faImage} size=\"6x\" style = {{marginLeft:\"5px\"}} /> \n                                    {(this.state.importantPeople3.important === false ?\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        disabled/>:\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        onChange={this.handleImpPeople3}\n                                    />\n                                    )}     \n                                </div>: \n                                <div>\n                                    <img style = \n                                        {{display: \"block\",\n                                        width: \"80%\",\n                                        height:\"70px\",\n                                        marginTop:\"10px\",\n                                        marginLeft:\"5px\"\n                                       }}\n                                        src={this.state.importantPeople3.pic } \n                                        alt=\"Important People 3\"\n                                    /> \n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        onChange={this.handleImpPeople3}\n                                    />  \n                                </div>)} \n                            </Col>\n                            <Col xs={7} style = {{paddingLeft:\"0px\", marginTop:\"10px\"}}>\n                                <div className=\"d-flex flex-row\">\n                                    {(this.state.importantPeople3.important === false?\n                                      <Form.Control\n                                        style = {{width:\"150px\", display:\"inline-block\"}}\n                                        type=\"text\"\n                                        placeholder=\"Name ...\"\n                                        value = \"\"\n                                        disabled\n                                     />:\n                                    <Form.Control\n                                        style = {{width:\"150px\", display:\"inline-block\"}}\n                                        type=\"text\"\n                                        placeholder=\"Name ...\"\n                                        value = {this.state.importantPeople3.name || ''}\n                                        onChange={\n                                            (e) => { e.stopPropagation(); let temp = this.state.importantPeople3; temp.name = e.target.value; this.setState({ importantPeople3: temp }) }\n                                        }\n                                    /> \n                                    )}\n                                    \n                                    {this.state.enableDropDown === false? \n                                    <DropdownButton\n                                        style={{ display:\"inline-block\" }}\n                                        title=\"\"\n                                        disabled>       \n                                    </DropdownButton>:\n                                        <DropdownButton\n                                            title=\"\"\n                                        >\n                                            {\n                                                Object.keys(this.state.peopleNamesArray).map((keyName, keyIndex) => (\n                                                    // use keyName to get current key's name\n                                                    // and a[keyName] to get its value\n                                                    <Dropdown.Item key ={keyName} onClick= {e => {this.changeImpPersonThree(keyName)}}>\n                                                        {this.state.peopleNamesArray[keyName]}\n                                                    </Dropdown.Item>\n                                                ))\n                                            }\n                                        </DropdownButton>\n                                    }\n                                </div>\n                                {(this.state.importantPeople3.important === false?\n                                    <div>\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Relationship\" \n                                            value = \"\"\n                                            disabled\n                                        />\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Phone Number\" \n                                            value = \"\"\n                                            disabled\n                                        />\n                                    </div>:\n                                    <div>\n                                        <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Relationship\" \n                                        value = {this.state.importantPeople3.relationship || ''}\n                                        onChange={\n                                            (e) => { e.stopPropagation(); let temp = this.state.importantPeople3; temp.relationship = e.target.value; this.setState({ importantPeople3: temp }) }\n                                        }\n                                        />\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Phone Number\" \n                                            value = {this.state.importantPeople3.phone_number || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople3; temp.phone_number = e.target.value; this.setState({ importantPeople3: temp }) }\n                                            }\n                                        />\n                                    </div>\n                                )}  \n                            </Col>\n                            {this.state.importantPeople3.important === false && <p style = {{fontSize:\"0.9em\", marginLeft:\"20px\"}}> Choose a person or add a new one</p>}\n                        </Row>     \n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Container fluid>\n                        <Row>\n                            <Col xs={3}>\n                            {((this.state.saveButtonEnabled === false || this.state.showAddNewPeopleModal === true)  ? \n                            <Button variant=\"info\" type=\"submit\" disabled>\n                            Save\n                            </Button>: \n                            <Button variant=\"info\" type=\"submit\" onClick={(e) => {e.stopPropagation(); this.newInputSubmit()}}>\n                            Save\n                            </Button>)}\n                            </Col>\n                            <Col xs={4}>\n                                <Button variant=\"secondary\" onClick={this.hideAboutForm}>\n                                Cancel\n                                </Button>\n                            </Col>\n                            <Col xs={4}>\n                                <Button variant=\"primary\" onClick = {(e) => {e.stopPropagation(); this.setState({showAddNewPeopleModal: true})}}>\n                                Add People\n                                </Button>\n                            </Col>\n                            \n                        </Row>\n                    </Container>\n                </Modal.Footer>\n            </Modal.Dialog>\n         </div>\n        );\n    }\n}\n\nexport default AboutModal;","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport { Button, Modal, Row, Col, DropdownButton} from \"react-bootstrap\";\n\n  export default class AddNewPeople extends Component {\n    constructor(props) {\n      super(props);\n    }\n    state = {\n        itemToEdit: {\n            email_id: \"\",\n            first_name: \"\",\n            last_name: \"\",\n            google_auth_token:\"\",\n            google_refresh_token:\"\"\n          }, \n        //   saveChangesButtonEnabled: true,\n          UserDocsPath: firebase\n            .firestore()\n            .collection(\"users\")\n            // .doc(\"7R6hAVmDrNutRkG3sVRy\")\n            // .doc(this.props.theCurrentUserId)\n    };\n\n    newUserInputSubmit = ()=>{\n        this.state.UserDocsPath\n          .add(this.state.itemToEdit)\n          .then(ref => {\n            if (ref.id === null) {\n              alert(\"Fail to add new routine / goal item\");\n              return;\n            }\n   \n            let temp = this.state.itemToEdit;\n            temp.unique_id = ref.id;\n            console.log(\"Added document with ID: \", ref.id);\n            this.updateWithId();\n   \n          });\n    }\n\n    updateWithId = ( ) => {\n        this.state.UserDocsPath.doc(this.state.itemToEdit.unique_id).update(this.state.itemToEdit).then(\n            (doc) => {\n                \n                this.props.newUserAdded(); \n            }\n        )\n    }\n  \n  \n    render() {\n      return (\n        <Modal.Dialog style={{marginLeft:\"10px\", width:\"600px\", paddingLeft:\"0px\", marginTop:\"10px\"}}>\n          {/* <Modal.Header closeButton onHide={this.props.closeModal} >\n            <Modal.Title>\n              <h5 className=\"normalfancytext\">\n                Create Account \n              </h5>{\" \"}\n            </Modal.Title>\n          </Modal.Header> */}\n          <Modal.Body >\n            <Row>\n                \n                <Col xs={4}>\n\n              <label> Email</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  style={{ width: \"150px\" }}\n                  placeholder=\"Enter Email\"\n                  value={this.state.itemToEdit.email_id}\n                  onChange={e => {\n                    e.stopPropagation();\n                    let temp = this.state.itemToEdit;\n                    temp.email_id = e.target.value;\n                    this.setState({ itemToEdit: temp });\n                  }}\n                  \n                />\n              </div>\n              </Col>\n              <Col xs={4} style ={{paddingLeft:\"5px\"}}>\n\n              <label> FIrst Name</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  style={{ width: \"150px\" }}\n                  placeholder=\"Enter Name\"\n                  value={this.state.itemToEdit.first_name}\n                  onChange={e => {\n                    e.stopPropagation();\n                    let temp = this.state.itemToEdit;\n                    temp.first_name = e.target.value;\n                    this.setState({ itemToEdit: temp });\n                  }}\n                  \n                />\n              </div>\n              </Col>\n              <Col xs={4} style ={{paddingLeft:\"0px\"}}>\n              \n              <label>Last Name</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  style={{ width: \"150px\" }}\n                  placeholder=\"Enter Name \"\n                  value={this.state.itemToEdit.last_name}\n                  onChange={e => {\n                    e.stopPropagation();\n                    let temp = this.state.itemToEdit;\n                    temp.last_name = e.target.value;\n                    this.setState({ itemToEdit: temp });\n                  }}\n                  \n                />\n              </div> \n              \n              </Col>\n              </Row>\n              <Row>\n              <Col xs={5}>\n              <DropdownButton\n                    title= \"Copy Exisiting Client\"\n                    style = {{}}\n                >\n                    {/* {\n                        Object.keys(this.state.userNamesAndPics).map((keyName, keyIndex) => (\n                            // use keyName to get current key's name\n                            // and a[keyName] to get its value\n                            <Dropdown.Item key ={keyName} onClick= {e => {this.changeUser(keyName, this.state.userNamesAndPics[keyName])}}>\n                                        {this.state.userNamesAndPics[keyName] || ''}\n                            </Dropdown.Item>\n                        ))\n                    } */}\n            </DropdownButton>\n              </Col>\n              <Col xs={3}>\n              <Button style = {{marginLeft:\"30px\"}} variant=\"secondary\" onClick = {this.props.closeModal}>\n              Close\n             </Button>\n             </Col>\n             <Col xs={4}>\n             <Button variant=\"info\" style = {{marginRight:\"30px\"}} type=\"submit\" onClick={(e) => {e.stopPropagation(); this.newUserInputSubmit()}}>\n                Save changes\n              </Button>\n              </Col>\n            </Row>\n          </Modal.Body>\n          {/* <Modal.Footer>\n            <Button style = {{marginLeft:\"10px\"}} variant=\"secondary\" onClick = {this.props.closeModal}>\n              Close\n            </Button>\n            <Button variant=\"info\" style = {{marginLeft:\"50px\", marginRight:\"30px\"}} type=\"submit\" >\n                Save changes\n              </Button>\n           \n          </Modal.Footer> */}\n        </Modal.Dialog>\n      );\n    }\n  }\n  ","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Modal,\n  Dropdown,\n  DropdownButton,\n} from \"react-bootstrap\";\nimport firebase from \"./firebase\";\nimport Firebasev2 from \"./Firebasev2.jsx\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport TylersCalendarv1 from \"./TCal.jsx\";\nimport DayRoutines from \"./DayRoutines.jsx\";\nimport DayGoals from \"./DayGoals.jsx\";\nimport DayEvents from \"./DayEvents.jsx\";\nimport WeekEvents from \"./WeekEvents.jsx\";\nimport WeekRoutines from \"./WeekRoutines.jsx\";\nimport WeekGoals from \"./WeekGoals.jsx\";\nimport AboutModal from \"./AboutModal.jsx\";\nimport CreateNewAccountModal from \"./CreateNewAccountModal.jsx\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalEvents: [], //holds the google events data in it's original JSON form\n      dayEvents: [], //holds google events data for a single day\n      weekEvents: [], //holds google events data for a week\n      originalGoalsAndRoutineArr: [], //Hold goals and routines so day and week view can access it\n      goals: [],\n      routines: [],\n      showRoutineGoalModal: false,\n      showGoalModal: false,\n      showRoutineModal: false,\n      showAboutModal: false,\n      dayEventSelected: false, //use to show modal to create new event\n      // modelSelected: false, // use to display the routine/goals modal\n      newEventID: \"\", //save the event ID for possible future use\n      newEventRecurringID: \"\",\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventNotification: 30,\n      newEventDescription: \"\",\n      newEventStart0: new Date(), //start and end for a event... it's currently set to today\n      newEventEnd0: new Date(), //start and end for a event... it's currently set to today\n      isEvent: false, // use to check whether we clicked on a event and populate extra buttons in event form\n      //////////New additions for new calendar\n      dateContext: moment(), //Keep track of day and month\n      todayDateObject: moment(), //Remember today's date to create the circular effect over todays day\n      calendarView: \"Day\", // decides which type of calendar to display\n      showRepeatModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      repeatSummary: \"\",\n      recurrenceRule: \"\",\n      eventNotifications: {},\n      showDeleteRecurringModal: false,\n      deleteRecurringOption: \"This event\",\n      showEditRecurringModal: false,\n      editRecurringOption: \"\",\n\n      currentUserPicUrl: \"\",\n      currentUserName: \"\",\n      currentUserId: \"\",\n      // profileName: \"\",\n      userIdAndNames: {},\n      userPicsArray: [],\n      enableNameDropDown: false,\n      showNewAccountmodal: false,\n    };\n  }\n\n  /**\n   * grabFireBaseRoutinesGoalsData:\n   * this function grabs the goals&routines array from the path located in this function\n   * which will then populate the goals, routines,originalGoalsAndRoutineArr array\n   * separately. The arrays will be used for display and data manipulation later.\n   *\n   */\n  grabFireBaseRoutinesGoalsData = () => {\n    const db = firebase.firestore();\n    // console.log(\"FirebaseV2 component did mount\");\n    // console.log(\"this is the current userid\", this.state.currentUserId);\n    if (this.state.currentUserId !== \"\") {\n      //  const docRef = db.collection(\"users\").doc(\"7R6hAVmDrNutRkG3sVRy\");\n      const docRef = db.collection(\"users\").doc(this.state.currentUserId);\n      // console.log(\"this is suppose tto be the path\", docRef);\n      docRef\n        .get()\n        .then((doc) => {\n          if (doc.exists) {\n            // console.log(doc.data());\n            var x = doc.data();\n            // console.log(\"this is the data\", x);\n            // console.log(x[\"goals&routines\"]);\n            // x = x[\"goals&routines\"];\n            let routine = [];\n            let goal = [];\n            if (x[\"goals&routines\"] !== undefined) {\n              x = x[\"goals&routines\"];\n              // console.log(\"this is the goals and routines\", x);\n\n              for (let i = 0; i < x.length; ++i) {\n                if (x[i][\"is_persistent\"]) {\n                  // console.log(\"routine \" + x[i][\"title\"]);\n                  routine.push(x[i]);\n                } else if (!x[i][\"is_persistent\"]) {\n                  // console.log(\"not routine \" + x[i][\"title\"]);\n                  goal.push(x[i]);\n                }\n              }\n              this.setState({\n                originalGoalsAndRoutineArr: x,\n                goals: goal,\n                addNewGRModalShow: false,\n                routines: routine,\n              });\n            } else {\n              this.setState({\n                originalGoalsAndRoutineArr: [],\n                goals: goal,\n                addNewGRModalShow: false,\n                routines: routine,\n              });\n            }\n            // this.setState({\n            //   originalGoalsAndRoutineArr: x,\n            //   goals: goal,\n            //   addNewGRModalShow: false,\n            //   routines: routine,\n            // });\n            // console.log(x, \"x\");\n          } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n          }\n        })\n        .catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        });\n    }\n   \n  };\n\n  handleRepeatDropDown = (eventKey, week_days) => {\n    if (eventKey === \"WEEK\") {\n      const newByDay = {\n        ...this.state.byDay_temp,\n        [this.state.newEventStart0.getDay()]: week_days[\n          this.state.newEventStart0.getDay()\n        ],\n      };\n      this.setState({\n        repeatDropDown_temp: eventKey,\n        byDay_temp: newByDay,\n      });\n    }\n    this.setState({\n      repeatDropDown_temp: eventKey,\n    });\n  };\n\n  handleRepeatMonthlyDropDown = (eventKey) => {\n    this.setState({\n      repeatMonthlyDropDown: eventKey,\n    });\n  };\n\n  handleRepeatEndDate = (date) => {\n    this.setState({\n      repeatEndDate_temp: date,\n    });\n  };\n\n  handleRepeatInputValue = (eventKey) => {\n    this.setState({\n      repeatInputValue_temp: eventKey,\n    });\n  };\n\n  handleRepeatOccurrence = (eventKey) => {\n    this.setState({\n      repeatOccurrence_temp: eventKey,\n    });\n  };\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    this.updateEventsArray();\n    this.updateProfileFromFirebase();\n    // this.getEventNotifications();\n  }\n\n  /*This will obtain the notifications from the database\n   */\n\n  // getEventNotifications = () => {\n  //   const db = firebase.firestore();\n  //   const docRef = db\n  //     .collection(\"users\")\n  //     .doc(\"7R6hAVmDrNutRkG3sVRy\")\n  //     .collection(\"events\")\n  //     .doc(\"o0AHviYhmL7VJLXIREg2\");\n  //   docRef\n  //     .get()\n  //     .then((doc) => {\n  //       if (doc.exists) {\n  //         var x = doc.data();\n  //         console.log(\"this is the event notification from fb \", x);\n  //         this.setState({\n  //           eventNotifications: x,\n  //         });\n  //       } else {\n  //         console.log(\"No such document!\");\n  //       }\n  //     })\n  //     .catch(function (error) {\n  //       console.log(\"Error getting document:\", error);\n  //     });\n  // };\n  /*Grabs the URL the the profile pic from the about me modal to\n  display on the top left corner.\n  */\n  updateProfileFromFirebase = () => {\n    const db = firebase.firestore();\n    const docRef = db.collection(\"users\");\n    docRef\n      .get()\n      .then((usersArray) => {\n        // console.log(\"this is doc\", usersArray.docs);\n        let nameIdObject = {};\n        let profilePicURLArray = [];\n        let theCurrentUserName = \"\";\n        let theCurrentUserPic = \"\";\n        let theCurrentUserId = \"\";\n        for (let user of usersArray.docs) {\n          // console.log(\"this is x before\", user.id);\n          let id = user.id;\n          let x = user.data();\n          // console.log(\"this is the user should be 3 times\", x);\n\n          // console.log(user.data());\n          let firstName = x.first_name || \"\";\n          let lastName = x.last_name || \"\";\n          let name = firstName + \" \" + lastName;\n          let picURL = \"\";\n          // console.log(\"this is x\", x);\n          //  console.log(x[\"about_me\"]);\n          if (x[\"about_me\"] !== undefined) {\n            picURL = x[\"about_me\"].pic;\n            // console.log(\"we got in\");\n          }\n\n          profilePicURLArray.push(picURL);\n          //I know what went wrong need to change picURL with the id bc can have multiple picurl with same thing.\n          //so have to change structure of whole thing.\n          // console.log(\"this is the picURL\", picURL);\n          nameIdObject[id] = name;\n          // namePicObject[picURL] = name;\n          // console.log(\"this si the object should happen 3 times\",namePicObject);\n          // console.log(x[\"about_me\"]  );\n          // db.collection(\"users\").doc(user.id).get()\n          //   .then()\n\n          // if(this.state.currentUserId=== \"\"){\n          theCurrentUserName = nameIdObject[Object.keys(nameIdObject)[0]];\n          theCurrentUserPic = profilePicURLArray[0];\n          theCurrentUserId = Object.keys(nameIdObject)[0];\n          // }else{\n          //   theCurrentUserName = this.state.userIdAndNames[this.state.currentUserId];\n          //   theCurrentUserPic = this.state.currentUserPicUrl;\n          //   theCurrentUserId = this.state.currentUserId;\n          // }\n        }\n        // console.log(\"this is the object for name and pic after\",namePicObject);\n        this.setState(\n          {\n            userIdAndNames: nameIdObject,\n            enableNameDropDown: true,\n            // currentProfilePicUrl: Object.keys(nameIdObject)[0],\n            userPicsArray: profilePicURLArray,\n            currentUserPicUrl: theCurrentUserPic,\n            currentUserId: theCurrentUserId,\n            currentUserName: theCurrentUserName,\n            // currentUserPicUrl: profilePicURLArray[0],\n            // currentUserId: Object.keys(nameIdObject)[0],\n            // currentUserName: nameIdObject[Object.keys(nameIdObject)[0]]\n          },\n          () => {\n            this.grabFireBaseRoutinesGoalsData();\n          }\n        );\n      })\n      .catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n    // const db = firebase.firestore();\n    // const docRef = db.collection(\"users\").doc(\"7R6hAVmDrNutRkG3sVRy\");\n    // docRef\n    //   .get()\n    //   .then((doc) => {\n    //     if (doc.exists) {\n\n    //       var x = doc.data();\n    //       var firstName = x.first_name;\n    //       var lastName = x.last_name;\n    //       // console.log(\"this is x.data\", x.last_name);\n    //       x = x[\"about_me\"];\n    //       this.setState({\n    //         profilePicUrl: x.pic,\n    //         profileName: firstName + \" \" + lastName,\n    //       });\n    //     } else {\n    //       console.log(\"No such document!\");\n    //     }\n    //   })\n    //   .catch(function (error) {\n    //     console.log(\"Error getting document:\", error);\n    //   });\n  };\n\n  /*\n  getThisMonthEvents:\n  By passing in a empty interval, this method will get a response from the server with\n  the current month's events\n  */\n  getThisMonthEvents = () => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {},\n      })\n      .then((response) => {\n        var events = response.data;\n        this.setState({ originalEvents: events }, () => {\n          console.log(\"New Events Arrived cdm\", events);\n        });\n      })\n      .catch((error) => {\n        //console.log('Error Occurred ' + error);\n      });\n  };\n\n  handleDayEventClick = (A) => {\n    var guestList = \"\";\n    console.log(A, \"handleDayEventClick\");\n    if (A.attendees) {\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\n        return guestList + \" \" + nextGuest.email;\n      }, \"\");\n      console.log(\"Guest List:\", A.attendees, guestList);\n    }\n    this.setState({\n      newEventID: A.id,\n      newEventStart0: A.start.dateTime\n        ? new Date(A.start.dateTime)\n        : new Date(A.start.date),\n      newEventEnd0: A.end.dateTime\n        ? new Date(A.end.dateTime)\n        : new Date(A.end.date),\n      newEventName: A.summary,\n      newEventGuests: guestList,\n      newEventLocation: A.location ? A.location : \"\",\n      newEventNotification: A.reminders.overrides\n        ? A.reminders.overrides[0].minutes\n        : \"\",\n      newEventDescription: A.description ? A.description : \"\",\n      dayEventSelected: true,\n      isEvent: true,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      repeatSummary: \"\",\n      recurrenceRule: \"\",\n      showDeleteRecurringModal: false,\n      deleteRecurringOption: \"This event\",\n      showEditRecurringModal: false,\n      editRecurringOption: \"\",\n    });\n  };\n\n  handleWeekEventClick = (A) => {\n    var guestList = \"\";\n    if (A.attendees) {\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\n        return guestList + \" \" + nextGuest.email;\n      }, \"\");\n      console.log(\"Guest List:\", A.attendees, guestList);\n    }\n    this.setState({\n      newEventID: A.id,\n      newEventStart0: A.start.dateTime\n        ? new Date(A.start.dateTime)\n        : new Date(A.start.date),\n      newEventEnd0: A.end.dateTime\n        ? new Date(A.end.dateTime)\n        : new Date(A.end.date),\n      newEventName: A.summary,\n      newEventGuests: guestList,\n      newEventLocation: A.location ? A.location : \"\",\n      newEventNotification: A.reminders.overrides\n        ? A.reminders.overrides[0].minutes\n        : \"\",\n      newEventDescription: A.description ? A.description : \"\",\n      dayEventSelected: true,\n      isEvent: true,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      repeatSummary: \"\",\n      recurrenceRule: \"\",\n      showDeleteRecurringModal: false,\n      deleteRecurringOption: \"This event\",\n      showEditRecurringModal: false,\n      editRecurringOption: \"\",\n    });\n  };\n  repeatSummaryCompute = () => {\n    const { recurrenceRule } = this.state;\n\n    let untilSubString = \"\";\n    let untilIndex = recurrenceRule.indexOf(\"UNTIL\");\n    if (untilIndex !== -1) {\n      untilSubString = recurrenceRule.substring(untilIndex);\n    }\n    console.log(untilSubString);\n\n    if (untilSubString.includes(\";\")) {\n      let endUntilIndex = untilSubString.indexOf(\";\");\n      untilSubString = moment(\n        untilSubString.substring(6, endUntilIndex)\n      ).format(\"LL\");\n    } else if (untilSubString) {\n      console.log(moment(\"20200406T065959Z\").format(\"LL\"));\n      untilSubString = moment(untilSubString.substring(6, 14)).format(\"LL\");\n    }\n    console.log(untilSubString);\n\n    let countSubString = \"\";\n    let countIndex = recurrenceRule.indexOf(\"COUNT\");\n    if (countIndex !== -1) {\n      countSubString = recurrenceRule.substring(countIndex);\n    }\n    if (countSubString.includes(\";\")) {\n      let endCountIndex = countSubString.indexOf(\";\");\n      countSubString = countSubString.substring(6, endCountIndex);\n    } else if (countSubString) {\n      countSubString = countSubString.substring(6);\n    }\n\n    console.log(countSubString, \"countSubString\");\n\n    let intervalSubString = \"\";\n    let intervalIndex = recurrenceRule.indexOf(\"INTERVAL\");\n    if (intervalIndex !== -1) {\n      intervalSubString = recurrenceRule.substring(intervalIndex);\n    }\n    if (intervalSubString.includes(\";\")) {\n      let endIntervalIndex = intervalSubString.indexOf(\";\");\n      intervalSubString = intervalSubString.substring(9, endIntervalIndex);\n    } else if (intervalSubString) {\n      intervalSubString = intervalSubString.substring(9);\n    }\n\n    let byDaySubString = \"\";\n    let byDayArray = [];\n    let byDayIndex = recurrenceRule.indexOf(\"BYDAY\");\n    if (byDayIndex !== -1) {\n      byDaySubString = recurrenceRule.substring(byDayIndex);\n    }\n    console.log(byDaySubString);\n\n    if (byDaySubString.includes(\";\")) {\n      let endByDayIndex = byDaySubString.indexOf(\";\");\n      byDaySubString = byDaySubString.substring(6, endByDayIndex);\n    } else if (byDaySubString) {\n      byDaySubString = byDaySubString.substring(6);\n    }\n\n    byDayArray = byDaySubString.split(\",\");\n    console.log(byDayArray);\n\n    // If freq is daily in rrule\n    if (recurrenceRule.includes(\"FREQ=DAILY\")) {\n      if (intervalSubString === \"1\" || !intervalSubString) {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: \"Daily\",\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Daily, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Daily, ${countSubString} times`,\n            });\n          }\n        }\n      } else {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} days`,\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} days, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} days, ${countSubString} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If freq is weekly in rrule\n    else if (recurrenceRule.includes(\"FREQ=WEEKLY\")) {\n      if (intervalSubString === \"1\" || !intervalSubString) {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          if (byDayArray.length === 7) {\n            this.setState({\n              repeatOptionDropDown: \"Weekly on all days\",\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${byDayArray.join(\", \")}`,\n            });\n          }\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          if (byDayArray.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Weekly on all days, until ${untilSubString}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${byDayArray.join(\n                \", \"\n              )}, until ${untilSubString}`,\n            });\n          }\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            if (byDayArray.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Weekly on all days, ${countSubString} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Weekly on ${byDayArray.join(\n                  \", \"\n                )}, ${countSubString} times`,\n              });\n            }\n          }\n        }\n      } else {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          if (byDayArray.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on all days`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on ${byDayArray.join(\n                \", \"\n              )}`,\n            });\n          }\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          if (byDayArray.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on all days, until ${untilSubString}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on ${byDayArray.join(\n                \", \"\n              )}, until ${untilSubString}`,\n            });\n          }\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: \"Once\",\n            });\n          } else {\n            if (byDayArray.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Every ${intervalSubString} weeks on all days, ${countSubString} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Every ${intervalSubString} weeks on ${byDayArray.join(\n                  \", \"\n                )}, ${countSubString} times`,\n              });\n            }\n          }\n        }\n      }\n    }\n\n    // If freq is monthly in rrule\n    else if (recurrenceRule.includes(\"FREQ=MONTHLY\")) {\n      if (intervalSubString === \"1\" || !intervalSubString) {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: \"Monthly\",\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Monthly, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Monthly, ${countSubString} times`,\n            });\n          }\n        }\n      } else {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} months`,\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} months, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} months, ${countSubString} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If freq is yearly in rrule\n    else if (recurrenceRule.includes(\"FREQ=YEARLY\")) {\n      if (intervalSubString === \"1\" || !intervalSubString) {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: \"Annually\",\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Annually, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Annually, ${countSubString} times`,\n            });\n          }\n        }\n      } else {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} years`,\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} years, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} years, ${countSubString} times`,\n            });\n          }\n        }\n      }\n    }\n  };\n\n  /*\n  handleEventClick For Month View.\n  when a event on the calendar is clicked, the function below\n  will execute and save the clicked event varibles to this.state and\n  passed that into the form where the user can edit that data\n\n  TODO: set dateContext to the date clicked\n  */\n  handleEventClick = (i) => {\n    // bind with an arrow function\n    let A = this.state.originalEvents[i];\n    console.log(\"A\", A);\n    if (A.recurringEventId) {\n      axios\n        .get(\"/getRecurringRules\", {\n          params: {\n            recurringEventId: A.recurringEventId,\n          },\n        })\n        .then((res) => {\n          console.log(res.data, \"getRecurringRules\");\n          this.setState(\n            {\n              recurrenceRule: res.data[0],\n            },\n            () => {\n              this.repeatSummaryCompute();\n            }\n          );\n        });\n    }\n    //Guest list erroneously includes owner's email as well\n    var guestList = \"\";\n    if (A.attendees) {\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\n        return guestList + \" \" + nextGuest.email;\n      }, \"\");\n      console.log(\"Guest List:\", A.attendees, guestList);\n    }\n    this.setState(\n      {\n        newEvent: A,\n        newEventID: A.id,\n        newEventRecurringID: A.recurringEventId,\n        newEventStart0: A.start.dateTime\n          ? new Date(A.start.dateTime)\n          : new Date(A.start.date),\n        newEventEnd0: A.end.dateTime\n          ? new Date(A.end.dateTime)\n          : new Date(A.end.date),\n        newEventName: A.summary,\n        newEventGuests: guestList,\n        newEventLocation: A.location ? A.location : \"\",\n        newEventNotification: A.reminders.overrides\n          ? A.reminders.overrides[0].minutes\n          : \"\",\n        newEventDescription: A.description ? A.description : \"\",\n        dayEventSelected: true,\n        isEvent: true,\n        showRepeatModal: false,\n        repeatOption: false,\n        repeatOptionDropDown: \"Does not repeat\",\n        repeatDropDown: \"DAY\",\n        repeatDropDown_temp: \"DAY\",\n        repeatMonthlyDropDown: \"Monthly on day 13\",\n        repeatInputValue: \"1\",\n        repeatInputValue_temp: \"1\",\n        repeatOccurrence: \"1\",\n        repeatOccurrence_temp: \"1\",\n        repeatRadio: \"Never\",\n        repeatRadio_temp: \"Never\",\n        repeatEndDate: \"\",\n        repeatEndDate_temp: \"\",\n        showNoTitleError: \"\",\n        showDateError: \"\",\n        showAboutModal: false,\n        byDay: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\",\n        },\n        byDay_temp: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\",\n        },\n        repeatSummary: \"\",\n        recurrenceRule: \"\",\n        showDeleteRecurringModal: false,\n        deleteRecurringOption: \"This event\",\n        showEditRecurringModal: false,\n        editRecurringOption: \"\",\n      },\n      () => {\n        console.log(\"callback from handEventClick\");\n      }\n    );\n  };\n\n  //Create event from clicking empty space from week view\n  //Note arg is moment object of the time pressed\n  handleDateClickOnWeekView = (arg) => {\n    let newStart = arg.toDate();\n    arg.add(1, \"hour\");\n    let newEnd = arg.toDate();\n    this.setState({\n      newEventID: \"\",\n      newEventStart0: newStart,\n      newEventEnd0: newEnd,\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventNotification: 30,\n      newEventDescription: \"\",\n      dayEventSelected: true,\n      isEvent: false,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n    });\n  };\n\n  handleDateClickOnDayView = (arg, i) => {\n    var newStart = new Date(arg);\n    newStart.setHours(i, 0, 0);\n    var newEnd = new Date(arg);\n    newEnd.setHours(i + 1, 0, 0);\n    this.setState({\n      newEventID: \"\",\n      newEventStart0: newStart,\n      newEventEnd0: newEnd,\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventNotification: 30,\n      newEventDescription: \"\",\n      dayEventSelected: true,\n      isEvent: false,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      repeatSummary: \"\",\n      recurrenceRule: \"\",\n      showDeleteRecurringModal: false,\n      deleteRecurringOption: \"This event\",\n      showEditRecurringModal: false,\n      editRecurringOption: \"\",\n    });\n  };\n\n  /*\n  handleDateClick on Month View.\n  This will trigger when a date is clicked, it will present\n  the user with a new form to create a event\n  */\n  //TODO: Initialize Date, set other properties to empty\n  handleDateClick = (arg) => {\n    var newStart = new Date(arg);\n    newStart.setHours(0, 0, 0, 0);\n    var newEnd = new Date(arg);\n    newEnd.setHours(23, 59, 59, 59);\n    this.setState(\n      {\n        newEventID: \"\",\n        newEventStart0: newStart,\n        newEventEnd0: newEnd,\n        newEventName: \"\",\n        newEventGuests: \"\",\n        newEventLocation: \"\",\n        newEventNotification: 30,\n        newEventDescription: \"\",\n        dayEventSelected: true,\n        isEvent: false,\n        repeatOption: false,\n        repeatOptionDropDown: \"Does not repeat\",\n        repeatDropDown: \"DAY\",\n        repeatDropDown_temp: \"DAY\",\n        repeatMonthlyDropDown: \"Monthly on day 13\",\n        repeatInputValue: \"1\",\n        repeatInputValue_temp: \"1\",\n        repeatOccurrence: \"1\",\n        repeatOccurrence_temp: \"1\",\n        repeatRadio: \"Never\",\n        repeatRadio_temp: \"Never\",\n        repeatEndDate: \"\",\n        repeatEndDate_temp: \"\",\n        showNoTitleError: \"\",\n        showDateError: \"\",\n        showAboutModal: false,\n        byDay: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\",\n        },\n        byDay_temp: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\",\n        },\n        repeatSummary: \"\",\n        recurrenceRule: \"\",\n        showDeleteRecurringModal: false,\n        deleteRecurringOption: \"This event\",\n        showEditRecurringModal: false,\n        editRecurringOption: \"\",\n      },\n      console.log(\"handledateclick\")\n    );\n  };\n\n  validate = () => {\n    let titleError = \"\";\n    let dayError = \"\";\n    var startDay = new Date(this.state.newEventStart0).getDate();\n    var endDay = new Date(this.state.newEventEnd0).getDate();\n    var startMonth = new Date(this.state.newEventStart0).getUTCMonth();\n    var endMonth = new Date(this.state.newEventEnd0).getUTCMonth();\n    var startYear = new Date(this.state.newEventStart0).getFullYear();\n    var endYear = new Date(this.state.newEventEnd0).getFullYear();\n    var startHour = new Date(this.state.newEventStart0).getHours();\n    var endHour = new Date(this.state.newEventEnd0).getHours();\n    if (\n      (startDay > endDay && startMonth === endMonth) ||\n      (startMonth > endMonth && startYear === endYear) ||\n      startYear > endYear ||\n      (startHour > endHour && startDay === endDay)\n    ) {\n      dayError = \"Invalid: start date is before end date\";\n    }\n    if (this.state.newEventName === \"\") {\n      titleError = \"Invalid: No Title\";\n    }\n    //empty string evalutes to false.\n    if (titleError || dayError) {\n      this.setState({ showNoTitleError: titleError, showDateError: dayError });\n      return false;\n    }\n    return true;\n  };\n\n  // handleSubmit:\n\n  handleExpandClick = (arg) => {\n    let newDate = new Date(arg);\n    console.log(newDate);\n    this.setState(\n      {\n        dateContext: moment(newDate),\n        calendarView: \"Day\",\n      },\n      this.updateEventsArray\n    );\n  };\n\n  // handleSubmit:\n\n  // submits the data to be passed up to be integrated into google calendar\n\n  handleSubmit = (event) => {\n    if (this.state.start === \"\" || this.state.end === \"\") {\n      console.log(\"invalid params\");\n      return;\n    }\n    const isValid = this.validate();\n    if (isValid) {\n      event.preventDefault();\n      this.createEvent(this.state.newEventName);\n      this.setState({ showNoTitleError: \"\", showDateError: \"\" });\n    }\n  };\n\n  updateEventClick = (event) => {\n    event.preventDefault();\n    let eventList = this.state.originalEvents;\n    if (this.state.calendarView === \"Day\") {\n      eventList = this.state.dayEvents;\n    } else if (this.state.calendarView === \"Week\") {\n      eventList = this.state.weekEvents;\n    }\n    const isValid = this.validate();\n    if (isValid) {\n      if (this.state.newEventID === \"\") {\n        return;\n      } else {\n        for (let i = 0; i < eventList.length; i++) {\n          if (eventList[i].id === this.state.newEventID) {\n            this.updateRequest(eventList, i);\n          }\n        }\n      }\n    }\n  };\n\n  /*\n  updateRequest:\n  updates the google calendar based  on\n  */\n  updateRequest = async (eventList, index) => {\n    const guests = this.state.newEventGuests;\n    var formattedEmail = null;\n    const emailList = guests.match(\n      /[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*(\\.)?/g\n    );\n    if (emailList) {\n      formattedEmail = emailList.map((guests) => {\n        return {\n          email: guests,\n          responseStatus: \"needsAction\",\n        };\n      });\n    }\n\n    var minutesNotification = 30;\n    if (this.state.newEventNotification) {\n      minutesNotification = this.state.newEventNotification;\n    }\n\n    let updatedEvent = eventList[index];\n    updatedEvent.summary = this.state.newEventName;\n    updatedEvent.attendees = formattedEmail;\n    updatedEvent.location = this.state.newEventLocation;\n    updatedEvent.description = this.state.newEventDescription;\n    updatedEvent.start = {\n      dateTime: this.state.newEventStart0.toISOString(),\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    };\n    updatedEvent.end = {\n      dateTime: this.state.newEventEnd0.toISOString(),\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    };\n    updatedEvent.recurrence = this.state.repeatOption\n      ? this.defineRecurrence()\n      : [this.state.recurrenceRule];\n    updatedEvent.reminders = {\n      overrides: [\n        {\n          method: \"popup\",\n          minutes: minutesNotification,\n        },\n      ],\n      useDefault: false,\n      sequence: 0,\n    };\n\n    let event = {\n      summary: updatedEvent.summary,\n      attendees: updatedEvent.attendees,\n      location: updatedEvent.location,\n      description: updatedEvent.description,\n      start: updatedEvent.start,\n      end: updatedEvent.end,\n      recurrence: updatedEvent.recurringEventId\n        ? updatedEvent.recurrence\n        : false,\n      reminders: updatedEvent.reminders,\n    };\n\n    updatedEvent.recurringEventId ? console.log(\"true\") : console.log(\"false\");\n\n    let ID = \"\";\n    if (this.state.editRecurringOption === \"All events\") {\n      ID = updatedEvent.recurringEventId;\n      console.log(\"All events\");\n\n      await axios\n        .get(\"/getRecurringEventInstances\", {\n          params: {\n            recurringEventId: updatedEvent.recurringEventId,\n          },\n        })\n        .then((res) => {\n          event.start = res.data[0].start;\n          event.end = res.data[0].end;\n        });\n    } else if (this.state.editRecurringOption === \"This event\") {\n      ID = this.state.newEventID;\n      event.recurrence = null;\n    } else if (this.state.editRecurringOption === \"This and following events\") {\n      ID = updatedEvent.recurringEventId;\n      let newEvent = {\n        reminders: this.state.newEvent.reminders,\n        creator: this.state.newEvent.creator,\n        created: this.state.newEvent.created,\n        organizer: this.state.newEvent.organizer,\n        sequence: this.state.newEvent.sequence,\n        status: this.state.newEvent.status,\n      };\n      let newRecurrenceRule = this.state.recurrenceRule;\n      let newUntilSubString = `${moment(this.state.newEventStart0).format(\n        \"YYYYMMDD\"\n      )}`;\n\n      let countSubString = \"\";\n      let countIndex = this.state.recurrenceRule.indexOf(\"COUNT\");\n      if (countIndex !== -1) {\n        countSubString = this.state.recurrenceRule.substring(countIndex);\n      }\n      if (countSubString.includes(\";\")) {\n        let endCountIndex = countSubString.indexOf(\";\");\n        countSubString = countSubString.substring(6, endCountIndex);\n      } else if (countSubString) {\n        countSubString = countSubString.substring(6);\n      }\n\n      if (newRecurrenceRule.includes(\"UNTIL\")) {\n        let untilSubString = \"\";\n        let untilIndex = this.state.recurrenceRule.indexOf(\"UNTIL\");\n        if (untilIndex !== -1) {\n          untilSubString = this.state.recurrenceRule.substring(untilIndex);\n        }\n        if (untilSubString.includes(\";\")) {\n          let endUntilIndex = untilSubString.indexOf(\";\");\n          untilSubString = untilSubString.substring(6, endUntilIndex);\n        } else if (untilSubString) {\n          untilSubString = untilSubString = untilSubString.substring(6);\n        }\n\n        console.log(untilSubString, newUntilSubString, \"untilSubString\");\n\n        newRecurrenceRule = newRecurrenceRule.replace(\n          untilSubString,\n          newUntilSubString\n        );\n      } else if (newRecurrenceRule.includes(\"COUNT\")) {\n        newRecurrenceRule = newRecurrenceRule.replace(\n          `COUNT=${countSubString}`,\n          `UNTIL=${newUntilSubString}`\n        );\n      } else {\n        newRecurrenceRule = newRecurrenceRule.concat(\n          `;UNTIL=${newUntilSubString}`\n        );\n      }\n      await axios\n        .get(\"/getRecurringEventInstances\", {\n          params: {\n            recurringEventId: updatedEvent.recurringEventId,\n          },\n        })\n        .then((res) => {\n          newEvent.start = res.data[0].start;\n          newEvent.end = res.data[0].end;\n          newEvent.recurrence = [newRecurrenceRule];\n          newEvent.summary = res.data[0].summary;\n          let start = moment(newEvent.start.dateTime);\n          let end = moment(this.state.newEventStart0);\n          let diff = countSubString - moment.duration(end.diff(start)).asDays();\n          console.log(start.format(\"YYMMDD\"), \"diff\");\n          if (start.format(\"YYYYMMDD\") === newUntilSubString) {\n            throw new Error(\"first recurring event\");\n          }\n          if (\n            event.recurrence[0].includes(\"COUNT\") &&\n            !this.state.repeatOption\n          ) {\n            event.recurrence[0] = event.recurrence[0].replace(\n              countSubString,\n              diff\n            );\n          }\n          axios\n            .post(\"/createNewEvent\", {\n              newEvent: newEvent,\n            })\n            .then((res) => {\n              console.log(\"createnewevent\", res);\n              this.setState({\n                dayEventSelected: false,\n              });\n              this.updateEventsArray();\n            })\n            .catch(function (error) {\n              // console.log(error);\n            });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n\n    axios\n      .put(\"/updateEvent\", {\n        extra: event,\n        ID: updatedEvent.recurringEventId ? ID : this.state.newEventID,\n        // start: updatedEvent.start,\n        // end: updatedEvent.end,\n      })\n      .then((response) => {\n        this.setState({\n          dayEventSelected: false,\n          newEventName: \"\",\n          newEventStart0: new Date(),\n          newEventEnd0: new Date(),\n        });\n\n        this.updateEventsArray();\n      })\n\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  defineRecurrence = () => {\n    // frequency in RRULE\n    let frequency =\n      this.state.repeatDropDown === \"DAY\"\n        ? \"DAILY\"\n        : this.state.repeatDropDown.concat(\"LY\");\n\n    // recurrence string\n    let rrule = `RRULE:FREQ=${frequency};INTERVAL=${this.state.repeatInputValue}`;\n    let recurrence = [];\n    let exdate = \"\";\n\n    // If seleted WEEK, add BYDAY to recurrence string\n    if (this.state.repeatDropDown === \"WEEK\") {\n      let selectedDays = [];\n      for (let [key, value] of Object.entries(this.state.byDay)) {\n        // Excluding today if today is not selected\n        if (key === this.state.newEventStart0.getDay().toString()) {\n          if (value === \"\") {\n            exdate = `EXDATE;TZID=America/Los_Angeles:${moment(\n              this.state.newEventStart0\n            ).format(\"YYYYMMDD\")}T070000Z`;\n            recurrence.unshift(exdate);\n          }\n        }\n        value !== \"\" && selectedDays.push(value.substring(0, 2).toUpperCase());\n      }\n      rrule = rrule.concat(`;BYDAY=${selectedDays.toString()}`);\n    }\n\n    // If selected After, add COUNT to recurrence string\n    if (this.state.repeatRadio === \"After\")\n      rrule = rrule.concat(`;COUNT=${this.state.repeatOccurrence}`);\n\n    // If selected On, add UNTIL to recurrence string\n    if (this.state.repeatRadio === \"On\") {\n      let repeat_end_date = moment(this.state.repeatEndDate).add(1, \"days\");\n      rrule = rrule.concat(`;UNTIL=${repeat_end_date.format(\"YYYYMMDD\")}`);\n    }\n\n    recurrence.push(rrule);\n    console.log(\"recurrence\", recurrence);\n    return recurrence;\n  };\n\n  /*\n  calls the backend API to delete a item with a particular eventID\n  */\n\n  deleteSubmit = () => {\n    if (this.state.newEventID === \"\") {\n      return;\n    }\n    axios\n      .post(\"/deleteEvent\", {\n        ID: this.state.newEventID,\n      })\n      .then((response) => {\n        this.setState({\n          dayEventSelected: false,\n          showDeleteRecurringModal: false,\n        });\n        this.updateEventsArray();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  /*\n  createEvent:\n  Basically creates a new event based on details given\n  */\n  /*\n   * TODO: Replace formatting email with function\n   */\n  /*\n   * https://tools.ietf.org/html/rfc3696 for what is valid email addresses\n   *\n   * local-part@domain-part\n   * local-part: alphanumeric, symbols ! # $ % & ' * + - / = ?  ^ _ ` . { | } ~ with restriction no two . in a row\n   * localWord = [a-zA-Z!#$%&'*+\\-/=?^_`{|}~]+\n   * localPart = localWord (\\.localWord)*\n   * domain-part:\n   * domains: alphanumeric, symbol - with restriction - not at beginning or end\n   * dot separate domains, top level domain can have optional . at end\n   * domain = [a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?\n   * domainPart = domain(\\.domain)*\\.domain(\\.)?\n   * email: localPart@domainPart\n   */\n  //Note: This works, but does not email the guests that they are invited to the event\n  createEvent = (newTitle) => {\n    const guests = this.state.newEventGuests;\n    var formattedEmail = null;\n    const emailList = guests.match(\n      /[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*(\\.)?/g\n    );\n    if (emailList) {\n      formattedEmail = emailList.map((guests) => {\n        return {\n          email: guests,\n          responseStatus: \"needsAction\",\n        };\n      });\n    }\n\n    var minutesNotification = 30;\n    if (this.state.newEventNotification) {\n      minutesNotification = this.state.newEventNotification;\n    }\n\n    let event = {\n      summary: this.state.newEventName,\n      location: this.state.newEventLocation,\n      description: this.state.newEventDescription,\n      reminders: {\n        useDefault: false,\n        sequence: 0,\n        overrides: [\n          {\n            method: \"popup\",\n            minutes: minutesNotification,\n          },\n        ],\n      },\n      start: {\n        dateTime: this.state.newEventStart0.toISOString(),\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      },\n      end: {\n        dateTime: this.state.newEventEnd0.toISOString(),\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      },\n      recurrence: this.state.repeatOption && this.defineRecurrence(),\n      attendees: formattedEmail,\n    };\n    axios\n      .post(\"/createNewEvent\", {\n        newEvent: event,\n        reminderTime: minutesNotification,\n        title: newTitle,\n        start: this.state.newEventStart0.toISOString(),\n        end: this.state.newEventEnd0.toISOString(),\n      })\n      .then((response) => {\n        console.log(\"createnewevent\", response);\n        this.setState({\n          dayEventSelected: false,\n        });\n        this.updateEventsArray();\n      })\n      .catch(function (error) {\n        // console.log(error);\n      });\n  };\n\n  /*\n  handleModalClicked:\n  this will toggle show hide of the firebase modal currently\n  */\n  // handleModalClicked = arg => {\n  //   // bind with an arrow function\n  //   this.setState({\n  //     modelSelected: !this.state.modelSelected\n  //   });\n  // };\n\n  nextMonth = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).add(1, \"month\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        originalEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  prevMonth = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"month\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        originalEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  nextDay = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).add(1, \"day\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  prevDay = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"day\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  nextWeek = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).add(1, \"week\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  prevWeek = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"week\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  /*\n  updateEventsArray:\n  updates the array if the month view changes to a different month.\n  */\n\n  updateEventsArray = () => {\n    if (this.state.calendarView === \"Month\") {\n      //The month view has transferred to a different month\n      let startObject = this.state.dateContext.clone();\n      let endObject = this.state.dateContext.clone();\n      let startDay = startObject.startOf(\"month\");\n      let endDay = endObject.endOf(\"month\");\n      let startDate = new Date(startDay.format(\"MM/DD/YYYY\"));\n      let endDate = new Date(endDay.format(\"MM/DD/YYYY\"));\n      startDate.setHours(0, 0, 0);\n      endDate.setHours(23, 59, 59);\n      this.getEventsByInterval(startDate.toString(), endDate.toString());\n    } else if (this.state.calendarView === \"Day\") {\n      let startObject = this.state.dateContext.clone();\n      let endObject = this.state.dateContext.clone();\n      let startDay = startObject.startOf(\"day\");\n      let endDay = endObject.endOf(\"day\");\n      let startDate = new Date(startDay.format(\"MM/DD/YYYY\"));\n      let endDate = new Date(endDay.format(\"MM/DD/YYYY\"));\n      startDate.setHours(0, 0, 0);\n      endDate.setHours(23, 59, 59);\n      this.getEventsByIntervalDayVersion(\n        startDate.toString(),\n        endDate.toString()\n      );\n    } else if (this.state.calendarView === \"Week\") {\n      let startObject = this.state.dateContext.clone();\n      let endObject = this.state.dateContext.clone();\n      let startDay = startObject.startOf(\"week\");\n      let endDay = endObject.endOf(\"week\");\n      let startDate = new Date(startDay.format(\"MM/DD/YYYY\"));\n      let endDate = new Date(endDay.format(\"MM/DD/YYYY\"));\n      this.getEventsByIntervalWeekVersion(\n        startObject.toDate(),\n        endObject.toDate()\n      );\n    }\n  };\n\n  /*\n  openRepeatModal:\n  this will open repeat modal.\n  */\n  openRepeatModal = () => {\n    this.setState((prevState) => {\n      return { showRepeatModal: !prevState.showRepeatModal };\n    });\n  };\n\n  /*\n  closeRepeatModal:\n  this will close repeat modal.\n  */\n  closeRepeatModal = () => {\n    this.setState((prevState) => ({\n      showRepeatModal: false,\n      repeatInputValue_temp: prevState.repeatInputValue,\n      repeatOccurrence_temp: prevState.repeatOccurrence,\n      repeatDropDown_temp: prevState.repeatDropDown,\n      repeatRadio_temp: prevState.repeatRadio,\n      repeatEndDate_temp: prevState.repeatEndDate,\n      byDay_temp: prevState.byDay,\n    }));\n    if (\n      !this.state.repeatOption &&\n      this.state.repeatOptionDropDown === \"Custom...\"\n    ) {\n      this.setState({\n        repeatOptionDropDown: \"Does not repeat\",\n      });\n    }\n  };\n\n  /*\n  saveRepeatChanges:\n  this will close repeat modal.\n  */\n  saveRepeatChanges = () => {\n    const {\n      // repeatOptionDropDown,\n      repeatDropDown_temp,\n      repeatInputValue_temp,\n      repeatOccurrence_temp,\n      repeatRadio_temp,\n      repeatEndDate_temp,\n      byDay_temp,\n    } = this.state;\n\n    this.setState((prevState) => ({\n      showRepeatModal: false,\n      repeatOption: true,\n      repeatInputValue: prevState.repeatInputValue_temp,\n      repeatOccurrence: prevState.repeatOccurrence_temp,\n      repeatDropDown: prevState.repeatDropDown_temp,\n      repeatRadio: prevState.repeatRadio_temp,\n      repeatEndDate: prevState.repeatEndDate_temp,\n      byDay: prevState.byDay_temp,\n    }));\n\n    // If repeatDropDown_temp is DAY\n    if (repeatDropDown_temp === \"DAY\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Daily\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Daily, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Daily, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} days, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is WEEK\n    else if (repeatDropDown_temp === \"WEEK\") {\n      let selectedDays = [];\n      for (let [key, value] of Object.entries(byDay_temp)) {\n        value !== \"\" && selectedDays.push(value);\n      }\n      console.log(selectedDays, \"selectedDays week\");\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: \"Weekly on all days\",\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\", \")}`,\n            });\n          }\n        } else if (repeatRadio_temp === \"On\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Weekly on all days, until ${moment(\n                repeatEndDate_temp\n              ).format(\"LL\")}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\n                \", \"\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`,\n            });\n          }\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            if (selectedDays.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Weekly on all days, , ${repeatOccurrence_temp} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Weekly on ${selectedDays.join(\n                  \", \"\n                )}, ${repeatOccurrence_temp} times`,\n              });\n            }\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                \", \"\n              )}`,\n            });\n          }\n        } else if (repeatRadio_temp === \"On\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, until ${moment(\n                repeatEndDate_temp\n              ).format(\"LL\")}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                \", \"\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`,\n            });\n          }\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: \"Once\",\n            });\n          } else {\n            if (selectedDays.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, ${repeatOccurrence_temp} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                  \", \"\n                )}, ${repeatOccurrence_temp} times`,\n              });\n            }\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is MONTH\n    else if (repeatDropDown_temp === \"MONTH\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Monthly\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Monthly, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Monthly, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} months, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is YEAR\n    else if (repeatDropDown_temp === \"YEAR\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Annually\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Annually, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Annually, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} years, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n  };\n\n  hideNewAccountForm = () => {\n    this.setState({\n      showNewAccountmodal: false,\n    });\n  };\n\n  theNewUserAdded = () => {\n    this.setState(\n      {\n        showNewAccountmodal: false,\n      },\n      () => {\n        this.updateProfileFromFirebase();\n      }\n    );\n  };\n\n  hideAboutForm = (e) => {\n    this.setState({\n      showAboutModal: false,\n    });\n  };\n\n  updatePic = (name, url) => {\n    // this.updateProfileFromFirebase();\n    let index = null;\n    Object.keys(this.state.userIdAndNames).map(\n      (keyName, keyIndex) => {\n        if(keyName === this.state.currentUserId){\n            index = keyIndex;\n          }\n      }\n    );\n    // console.log(\"thissi the index \",index);\n    if(index !== null){\n      this.state.userPicsArray[index]= url;\n    }\n    \n    this.state.userIdAndNames[this.state.currentUserId] = name;\n    this.setState({\n      currentUserPicUrl: url,\n      currentUserName: name,\n    });\n  };\n\n  changeUser = (id, index, name) => {\n    this.setState(\n      {\n        currentUserPicUrl: this.state.userPicsArray[index],\n        currentUserName: name,\n        currentUserId: id,\n        showAboutModal: false,\n      },\n      () => {\n        this.grabFireBaseRoutinesGoalsData();\n      }\n    );\n  };\n\n  showDayViewOrAboutView = () => {\n    if (this.state.dayEventSelected) {\n      return this.eventFormAbstracted();\n    } else if (this.state.showAboutModal) {\n      return (\n        <AboutModal\n          CameBackFalse={this.hideAboutForm}\n          updateProfilePic={this.updatePic}\n          // {console.log(\"this is the id is it undefined at first\", )}\n          theCurrentUserId={this.state.currentUserId}\n        />\n      );\n    }\n  };\n\n  showCalendarView = () => {\n    if (this.state.calendarView === \"Month\") return this.calendarAbstracted();\n    else if (this.state.calendarView === \"Day\") return this.dayViewAbstracted();\n    else if (this.state.calendarView === \"Week\")\n      return this.weekViewAbstracted();\n  };\n\n  render() {\n    //The variable below will help decide whether to center the Calendar object or not\n    var onlyCal =\n      !this.state.showRoutineGoalModal &&\n      !this.state.showGoalModal &&\n      !this.state.showRoutineModal;\n    return (\n      //width and height is fixed now but should be by % percentage later on\n      <div\n        className=\"normalfancytext\"\n        style={{\n          marginLeft: \"0px\",\n          height: \"100%\",\n          width: \"2000px\",\n          // width: \"100%\",\n          // display: \"flex\",\n          // flexDirection: \"column\",\n          // justifyContent: \"center\",\n          // alignItems: \"center\",\n          // background: \"lightblue\",\n        }}\n      >\n        <div\n          style={{\n            margin: \"0\",\n            padding: \"0\",\n            width: \"100%\",\n          }}\n        >\n          <Row>\n            <Col xs={3}>\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row\">\n                <div\n                  style={{\n                    float: \"right\",\n                    width: \"80px\",\n                    height: \"70px\",\n                    marginLeft: \"50px\",\n                    marginTop: \"5px\",\n                  }}\n                >\n                  {this.state.currentUserPicUrl === \"\" ? (\n                    <FontAwesomeIcon\n                      icon={faImage}\n                      size=\"5x\"\n                      style={{ marginLeft: \"10px\" }}\n                    />\n                  ) : (\n                    <img\n                      style={{\n                        display: \"block\",\n\n                        // marginLeft: \"auto\",\n                        // marginRight: \"auto\",\n                        width: \"100%\",\n                        height: \"70px\",\n                      }}\n                      src={this.state.currentUserPicUrl}\n                      alt=\"Profile\"\n                    />\n                  )}\n                </div>\n                {this.state.enableNameDropDown === false ? (\n                  <DropdownButton\n                    style={{ display: \"inline-block\" }}\n                    title=\"\"\n                    disabled\n                  ></DropdownButton>\n                ) : (\n                  // {console.log(\"this is what suupose to be\",this.state.userNamesAndPics[Object.keys(this.state.userNamesAndPics)[0]])}\n                  <DropdownButton\n                    // class = \"dropdown-toggle.btn.btn-secondary\"\n                    variant=\"outline-primary\"\n                    // title={this.state.userNamesAndPics[Object.keys(this.state.userNamesAndPics)[0]] || ''}\n                    title={this.state.currentUserName || \"\"}\n                    style={{ marginTop: \"20px\", marginLeft: \"10px\" }}\n                  >\n                    {Object.keys(this.state.userIdAndNames).map(\n                      (keyName, keyIndex) => (\n                        // use keyName to get current key's name\n                        // and a[keyName] to get its value\n                        //keyName is the user id\n                        //keyIndex will help me find the user pic\n                        //this.state.userIdAndName[keyName] gives me the name of current user\n                        <Dropdown.Item\n                          key={keyName}\n                          onClick={(e) => {\n                            this.changeUser(\n                              keyName,\n                              keyIndex,\n                              this.state.userIdAndNames[keyName]\n                            );\n                          }}\n                        >\n                          {this.state.userIdAndNames[keyName] || \"\"}\n                        </Dropdown.Item>\n                      )\n                    )}\n                  </DropdownButton>\n                )}\n\n                {/* <div style={{ float: \"left\", width: \"227px\", height: \"50px\" }}>\n              {this.state.profileName === \"\" ? (\n                <p style={{ marginTop: \"30px\", marginLeft: \"10px\" }}>\n                  First Last\n                </p>\n              ) : (\n                <p style={{ marginTop: \"30px\", marginLeft: \"10px\" }}>\n                  {this.state.profileName}\n                </p>\n              )}\n            </div> */}\n              </Row>\n              <Row style={{ marginLeft: \"50px\" }} className=\"d-flex flex-row\">\n                <Button\n                  style={{ marginTop: \"10px\" }}\n                  onClick={(e) => {\n                    this.setState({ showNewAccountmodal: true });\n                  }}\n                >\n                  Create New User\n                </Button>\n\n                {/* <Col>\n            {this.state.showNewAccountmodal && <CreateNewAccountModal closeModal = {this.hideNewAccountForm}/>}\n            </Col> */}\n              </Row>\n            </Col>\n            {/* <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n              {this.state.showNewAccountmodal && (\n                <CreateNewAccountModal closeModal={this.hideNewAccountForm} />\n              )}\n            </Col>\n          </Row> */}\n            {/* </Col> */}\n            <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n              {this.state.showNewAccountmodal && (\n                <CreateNewAccountModal\n                  closeModal={this.hideNewAccountForm}\n                  newUserAdded={this.theNewUserAdded}\n                />\n              )}\n            </Col>\n          </Row>\n        </div>\n\n        <div\n          style={{\n            margin: \"0\",\n            padding: \"0\",\n            width: \"100%\",\n          }}\n        >\n          {this.abstractedMainEventGRShowButtons()}\n        </div>\n        <Container\n          fluid\n          style={{\n            marginTop: \"15px\",\n            marginLeft: \"0\",\n            // display: \"flex\",\n            // flexDirection: \"column\",\n            // justifyContent: \"center\",\n            // alignItems: \"center\",\n            // width: \"100%\"\n          }}\n        >\n          <Row\n            style={{\n              marginTop: \"0\",\n              // width: \"100%\",\n              // display: \"flex\",\n              // flexDirection: \"column\",\n              // justifyContent: \"center\"\n              // alignItems: \"center\"\n            }}\n          >\n            {/* the modal for routine/goal is called Firebasev2 currently */}\n            {/* {console.log(\"going into firevasev2 with currentID\",this.state.currentUserId  )}\n            {console.log(\"going is the goals and routins in main\",this.state.originalGoalsAndRoutineArr )} */}\n            {this.state.currentUserId !== \"\" && (\n              <Firebasev2\n                theCurrentUserID={this.state.currentUserId}\n                grabFireBaseRoutinesGoalsData={\n                  this.grabFireBaseRoutinesGoalsData\n                }\n                originalGoalsAndRoutineArr={\n                  this.state.originalGoalsAndRoutineArr\n                }\n                goals={this.state.goals}\n                routines={this.state.routines}\n                closeRoutineGoalModal={() => {\n                  this.setState({ showRoutineGoalModal: false });\n                }}\n                showRoutineGoalModal={this.state.showRoutineGoalModal}\n                closeGoal={() => {\n                  this.setState({ showGoalModal: false });\n                }}\n                closeRoutine={() => {\n                  this.setState({ showRoutineModal: false });\n                }}\n                showRoutine={this.state.showRoutineModal}\n                showGoal={this.state.showGoalModal}\n                // goals={this.state.goals}\n                // routines={this.state.routines}\n                todayDateObject={this.state.todayDateObject}\n                calendarView={this.state.calendarView}\n                dateContext={this.state.dateContext}\n              />\n            )}\n\n            <Col\n              sm=\"auto\"\n              md=\"auto\"\n              lg=\"auto\"\n              style={onlyCal ? { marginLeft: \"20%\" } : { marginLeft: \"35px\" }}\n            >\n              {this.showCalendarView()}\n              <div>V1.2</div>\n              <div\n                style={{ marginTop: \"50px\", textAlign: \"center\" }}\n                className=\"fancytext\"\n              >\n                Dedicated to Caitlin Little\n              </div>\n            </Col>\n            {/* <Col style={{ marginLeft: \"25px\" }}> */}\n            <Col>{this.showDayViewOrAboutView()}</Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n\n  dayViewAbstracted = () => {\n    return (\n      <div\n        style={{\n          borderRadius: \"20px\",\n          backgroundColor: \"white\",\n          width: \"100%\",\n          marginLeft: \"10px\",\n          padding: \"20px\",\n          // border:\"1px black solid\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <Container>\n          <Row style={{ marginTop: \"0px\" }}>\n            <Col>\n              <div>\n                <FontAwesomeIcon\n                  style={{ marginLeft: \"50%\" }}\n                  icon={faChevronLeft}\n                  size=\"2x\"\n                  className=\"X\"\n                  onClick={(e) => {\n                    this.prevDay();\n                  }}\n                />\n              </div>\n            </Col>\n            <Col\n              md=\"auto\"\n              style={{ textAlign: \"center\" }}\n              className=\"bigfancytext\"\n            >\n              <p>\n                {\" \"}\n                {this.state.dateContext.format(\"dddd\")} {this.getDay()}{\" \"}\n                {this.getMonth()} {this.getYear()}{\" \"}\n              </p>\n            </Col>\n            <Col>\n              <FontAwesomeIcon\n                style={{ marginLeft: \"50%\" }}\n                icon={faChevronRight}\n                size=\"2x\"\n                className=\"X\"\n                onClick={(e) => {\n                  this.nextDay();\n                }}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <Row>\n          {/* {console.log(\"these are the events that are going to be passed in\", this.state.dayEvents)} */}\n          <DayEvents\n            dateContext={this.state.dateContext}\n            eventClickDayView={this.handleDayEventClick}\n            handleDateClick={this.handleDateClickOnDayView}\n            dayEvents={this.state.dayEvents}\n            getEventsByInterval={this.getEventsByIntervalDayVersion}\n          />\n          <DayRoutines\n            routines={this.state.routines}\n            dayRoutineClick={this.toggleShowRoutine}\n          />\n          <DayGoals\n            goals={this.state.goals}\n            dayGoalClick={this.toggleShowGoal}\n          />\n        </Row>\n      </div>\n    );\n  };\n\n  weekViewAbstracted = () => {\n    let startObject = this.state.dateContext.clone();\n    let startWeek = startObject.startOf(\"week\");\n    return (\n      <div\n        style={{\n          borderRadius: \"20px\",\n          backgroundColor: \"white\",\n          width: \"100%\",\n          marginLeft: \"10px\",\n          padding: \"20px\",\n          // border:\"1px black solid\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <Container>\n          <Container>\n            <Row style={{ marginTop: \"0px\" }}>\n              <Col>\n                <div>\n                  <FontAwesomeIcon\n                    style={{ marginLeft: \"50%\" }}\n                    icon={faChevronLeft}\n                    size=\"2x\"\n                    className=\"X\"\n                    onClick={(e) => {\n                      this.prevWeek();\n                    }}\n                  />\n                </div>\n              </Col>\n              <Col\n                md=\"auto\"\n                style={{ textAlign: \"center\" }}\n                className=\"bigfancytext\"\n              >\n                <p> Week of {startWeek.format(\"D MMMM YYYY\")} </p>\n              </Col>\n              <Col>\n                <FontAwesomeIcon\n                  style={{ marginLeft: \"50%\" }}\n                  icon={faChevronRight}\n                  size=\"2x\"\n                  className=\"X\"\n                  onClick={(e) => {\n                    this.nextWeek();\n                  }}\n                />\n              </Col>\n            </Row>\n          </Container>\n          <Row>\n            <WeekEvents\n              weekEvents={this.state.weekEvents}\n              dateContext={this.state.dateContext}\n              eventClick={this.handleWeekEventClick}\n              onDayClick={this.handleDateClickOnWeekView}\n            />\n          </Row>\n          <Row>\n            <WeekGoals goals={this.state.goals} />\n          </Row>\n          <Row>\n            <WeekRoutines routines={this.state.routines} />\n          </Row>\n        </Container>\n      </div>\n    );\n  };\n\n  toggleShowRoutine = () => {\n    this.setState({\n      showRoutineModal: !this.state.showRoutineModal,\n      showGoalModal: false,\n      showRoutineGoalModal: false,\n    });\n  };\n\n  toggleShowGoal = () => {\n    this.setState({\n      showGoalModal: !this.state.showGoalModal,\n      showRoutineModal: false,\n      showRoutineGoalModal: false,\n    });\n  };\n\n  showEventsFormbyCreateNewEventButton = () => {\n    var newStart, newEnd;\n    if (this.state.calendarView === \"Month\") {\n      newStart = new Date();\n      newStart.setHours(0, 0, 0, 0);\n      newEnd = new Date();\n      newEnd.setHours(23, 59, 59, 59);\n    } else if (this.state.calendarView === \"Day\") {\n      newStart = new Date(this.state.dateContext.toDate());\n      newStart.setHours(0, 0, 0, 0);\n      newEnd = new Date(this.state.dateContext.toDate());\n      newEnd.setHours(23, 59, 59, 59);\n    }\n\n    this.setState({\n      newEventID: \"\",\n      newEventStart0: newStart,\n      newEventEnd0: newEnd,\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventDescription: \"\",\n      dayEventSelected: true,\n      isEvent: false,\n    });\n  };\n\n  changeCalendarView = (view) => {\n    this.setState(\n      {\n        calendarView: view,\n      },\n      this.updateEventsArray\n    );\n  };\n\n  abstractedMainEventGRShowButtons = () => {\n    // Redefine the width of those buttons; Should fix to be 100% and make\n    // enclosing div to be based on % and not 2000px\n\n    return (\n      // <Row>\n\n      <Row\n        style={{\n          display: \"block\",\n          textAlign: \"center\",\n          fontSize: \"20px\",\n          paddingRight: \"170px\",\n          // display: \"flex\",\n          // justifyContent: \"center\",\n          // alignItems: \"center\"\n        }}\n      >\n        <div\n          style={{\n            display: \"inline-block\",\n            margin: \"10px\",\n            marginBottom: \"0\",\n            marginTop: \"10px\",\n          }}\n        >\n          <DropdownButton\n            style={{ top: \"5px\" }}\n            title={this.state.calendarView}\n          >\n            <Dropdown.Item\n              onClick={(e) => {\n                this.changeCalendarView(\"Day\");\n              }}\n            >\n              {\" \"}\n              Day{\" \"}\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={(e) => {\n                this.changeCalendarView(\"Week\");\n              }}\n            >\n              {\" \"}\n              Week{\" \"}\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={(e) => {\n                this.changeCalendarView(\"Month\");\n              }}\n            >\n              {\" \"}\n              Month{\" \"}\n            </Dropdown.Item>\n          </DropdownButton>\n        </div>\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState(\n              {\n                dateContext: moment(),\n              },\n              this.updateEventsArray\n            );\n          }}\n        >\n          Today\n        </Button>\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState(\n              {\n                showAboutModal: false,\n                // dayEventSelected: !this.state.dayEventSelected\n              },\n              () => {\n                this.showEventsFormbyCreateNewEventButton();\n              }\n            );\n          }}\n        >\n          New Event\n        </Button>\n\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={this.toggleShowRoutine}\n        >\n          Routines\n        </Button>\n\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={this.toggleShowGoal}\n        >\n          {\" \"}\n          Goals{\" \"}\n        </Button>\n\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState({\n              showRoutineGoalModal: !this.state.showRoutineGoalModal,\n              showGoalModal: false,\n              showRoutineModal: false,\n            });\n          }}\n        >\n          Current Status\n        </Button>\n        <Button\n          style={{\n            display: \"inline-block\",\n            margin: \"10px\",\n            marginBottom: \"0\",\n            // marginRight: \"200px\",\n          }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState({\n              showAboutModal: !this.state.showAboutModal,\n              dayEventSelected: false,\n            });\n          }}\n        >\n          About\n        </Button>\n      </Row>\n    );\n  };\n\n  calendarAbstracted = () => {\n    return (\n      <div\n        style={{\n          borderRadius: \"2%\",\n          backgroundColor: \"white\",\n          width: \"1000px\",\n          // marginLeft: \"10px\",\n          padding: \"45px\",\n          paddingBottom: \"10px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <div>\n          <Row style={{ marginTop: \"0px\" }}>\n            <Col>\n              <div>\n                <FontAwesomeIcon\n                  style={{ marginLeft: \"50%\" }}\n                  icon={faChevronLeft}\n                  size=\"2x\"\n                  className=\"X\"\n                  onClick={(e) => {\n                    this.prevMonth();\n                  }}\n                />\n              </div>\n            </Col>\n            <Col style={{ textAlign: \"center\" }} className=\"bigfancytext\">\n              <p>\n                {this.getMonth()} {this.getYear()}\n              </p>\n            </Col>\n            <Col>\n              <FontAwesomeIcon\n                style={{ marginLeft: \"50%\" }}\n                icon={faChevronRight}\n                size=\"2x\"\n                className=\"X\"\n                onClick={(e) => {\n                  this.nextMonth();\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n        <TylersCalendarv1\n          eventClick={this.handleEventClick}\n          handleDateClick={this.handleDateClick}\n          handleExpandClick={this.handleExpandClick}\n          originalEvents={this.state.originalEvents}\n          dateObject={this.state.todayDateObject}\n          today={this.state.today}\n          dateContext={this.state.dateContext}\n          // selectedDay={this.state.selectedDay}\n        />\n      </div>\n    );\n  };\n\n  /**\n   * This is where the event form is made\n   *\n   */\n  eventFormAbstracted = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n          marginLeft: \"35px\",\n          width: \"350px\",\n          marginTop: \"0\",\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({\n              dayEventSelected: false,\n              repeatOptionDropDown: \"Does not repeat\",\n            });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Event Form</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {\n            this.state.showRepeatModal && this.repeatModal()\n            // <RepeatModal\n            //   closeRepeatModal={this.closeRepeatModal}\n            //   todayObject={this.state.todayDateObject}\n            //   newEventStart0={this.state.newEventStart0}\n            // />\n          }\n          {this.state.showDeleteRecurringModal && this.deleteRecurringModal()}\n          {this.state.showEditRecurringModal && this.editRecurringModal()}\n          {this.eventFormInputArea()}\n        </Modal.Body>\n        <Modal.Footer>\n          <Container fluid>\n            <Row>\n              <Col style={{ float: \"right\", marginBottom: \"10px\" }}>\n                <Button\n                  variant=\"outline-primary\"\n                  onClick={() => {\n                    this.openRepeatModal();\n                    console.log(\"repeating\", this.state.newEventStart0);\n                  }}\n                >\n                  Repeating Options\n                </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col style={this.state.isEvent ? { display: \"none\" } : {}} xs={4}>\n                <Button\n                  onClick={this.handleSubmit}\n                  variant=\"info\"\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </Col>\n              <Col\n                style={\n                  this.state.isEvent\n                    ? { marginTop: \"0px\" }\n                    : { display: \"none\" }\n                }\n                xs={4}\n              >\n                <Button\n                  onClick={(e) =>\n                    this.state.newEventRecurringID\n                      ? this.openEditRecurringModal()\n                      : this.updateEventClick(e)\n                  }\n                  className=\"btn btn-info\"\n                >\n                  Update\n                </Button>\n              </Col>\n              <Col xs={4}>\n                <Button variant=\"secondary\" onClick={this.hideEventForm}>\n                  Cancel\n                </Button>\n              </Col>\n              <Col xs={4}>\n                <Button\n                  style={this.state.isEvent ? {} : { display: \"none\" }}\n                  variant=\"danger\"\n                  onClick={() =>\n                    this.state.newEventRecurringID\n                      ? this.openDeleteRecurringModal()\n                      : this.deleteSubmit()\n                  }\n                >\n                  {\" \"}\n                  Delete\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  repeatModal = () => {\n    // const [title, setTitle] = useState(\"DAY\");\n    // const [monthly, setMonthly] = useState(\"Monthly on day 13\");\n    // const [endDate, setEndDate] = useState(this.state.newEventStart0);\n    // const [inputValue, setInputValue] = useState(1);\n\n    // this.state.repeatEndDate = this.state.newEventStart0;\n\n    const week_days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    const d = new Date();\n\n    // Custom styles\n    const modalStyle = {\n      position: \"absolute\",\n      zIndex: \"5\",\n      left: \"50%\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"400px\",\n    };\n\n    const inputStyle = {\n      padding: \"8px 5px 8px 15px\",\n      marginLeft: \"8px\",\n      background: \"#F8F9FA\",\n      border: \"none\",\n      width: \"70px\",\n      borderRadius: \"4px\",\n      marginRight: \"8px\",\n    };\n\n    const selectStyle = {\n      display: \"inline-block\",\n    };\n\n    const weekStyle = {\n      display: \"flex\",\n      alignItems: \"center\",\n      textAlign: \"center\",\n      marginTop: \"10px\",\n    };\n\n    // const radioInputStyle = { display: \"flex\", alignItems: \"center\" };\n\n    // onClick event handler for the circles\n    const selectedDot = (e, index) => {\n      let curClass = e.target.classList;\n      if (curClass.contains(\"selected\")) {\n        curClass.remove(\"selected\");\n        const newByDay = { ...this.state.byDay_temp, [index]: \"\" };\n        this.setState({\n          byDay_temp: newByDay,\n        });\n      } else {\n        curClass.add(\"selected\");\n        const newByDay = {\n          ...this.state.byDay_temp,\n          [index]: week_days[index],\n        };\n        this.setState({\n          byDay_temp: newByDay,\n        });\n      }\n    };\n\n    let selectedDays = [];\n    for (let [key, value] of Object.entries(this.state.byDay_temp)) {\n      if (value !== \"\") selectedDays.push(key);\n    }\n    // If selected repeat every week, the following shows.\n    const weekSelected = (\n      <>\n        Repeat On\n        <div style={weekStyle}>\n          {week_days.map((day, i) => {\n            if (selectedDays.includes(i.toString())) {\n              return (\n                <span\n                  key={i}\n                  className=\"dot selected\"\n                  onClick={(e) => selectedDot(e, i)}\n                >\n                  {day.charAt(0)}\n                </span>\n              );\n            } else {\n              return (\n                <span\n                  key={i}\n                  className=\"dot\"\n                  onClick={(e) => selectedDot(e, i)}\n                >\n                  {day.charAt(0)}\n                </span>\n              );\n            }\n          })}\n        </div>\n      </>\n    );\n\n    // If selected repeat every month, the following shows.\n    // const monthSelected = (\n    //   <DropdownButton\n    //     title={this.state.repeatMonthlyDropDown}\n    //     variant=\"light\"\n    //     style={{ marginTop: \"20px\" }}\n    //   >\n    //     <Dropdown.Item\n    //       eventKey=\"Monthly on day 13\"\n    //       onSelect={eventKey => this.handleRepeatMonthlyDropDown(eventKey)}\n    //     >\n    //       Monthly on day 13\n    //     </Dropdown.Item>\n    //     <Dropdown.Item\n    //       eventKey=\"Monthly on the second Friday\"\n    //       onSelect={eventKey => this.handleRepeatMonthlyDropDown(eventKey)}\n    //     >\n    //       Monthly on the second Friday\n    //     </Dropdown.Item>\n    //   </DropdownButton>\n    // );\n\n    return (\n      <Modal.Dialog style={modalStyle}>\n        <Modal.Header closeButton onHide={this.closeRepeatModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Repeating Options test</h5>\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            <Form.Group\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginLeft: \"5px\",\n              }}\n            >\n              Repeat every\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"10000\"\n                value={this.state.repeatInputValue_temp}\n                style={inputStyle}\n                onChange={(e) => this.handleRepeatInputValue(e.target.value)}\n              />\n              <DropdownButton\n                title={this.state.repeatDropDown_temp}\n                style={selectStyle}\n                variant=\"light\"\n              >\n                <Dropdown.Item\n                  eventKey=\"DAY\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  day\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"WEEK\"\n                  onSelect={(eventKey) =>\n                    this.handleRepeatDropDown(eventKey, week_days)\n                  }\n                >\n                  week\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"MONTH\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  month\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"YEAR\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  year\n                </Dropdown.Item>\n              </DropdownButton>\n            </Form.Group>\n            <Form.Group style={{ marginLeft: \"5px\" }}>\n              {this.state.repeatDropDown_temp === \"WEEK\" && weekSelected}\n            </Form.Group>\n            {/* {this.state.repeatDropDown === \"MONTH\" && monthSelected} */}\n            <Form.Group\n              style={{\n                height: \"140px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n                marginTop: \"20px\",\n                marginLeft: \"5px\",\n              }}\n              className=\"repeat-form\"\n              onChange={(e) => {\n                if (e.target.type === \"radio\") {\n                  this.setState({\n                    repeatRadio_temp: e.target.value,\n                  });\n                }\n              }}\n            >\n              Ends\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"Never\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"Never\" && true\n                    }\n                  />\n                  Never\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    name=\"radios\"\n                    value=\"On\"\n                    style={{ marginTop: \"10px\" }}\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"On\" && true\n                    }\n                  />\n                  Until\n                  <DatePicker\n                    className=\"date-picker-btn btn btn-light\"\n                    selected={this.state.repeatEndDate_temp}\n                    onChange={(date) => this.handleRepeatEndDate(date)}\n                  ></DatePicker>\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    name=\"radios\"\n                    value=\"After\"\n                    style={{ marginTop: \"12px\" }}\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"After\" && true\n                    }\n                  />\n                  After\n                  <span style={{ marginLeft: \"60px\" }}>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"10000\"\n                      value={this.state.repeatOccurrence_temp}\n                      onChange={(e) =>\n                        this.handleRepeatOccurrence(e.target.value)\n                      }\n                      style={inputStyle}\n                      className=\"input-exception\"\n                    />\n                    occurrence\n                  </span>\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeRepeatModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={this.saveRepeatChanges}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  openEditRecurringModal = () => {\n    console.log(\"openeditrecurringmodal called\");\n    this.setState((prevState) => {\n      return { showEditRecurringModal: !prevState.showEditRecurringModal };\n    });\n  };\n\n  closeEditRecurringModal = () => {\n    this.setState({\n      showEditRecurringModal: false,\n    });\n  };\n\n  openDeleteRecurringModal = () => {\n    console.log(\"opendeleterecurringmodal called\");\n    this.setState((prevState) => {\n      return { showDeleteRecurringModal: !prevState.showDeleteRecurringModal };\n    });\n  };\n\n  closeDeleteRecurringModal = () => {\n    this.setState({\n      showDeleteRecurringModal: false,\n    });\n    // if (!this.state.repeatOption) {\n    //   this.setState({\n    //     repeatOptionDropDown: \"Does not repeat\",\n    //   });\n    // }\n  };\n\n  deleteRecurring = async () => {\n    const {\n      deleteRecurringOption,\n      newEventRecurringID,\n      newEventStart0,\n      recurrenceRule,\n    } = this.state;\n    if (deleteRecurringOption === \"This event\") {\n      this.deleteSubmit();\n    } else if (deleteRecurringOption === \"This and following events\") {\n      let untilSubString = \"\";\n      let untilIndex = recurrenceRule.indexOf(\"UNTIL\");\n      if (untilIndex !== -1) {\n        untilSubString = recurrenceRule.substring(untilIndex);\n      }\n      if (untilSubString.includes(\";\")) {\n        let endUntilIndex = untilSubString.indexOf(\";\");\n        untilSubString = untilSubString.substring(6, endUntilIndex);\n      } else if (untilSubString) {\n        untilSubString = untilSubString = untilSubString.substring(6);\n      }\n      await axios\n        .get(\"/getRecurringEventInstances\", {\n          params: {\n            recurringEventId: newEventRecurringID,\n            timeMin: newEventStart0,\n            timeMax: moment(untilSubString).toISOString(),\n          },\n        })\n        .then((res) => {\n          console.log(res.data, \"deleterecurring\");\n          axios\n            .delete(\"/deleteRecurringEvent\", {\n              params: {\n                array: res.data,\n              },\n            })\n            .then((res) => {\n              this.setState({\n                dayEventSelected: false,\n                showDeleteRecurringModal: false,\n              });\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n        });\n      this.updateEventsArray();\n      // axios\n      //   .delete(\"/\")\n      // axios\n      // .post(\"/deleteEvent\", {\n      //   ID: this.state.newEventID,\n      // })\n      // .then((response) => {\n      //   this.setState({\n      //     dayEventSelected: false,\n      //   });\n      //   this.updateEventsArray();\n      // })\n      // .catch(function (error) {\n      //   console.log(error);\n      // });\n    } else if (deleteRecurringOption === \"All events\") {\n      axios\n        .post(\"/deleteEvent\", {\n          ID: newEventRecurringID,\n        })\n        .then((response) => {\n          this.setState({\n            dayEventSelected: false,\n            showDeleteRecurringModal: false,\n          });\n          this.updateEventsArray();\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  editRecurringModal = () => {\n    const modalStyle = {\n      position: \"absolute\",\n      left: \"50%\",\n      zIndex: \"5\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"400px\",\n    };\n\n    return (\n      <Modal.Dialog style={modalStyle}>\n        <Modal.Header closeButton onHide={this.closeEditRecurringModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Edit Recurring Event</h5>\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body\n          style={{\n            // padding: \"85px 0\",\n            height: \"250px\",\n            margin: \"auto\",\n          }}\n        >\n          <Form\n            style={{\n              height: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Form.Group\n              style={{\n                height: \"60%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-around\",\n              }}\n              className=\"delete-repeat-form\"\n              onChange={(e) => {\n                if (e.target.type === \"radio\") {\n                  this.setState({\n                    editRecurringOption: e.target.value,\n                  });\n                }\n              }}\n            >\n              {this.state.newEvent.summary !== this.state.newEventName &&\n                !this.state.repeatOption && (\n                  <Form.Check type=\"radio\">\n                    <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                      <Form.Check.Input\n                        type=\"radio\"\n                        value=\"This event\"\n                        name=\"radios\"\n                        defaultChecked={\n                          this.state.editRecurringOption === \"This event\" &&\n                          true\n                        }\n                      />\n                      This event\n                    </Form.Check.Label>\n                  </Form.Check>\n                )}\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"This and following events\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.editRecurringOption ===\n                        \"This and following events\" && true\n                    }\n                  />\n                  This and following events\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"All events\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.editRecurringOption === \"All events\" && true\n                    }\n                  />\n                  All events\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeEditRecurringModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={this.updateEventClick}>\n            OK\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  deleteRecurringModal = () => {\n    const modalStyle = {\n      position: \"absolute\",\n      left: \"50%\",\n      zIndex: \"5\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"400px\",\n    };\n\n    return (\n      <Modal.Dialog style={modalStyle}>\n        <Modal.Header closeButton onHide={this.closeDeleteRecurringModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Delete Recurring Event</h5>\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body\n          style={{\n            // padding: \"85px 0\",\n            height: \"250px\",\n            margin: \"auto\",\n          }}\n        >\n          <Form\n            style={{\n              height: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Form.Group\n              style={{\n                height: \"60%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-around\",\n              }}\n              className=\"delete-repeat-form\"\n              onChange={(e) => {\n                if (e.target.type === \"radio\") {\n                  this.setState({\n                    deleteRecurringOption: e.target.value,\n                  });\n                }\n              }}\n            >\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"This event\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.deleteRecurringOption === \"This event\" && true\n                    }\n                  />\n                  This event\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"This and following events\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.deleteRecurringOption ===\n                        \"This and following events\" && true\n                    }\n                  />\n                  This and following events\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"All events\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.deleteRecurringOption === \"All events\" && true\n                    }\n                  />\n                  All events\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeDeleteRecurringModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={this.deleteRecurring}>\n            OK\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  eventFormInputArea = () => {\n    return (\n      <Form>\n        <Row>\n          <Col>\n            <div style={{ width: \"300px\" }}>\n              <Form.Group>\n                <Form.Label>Event Name</Form.Label>\n                <Form.Control\n                  value={this.state.newEventName}\n                  onChange={this.handleNameChange}\n                  type=\"text\"\n                  placeholder=\"Title\"\n                />\n                <div style={{ color: \"red\" }}>\n                  {\" \"}\n                  {this.state.showNoTitleError}\n                </div>\n              </Form.Group>\n              <Form.Group value={this.state.newEventStart0} controlId=\"Y\">\n                <Form.Label>Start Time</Form.Label> <br />\n                {this.startTimePicker()}\n              </Form.Group>\n              <Form.Group value={this.state.newEventEnd0} controlId=\"X\">\n                <Form.Label>End Time</Form.Label>\n                <br />\n                {this.endTimePicker()}\n                <div style={{ color: \"red\" }}> {this.state.showDateError}</div>\n              </Form.Group>\n              <Form.Group style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <Form.Label>Repeating Options</Form.Label>\n                <DropdownButton\n                  className=\"repeatOptionDropDown\"\n                  // onClick={this.openRepeatModal}\n                  title={this.state.repeatOptionDropDown}\n                  variant=\"light\"\n                >\n                  <Dropdown.Item\n                    eventKey=\"Does not repeat\"\n                    onSelect={(eventKey) =>\n                      this.setState({\n                        repeatOptionDropDown: eventKey,\n                        repeatOption: false,\n                      })\n                    }\n                  >\n                    Does not repeat\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    eventKey=\"Custom...\"\n                    onSelect={(eventKey) => {\n                      this.openRepeatModal();\n                      // this.setState({ repeatOptionDropDown: eventKey });\n                    }}\n                  >\n                    Custom...\n                  </Dropdown.Item>\n                </DropdownButton>\n              </Form.Group>\n              <Form.Group value={\"Extra Slot\"}>\n                <Form.Label>Guests</Form.Label>\n                <Form.Control\n                  value={this.state.newEventGuests}\n                  onChange={this.handleGuestChange}\n                  type=\"email\"\n                  placeholder=\"example@gmail.com\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"Location\">\n                <Form.Label>Location:</Form.Label>\n                <Form.Control\n                  value={this.state.newEventLocation}\n                  onChange={this.handleLocationChange}\n                  type=\"text\"\n                  placeholder=\"Location\"\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Notifications:</Form.Label>\n                <Row>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Control\n                      // value={this.state.newEventNotification}\n                      // onChange={this.handleNotificationChange}\n                      type=\"number\"\n                      placeholder=\"5\"\n                      style={{ width: \"70px\", marginTop: \".25rem\" }}\n                    />\n                  </Col>\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}>\n                      {\" \"}\n                      Min Before Start Time\n                    </Form.Text>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"15px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Control\n                      // value={this.state.newEventNotification}\n                      // onChange={this.handleNotificationChange}\n                      type=\"number\"\n                      placeholder=\"30\"\n                      style={{ width: \"70px\", marginTop: \".25rem\" }}\n                    />\n                  </Col>\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}>\n                      {\" \"}\n                      Min After Start Time\n                    </Form.Text>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"15px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Control\n                      // value={this.state.newEventNotification}\n                      // onChange={this.handleNotificationChange}\n                      type=\"number\"\n                      placeholder=\"5\"\n                      style={{ width: \"70px\", marginTop: \".25rem\" }}\n                    />\n                  </Col>\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}>\n                      {\" \"}\n                      Min After End Time\n                    </Form.Text>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"15px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group controlId=\"Description\">\n                <Form.Label>Description:</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  value={this.state.newEventDescription}\n                  onChange={this.handleDescriptionChange}\n                  type=\"text\"\n                  placeholder=\"Description\"\n                />\n              </Form.Group>\n            </div>\n          </Col>\n        </Row>\n      </Form>\n    );\n  };\n\n  startTimePicker = () => {\n    // const [startDate, setStartDate] = useState(new Date());\n    return (\n      <DatePicker\n        className=\"form-control\"\n        type=\"text\"\n        selected={this.state.newEventStart0}\n        onChange={(date) => {\n          this.setState(\n            {\n              newEventStart0: date,\n            },\n            () => {\n              console.log(\"starttimepicker\", this.state.newEventStart0);\n            }\n          );\n        }}\n        showTimeSelect\n        timeIntervals={15}\n        timeCaption=\"time\"\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\n      />\n    );\n  };\n\n  endTimePicker = () => {\n    // const [startDate, setStartDate] = useState(new Date());\n    return (\n      <DatePicker\n        className=\"form-control\"\n        type=\"text\"\n        style={{ width: \"100%\" }}\n        selected={this.state.newEventEnd0}\n        onChange={(date) => {\n          this.setState(\n            {\n              newEventEnd0: date,\n            },\n            () => {\n              console.log(this.state.newEventEnd0);\n            }\n          );\n        }}\n        showTimeSelect\n        timeIntervals={15}\n        timeCaption=\"time\"\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\n      />\n    );\n  };\n  /*\n  getYear:\n  returns the year based on year format\n  */\n  getYear = () => {\n    return this.state.dateContext.format(\"Y\");\n  };\n\n  /*\n  getMonth:\n  returns the month based on the month of the dateContext\n  in english word form\n  */\n  getMonth = () => {\n    return this.state.dateContext.format(\"MMMM\");\n  };\n\n  getDay = () => {\n    return this.state.dateContext.format(\"D\");\n  };\n\n  /*\n  hideEventForm:\n  Hides the create/edit events form when a date or event is clicked\n  */\n  hideEventForm = (e) => {\n    //console.log(\"Tyler says: Hello\");\n    this.setState({\n      dayEventSelected: false,\n      repeatOptionDropDown: \"Does not repeat\",\n    });\n  };\n\n  /*\nAll functions below will change a variables\nwhen there is a change in the event form\n*/\n\n  handleNameChange = (event) => {\n    this.setState({ newEventName: event.target.value });\n  };\n\n  handleGuestChange = (event) => {\n    this.setState({ newEventGuests: event.target.value });\n  };\n\n  handleLocationChange = (event) => {\n    this.setState({ newEventLocation: event.target.value });\n  };\n\n  handleNotificationChange = (event) => {\n    this.setState({ newEventNotification: event.target.value });\n  };\n\n  handleDescriptionChange = (event) => {\n    this.setState({ newEventDescription: event.target.value });\n  };\n\n  /*\n  *\n  getEvents:\n  this essentially gets the events data from google calendar and puts it\n  into the proper state variables. Currently the parsed data for full calendar\n  is used but the unfiltered data from google calendar API is not used but\n  in case we do need it, it's saved in this.state.originalEvents\n  *\n  *\n  */\n  getEventsByInterval = (start0, end0) => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {\n          start: start0,\n          end: end0,\n        },\n      })\n      .then((response) => {\n        var events = response.data;\n        this.setState(\n          {\n            newEventID: \"\",\n            newEventName: \"\",\n            // newEventStart: \"\",\n            // newEventEnd: \"\",\n            originalEvents: events,\n          },\n          () => {\n            console.log(\"New Events Arrived\", events);\n          }\n        );\n      })\n      .catch((error) => {\n        console.log(\"Error Occurred \" + error);\n      });\n  };\n\n  /*\n   * getEventsByIntervalDayVersion:\n   * gets exactly the days worth of events from the google calendar\n   */\n  getEventsByIntervalDayVersion = (startDate, endDate) => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {\n          start: startDate.toString(),\n          end: endDate.toString(),\n          timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n        },\n      })\n      .then((response) => {\n        console.log(\"what are the events\", response.data);\n        var events = response.data;\n        // events.map((event) => {\n        //   console.log(new Date(event.start.dateTime).getHours());\n        //   event.start.dateTime = new Date(event.start.dateTime);\n        //   event.end.dateTime = new Date(event.end.dateTime);\n        // });\n        this.setState(\n          {\n            dayEvents: events,\n          },\n          () => {\n            console.log(\"New Events Arrived\", events);\n            console.log(\"test time\", this.state.dateContext);\n          }\n        );\n      })\n      .catch((error) => {\n        console.log(\"Error Occurred \" + error);\n      });\n  };\n\n  //Get and store events by week, take first and last day of the week as parameters as date object\n  getEventsByIntervalWeekVersion = (start0, end0) => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {\n          start: start0,\n          end: end0,\n        },\n      })\n      .then((response) => {\n        var events = response.data;\n        this.setState(\n          {\n            weekEvents: events,\n          }\n          // () => {\n          //   console.log(\"New Events Arrived\");\n          //   console.log(this.state.weekEvents)\n          // }\n        );\n      })\n      .catch((error) => {\n        console.log(\"Error Occurred \" + error);\n      });\n  };\n}\n","import React, { Component } from \"react\";\n\n// import { BrowserRouter as Router } from \"react-router-dom\";\n\nimport MainPage from \"./components/Main.jsx\";\n// import Header from './components/Header.jsx'\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        {/* <header className=\"App-header\"> */}\n        {/* <Router> */}\n        {/* <Header /> */}\n        {/* <div> */}\n        <MainPage />\n        {/* </div> */}\n\n        {/* </Router> */}\n        {/* </ header> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n<BrowserRouter>\n\t<App />\n\t</BrowserRouter>\n, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}