{"version":3,"sources":["components/firebase.js","components/ShowNotifications.jsx","components/addNewGRItem.jsx","components/addNewATItem.jsx","components/addNewISItem.jsx","components/DeleteISItem.jsx","components/deleteAT.jsx","components/deleteGR.jsx","components/editGR.jsx","components/editIS.jsx","components/EditAT.jsx","components/ShowATList.jsx","components/ShowISList.jsx","components/Firebasev2.jsx","components/TCal.jsx","components/DayRoutines.jsx","components/DayGoals.jsx","components/DayEvents.jsx","components/WeekEvents.jsx","components/WeekRoutines.jsx","components/WeekGoals.jsx","components/AddNewPeople.jsx","components/AboutModal.jsx","components/Main.jsx","App.js","registerServiceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","signInAnonymously","catch","error","code","message","storage","ShowNotifications","props","convertTimeToHRMMSS","e","hours","target","value","rhours","Math","floor","minutes","rminutes","round","toString","length","convertToMinutes","myStr","myStr2","split","hrToMin","state","Form","Group","controlId","Row","Col","style","paddingRight","Control","type","placeholder","width","marginTop","this","itemToEditPassedIn","ta_notifications","before","time","onChange","stopPropagation","temp","user_notifications","notificationChange","xs","paddingLeft","Text","fontSize","Check","Input","height","checked","is_enabled","as","rows","marginLeft","preventDefault","onKeyDown","keyCode","during","after","React","Component","AddNewGRItem","grArr","itemToEdit","title","id","is_persistent","isRoutine","photo","is_complete","is_available","available_end_time","available_start_time","datetime_completed","datetime_started","audio","is_timed","expected_completion_time","is_sublist_available","is_set","routineDocsPath","firestore","collection","doc","arrPath","getGRDataFromFB","console","log","get","then","exists","x","data","setState","alert","newInputSubmit","addNewDoc","add","ref","newArr","ATArray","push","updateEntireArray","update","refresh","handleNotificationChange","Modal","Dialog","Header","closeButton","onHide","closeModal","Title","className","Body","name","Footer","Button","variant","onClick","AddNewATItem","ATItem","fbPath","hideNewATModal","newActionTitle","AddNewISItem","atArr","newInstructionTitle","handleInputChange","ISArray","ISItem","hideNewISModal","pop","DeleteISItem","submitRequest","items","i","deleteIndex","slice","concat","confirmation","window","confirm","onMouseOver","event","color","onMouseOut","marginRight","icon","faTrashAlt","size","deleteAT","tempdeleteArrPortion","Array","Data","Item","path","param","headers","body","JSON","stringify","method","fetch","response","json","result","deleteArrPortion","res","deleteGR","Path","editGR","FBPath","showEditModal","startTimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","selected","Date","date","editGRForm","marginLeftV","border","padding","showIcon","faEdit","editIS","editISForm","editAT","editATForm","ShowATList","editFirBaseFalse","iconShow","Index","editFirBaseTrue","faList","faSlash","ShowISList","FirebaseV2","firebaseRootPath","originalGoalsAndRoutineArr","goals","routines","singleGR","show","arr","singleAT","singleATitemArr","singleISitemArr","modalWidth","addNewGRModalShow","addNewATModalShow","addNewISModalShow","thumbnailWidth","thumbnailHeight","thumbnailWidthV2","thumbnailHeightV2","availabilityColorCode","refreshATItem","resArr","createListofAT","refreshISItem","createListofIS","singleAt","grabFireBaseRoutinesGoalsData","routine","goal","onInputChange","getATList","persist","docRef","A","tempID","tempPhoto","tempTitle","tempAvailable","key","ListGroup","action","ATonClickEvent","marginBottom","margin","src","alt","faUser","faUserAltSlash","ISonClickEvent","GRonClickEvent","stepsInstructionArrayPath","findIndexByID","getRoutines","displayRoutines","tempPersist","formatDateTime","getGoals","displayGoals","getGoalsStatus","isComplete","textAlign","display","justifyContent","alignItems","faTrophy","faRunning","getRoutinesStatus","abstractedGoalsList","borderRadius","boxShadow","closeGoal","AddNewGRModalAbstracted","abstractedActionsAndTaskList","overflow","abstractedRoutineList","closeRoutine","abstractedInstructionsAndStepsList","addNewTaskInputBox","InputGroup","FormControl","Append","abstractedRoutineGoalStatusList","closeRoutineGoalModal","addNewGoalInputBox","str","formattedStr","replace","moment","format","displayCompletedGoals","displayCompletedRoutines","showRoutineGoalModal","sm","md","lg","showRoutine","showGoal","TylersCalendarv1","weekdays","weekdaysShort","year","dateContext","currentDay","dateObject","month","daysInMonth","firstDayOfMonth","startOf","getEventsforDay","tempStart","tempEnd","originalEvents","j","start","dateTime","end","startDate","getDate","endDate","onEventClick","background","textShadow","summary","eventClick","onDayClick","d","handleDateClick","onExpandClick","handleExpandClick","map","day","blanks","sameDate","bind","parseInt","totalSlots","cells","forEach","row","daysinmonth","tableLayout","DayRoutines","dayView","borderTop","pxPerHour","RoutineClicked","dayRoutineClick","getEventItem","hour","sameTimeEventCount","itemWidth","eventBoxSize","addmarginLeft","start_dateStr","toISOString","shift","start_timeStr","start_timeAndDate","toDate","end_dateStr","end_timeStr","end_timeAndDate","tempStartTime","tempEndTime","getHours","minsToMarginTop","getMinutes","pxPerHourForConversion","newElement","data-toggle","data-placement","zIndex","position","dayViewItems","Container","DayGoals","GoalClicked","dayGoalClick","DayEvents","timeDisplay","dayEvents","eventClickDayView","curDate","hourDiff","float","minDiff","marginFromLeft","WeekEvents","weekEvents","onWeekClick","clone","weekViewItems","isSameOrAfter","isSameOrBefore","overflowX","overflowY","WeekRoutines","WeekGoals","AddNewPeople","have_pic","important","phone_number","pic","relationship","unique_id","saveChangesButtonEnabled","peopleDocsPath","handleFileSelected","file","files","targetFile","put","on","snapshot","percentage","bytesTransfered","totalBytes","err","child","getDownloadURL","url","newPersonInputSubmit","updateWithId","addToImportantPeopleInAboutModal","accept","disabled","AboutModal","hideAboutForm","CameBackFalse","saveButtonEnabled","Object","keys","aboutMeObject","handleImpPeople1","file2","importantPeople1","handleImpPeople2","file3","importantPeople2","handleImpPeople3","file4","importantPeople3","grabFireBasePeople1Data","db","document_ref","doc2","importantPeople1DocRef","grabFireBasePeople2Data","importantPeople2DocRef","grabFireBasePeople3Data","undefined","importantPeople3DocRef","grabFireBaseAboutMeData","updateProfilePic","hidePeopleModal","showAddNewPeopleModal","Label","faImage","message_day","message_card","fluid","MainPage","handleRepeatDropDown","eventKey","week_days","newByDay","byDay_temp","newEventStart0","getDay","repeatDropDown_temp","handleRepeatMonthlyDropDown","repeatMonthlyDropDown","handleRepeatEndDate","repeatEndDate_temp","repeatEndDate","handleRepeatInputValue","repeatInputValue_temp","handleRepeatOccurrence","repeatOccurrence_temp","updateProfilePicFromFirebase","profilePicUrl","profileName","getThisMonthEvents","axios","params","events","handleDayEventClick","guestList","attendees","reduce","nextGuest","email","newEventID","newEventEnd0","newEventName","newEventGuests","newEventLocation","location","newEventNotification","reminders","overrides","newEventDescription","description","dayEventSelected","isEvent","showNoTitleError","showDateError","showRepeatModal","showAboutModal","repeatOption","repeatOptionDropDown","repeatDropDown","repeatInputValue","repeatOccurrence","repeatRadio","repeatRadio_temp","byDay","0","1","2","3","4","5","6","repeatSummary","recurrenceRule","showDeleteRecurringModal","deleteRecurringOption","showEditRecurringModal","editRecurringOption","handleWeekEventClick","repeatSummaryCompute","untilSubString","untilIndex","indexOf","substring","includes","endUntilIndex","countSubString","countIndex","endCountIndex","intervalSubString","intervalIndex","endIntervalIndex","byDaySubString","byDayArray","byDayIndex","endByDayIndex","join","handleEventClick","recurringEventId","newEvent","newEventRecurringID","handleDateClickOnWeekView","arg","newStart","newEnd","handleDateClickOnDayView","setHours","validate","titleError","dayError","startDay","endDay","startMonth","getUTCMonth","endMonth","startYear","getFullYear","endYear","startHour","endHour","newDate","calendarView","updateEventsArray","handleSubmit","createEvent","updateEventClick","eventList","updateRequest","index","a","guests","formattedEmail","emailList","match","responseStatus","minutesNotification","updatedEvent","timeZone","Intl","DateTimeFormat","resolvedOptions","recurrence","defineRecurrence","useDefault","sequence","ID","creator","created","organizer","status","newRecurrenceRule","newUntilSubString","post","extra","frequency","rrule","exdate","selectedDays","entries","unshift","toUpperCase","repeat_end_date","deleteSubmit","newTitle","reminderTime","nextMonth","assign","prevMonth","subtract","nextDay","prevDay","nextWeek","prevWeek","startObject","endObject","endOf","getEventsByInterval","getEventsByIntervalDayVersion","getEventsByIntervalWeekVersion","openRepeatModal","prevState","closeRepeatModal","saveRepeatChanges","updatePic","showDayViewOrAboutView","eventFormAbstracted","showCalendarView","calendarAbstracted","dayViewAbstracted","weekViewAbstracted","backgroundColor","faChevronLeft","getMonth","getYear","faChevronRight","toggleShowRoutine","toggleShowGoal","startWeek","showRoutineModal","showGoalModal","showEventsFormbyCreateNewEventButton","changeCalendarView","view","abstractedMainEventGRShowButtons","DropdownButton","top","Dropdown","paddingBottom","todayDateObject","today","repeatModal","deleteRecurringModal","editRecurringModal","eventFormInputArea","openEditRecurringModal","hideEventForm","openDeleteRecurringModal","inputStyle","selectedDot","curClass","classList","contains","remove","weekSelected","charAt","left","transform","min","max","onSelect","flexDirection","defaultChecked","closeEditRecurringModal","closeDeleteRecurringModal","deleteRecurring","timeMin","timeMax","delete","eventId","handleNameChange","endTimePicker","handleGuestChange","handleLocationChange","handleDescriptionChange","notifyBefore","beforeChecked","notificationBeforeChecked","start0","end0","onlyCal","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2f73d56b.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\n// import { storage } from 'firebase-admin';\r\nimport 'firebase/storage';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDBgPVcjoV8LbR4hDA7tm3UoP0abMw8guE\",\r\n    authDomain: \"project-caitlin-c71a9.firebaseapp.com\",\r\n    databaseURL: \"https://project-caitlin-c71a9.firebaseio.com\",\r\n    projectId: \"project-caitlin-c71a9\",\r\n    storageBucket: \"project-caitlin-c71a9.appspot.com\",\r\n    messagingSenderId: \"711685546849\",\r\n    appId: \"1:711685546849:web:5c7a982748eb3bec35db20\",\r\n    measurementId: \"G-DCQF4LY5ZH\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.auth().signInAnonymously().catch(function(error) {\r\n    // Handle Errors here.\r\n    var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n    // ...\r\n  });\r\n  var storage = firebase.storage();\r\n  // var admin = require(\"firebase-admin\");\r\n  // var storage = firebase.storage();\r\n\r\n// export default !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\r\nexport {storage, firebase as default};","import React from 'react';\r\nimport { Form,Row,Col} from \"react-bootstrap\";\r\n\r\n\r\nclass ShowNotifications extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.state={\r\n       \r\n    };\r\n  }\r\n\r\n  convertTimeToHRMMSS =  (e) => {\r\n        \r\n    // console.log(e.target.value);\r\n    let num = e.target.value;\r\n    let hours = num/60;\r\n    let rhours = Math.floor(hours);\r\n    let minutes = (hours - rhours)* 60;\r\n    let rminutes = Math.round(minutes);\r\n    if (rhours.toString().length === 1) {\r\n        rhours = \"0\" + rhours;\r\n    }\r\n    if (rminutes.toString().length === 1) {\r\n        rminutes = \"0\" + rminutes;\r\n    }\r\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\r\n    return rhours+\":\" + rminutes +\":\" + \"00\";\r\n  }\r\n\r\n  convertToMinutes = (myStr) => {\r\n      // console.log(myStr);\r\n      if(myStr === 0 ){\r\n        return 0; \r\n      }\r\n      let myStr2 = myStr.split(':');\r\n      let hours = myStr2[0];\r\n      let hrToMin = hours* 60;\r\n      let minutes = (myStr2[1] * 1 )+ hrToMin;\r\n      // let seconds = myStr2[2];\r\n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\r\n      return minutes;\r\n  }\r\n    render(){\r\n        return (\r\n            <div> \r\n                <Form.Group controlId=\"Notification\">\r\n                <Row>\r\n                  <Col style = {{paddingRight: \"0px\" }}>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"5\"\r\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\r\n                      value = {this.convertToMinutes(this.props.itemToEditPassedIn.ta_notifications.before.time)}\r\n                      onChange={\r\n                        (e) => { e.stopPropagation(); \r\n                          let temp = this.props.itemToEditPassedIn; \r\n                          temp.ta_notifications.before.time = this.convertTimeToHRMMSS(e);\r\n                          temp.user_notifications.before.time = this.convertTimeToHRMMSS(e);\r\n                          this.props.notificationChange(temp)\r\n                        }\r\n                      }\r\n                    />\r\n                  </Col>\r\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\r\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min Before Start Time</Form.Text>\r\n                  </Col>\r\n                </Row>\r\n                <Row style = {{ marginTop:\"15px\"}}>\r\n                  <Col style = {{paddingRight: \"0px\"}}>\r\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\r\n                  </Col>\r\n                  <Col xs={8}>\r\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\r\n                      <Form.Check.Input\r\n                        type=\"checkbox\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                        checked={this.props.itemToEditPassedIn.user_notifications.before.is_enabled}\r\n                        onChange={(e) => {\r\n                            e.stopPropagation();\r\n                            let temp = this.props.itemToEditPassedIn;\r\n                            temp.user_notifications.before.is_enabled = !temp.user_notifications.before.is_enabled;\r\n                            this.props.notificationChange(temp)\r\n                          }}\r\n                      />\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"1\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message\"\r\n                        style={{marginLeft: \"10px\"}}\r\n                        value={this.props.itemToEditPassedIn.user_notifications.before.message} \r\n                        onChange={\r\n                          (e) => { \r\n                            e.preventDefault();\r\n                            e.stopPropagation(); \r\n                            let temp = this.props.itemToEditPassedIn; \r\n                            temp.user_notifications.before.message = e.target.value; \r\n                            this.props.notificationChange(temp)\r\n                        }}\r\n  \r\n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\r\n                        onKeyDown={\r\n                          (e) => {\r\n                              if (e.keyCode === 32) {\r\n                                  let temp = this.props.itemToEditPassedIn;\r\n                                  temp.user_notifications.before.message = e.target.value + \" \"; \r\n                                  // this.setState({ itemToEdit: temp })\r\n                                  e.preventDefault(); \r\n                                  e.stopPropagation();\r\n                                  this.props.notificationChange(temp)\r\n                              }\r\n                          }} \r\n                      />\r\n                    </Form.Check>\r\n                  </Col>\r\n                </Row>\r\n                <Row style = {{marginTop:\"10px\"}}>\r\n                  <Col style = {{paddingRight: \"0px\"}}>\r\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\r\n                  </Col>\r\n                  <Col xs={8}>\r\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\r\n                      <Form.Check.Input\r\n                        type=\"checkbox\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                        checked={this.props.itemToEditPassedIn.ta_notifications.before.is_enabled}\r\n                        onChange={(e) => {\r\n                            e.stopPropagation();\r\n                            let temp = this.props.itemToEditPassedIn;\r\n                            temp.ta_notifications.before.is_enabled = !temp.ta_notifications.before.is_enabled;\r\n                            this.props.notificationChange(temp)\r\n                          }}\r\n                      />\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"1\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message\"\r\n                        style={{marginLeft: \"10px\"}}\r\n                        value={this.props.itemToEditPassedIn.ta_notifications.before.message} \r\n                        onChange={\r\n                          (e) => { \r\n                            e.preventDefault();\r\n                            e.stopPropagation(); \r\n                            let temp = this.props.itemToEditPassedIn; \r\n                            temp.ta_notifications.before.message = e.target.value; \r\n                            this.props.notificationChange(temp)\r\n                        }}\r\n  \r\n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\r\n                        onKeyDown={\r\n                          (e) => {\r\n                              if (e.keyCode === 32) {\r\n                                  let temp = this.props.itemToEditPassedIn;\r\n                                  temp.ta_notifications.before.message = e.target.value + \" \"; \r\n                                  // this.setState({ itemToEdit: temp })\r\n                                  e.preventDefault(); \r\n                                  e.stopPropagation();\r\n                                  this.props.notificationChange(temp)\r\n                              }\r\n                          }} \r\n                      />\r\n                    </Form.Check>\r\n                  </Col>\r\n                </Row>\r\n                <Row style = {{marginTop:\"10px\"}}>\r\n                  <Col style = {{paddingRight: \"0px\" }}>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"30\"\r\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\r\n                      value = {this.convertToMinutes(this.props.itemToEditPassedIn.ta_notifications.during.time)}\r\n                      onChange={\r\n                        (e) => { e.stopPropagation(); \r\n                          let temp = this.props.itemToEditPassedIn; \r\n                          temp.ta_notifications.during.time = this.convertTimeToHRMMSS(e);\r\n                          temp.user_notifications.during.time = this.convertTimeToHRMMSS(e);\r\n                          this.props.notificationChange(temp)\r\n                          }\r\n                      }\r\n                    />\r\n                  </Col>\r\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\r\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min After Start Time</Form.Text>\r\n                  </Col>\r\n                </Row>\r\n                <Row style = {{ marginTop:\"15px\"}}>\r\n                  <Col style = {{paddingRight: \"0px\"}}>\r\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\r\n                  </Col>\r\n                  <Col xs={8}>\r\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\r\n                      <Form.Check.Input\r\n                        type=\"checkbox\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                        checked={this.props.itemToEditPassedIn.user_notifications.during.is_enabled}\r\n                        onChange={(e) => {\r\n                            e.stopPropagation();\r\n                            let temp = this.props.itemToEditPassedIn;\r\n                            temp.user_notifications.during.is_enabled = !temp.user_notifications.during.is_enabled;\r\n                            this.props.notificationChange(temp)\r\n                          }}\r\n                      />\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"1\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message\"\r\n                        style={{marginLeft: \"10px\"}}\r\n                        value={this.props.itemToEditPassedIn.user_notifications.during.message} \r\n                        onChange={\r\n                          (e) => { \r\n                            e.preventDefault();\r\n                            e.stopPropagation(); \r\n                            let temp = this.props.itemToEditPassedIn; \r\n                            temp.user_notifications.during.message = e.target.value; \r\n                            this.props.notificationChange(temp)\r\n                        }}\r\n  \r\n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\r\n                        onKeyDown={\r\n                          (e) => {\r\n                              if (e.keyCode === 32) {\r\n                                  let temp = this.props.itemToEditPassedIn;\r\n                                  temp.user_notifications.during.message = e.target.value + \" \"; \r\n                                  // this.setState({ itemToEdit: temp })\r\n                                  e.preventDefault(); \r\n                                  e.stopPropagation();\r\n                                  this.props.notificationChange(temp)\r\n                              }\r\n                          }} \r\n                      />\r\n                    </Form.Check>\r\n                  </Col>\r\n                </Row>\r\n                <Row style = {{marginTop:\"10px\"}}>\r\n                  <Col style = {{paddingRight: \"0px\"}}>\r\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\r\n                  </Col>\r\n                  <Col xs={8}>\r\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}} >\r\n                      <Form.Check.Input\r\n                        type=\"checkbox\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                        checked={this.props.itemToEditPassedIn.ta_notifications.during.is_enabled}\r\n                        onChange={(e) => {\r\n                            e.stopPropagation();\r\n                            let temp = this.props.itemToEditPassedIn;\r\n                            temp.ta_notifications.during.is_enabled = !temp.ta_notifications.during.is_enabled;\r\n                            this.props.notificationChange(temp)\r\n                          }}\r\n                      />\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"1\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message\"\r\n                        style={{marginLeft: \"10px\"}}\r\n                        value={this.props.itemToEditPassedIn.ta_notifications.during.message} \r\n                        onChange={\r\n                          (e) => { \r\n                            e.preventDefault();\r\n                            e.stopPropagation(); \r\n                            let temp = this.props.itemToEditPassedIn; \r\n                            temp.ta_notifications.during.message = e.target.value; \r\n                            this.props.notificationChange(temp)\r\n                        }}\r\n  \r\n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\r\n                        onKeyDown={\r\n                          (e) => {\r\n                              if(e.keyCode === 32) {\r\n                                  let temp = this.props.itemToEditPassedIn;\r\n                                  temp.ta_notifications.during.message = e.target.value + \" \"; \r\n                                  // this.setState({ itemToEdit: temp })\r\n                                  e.preventDefault(); \r\n                                  e.stopPropagation();\r\n                                  this.props.notificationChange(temp)\r\n                              }\r\n                          }} \r\n                      />\r\n                    </Form.Check>\r\n                  </Col>\r\n                </Row>\r\n                <Row style = {{marginTop:\"10px\"}}>\r\n                  <Col style = {{paddingRight: \"0px\" }}>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"5\"\r\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\r\n                      value = {this.convertToMinutes(this.props.itemToEditPassedIn.ta_notifications.after.time)}\r\n                      onChange={\r\n                        (e) => { e.stopPropagation(); \r\n                          let temp = this.props.itemToEditPassedIn; \r\n                          temp.ta_notifications.after.time = this.convertTimeToHRMMSS(e);\r\n                          temp.user_notifications.after.time = this.convertTimeToHRMMSS(e);\r\n                          this.props.notificationChange(temp)\r\n                          }\r\n                      }\r\n                    />\r\n                  </Col>\r\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\r\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min After End Time</Form.Text>\r\n                  </Col>\r\n                </Row>\r\n                <Row style = {{ marginTop:\"15px\"}}>\r\n                  <Col style = {{paddingRight: \"0px\"}}>\r\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\r\n                  </Col>\r\n                  <Col xs={8}>\r\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\r\n                      <Form.Check.Input\r\n                        type=\"checkbox\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                        checked={this.props.itemToEditPassedIn.user_notifications.after.is_enabled}\r\n                        onChange={(e) => {\r\n                            e.stopPropagation();\r\n                            let temp = this.props.itemToEditPassedIn;\r\n                            temp.user_notifications.after.is_enabled = !temp.user_notifications.after.is_enabled;\r\n                            this.props.notificationChange(temp)\r\n                          }}\r\n                      />\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"1\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message\"\r\n                        style={{marginLeft: \"10px\"}}\r\n                        value={this.props.itemToEditPassedIn.user_notifications.after.message} \r\n                        onChange={\r\n                          (e) => { \r\n                            e.preventDefault();\r\n                            e.stopPropagation(); \r\n                            let temp = this.props.itemToEditPassedIn; \r\n                            temp.user_notifications.after.message = e.target.value; \r\n                            this.props.notificationChange(temp)\r\n                        }}\r\n  \r\n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\r\n                        onKeyDown={\r\n                          (e) => {\r\n                              if (e.keyCode === 32) {\r\n                                  let temp = this.props.itemToEditPassedIn;\r\n                                  temp.user_notifications.after.message = e.target.value + \" \"; \r\n                                  // this.setState({ itemToEdit: temp })\r\n                                  e.preventDefault(); \r\n                                  e.stopPropagation();\r\n                                  this.props.notificationChange(temp)\r\n                              }\r\n                          }} \r\n                      />\r\n                    </Form.Check>\r\n                  </Col>\r\n                </Row>\r\n                <Row style = {{marginTop:\"10px\"}}>\r\n                  <Col style = {{paddingRight: \"0px\"}}>\r\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\r\n                  </Col>\r\n                  <Col xs={8}>\r\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}} >\r\n                      <Form.Check.Input\r\n                        type=\"checkbox\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                        checked={this.props.itemToEditPassedIn.ta_notifications.after.is_enabled}\r\n                        onChange={(e) => {\r\n                            e.stopPropagation();\r\n                            let temp = this.props.itemToEditPassedIn;\r\n                            temp.ta_notifications.after.is_enabled = !temp.ta_notifications.after.is_enabled;\r\n                            this.props.notificationChange(temp)\r\n                          }}\r\n                      />\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"1\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message\"\r\n                        style={{marginLeft: \"10px\"}}\r\n                        value={this.props.itemToEditPassedIn.ta_notifications.after.message} \r\n                        onChange={\r\n                          (e) => { \r\n                            e.preventDefault();\r\n                            e.stopPropagation(); \r\n                            let temp = this.props.itemToEditPassedIn; \r\n                            temp.ta_notifications.after.message = e.target.value; \r\n                            this.props.notificationChange(temp)\r\n                        }}\r\n  \r\n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\r\n                        onKeyDown={\r\n                          (e) => {\r\n                              if (e.keyCode === 32) {\r\n                                  let temp = this.props.itemToEditPassedIn;\r\n                                  temp.ta_notifications.after.message = e.target.value + \" \"; \r\n                                  // this.setState({ itemToEdit: temp })\r\n                                  e.preventDefault(); \r\n                                  e.stopPropagation();\r\n                                  this.props.notificationChange(temp)\r\n                              }\r\n                          }} \r\n                      />\r\n                    </Form.Check>\r\n                  </Col>\r\n                </Row>\r\n              \r\n              </Form.Group>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowNotifications;","import React, { Component } from \"react\";\r\nimport firebase from \"./firebase\";\r\nimport { Button, Modal} from \"react-bootstrap\";\r\nimport ShowNotifications from \"./ShowNotifications\"\r\nimport {\r\n    Form,\r\n    Row,\r\n    Col\r\n  } from \"react-bootstrap\";\r\n\r\nexport default class AddNewGRItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"Is this a Routine? \" + this.props.isRoutine);\r\n  }\r\n  state = {\r\n    grArr: [], //goal, routine original array\r\n    itemToEdit: {\r\n      title: \"\",\r\n      id: \"\",\r\n      is_persistent: this.props.isRoutine,\r\n      photo: \"\",\r\n      is_complete: false,\r\n      is_available: true,\r\n      available_end_time: \"23:59:59\",\r\n      available_start_time: \"00:00:00\",\r\n      datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\r\n      datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\r\n      audio: \"\",\r\n      is_timed: false,\r\n      expected_completion_time: \"01:00:00\",\r\n      is_sublist_available: true,\r\n      ta_notifications:{\r\n          before:{\r\n            is_enabled: false,\r\n            is_set: false,\r\n            message: \"\",\r\n            time: \"00:05:00\"\r\n          },\r\n          during:{\r\n            is_enabled: false,\r\n            is_set: false,\r\n            message: \"\",\r\n            time: \"00:30:00\"\r\n          },\r\n          after:{\r\n            is_enabled: false,\r\n            is_set: false,\r\n            message: \"\",\r\n            time: \"00:05:00\"\r\n          }\r\n      },\r\n      user_notifications:{\r\n        before:{\r\n          is_enabled: false,\r\n          is_set: false,\r\n          message: \"\",\r\n          time: \"00:05:00\"\r\n        },\r\n        during:{\r\n          is_enabled: false,\r\n          is_set: false,\r\n          message: \"\",\r\n          time: \"00:30:00\"\r\n        },\r\n        after:{\r\n          is_enabled: false,\r\n          is_set: false,\r\n          message: \"\",\r\n          time: \"00:05:00\"\r\n        }\r\n      }\r\n    }, //this is essentially the new item\r\n    //below are references to firebase directories\r\n    routineDocsPath: firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(\"7R6hAVmDrNutRkG3sVRy\")\r\n      .collection(\"goals&routines\"),\r\n    arrPath: firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(\"7R6hAVmDrNutRkG3sVRy\")\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.isRoutine\r\n      ? console.log(\"Routine Input\")\r\n      : console.log(\"Goal Input\");\r\n\r\n    this.getGRDataFromFB();\r\n  }\r\n\r\n  getGRDataFromFB = () => {\r\n    //Grab the goals/routine array from firebase and then store it in state varible grArr\r\n    console.log(this.state.arrPath);\r\n    this.state.arrPath\r\n      .get()\r\n      .then(doc => {\r\n        if (doc.exists) {\r\n          console.log(\"getGRDataFromFB DATA:\");\r\n          // console.log(doc.data());\r\n          var x = doc.data();\r\n          x = x[\"goals&routines\"];\r\n          console.log(x);\r\n          this.setState({\r\n            grArr: x\r\n          });\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such document! 2\");\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n        alert(\"Error getting document:\", error);\r\n      });\r\n  };\r\n\r\n  newInputSubmit = () => {\r\n    if (this.state.itemToEdit.title === \"\") {\r\n      alert(\"Invalid Input\");\r\n      return;\r\n    }\r\n    this.addNewDoc();\r\n  };\r\n\r\n  addNewDoc = () => {\r\n    this.state.routineDocsPath\r\n      .add({\r\n        title: this.state.itemToEdit.title,\r\n        \"actions&tasks\": []\r\n      })\r\n      .then(ref => {\r\n        if (ref.id === null) {\r\n          alert(\"Fail to add new routine / goal item\");\r\n          return;\r\n        }\r\n\r\n        let newArr = this.props.ATArray;\r\n        let temp = this.state.itemToEdit;\r\n        temp.id = ref.id;\r\n        console.log(\"Added document with ID: \", ref.id);\r\n        // this.state.grArr.push(temp);\r\n        newArr.push(temp);\r\n        this.updateEntireArray(newArr);\r\n      });\r\n  };\r\n\r\n  //This function will below will essentially take in a array and have a key map to it\r\n  updateEntireArray = newArr => {\r\n    // 2. update adds to the document\r\n    let db = this.state.arrPath;\r\n    db.update({ \"goals&routines\": newArr }).then(doc => {\r\n      console.log(\"updateEntireArray Finished\");\r\n      console.log(doc);\r\n      this.getGRDataFromFB();\r\n      if (this.props != null) {\r\n        console.log(\"refreshing FireBasev2 from AddNewGRItem\");\r\n        this.props.refresh();\r\n      }\r\n    });\r\n  }\r\n\r\n  convertTimeToHRMMSS =  (e) => {\r\n        \r\n    // console.log(e.target.value);\r\n    let num = e.target.value;\r\n    let hours = num/60;\r\n    let rhours = Math.floor(hours);\r\n    let minutes = (hours - rhours)* 60;\r\n    let rminutes = Math.round(minutes);\r\n    if (rhours.toString().length === 1) {\r\n        rhours = \"0\" + rhours;\r\n    }\r\n    if (rminutes.toString().length === 1) {\r\n        rminutes = \"0\" + rminutes;\r\n    }\r\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\r\n    return rhours+\":\" + rminutes +\":\" + \"00\";\r\n  }\r\n\r\n  convertToMinutes = () => {\r\n      let myStr = this.state.itemToEdit.expected_completion_time.split(':');\r\n      let hours = myStr[0];\r\n      let hrToMin = hours* 60;\r\n      let minutes = (myStr[1] * 1 )+ hrToMin;\r\n      // let seconds = myStr[2];\r\n      \r\n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\r\n      return minutes;\r\n  }\r\n\r\n  handleNotificationChange = (temp) => {\r\n    // console.log(temp);\r\n    this.setState({ itemToEdit: temp });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\r\n        <Modal.Header closeButton onHide={this.props.closeModal}>\r\n          <Modal.Title>\r\n            <h5 className=\"normalfancytext\">\r\n              Add New {this.props.isRoutine ? \"Routine\" : \"Goal\"}\r\n            </h5>{\" \"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <label>Title</label>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                style={{ width: \"200px\" }}\r\n                placeholder=\"Enter Title\"\r\n                value={this.state.itemToEdit.title}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.title = e.target.value;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n            <label>Photo URL</label>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                style={{ width: \"200px\" }}\r\n                placeholder=\"Enter Photo URL \"\r\n                value={this.state.itemToEdit.photo}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.photo = e.target.value;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <label>Available Start Time</label>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                style={{ width: \"200px\" }}\r\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\r\n                value={this.state.itemToEdit.available_start_time}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.available_start_time = e.target.value;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <label>Available End Time</label>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                style={{ width: \"200px\" }}\r\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\r\n                value={this.state.itemToEdit.available_end_time}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.available_end_time = e.target.value;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n            \r\n            <label>This Takes Me</label>\r\n            <Row>\r\n                <Col  style = {{paddingRight: \"0px\" }}>  \r\n                    <Form.Control\r\n                        type=\"number\"\r\n                        placeholder=\"30\"\r\n                        value = {this.convertToMinutes()}\r\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\r\n                        onChange={\r\n                            (e) => { e.stopPropagation(); \r\n                            let temp = this.state.itemToEdit; \r\n                            temp.expected_completion_time = this.convertTimeToHRMMSS(e);\r\n                            this.setState({ itemToEdit: temp }) }\r\n                        }\r\n                    />\r\n                </Col>\r\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\r\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\r\n                </Col>\r\n            </Row>\r\n            \r\n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\r\n              <label className=\"form-check-label\" >Time?</label>\r\n              <input\r\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\r\n                name=\"Timed\"\r\n                type=\"checkbox\"\r\n                checked={this.state.itemToEdit.is_timed}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  console.log(temp.is_timed);\r\n                  temp.is_timed = !temp.is_timed;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n              <label className=\"form-check-label\">Available to Caitlin?</label>\r\n              <input\r\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\r\n                name=\"Available\"\r\n                type=\"checkbox\"\r\n                checked={this.state.itemToEdit.is_available}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.is_available = e.target.checked;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {this.state.itemToEdit.is_available && \r\n              <ShowNotifications \r\n                itemToEditPassedIn = {this.state.itemToEdit}\r\n                notificationChange = {this.handleNotificationChange}\r\n              />\r\n            }\r\n\r\n            \r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.props.closeModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"info\" onClick={this.newInputSubmit}>\r\n            Save changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import firebase from \"./firebase\";\r\nimport ShowNotifications from \"./ShowNotifications\"\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport {\r\n    Form,\r\n    Row,\r\n    Col\r\n  } from \"react-bootstrap\";\r\n\r\nexport default class AddNewATItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"AddNewATItem constructor\");\r\n    this.state = {\r\n      newActionTitle: \"\", //Old delete Later\r\n      itemToEdit: {\r\n        id: \"\",\r\n        title: \"\",\r\n        photo: \"\",\r\n        audio: \"\",\r\n        is_complete: false,\r\n        is_available: true,\r\n        available_end_time: \"23:59:59\",\r\n        available_start_time: \"00:00:00\",\r\n        datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\r\n        datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\r\n        is_timed: false,\r\n        expected_completion_time: \"00:11:00\",\r\n        is_sublist_available: true,\r\n        ta_notifications:{\r\n          before:{\r\n            is_enabled: false,\r\n            is_set: false,\r\n            message: \"\",\r\n            time: \"00:05:00\"\r\n          },\r\n          during:{\r\n            is_enabled: false,\r\n            is_set: false,\r\n            message: \"\",\r\n            time: \"00:30:00\"\r\n          },\r\n          after:{\r\n            is_enabled: false,\r\n            is_set: false,\r\n            message: \"\",\r\n            time: \"00:05:00\"\r\n          }\r\n        },\r\n        user_notifications:{\r\n          before:{\r\n            is_enabled: false,\r\n            is_set: false,\r\n            message: \"\",\r\n            time: \"00:05:00\"\r\n          },\r\n          during:{\r\n            is_enabled: false,\r\n            is_set: false,\r\n            message: \"\",\r\n            time: \"00:30:00\"\r\n          },\r\n          after:{\r\n            is_enabled: false,\r\n            is_set: false,\r\n            message: \"\",\r\n            time: \"00:05:00\"\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"AddNewATItem did mount\");\r\n    // console.log(this.props.ATItem);\r\n    // console.log(this.props.ATItem.fbPath);\r\n    // console.log(this.props.ATItem.arr);\r\n    // console.log(this.props.ATArray);\r\n  }\r\n\r\n  newInputSubmit = () => {\r\n    if (this.state.itemToEdit.title === \"\") {\r\n      alert(\"Invalid Input\");\r\n      return;\r\n    }\r\n    // console.log(\"Submitting Input: \" + this.state.itemToEdit.title);\r\n    this.addNewDoc();\r\n  };\r\n\r\n  addNewDoc = () => {\r\n    this.props.ATItem.fbPath\r\n      .collection(\"actions&tasks\")\r\n      .add({\r\n        title: this.state.itemToEdit.title,\r\n        \"instructions&steps\": []\r\n      })\r\n      .then(ref => {\r\n        if (ref.id === null) {\r\n          alert(\"Fail to add new Action / Task item\");\r\n          return;\r\n        }\r\n        console.log(\"Added document with ID: \", ref.id);\r\n        let newArr = this.props.ATArray;\r\n        let temp = this.state.itemToEdit;\r\n        temp.id = ref.id;\r\n        newArr.push(temp);\r\n        console.log(newArr);\r\n        console.log(\"adding new item\");\r\n        this.updateEntireArray(newArr);\r\n      });\r\n  };\r\n\r\n  //This function will below will essentially take in a array and have a key map to it\r\n  updateEntireArray = newArr => {\r\n    // 2. update adds to the document\r\n    this.props.ATItem.fbPath.update({ \"actions&tasks\": newArr }).then(doc => {\r\n      console.log(\"updateEntireArray Finished\");\r\n      console.log(doc);\r\n      if (this.props != null) {\r\n        this.props.hideNewATModal();\r\n        console.log(\"refreshing FireBasev2 from AddNewATItem\");\r\n        this.props.refresh(newArr);\r\n      }\r\n    });\r\n  };\r\n\r\n  convertTimeToHRMMSS =  (e) => {\r\n        \r\n    // console.log(e.target.value);\r\n    let num = e.target.value;\r\n    let hours = num/60;\r\n    let rhours = Math.floor(hours);\r\n    let minutes = (hours - rhours)* 60;\r\n    let rminutes = Math.round(minutes);\r\n    if (rhours.toString().length === 1) {\r\n        rhours = \"0\" + rhours;\r\n    }\r\n    if (rminutes.toString().length === 1) {\r\n        rminutes = \"0\" + rminutes;\r\n    }\r\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\r\n    return rhours+\":\" + rminutes +\":\" + \"00\";\r\n  }\r\n\r\n  convertToMinutes = () => {\r\n      let myStr = this.state.itemToEdit.expected_completion_time.split(':');\r\n      let hours = myStr[0];\r\n      let hrToMin = hours* 60;\r\n      let minutes = (myStr[1] * 1 )+ hrToMin;\r\n      let seconds = myStr[2];\r\n      \r\n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\r\n      return minutes;\r\n  }\r\n\r\n  handleNotificationChange = (temp) => {\r\n    // console.log(temp);\r\n    this.setState({ itemToEdit: temp });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\r\n        <Modal.Header\r\n          closeButton\r\n          onHide={() => {\r\n            this.props.hideNewATModal();\r\n            console.log(\"closed button clicked\");\r\n          }}\r\n        >\r\n          <Modal.Title>\r\n            <h2 className=\"normalfancytext\">Add New Task/Action</h2>{\" \"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* <AddNewGRItem refresh={this.grabFireBaseRoutinesGoalsData} isRoutine={this.state.isRoutine} /> */}\r\n          <div>\r\n            <label>Title</label>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                style={{ width: \"200px\" }}\r\n                placeholder=\"Enter Title\"\r\n                value={this.state.itemToEdit.title}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.title = e.target.value;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <label>Photo URL</label>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                style={{ width: \"200px\" }}\r\n                placeholder=\"Enter Photo URL \"\r\n                value={this.state.itemToEdit.photo}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.photo = e.target.value;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <label>Available Start Time</label>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                style={{ width: \"200px\" }}\r\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\r\n                value={this.state.itemToEdit.available_start_time}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.available_start_time = e.target.value;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <label>Available End Time</label>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                style={{ width: \"200px\" }}\r\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\r\n                value={this.state.itemToEdit.available_end_time}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.available_end_time = e.target.value;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <label>This Takes Me</label>\r\n            <Row>\r\n                <Col  style = {{paddingRight: \"0px\" }}>  \r\n                    <Form.Control\r\n                        type=\"number\"\r\n                        placeholder=\"30\"\r\n                        value = {this.convertToMinutes()}\r\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\r\n                        onChange={\r\n                            (e) => { e.stopPropagation(); \r\n                            let temp = this.state.itemToEdit; \r\n                            temp.expected_completion_time = this.convertTimeToHRMMSS(e);\r\n                             this.setState({ itemToEdit: temp }) }\r\n                        }\r\n                    />\r\n                </Col>\r\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\r\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\r\n                </Col>\r\n            </Row>\r\n\r\n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\r\n              <label className=\"form-check-label\" >Time?</label>\r\n              <input\r\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\r\n                name=\"Timed\"\r\n                type=\"checkbox\"\r\n                checked={this.state.itemToEdit.is_timed}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.is_timed = !temp.is_timed;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n              <label className=\"form-check-label\">Available to Caitlin?</label>\r\n              <input\r\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\r\n                name=\"Available\"\r\n                type=\"checkbox\"\r\n                checked={this.state.itemToEdit.is_available}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.is_available = !temp.is_available;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {this.state.itemToEdit.is_available && \r\n              <ShowNotifications \r\n                itemToEditPassedIn = {this.state.itemToEdit}\r\n                notificationChange = {this.handleNotificationChange}\r\n              />\r\n            }\r\n            \r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              this.props.hideNewATModal();\r\n              console.log(\"closed button clicked\");\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"info\"\r\n            onClick={() => {\r\n              this.newInputSubmit();\r\n            }}\r\n          >\r\n            Save changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import firebase from \"./firebase\";\r\nimport ShowNotifications from \"./ShowNotifications\"\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport {\r\n    Form,\r\n    Row,\r\n    Col\r\n  } from \"react-bootstrap\";\r\n\r\n/**\r\n *\r\n * This class is responsible for adding a new elemnt to the\r\n * firebase database. If it becomes successful then we update\r\n * the view on the firebasev2\r\n */\r\n\r\nexport default class AddNewISItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"AddNewISItem constructor\");\r\n  }\r\n\r\n  state = {\r\n    atArr: [], //goal, routine original array\r\n    newInstructionTitle: \"\",\r\n    itemToEdit: {\r\n      //new item to add to array\r\n      id: \"\",\r\n      title: \"\",\r\n      photo: \"\",\r\n      is_complete: false,\r\n      is_available: true,\r\n      available_end_time: \"23:59:59\",\r\n      available_start_time: \"00:00:00\",\r\n      datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\r\n      datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\r\n      audio: \"\",\r\n      is_timed: false,\r\n      expected_completion_time: \"00:10:00\",\r\n      ta_notifications:{\r\n        before:{\r\n          is_enabled: false,\r\n          is_set: false,\r\n          message: \"\",\r\n          time: \"00:05:00\"\r\n        },\r\n        during:{\r\n          is_enabled: false,\r\n          is_set: false,\r\n          message: \"\",\r\n          time: \"00:30:00\"\r\n        },\r\n        after:{\r\n          is_enabled: false,\r\n          is_set: false,\r\n          message: \"\",\r\n          time: \"00:05:00\"\r\n        }\r\n      },\r\n      user_notifications:{\r\n        before:{\r\n          is_enabled: false,\r\n          is_set: false,\r\n          message: \"\",\r\n          time: \"00:05:00\"\r\n        },\r\n        during:{\r\n          is_enabled: false,\r\n          is_set: false,\r\n          message: \"\",\r\n          time: \"00:30:00\"\r\n        },\r\n        after:{\r\n          is_enabled: false,\r\n          is_set: false,\r\n          message: \"\",\r\n          time: \"00:05:00\"\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    // console.log(\"AddNewISItem did mount\");\r\n    // console.log(this.props.ISArray);\r\n    // console.log(this.props.ISItem);\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      newInstructionTitle: e.target.value\r\n    });\r\n  };\r\n\r\n  newInputSubmit = () => {\r\n    if (this.state.itemToEdit.title === \"\") {\r\n      alert(\"Invalid Input\");\r\n      return;\r\n    }\r\n    console.log(\"Submitting Input: \" + this.state.itemToEdit.title);\r\n\r\n    this.props.ISArray.push(this.state.itemToEdit);\r\n    this.updateEntireArray(this.props.ISArray);\r\n  };\r\n\r\n  //This function will below will essentially take in a array and have a key map to it\r\n  updateEntireArray = newArr => {\r\n    // 2. update adds to the document\r\n\r\n    this.props.ISItem.fbPath\r\n      .update({ \"instructions&steps\": newArr })\r\n      .then(doc => {\r\n        console.log(\"updateEntireArray Finished\");\r\n        console.log(doc);\r\n        if (this.props != null) {\r\n          this.props.hideNewISModal();\r\n          console.log(\"refreshing FireBasev2 from ISItem\");\r\n          this.props.refresh(newArr);\r\n        } else {\r\n          console.log(\"removing newly added item due to failure\");\r\n          this.props.ISArray.pop();\r\n        }\r\n      });\r\n  };\r\n\r\n  convertTimeToHRMMSS =  (e) => {\r\n        \r\n    // console.log(e.target.value);\r\n    let num = e.target.value;\r\n    let hours = num/60;\r\n    let rhours = Math.floor(hours);\r\n    let minutes = (hours - rhours)* 60;\r\n    let rminutes = Math.round(minutes);\r\n    if (rhours.toString().length === 1) {\r\n        rhours = \"0\" + rhours;\r\n    }\r\n    if (rminutes.toString().length === 1) {\r\n        rminutes = \"0\" + rminutes;\r\n    }\r\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\r\n    return rhours+\":\" + rminutes +\":\" + \"00\";\r\n  }\r\n\r\n  convertToMinutes = () => {\r\n      let myStr = this.state.itemToEdit.expected_completion_time.split(':');\r\n      let hours = myStr[0];\r\n      let hrToMin = hours* 60;\r\n      let minutes = (myStr[1] * 1 )+ hrToMin;\r\n      let seconds = myStr[2];\r\n      \r\n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\r\n      return minutes;\r\n  }\r\n\r\n  handleNotificationChange = (temp) => {\r\n    // console.log(temp);\r\n    this.setState({ itemToEdit: temp });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\r\n        <Modal.Header\r\n          closeButton\r\n          onHide={() => {\r\n            this.props.hideNewISModal();\r\n            console.log(\"closed button clicked\");\r\n          }}\r\n        >\r\n          <Modal.Title>\r\n            <h2 className=\"normalfancytext\">Add New Step</h2>{\" \"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* <AddNewGRItem refresh={this.grabFireBaseRoutinesGoalsData} isRoutine={this.state.isRoutine} /> */}\r\n          <div>\r\n            <label>Title</label>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                style={{ width: \"200px\" }}\r\n                placeholder=\"Enter Title\"\r\n                value={this.state.itemToEdit.title}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.title = e.target.value;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <label>Photo URL</label>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                style={{ width: \"200px\" }}\r\n                placeholder=\"Enter Photo URL \"\r\n                value={this.state.itemToEdit.photo}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.photo = e.target.value;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <label>Available Start Time</label>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                style={{ width: \"200px\" }}\r\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\r\n                value={this.state.itemToEdit.available_start_time}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.available_start_time = e.target.value;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <label>Available End Time</label>\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                style={{ width: \"200px\" }}\r\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\r\n                value={this.state.itemToEdit.available_end_time}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.available_end_time = e.target.value;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n            \r\n            <label>This Takes Me</label>\r\n            <Row>\r\n                <Col  style = {{paddingRight: \"0px\" }}>  \r\n                    <Form.Control\r\n                        // value={this.state.newEventNotification}\r\n                        // onChange={this.handleNotificationChange}\r\n                        type=\"number\"\r\n                        placeholder=\"30\"\r\n                        value = {this.convertToMinutes()}\r\n                        // value = {this.state.itemToEdit.expected_completion_time}\r\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\r\n                        onChange={\r\n                            // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\r\n                            (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\r\n                        }\r\n                    />\r\n                </Col>\r\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\r\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\r\n                </Col>\r\n            </Row>\r\n\r\n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\r\n              <label className=\"form-check-label\" >Time?</label>\r\n              <input\r\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\r\n                name=\"Timed\"\r\n                type=\"checkbox\"\r\n                checked={this.state.itemToEdit.is_timed}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.is_timed = !temp.is_timed;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n              <label className=\"form-check-label\">Available to Caitlin?</label>\r\n              <input\r\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\r\n                name=\"Available\"\r\n                type=\"checkbox\"\r\n                checked={this.state.itemToEdit.is_available}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                  temp.is_available = !temp.is_available;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {this.state.itemToEdit.is_available && \r\n              <ShowNotifications \r\n                itemToEditPassedIn = {this.state.itemToEdit}\r\n                notificationChange = {this.handleNotificationChange}\r\n              />\r\n            }\r\n\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              this.props.hideNewISModal();\r\n              console.log(\"closed button clicked\");\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"info\"\r\n            onClick={() => {\r\n              this.newInputSubmit();\r\n            }}\r\n          >\r\n            Save changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n// import { Button, Row, Col, Modal, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n/**\r\n * \r\n * This class is responsible for adding a new elemnt to the\r\n * firebase database. If it becomes successful then we update\r\n * the view on the firebasev2\r\n*/\r\nexport default class DeleteISItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        // console.log('DeleteISItem constructor');\r\n        // console.log('delete index ' + this.props.deleteIndex)\r\n        // console.log(this.props.ISItem)\r\n        // console.log(this.props.ISArray)\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log('DeleteISItem did mount');\r\n    }\r\n\r\n\r\n    submitRequest = () => {\r\n        //Delete from the firebase\r\n        /*const url = \"https://cors-anywhere.herokuapp.com/https://us-central1-project-caitlin-c71a9.cloudfunctions.net/RecursiveDelete\";\r\n        const Data = {\r\n            data : {\r\n                \"path\" : this.props.ISItem.fbPath.path //<<<<< Entire path of the document to delete\r\n            }\r\n        };\r\n        console.log(\"path \" +  this.props.ISItem.fbPath.path);\r\n        \r\n        const param = {\r\n            headers:{\r\n                //\"content-type\":\"application/json; charset=UTF-8\"\r\n                \"content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(Data),\r\n            method: \"POST\"\r\n        };\r\n        \r\n        fetch(url, param)\r\n        .then((response) => response.json())\r\n        .then((result) => { console.log(result); } )\r\n        .catch((error) => { console.error(error); });*/\r\n        \r\n        // console.log(\"request was made to delete for element \" +  this.props.deleteIndex);\r\n        let items = [...this.props.ISArray];\r\n        // console.log(\"delete with: \")\r\n        // console.log(items)\r\n        let i = this.props.deleteIndex;\r\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length))\r\n        // console.log(\"delete 2 with: \")\r\n        // console.log(newArr)\r\n        this.props.ISItem.fbPath.update({ 'instructions&steps': newArr }).then(\r\n            (doc) => {\r\n                // console.log('updateEntireArray Finished')\r\n                // console.log(doc);\r\n                if (this.props != null) {\r\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\r\n                    this.props.refresh(newArr);\r\n                }\r\n                else{\r\n                    console.log(\"delete failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    confirmation = () => {\r\n        const r = window.confirm(\"Confirm Delete\"); \r\n        if(r === true){ \r\n            // console.log(\"Delete Confirm\")\r\n            this.submitRequest();\r\n            return;\r\n        }\r\n        // console.log(\"Delete Not Confirm\")\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            < div>\r\n                <FontAwesomeIcon \r\n                    onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut ={event => {event.target.style.color = \"#000000\";}}\r\n                    style ={{color:  \"#000000\", marginRight:\"15px\", marginLeft: \"5px\" }}\r\n                    onClick={(e)=>{e.stopPropagation(); this.confirmation()}}\r\n                    icon={faTrashAlt} size=\"lg\" \r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n// import { Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nexport default class deleteAT extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    /**\r\n     * Does a check to make sure the element is within bounds and then calls then right function to\r\n     * delete the stupid AT\r\n    */\r\n    submitRequest = () => {\r\n        if (this.props.deleteIndex < 0) {\r\n            console.log(\"deleteAT index error\")\r\n            return;\r\n        }\r\n        this.tempdeleteArrPortion();\r\n    }\r\n\r\n    tempdeleteArrPortion = () => {\r\n        \r\n        //Delete from the firebase\r\n        let arr = [...this.props.Array];\r\n        let j = this.props.deleteIndex;\r\n        var id = arr[j]['id']\r\n        const url = \"https://cors-anywhere.herokuapp.com/https://us-central1-project-caitlin-c71a9.cloudfunctions.net/RecursiveDelete\";\r\n        const Data = {\r\n            data : {\r\n                \"path\" : this.props.Item.fbPath.path + \"/\" + this.props.type + \"/\" + id//<<<<< Entire path of the document to delete\r\n            }\r\n        };\r\n        console.log(\"path \" +  this.props.Item.fbPath.path);\r\n        \r\n        const param = {\r\n            headers:{\r\n                //\"content-type\":\"application/json; charset=UTF-8\"\r\n                \"content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(Data),\r\n            method: \"POST\"\r\n        };\r\n        \r\n        fetch(url, param)\r\n        .then((response) => response.json())\r\n        .then((result) => { console.log(result); } )\r\n        .catch((error) => { console.error(error); });\r\n        \r\n        // console.log(\"request was made to delete this index \" + this.props.deleteIndex);\r\n        let items = [...this.props.Array];\r\n        let i = this.props.deleteIndex;\r\n        items[i]['deleted'] = true;\r\n        this.props.Item.fbPath.update({ 'actions&tasks': items }).then(\r\n            (doc) => {\r\n                // console.log('updateEntireArray Finished')\r\n                // console.log(doc);\r\n                if (this.props != null) {\r\n                    this.props.refresh(items);\r\n                }\r\n                else {\r\n                    console.log(\"delete failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * deleteArrPortion :\r\n     * this function will go into the array of that action&task and delete that specific element, after which\r\n     * it will update the array in firestore and refresh the page once that is completed\r\n    */\r\n    deleteArrPortion = () => {\r\n        \r\n        //Delete from the firebase\r\n        const url = \"https://us-central1-project-caitlin-c71a9.cloudfunctions.net/RecursiveDelete\";\r\n        const Data = {\r\n            data : {\r\n                \"path\" : this.props.Item.fbPath  //<<<<< Entire path of the document to delete\r\n            }\r\n        };\r\n        //console.log(\"path \" +  this.props.ISItem.fbPath);\r\n        \r\n        const param = {\r\n            headers:{\r\n                \"content-type\":\"application/json; charset=UTF-8\"\r\n            },\r\n            body:Data,\r\n            method:\"POST\"\r\n        };\r\n        \r\n        fetch(url, param)\r\n        .then(data=>{return data.json()})\r\n        .then(res=>{console.log(res)})\r\n        .catch(error=>console.log(error))\r\n        \r\n        // console.log(\"request was made to delete this  element \" + this.props.deleteIndex);\r\n        let items = [...this.props.Array];\r\n        // console.log(\"delete with: \");\r\n        // console.log(items);\r\n        let i = this.props.deleteIndex;\r\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\r\n        // console.log(\"delete 2 with: \");\r\n        // console.log(newArr);\r\n        this.props.Item.fbPath.update({ 'actions&tasks': newArr }).then(\r\n            (doc) => {\r\n                // console.log('updateEntireArray Finished')\r\n                // console.log(doc);\r\n                if (this.props != null) {\r\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\r\n                    this.props.refresh(newArr);\r\n                }\r\n                else {\r\n                    console.log(\"delete failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    \r\n    confirmation = () => {\r\n        const r = window.confirm(\"Confirm Delete\"); \r\n        if(r === true){ \r\n            // console.log(\"Delete Confirm\")\r\n            this.submitRequest();\r\n            return;\r\n        }\r\n        // console.log(\"Delete Not Confirm\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ marginLeft: \"5px\" }} >\r\n                <FontAwesomeIcon\r\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style ={{marginRight: '15px', color:  \"#000000\" }}\r\n                    onClick={(e) => { e.stopPropagation(); this.confirmation() }}\r\n                    icon={faTrashAlt} size=\"lg\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt} from '@fortawesome/free-solid-svg-icons';\r\nexport default class deleteGR extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        // console.log('Delete AT constructor');  \r\n       \r\n    }\r\n\r\n    submitRequest = () => {\r\n        // console.log(\"request to delete GR\")\r\n        // console.log('delete index ' + this.props.deleteIndex)\r\n        // console.log(this.props.Item)\r\n        // console.log(this.props.Array)\r\n        if (this.props.deleteIndex < 0){\r\n            console.log(\"invalid index exiting delete\");\r\n            return;\r\n        }\r\n        this.tempdeleteArrPortion();\r\n    } \r\n\r\n    tempdeleteArrPortion= () => {\r\n        \r\n        //Delete from the firebase\r\n        let arr = [...this.props.Array];\r\n        var id = arr[this.props.deleteIndex]['id']\r\n        const url = \"https://cors-anywhere.herokuapp.com/https://us-central1-project-caitlin-c71a9.cloudfunctions.net/RecursiveDelete\";\r\n        const Data = {\r\n            data : {\r\n                \"path\" : this.props.Path.path + \"/goals&routines/\" + id//<<<<< Entire path of the document to delete\r\n            }\r\n        };\r\n        console.log(\"path \" +  this.props.Path.path + \"/\" + this.props.type + \"/\" + id);\r\n        \r\n        const param = {\r\n            headers:{\r\n                //\"content-type\":\"application/json; charset=UTF-8\"\r\n                \"content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(Data),\r\n            method: \"POST\"\r\n        };\r\n        \r\n        fetch(url, param)\r\n        .then((response) => response.json())\r\n        .then((result) => { console.log(result); } )\r\n        .catch((error) => { console.error(error); });\r\n        \r\n        let items = [...this.props.Array];\r\n        items[this.props.deleteIndex]['deleted'] = true;\r\n        this.props.Path.update({ 'goals&routines': items }).then(\r\n            (doc) => {\r\n                // console.log('updateEntireArray Finished')\r\n                // console.log(doc);\r\n                if (this.props != null) {\r\n                    // console.log(\"refreshing FireBasev2 from delete GRItem\");\r\n                    this.props.refresh();\r\n                }\r\n                else{\r\n                    console.log(\"delete failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    deleteArrPortion = () => {\r\n        \r\n        //Delete from the firebase\r\n        const url = \"https://us-central1-project-caitlin-c71a9.cloudfunctions.net/RecursiveDelete\";\r\n        const Data = {\r\n            data : {\r\n                \"path\" : this.props.Path  //<<<<< Entire path of the document to delete\r\n            }\r\n        };\r\n        //console.log(\"path \" +  this.props.ISItem.fbPath);\r\n        \r\n        const param = {\r\n            headers:{\r\n                \"content-type\":\"application/json; charset=UTF-8\"\r\n            },\r\n            body:Data,\r\n            method:\"POST\"\r\n        };\r\n        \r\n        fetch(url, param)\r\n        .then(data=>{return data.json()})\r\n        .then(res=>{console.log(res)})\r\n        .catch(error=>console.log(error))\r\n        \r\n        // console.log(\"request was made to delete this  element \" +  this.props.deleteIndex);\r\n        let items = [...this.props.Array];\r\n        // console.log(\"delete with: \");\r\n        let i = this.props.deleteIndex;\r\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\r\n        // console.log(\"delete 2 with: \");\r\n        // console.log(newArr);\r\n        this.props.Path.update({ 'goals&routines': newArr }).then(\r\n            (doc) => {\r\n                // console.log('updateEntireArray Finished')\r\n                // console.log(doc);\r\n                if (this.props != null) {\r\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\r\n                    this.props.refresh();\r\n                }\r\n                else{\r\n                    console.log(\"delete failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    confirmation = () => {\r\n        const r = window.confirm(\"Confirm Delete\"); \r\n        if(r == true){ \r\n            // console.log(\"Delete Confirm\")\r\n            this.submitRequest();\r\n            return;\r\n        }\r\n        console.log(\"Delete Not Confirm\")\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div  style={{ marginLeft: \"5px\" }}>\r\n            \r\n            <FontAwesomeIcon \r\n                title = \"Delete Item\"\r\n                onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                onMouseOut ={event => {event.target.style.color = \"#000000\";}}\r\n                style ={{marginRight: '15px', color:  \"#000000\" }}\r\n                // style ={{ color:  \"#000000\" }}\r\n                onClick={(e)=>{ e.stopPropagation(); this.confirmation()}}\r\n                icon={faTrashAlt} size=\"lg\" \r\n            />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { faEdit} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button} from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport ShowNotifications from \"./ShowNotifications\";\r\nimport ShowATList from \"./ShowNotifications.jsx\";\r\nimport {\r\n    Form,\r\n    Row,\r\n    Col\r\n  } from \"react-bootstrap\";\r\n\r\nexport default class editGR extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showEditModal: false,\r\n            itemToEdit: this.props.ATArray[this.props.i]\r\n        }\r\n    }\r\n\r\n    newInputSubmit = () => {\r\n        // console.log(\"submitting GR edited formed to firebase\");\r\n        let newArr = this.props.ATArray;\r\n     \r\n        newArr[this.props.i] = this.state.itemToEdit;\r\n\r\n        //Add the below attributes in case they don't already exists\r\n\r\n        if (!newArr[this.props.i]['audio']) {\r\n            newArr[this.props.i]['audio'] = '';\r\n        }\r\n        if (!newArr[this.props.i]['datetime_completed']) {\r\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\r\n        }\r\n\r\n        if (!newArr[this.props.i]['datetime_started']) {\r\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\r\n        }\r\n\r\n        this.props.FBPath.update({ 'goals&routines': newArr }).then(\r\n            (doc) => {\r\n\r\n                this.setState({ showEditModal: false })\r\n                if (this.props != null) {\r\n                    // console.log(\"refreshing FireBasev2 from updating GR ITEM \");\r\n                    this.props.refresh(newArr);\r\n                }\r\n                else {\r\n                    console.log(\"update failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    //For possible future use because we currently just typing out the time.\r\n    startTimePicker = () => {\r\n        return (\r\n            <DatePicker className=\"form-control form-control-lg\" type=\"text\" style={{ width: '100%' }}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeCaption=\"Time\"\r\n                dateFormat=\"h:mm aa\"\r\n                selected={(this.state.itemToEdit.available_start_time) ? this.state.itemToEdit.available_start_time : new Date()}\r\n                onChange={(date) => {\r\n                    let temp = this.state.itemToEdit;\r\n                    temp.available_start_time = date;\r\n                    this.setState({\r\n                        itemToEdit: temp\r\n                    })\r\n\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    convertTimeToHRMMSS =  (e) => {\r\n        \r\n        // console.log(e.target.value);\r\n        let num = e.target.value;\r\n        let hours = num/60;\r\n        let rhours = Math.floor(hours);\r\n        let minutes = (hours - rhours)* 60;\r\n        let rminutes = Math.round(minutes);\r\n        if (rhours.toString().length == 1) {\r\n            rhours = \"0\" + rhours;\r\n        }\r\n        if (rminutes.toString().length == 1) {\r\n            rminutes = \"0\" + rminutes;\r\n        }\r\n        // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\r\n        return rhours+\":\" + rminutes +\":\" + \"00\";\r\n    }\r\n\r\n    convertToMinutes = () => {\r\n        let myStr = this.state.itemToEdit.expected_completion_time.split(':');\r\n        let hours = myStr[0];\r\n        let hrToMin = hours* 60;\r\n        let minutes = (myStr[1] * 1 )+ hrToMin;\r\n        let seconds = myStr[2];\r\n        \r\n        // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\r\n        return minutes;\r\n    }\r\n\r\n    handleNotificationChange = (temp) => {\r\n        // console.log(temp);\r\n        this.setState({ itemToEdit: temp });\r\n    }\r\n\r\n    editGRForm = () => {\r\n        return (  \r\n              // <div style={{ border: \"2px\", margin: '0', width: \"315px\", padding: '20px' }}>\r\n            <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\r\n                <label >Title</label>\r\n                 <div className=\"input-group mb-3\" >\r\n                    <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\r\n                        (e) => { e.preventDefault(); e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                    }\r\n\r\n                    //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\r\n                    onKeyDown={\r\n                        (e) => {\r\n                            if (e.keyCode === 32) {\r\n                                let temp = this.state.itemToEdit; temp.title = e.target.value + \" \"; this.setState({ itemToEdit: temp })\r\n                                e.preventDefault(); e.stopPropagation()\r\n                            }\r\n                        }} />\r\n                </div >\r\n\r\n                <label>Photo URL</label>\r\n                <div className=\"input-group mb-3\" >\r\n                    <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\r\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                    } />\r\n                </div >\r\n\r\n                <label>Available Start Time</label>\r\n                <div className=\"input-group mb-3\" >\r\n                    <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\r\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                    } />\r\n                </div >\r\n\r\n                <label>Available End Time</label>\r\n                <div className=\"input-group mb-3\" >\r\n                    <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\r\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                    } />\r\n                </div >\r\n\r\n                <label>This Takes Me</label>\r\n                <Row>\r\n                    <Col  style = {{paddingRight: \"0px\" }}>  \r\n                        <Form.Control\r\n                            // value={this.state.newEventNotification}\r\n                            // onChange={this.handleNotificationChange}\r\n                            type=\"number\"\r\n                            placeholder=\"30\"\r\n                            value = {this.convertToMinutes()}\r\n                            // value = {this.state.itemToEdit.expected_completion_time}\r\n                            style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\r\n                            onChange={\r\n                                // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\r\n                                 (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\r\n                            }\r\n                        />\r\n                    </Col>\r\n                    <Col xs={8} style = {{paddingLeft:\"0px\"}} >\r\n                        <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div className=\"input-group mb-3\"style ={{marginTop:\"10px\"}} >\r\n                    <label className=\"form-check-label\">Time?</label>\r\n\r\n                    <input\r\n                        style={{ marginTop: '5px', marginLeft: '5px' }}\r\n\r\n                        name=\"Timed\"\r\n                        type=\"checkbox\"\r\n                        checked={this.state.itemToEdit.is_timed}\r\n                        onChange={(e) => {\r\n                            e.stopPropagation();\r\n                            let temp = this.state.itemToEdit;\r\n                            // console.log(temp.is_timed)\r\n                            temp.is_timed = !temp.is_timed;\r\n                            this.setState({ itemToEdit: temp })\r\n                        }} />\r\n                </div >\r\n\r\n                <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\r\n                    <label className=\"form-check-label\">Available to Caitlin?</label>\r\n                    <input\r\n                        style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                        name=\"Available\"\r\n                        type=\"checkbox\"\r\n                        checked={this.state.itemToEdit.is_available}\r\n                        onChange={(e) => {\r\n                            e.stopPropagation();\r\n                            let temp = this.state.itemToEdit;\r\n                            temp.is_available = !temp.is_available;\r\n                            this.setState({ itemToEdit: temp })\r\n                        }} />\r\n                </div >\r\n                    \r\n                {this.state.itemToEdit.is_available && \r\n                    <ShowNotifications \r\n                        itemToEditPassedIn = {this.state.itemToEdit}\r\n                        notificationChange = {this.handleNotificationChange}\r\n                />} \r\n                    \r\n\r\n                <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\r\n                <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n\r\n    showIcon = () => {\r\n        return (\r\n            <div style={{ marginLeft: \"5px\" }} >\r\n                <FontAwesomeIcon\r\n\r\n                    title=\"Edit Item\"\r\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style={{ color: \"#000000\"}}\r\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\r\n                    icon={faEdit} size=\"lg\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n   \r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n\r\n            <div onClick={(e) => { e.stopPropagation(); }}>\r\n                {(this.state.showEditModal) ? <div></div> : this.showIcon()} \r\n                 {(this.state.showEditModal ? this.editGRForm() : <div> </div>)}\r\n  \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button } from 'react-bootstrap';\r\nimport ShowNotifications from \"./ShowNotifications\";\r\nimport {\r\n    Form,\r\n    Row,\r\n    Col\r\n  } from \"react-bootstrap\";\r\n\r\n\r\nexport default class editIS extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showEditModal: false,\r\n            itemToEdit: this.props.ISArray[this.props.i]\r\n        }\r\n    }\r\n\r\n    newInputSubmit = () => {\r\n        let newArr  = this.props.ISArray;\r\n        newArr[this.props.i] = this.state.itemToEdit;\r\n\r\n        //Add the below attributes in case they don't already exists\r\n        if(!newArr[this.props.i]['datetime_completed']){\r\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\r\n        }\r\n        if(!newArr[this.props.i]['datetime_started']){\r\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\r\n        }\r\n\r\n        if(!newArr[this.props.i]['audio']){\r\n            newArr[this.props.i]['audio'] = '';\r\n        }\r\n        this.props.FBPath.update({ 'instructions&steps': newArr }).then(\r\n            (doc) => {\r\n                if (this.props != null) {\r\n                    // console.log(\"refreshing FireBasev2 from updating ISItem\");\r\n                    this.setState({ showEditModal: false })\r\n                    this.props.refresh(newArr);\r\n                }\r\n                else{\r\n                    console.log(\"update failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n    convertTimeToHRMMSS =  (e) => {\r\n        \r\n        // console.log(e.target.value);\r\n        let num = e.target.value;\r\n        let hours = num/60;\r\n        let rhours = Math.floor(hours);\r\n        let minutes = (hours - rhours)* 60;\r\n        let rminutes = Math.round(minutes);\r\n        if (rhours.toString().length == 1) {\r\n            rhours = \"0\" + rhours;\r\n        }\r\n        if (rminutes.toString().length == 1) {\r\n            rminutes = \"0\" + rminutes;\r\n        }\r\n        // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\r\n        return rhours+\":\" + rminutes +\":\" + \"00\";\r\n    }\r\n\r\n    convertToMinutes = () => {\r\n        let myStr = this.state.itemToEdit.expected_completion_time.split(':');\r\n        let hours = myStr[0];\r\n        let hrToMin = hours* 60;\r\n        let minutes = (myStr[1] * 1 )+ hrToMin;\r\n        let seconds = myStr[2];\r\n        \r\n        // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\r\n        return minutes;\r\n    }\r\n    \r\n    handleNotificationChange = (temp) => {\r\n        // console.log(temp);\r\n        this.setState({ itemToEdit: temp });\r\n    }\r\n    \r\n    editISForm = () => {\r\n        return (\r\n            // <div style={{margin: '0', width: \"315px\", padding:'20px'}}>\r\n            <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\r\n            <label>Title</label>\r\n            <div className=\"input-group mb-3\" >\r\n                <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\r\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                } />\r\n            </div >\r\n\r\n            <label>Photo URL</label>\r\n            <div className=\"input-group mb-3\" >\r\n                <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\r\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                } />\r\n            </div >\r\n\r\n            <label>Available Start Time</label>\r\n            <div className=\"input-group mb-3\" >\r\n                <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\r\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                } />\r\n            </div >\r\n\r\n            <label>Available End Time</label>\r\n            <div className=\"input-group mb-3\" >\r\n                <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\r\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                } />\r\n            </div >\r\n\r\n            <label>This Takes Me</label>\r\n            <Row>\r\n                <Col  style = {{paddingRight: \"0px\" }}>  \r\n                    <Form.Control\r\n                        // value={this.state.newEventNotification}\r\n                        // onChange={this.handleNotificationChange}\r\n                        type=\"number\"\r\n                        placeholder=\"30\"\r\n                        value = {this.convertToMinutes()}\r\n                        // value = {this.state.itemToEdit.expected_completion_time}\r\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\r\n                        onChange={\r\n                            // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\r\n                            (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\r\n                        }\r\n                    />\r\n                </Col>\r\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\r\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\r\n                </Col>\r\n            </Row>\r\n            \r\n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\r\n                <label className=\"form-check-label\">Time?</label>\r\n                <input\r\n                    style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                    name=\"Timed\"\r\n                    type=\"checkbox\"\r\n                    checked={this.state.itemToEdit.is_timed}\r\n                    onChange={(e) => {\r\n                        e.stopPropagation();\r\n                        let temp = this.state.itemToEdit;\r\n                        // console.log(temp.is_timed)\r\n                        temp.is_timed = !temp.is_timed;\r\n                        this.setState({ itemToEdit: temp })\r\n                    }} />\r\n            </div>\r\n            \r\n            <div className=\"input-group mb-3\" >\r\n                <label className=\"form-check-label\">Available to Caitlin?</label>\r\n                <input\r\n                    style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                    name=\"Available\"\r\n                    type=\"checkbox\"\r\n                    checked={this.state.itemToEdit.is_available}\r\n                    onChange={(e) => {\r\n                        e.stopPropagation();\r\n                        let temp = this.state.itemToEdit;\r\n                        // console.log(temp.is_available)\r\n                        temp.is_available = !temp.is_available;\r\n                        this.setState({ itemToEdit: temp })\r\n                    }} />\r\n            </div >\r\n\r\n            {this.state.itemToEdit.is_available && \r\n                <ShowNotifications \r\n                    itemToEditPassedIn = {this.state.itemToEdit}\r\n                    notificationChange = {this.handleNotificationChange}\r\n                />\r\n            }\r\n\r\n\r\n            <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\r\n            <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\r\n        {/* </div> */}\r\n        </Row>\r\n        )\r\n    }\r\n\r\n    showIcon = () => {\r\n        return (\r\n            <div>\r\n                <FontAwesomeIcon\r\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style={{ color: \"#000000\", marginLeft:\"5px\" }}\r\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\r\n                    icon={faEdit} size=\"lg\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* {(this.state.showEditModal) ? <div> </div> : this.showIcon()}\r\n                {(this.state.showEditModal ? this.editISForm() : <div> </div>)} */}\r\n                {this.state.showEditModal ? this.editISForm() : this.showIcon()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {  Button } from 'react-bootstrap';\r\nimport ShowNotifications from \"./ShowNotifications\";\r\nimport {\r\n    Form,\r\n    Row,\r\n    Col\r\n  } from \"react-bootstrap\";\r\n\r\n\r\nexport default class editAT extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        // console.log('editAT constructor');\r\n        // console.log('Edit index ' + this.props.i)\r\n        // console.log(this.props.FBPath)\r\n        // console.log(this.props.ATArray)\r\n\r\n        this.state = {\r\n            showEditModal: false,\r\n            itemToEdit: this.props.ATArray[this.props.i]\r\n        }\r\n    }\r\n\r\n    newInputSubmit = () => {\r\n        // console.log(\"submitting edited formed to firebase\");\r\n        let newArr  = this.props.ATArray;\r\n        newArr[this.props.i] = this.state.itemToEdit;\r\n        \r\n        //Add the below attributes in case they don't already exists\r\n        if(!newArr[this.props.i]['datetime_completed']){\r\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\r\n        }\r\n        if(!newArr[this.props.i]['audio']){\r\n            newArr[this.props.i]['audio'] = '';\r\n        }\r\n\r\n        if(!newArr[this.props.i]['datetime_started']){\r\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\r\n        }\r\n\r\n        this.props.FBPath.update({ 'actions&tasks': newArr }).then(\r\n            (doc) => {\r\n                // console.log('updateEntireArray Finished')\r\n                // console.log(doc);\r\n                if (this.props != null) {\r\n                    // console.log(\"refreshing FireBasev2 from updating ISItem\");\r\n                    this.setState({ showEditModal: false })\r\n                    this.props.refresh(newArr);\r\n                }\r\n                else{\r\n                    console.log(\"update failure\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n    convertTimeToHRMMSS =  (e) => {\r\n        \r\n        // console.log(e.target.value);\r\n        let num = e.target.value;\r\n        let hours = num/60;\r\n        let rhours = Math.floor(hours);\r\n        let minutes = (hours - rhours)* 60;\r\n        let rminutes = Math.round(minutes);\r\n        if (rhours.toString().length == 1) {\r\n            rhours = \"0\" + rhours;\r\n        }\r\n        if (rminutes.toString().length == 1) {\r\n            rminutes = \"0\" + rminutes;\r\n        }\r\n        // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\r\n        return rhours+\":\" + rminutes +\":\" + \"00\";\r\n    }\r\n\r\n    convertToMinutes = () => {\r\n        let myStr = this.state.itemToEdit.expected_completion_time.split(':');\r\n        let hours = myStr[0];\r\n        let hrToMin = hours* 60;\r\n        let minutes = (myStr[1] * 1 )+ hrToMin;\r\n        let seconds = myStr[2];\r\n        \r\n        // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\r\n        return minutes;\r\n    }\r\n    handleNotificationChange = (temp) => {\r\n        // console.log(temp);\r\n        this.setState({ itemToEdit: temp });\r\n    }\r\n\r\n    editATForm = () => {\r\n        return (\r\n            // <div style={{ margin: '0', width: \"315px\", padding:'20px'}}>\r\n                <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\r\n                  <label>Title</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } \r\n                            \r\n                            //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\r\n                    onKeyDown={\r\n                        (e) => {\r\n                            if (e.keyCode === 32) {\r\n                                 \r\n                                let temp = this.state.itemToEdit; temp.title = e.target.value + \" \"; this.setState({ itemToEdit: temp })\r\n                                e.preventDefault(); e.stopPropagation()\r\n                            }\r\n                        }}\r\n                            />\r\n                        </div >\r\n\r\n                        <label>Photo URL</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Available Start Time</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>Available End Time</label>\r\n                        <div className=\"input-group mb-3\" >\r\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\r\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\r\n                            } />\r\n                        </div >\r\n\r\n                        <label>This Takes Me</label>\r\n                        <Row>\r\n                            <Col  style = {{paddingRight: \"0px\" }}>  \r\n                                <Form.Control\r\n                                    // value={this.state.newEventNotification}\r\n                                    // onChange={this.handleNotificationChange}\r\n                                    type=\"number\"\r\n                                    placeholder=\"30\"\r\n                                    value = {this.convertToMinutes()}\r\n                                    // value = {this.state.itemToEdit.expected_completion_time}\r\n                                    style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\r\n                                    onChange={\r\n                                        // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\r\n                                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\r\n                                    }\r\n                                />\r\n                            </Col>\r\n                            <Col xs={8} style = {{paddingLeft:\"0px\"}} >\r\n                                <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\r\n                            <label className=\"form-check-label\">Time?</label>\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                                name=\"Timed\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.is_timed}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    // console.log(temp.is_timed)\r\n                                    temp.is_timed = !temp.is_timed;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n\r\n                        <div className=\"input-group mb-3\" >\r\n                            <label className=\"form-check-label\">Available to Caitlin?</label>\r\n                            <input\r\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\r\n                                name=\"Available\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.itemToEdit.is_available}\r\n                                onChange={(e) => {\r\n                                    e.stopPropagation();\r\n                                    let temp = this.state.itemToEdit;\r\n                                    // console.log(temp.is_available)\r\n                                    temp.is_available = !temp.is_available;\r\n                                    this.setState({ itemToEdit: temp })\r\n                                }} />\r\n                        </div >\r\n\r\n                        {this.state.itemToEdit.is_available && \r\n                            <ShowNotifications \r\n                                itemToEditPassedIn = {this.state.itemToEdit}\r\n                                notificationChange = {this.handleNotificationChange}\r\n                            />\r\n                        }\r\n                        \r\n\r\n                        \r\n\r\n                <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\r\n                <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\r\n             {/* </div> */}\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    showIcon = () => {\r\n        return (\r\n            <div>\r\n          <FontAwesomeIcon\r\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style={{ color: \"#000000\" }}\r\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\r\n                    icon={faEdit} size=\"lg\"\r\n                />\r\n                </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // <div style={{ marginLeft: \"5px\" }} onClick={(e) => { e.stopPropagation();}}>\r\n            <div  style={{ marginLeft: \"5px\" }} onClick={(e) => { e.stopPropagation();}}>\r\n                {(this.state.showEditModal ? this.editATForm() : <div> </div>)}\r\n                {  (this.state.showEditModal) ? <div> </div> : this.showIcon()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSlash, faList} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nexport default class ShowATList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            iconShow: true\r\n        };\r\n    }\r\n    componentDidUpdate() {}\r\n\r\n    componentDidMount() {\r\n        let items = [...this.props.Array];\r\n        // console.log(\"this is the item\");\r\n        // console.log(items[this.props.Index]);\r\n        this.setState({iconShow: items[this.props.Index]['is_sublist_available']});\r\n    }\r\n    // ListFalse = e => {\r\n    //   this.props.ListCameBackFalse();  \r\n    //   this.setState({iconShow: !this.state.iconShow}); \r\n    // };\r\n\r\n    editFirBaseFalse = e =>{\r\n      // console.log(\"this should be false\");\r\n      this.setState({iconShow: false}, () => {\r\n        let items = [...this.props.Array];\r\n        items[this.props.Index]['is_sublist_available'] = false;\r\n        this.props.Path.update({ 'goals&routines': items }).then(\r\n            (doc) => {\r\n            }\r\n        )\r\n      })\r\n      // this.setState({iconShow: false});\r\n      // // console.log(this.state.iconShow);\r\n      // let items = [...this.props.Array];\r\n      // // console.log(\"this is the item\");\r\n      // // console.log(items[this.props.Index]);\r\n      \r\n      //   items[this.props.Index]['is_sublist_available'] = false;\r\n      //   this.props.Path.update({ 'goals&routines': items }).then(\r\n      //       (doc) => {\r\n      //       }\r\n      //   )\r\n    }\r\n\r\n    editFirBaseTrue = e =>{\r\n      this.setState({iconShow: true}, () => {\r\n        let items = [...this.props.Array];\r\n        items[this.props.Index]['is_sublist_available'] = true;\r\n        this.props.Path.update({ 'goals&routines': items }).then(\r\n            (doc) => {\r\n            }\r\n        )\r\n      })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.iconShow &&  \r\n                    <div  >\r\n                        <FontAwesomeIcon\r\n                            icon={faList}\r\n                            title = \"SubList Available\"\r\n                            style ={{ color:   \"#D6A34C\", marginLeft:\"20px\"}}\r\n                            // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShow: false}); this.editFirBaseFalse()}}\r\n                            onClick={(e)=>{ e.stopPropagation(); this.editFirBaseFalse()}}\r\n                            //onClick={this.ListFalse}\r\n                            size=\"lg\" \r\n                            />\r\n                    </div>\r\n                }\r\n                {!this.state.iconShow &&  \r\n                  <div  \r\n                  // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShowATModal: false})}}>\r\n                  >\r\n                    <span className =\"fa-layers fa-fw\" style = {{marginLeft:\"20px\"}} >\r\n                      <FontAwesomeIcon\r\n                          style ={{color:\"#000000\"}}\r\n                          icon={faList} \r\n                          title = \"SubList Unavailable\"\r\n                          onClick={(e)=>{ e.stopPropagation();  this.editFirBaseTrue()}}\r\n                          size=\"lg\" \r\n                        />\r\n                      <FontAwesomeIcon\r\n                          style ={{color:\"#000000\"}}\r\n                          icon={faSlash} \r\n                          title = \"SubList Unavilable\"\r\n                          onClick={(e)=>{ e.stopPropagation(); this.editFirBaseTrue()}}\r\n                          size=\"lg\" \r\n                      />\r\n                    </span>\r\n                  </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSlash, faList} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nexport default class ShowISList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            iconShow: true\r\n        };\r\n    }\r\n    componentDidUpdate() {}\r\n\r\n  componentDidMount() {\r\n      let items = [...this.props.Array];\r\n    //   console.log(\"this is the item\");\r\n    //   console.log(items[this.props.Index]);\r\n      this.setState({iconShow: items[this.props.Index]['is_sublist_available']});\r\n  }\r\n    // ListFalse = e => {\r\n    //   this.props.ListCameBackFalse();  \r\n    //   this.setState({iconShow: !this.state.iconShow}); \r\n    // };\r\n\r\n    editFirBaseFalse = e =>{\r\n      // console.log(\"this should be false\");\r\n      this.setState({iconShow: false})\r\n      // console.log(this.state.iconShow);\r\n      let items = [...this.props.Array];\r\n    //   console.log(\"this is the item\");\r\n    //   console.log(items[this.props.Index]);\r\n      \r\n        items[this.props.Index]['is_sublist_available'] = false;\r\n        this.props.Path.update({ 'actions&tasks': items }).then(\r\n            (doc) => {\r\n            }\r\n        )\r\n    }\r\n\r\n    editFirBaseTrue = e =>{\r\n      // console.log(\"this should be true\");\r\n      this.setState({iconShow: true})\r\n      // console.log(this.state.iconShow);\r\n      let items = [...this.props.Array];\r\n    //   console.log(\"this is the item\");\r\n    //   console.log(items[this.props.Index]);\r\n        items[this.props.Index]['is_sublist_available'] = true;\r\n        this.props.Path.update({ 'actions&tasks': items }).then(\r\n            (doc) => {\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.iconShow &&  \r\n                    <div  >\r\n                        <FontAwesomeIcon\r\n                            icon={faList}\r\n                            title = \"Show List Item\"\r\n                            // onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                            // onMouseOut ={event => {event.target.style.color = \"#D6A34C\";}}\r\n                            style ={{ color:   \"#D6A34C\", marginLeft:\"20px\"}}\r\n                            // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShow: false}); this.editFirBaseFalse()}}\r\n                            onClick={(e)=>{ e.stopPropagation(); this.editFirBaseFalse()}}\r\n                            //onClick={this.ListFalse}\r\n                            size=\"lg\" \r\n                            />\r\n                    </div>\r\n                }\r\n                {!this.state.iconShow &&  \r\n                  <div  \r\n                  // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShowATModal: false})}}>\r\n                  >\r\n                      {/* <img src={require('../slash-list.png')} \r\n                      style = {{fontSize:\"1.3333333333em\", lineHeight: \"0.75em\", verticalAlign: \"-0.0667em\", marginLeft:\"20px\"}}\r\n                       alt=\"Slash-List Icon\"></img> */}\r\n                    <span className =\"fa-layers fa-fw\" style = {{marginLeft:\"20px\"}} >\r\n                      <FontAwesomeIcon\r\n                          style ={{color:\"#000000\"}}\r\n                        //   color=\"#000000\"\r\n                          icon={faList} \r\n                          title = \"Don't Show List Item\"\r\n                          onClick={(e)=>{ e.stopPropagation();  this.editFirBaseTrue()}}\r\n                          size=\"lg\" \r\n                        />\r\n                      <FontAwesomeIcon\r\n                          style ={{color:\"#000000\"}}\r\n                        //   color=\"#000000\"\r\n                          icon={faSlash} \r\n                          title = \"Don't Show List Item\"\r\n                          onClick={(e)=>{ e.stopPropagation(); this.editFirBaseTrue()}}\r\n                          size=\"lg\" \r\n                      />\r\n                    </span>\r\n                  </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport firebase from \"./firebase\";\r\nimport {\r\n  ListGroup,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport AddNewGRItem from \"./addNewGRItem.jsx\";\r\nimport AddNewATItem from \"./addNewATItem.jsx\";\r\nimport AddNewISItem from \"./addNewISItem.jsx\";\r\nimport DeleteISItem from \"./DeleteISItem.jsx\";\r\nimport DeleteAT from \"./deleteAT.jsx\";\r\nimport DeleteGR from \"./deleteGR.jsx\";\r\nimport EditGR from \"./editGR.jsx\";\r\nimport EditIS from \"./editIS.jsx\";\r\nimport EditAT from \"./EditAT.jsx\";\r\nimport ShowATList from \"./ShowATList\";\r\nimport ShowISList from \"./ShowISList\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUser,\r\n  faUserAltSlash,\r\n  faTrophy,\r\n  faRunning\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport moment from \"moment\";\r\n\r\n\r\n/**\r\n * Notes from Tyler:\r\n * 2/17/2020\r\n * TODOs:\r\n *\r\n * 1.Times from GR are not passed down to AT and times from AT are not passed\r\n * to IS\r\n *\r\n * 2.Clicking on the Goal and Routine at the top level should closed previous\r\n * AT and IS Modals.\r\n *\r\n *\r\n *\r\n */\r\n\r\nexport default class FirebaseV2 extends React.Component {\r\n  state = {\r\n    firebaseRootPath: firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(\"7R6hAVmDrNutRkG3sVRy\"),\r\n    originalGoalsAndRoutineArr: [],\r\n    goals: [],\r\n    routines: [],\r\n    is_sublist_available: true,\r\n    //This single GR item is passed to AddNewATItem to help processed the new item\r\n    singleGR: {\r\n      //everytime a goal/routine is clicked, we open a modal and the modal info will be provided by this object\r\n      show: false, // Show the modal\r\n      type: \"None\",\r\n      title: \"GR Name\",\r\n      photo: \"\",\r\n      available_end_time: \"\", //TODO get these used\r\n      available_start_time: \"\", //TODO get these used\r\n      id: null,\r\n      arr: [],\r\n      fbPath: null\r\n    },\r\n\r\n    singleAT: {\r\n      //for each action/task we click on, we open a new modal to show the steps/instructions affiliate\r\n      //with the task\r\n      show: false, // Show the model\r\n      type: \"None\", // Action or Task\r\n      title: \"AT Name\", //Title of action task ,\r\n      available_end_time: \"\", //TODO get these used\r\n      available_start_time: \"\", //TODO get these used\r\n      photo: \"\",\r\n      id: null, //id of Action Task\r\n      arr: [], //array of instruction/steps formatted to display as a list\r\n      fbPath: null //Firebase direction to the arr\r\n    },\r\n    singleATitemArr: [], //temp fix for my bad memory of forgetting to add this in singleGR\r\n    singleISitemArr: [], //temp fix for my bad memory of forgetting to add this in singleAT\r\n    modalWidth: \"350px\", //primary width size for all modals\r\n\r\n    //Use to decided whether to show the respective modals\r\n    addNewGRModalShow: false,\r\n    addNewATModalShow: false,\r\n    addNewISModalShow: false,\r\n\r\n    //used to determine thumbnail picture size\r\n    thumbnailWidth: \"150px\",\r\n    thumbnailHeight: \"100px\",\r\n    thumbnailWidthV2: \"200px\",\r\n    thumbnailHeightV2: \"50px\",\r\n\r\n    //isRoutine is to check whether we clicked on add routine or add goal\r\n    isRoutine: true,\r\n    availabilityColorCode: \"#D6A34C\"\r\n\r\n    //used for the list item icon.If at GR and this icon is turned off. then wont be able to show Action and taske list.\r\n    // iconShowATModal: true\r\n  };\r\n\r\n  /**\r\n   * refreshATItem:\r\n   * Given a array, it will replace the current array of singleGR which holds the layout\r\n   * list of all action task under it and singleATitemArr which just holds the raw data.\r\n   *\r\n   */\r\n  refreshATItem = arr => {\r\n    // console.log(\"refreshATItem was called\");\r\n\r\n    this.setState({ singleATitemArr: arr });\r\n    let resArr = this.createListofAT(arr);\r\n    let singleGR = this.state.singleGR;\r\n    singleGR.arr = resArr;\r\n    this.setState({ singleGR: singleGR });\r\n  };\r\n\r\n  /**\r\n   *\r\n   * refreshISItem - given A array item,\r\n   * this method will take those items,\r\n   * put it in the list form to present\r\n   * as a list of instructions and the\r\n   * it will also update the array of\r\n   * the normal list of instructions with\r\n   * the one passed in.\r\n   */\r\n  refreshISItem = arr => {\r\n    // console.log(\"refreshISItem new arr\");\r\n    // console.log(arr);\r\n    this.setState({\r\n      singleISitemArr: arr\r\n    });\r\n    let resArr = this.createListofIS(arr);\r\n    let singleAt = this.state.singleAT;\r\n    singleAt.arr = resArr;\r\n    this.setState({ singleAT: singleAt });\r\n  };\r\n\r\n  constructor(props) {\r\n    // serves almost no purpose currently\r\n    super(props);\r\n    // console.log(\"running Firebase 2\");\r\n    // this.state = {date: new Date()};\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Grab the\r\n    this.grabFireBaseRoutinesGoalsData();\r\n  }\r\n\r\n  /**\r\n   * grabFireBaseRoutinesGoalsData:\r\n   * this function grabs the goals&routines array from the path located in this function\r\n   * which will then populate the goals, routines,originalGoalsAndRoutineArr array\r\n   * separately. The arrays will be used for display and data manipulation later.\r\n   *\r\n   */\r\n  grabFireBaseRoutinesGoalsData = () => {\r\n    const db = firebase.firestore();\r\n    // console.log(\"FirebaseV2 component did mount\");\r\n    const docRef = db.collection(\"users\").doc(\"7R6hAVmDrNutRkG3sVRy\");\r\n    docRef\r\n      .get()\r\n      .then(doc => {\r\n        if (doc.exists) {\r\n          // console.log(doc.data());\r\n          var x = doc.data();\r\n          // console.log(x[\"goals&routines\"]);\r\n          x = x[\"goals&routines\"];\r\n          let routine = [];\r\n          let goal = [];\r\n          for (let i = 0; i < x.length; ++i) {\r\n            if (!x[i][\"deleted\"] && x[i][\"is_persistent\"]) {\r\n              // console.log(\"routine \" + x[i][\"title\"]);\r\n              routine.push(x[i]);\r\n            } else if (!x[i][\"deleted\"] && !x[i][\"is_persistent\"]) {\r\n              // console.log(\"not routine \" + x[i][\"title\"]);\r\n              goal.push(x[i]);\r\n            }\r\n          }\r\n          this.setState({\r\n            originalGoalsAndRoutineArr: x,\r\n            goals: goal,\r\n            addNewGRModalShow: false,\r\n            routines: routine\r\n          });\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such document!\");\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    console.log(\" FirebaseV2 will unmount web\");\r\n  }\r\n\r\n  formatDateTime(str) {\r\n    const formattedStr = str.replace(/\\//g, \"-\");\r\n    const time = moment(formattedStr);\r\n    return time.format(\"YYYY MMM DD HH:mm\");\r\n  }\r\n\r\n  onInputChange = e => {\r\n    const inputField = e.target.value;\r\n    // console.log(\"FirebaseV2.jsx :: onInputChange :: \" + inputField);\r\n  };\r\n  //This function essentially grabs all action/tasks\r\n  //for the routine or goal passed in and pops open the\r\n  //modal for the action/task\r\n  getATList = (id, title, persist) => {\r\n    const db = firebase.firestore();\r\n    // console.log(\"getATList function with id : \" + id);\r\n    let docRef = db\r\n      .collection(\"users\")\r\n      .doc(\"7R6hAVmDrNutRkG3sVRy\")\r\n      .collection(\"goals&routines\")\r\n      .doc(id);\r\n    docRef\r\n      .get()\r\n      .then(doc => {\r\n        if (doc.exists) {\r\n          // console.log(doc.data());\r\n          var x = doc.data()[\"actions&tasks\"];\r\n          // console.log(x);\r\n          if (x == null) {\r\n            // console.log(\"No actions&tasks array!\");\r\n            let singleGR = {\r\n              //Variable to hold information about the parent Goal/ Routine\r\n              show: true,\r\n              type: persist ? \"Routine\" : \"Goal\",\r\n              title: title,\r\n              id: id,\r\n              arr: [],\r\n              fbPath: docRef\r\n            };\r\n            this.setState({\r\n              singleGR: singleGR,\r\n              singleATitemArr: []\r\n            });\r\n            return;\r\n          }\r\n\r\n          let singleGR = {\r\n            //initialise without list to pass fbPath to child\r\n            show: true,\r\n            type: persist ? \"Routine\" : \"Goal\",\r\n            title: title,\r\n            id: id,\r\n            arr: [], //array of current action/task in this singular Routine\r\n            fbPath: docRef\r\n          };\r\n\r\n          this.setState({\r\n            singleGR: singleGR,\r\n            singleATitemArr: x\r\n          });\r\n\r\n          let resArr = this.createListofAT(x);\r\n          //assemble singleGR template here:\r\n\r\n          singleGR = {\r\n            show: true,\r\n            type: persist ? \"Routine\" : \"Goal\",\r\n            title: title,\r\n            id: id,\r\n            arr: resArr, //array of current action/task in this singular Routine\r\n            fbPath: docRef\r\n          };\r\n\r\n          this.setState({\r\n            singleGR: singleGR\r\n          });\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such document!\");\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n  };\r\n\r\n  //Creates a array of all actions/task for get getATList function\r\n  //getATList stands for get all action/task\r\n  createListofAT = A => {\r\n    let res = [];\r\n    for (let i = 0; i < A.length; i++) {\r\n      // console.log(A[i][\"title\"]);\r\n      if (!A[i][\"id\"] || !A[i][\"title\"]) {\r\n        // console.log(\"missing title, or id at index : \" + i);\r\n        return [];\r\n      }\r\n      if (A[i][\"deleted\"]) {\r\n        //item is \"deleted\" and should not be shown...\r\n        continue;\r\n      }\r\n      let tempID = A[i][\"id\"];\r\n      let tempPhoto = A[i][\"photo\"];\r\n      // console.log(tempPhoto);\r\n      let tempTitle = A[i][\"title\"];\r\n      let tempAvailable = A[i][\"is_available\"];\r\n      res.push(\r\n        <div key={\"AT\" + i}>\r\n          <ListGroup.Item\r\n            action\r\n            onClick={() => {\r\n              this.ATonClickEvent(tempTitle, tempID);\r\n            }}\r\n            variant=\"light\"\r\n            style={{ marginBottom: \"3px\" }}\r\n          >\r\n          <Row style={{ margin: \"0\", marginBottom:\"10px\"}} className=\"d-flex flex-row-center\">\r\n            <Col>\r\n              <div className=\"fancytext\">{tempTitle}</div>\r\n            </Col>\r\n          </Row>\r\n\r\n              \r\n          {tempPhoto ? (\r\n          <Row >\r\n            <Col xs={7}\r\n                // sm=\"auto\"\r\n                // md=\"auto\"\r\n                // lg=\"auto\"\r\n                style={{  paddingRight:\"0px\"}}\r\n              >\r\n                  <img\r\n                    src={tempPhoto}\r\n                    alt=\"Action/Task\"\r\n                    // height={this.state.thumbnailHeight}\r\n                    // width={this.state.thumbnailWidth}\r\n                    className=\"center\"\r\n                    height=\"80px\"\r\n                    width=\"auto\"\r\n                  />\r\n              </Col>\r\n              <Col style = {{paddingLeft: \"0px\"}}>\r\n                <Row style = {{marginTop:\"10px\"}}>\r\n                    {tempAvailable ? (\r\n                    <div style={{ marginLeft: \"5px\" }}>\r\n                      <FontAwesomeIcon\r\n                        title=\"Available to Cailin\"\r\n                        style={{ color: this.state.availabilityColorCode }}\r\n                        onClick={e => {\r\n                          e.stopPropagation();\r\n                          alert(\"Item Is Availble to Caitlin\");\r\n                        }}\r\n                        icon={faUser}\r\n                        size=\"lg\"\r\n                      />{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    <div >\r\n                      <FontAwesomeIcon\r\n                        title=\"Unavailable to Caitlin\"\r\n                        style={{ color: \"#000000\" }}\r\n                        onClick={e => {\r\n                          e.stopPropagation();\r\n                          alert(\"Item Is NOT Availble to Caitlin\");\r\n                        }}\r\n                        icon={faUserAltSlash}\r\n                        size=\"lg\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {/* Index={this.findIndexByID(tempID)} \r\n                    Array={this.state.originalGoalsAndRoutineArr}\r\n                    Path={this.state.firebaseRootPath} */}\r\n                  <ShowISList\r\n                    Index={i} \r\n                    Array={this.state.singleATitemArr} \r\n                    Path={this.state.singleGR.fbPath}\r\n                   />\r\n                </Row>\r\n                <Row style ={{marginTop:\"15px\", marginBottom: \"10px\"}}>\r\n                  <DeleteAT\r\n                  deleteIndex={i}\r\n                  type={\"actions&tasks\"}\r\n                  Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\r\n                  Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\r\n                  refresh={this.refreshATItem}\r\n                  />\r\n                  <EditAT\r\n                    marginLeftV= \"-170px\"\r\n                    i={i} //index to edit\r\n                    ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\r\n                    FBPath={this.state.singleGR.fbPath} //holds the path to the array data\r\n                    refresh={this.refreshATItem} //function to refresh AT data\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            ) : (\r\n              <div>\r\n              <Row style ={{marginLeft:\"100px\"}} className=\"d-flex \" >\r\n                  {tempAvailable ? (\r\n                  <div style={{ marginLeft: \"5px\" }}>\r\n                    <FontAwesomeIcon\r\n                      title=\"Available to Cailin\"\r\n                      style={{ color: this.state.availabilityColorCode }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is Availble to Caitlin\");\r\n                      }}\r\n                      icon={faUser}\r\n                      size=\"lg\"\r\n                    />{\" \"}\r\n                  </div>\r\n                ) : (\r\n                  <div >\r\n                    <FontAwesomeIcon\r\n                      title=\"Unavailable to Caitlin\"\r\n                      style={{ color: \"#000000\" }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is NOT Availble to Caitlin\");\r\n                      }}\r\n                      icon={faUserAltSlash}\r\n                      size=\"lg\"\r\n                    />\r\n                  </div>\r\n                )}\r\n                <ShowISList \r\n                  Index={i} \r\n                  Array={this.state.singleATitemArr} \r\n                  Path={this.state.singleGR.fbPath}\r\n                />\r\n              </Row>\r\n              <Row style={{ marginTop:\"15px\", marginLeft:\"100px\"}} className=\"d-flex \" >\r\n                <DeleteAT\r\n                  deleteIndex={i}\r\n                  type={\"actions&tasks\"}\r\n                  Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\r\n                  Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\r\n                  refresh={this.refreshATItem}\r\n                  />\r\n                <EditAT\r\n                  marginLeftV= \"-130px\"\r\n                  i={i} //index to edit\r\n                  ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\r\n                  FBPath={this.state.singleGR.fbPath} //holds the path to the array data\r\n                  refresh={this.refreshATItem} //function to refresh AT data\r\n                />\r\n              </Row>\r\n              </div>\r\n            \r\n            )}\r\n\r\n\r\n\r\n            {/* This is the V1 */}\r\n            {/* <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-reverse\">\r\n              {tempAvailable ? (\r\n                <div style={{ marginLeft: \"5px\" }}>\r\n                  <FontAwesomeIcon\r\n                    title=\"Available to Cailin\"\r\n                    // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                    // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                    style={{ color: this.state.availabilityColorCode }}\r\n                    onClick={e => {\r\n                      e.stopPropagation();\r\n                      alert(\"Item Is Availble to Caitlin\");\r\n                    }}\r\n                    icon={faUser}\r\n                    size=\"lg\"\r\n                  />{\" \"}\r\n                </div>\r\n              ) : (\r\n                <div style={{ marginLeft: \"5px\" }}>\r\n                  <FontAwesomeIcon\r\n                    title=\"Unavailable to Caitlin\"\r\n                    style={{ color: \"#000000\" }}\r\n                    onClick={e => {\r\n                      e.stopPropagation();\r\n                      alert(\"Item Is NOT Availble to Caitlin\");\r\n                    }}\r\n                    icon={faUserAltSlash}\r\n                    size=\"lg\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </Row>\r\n\r\n            <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\r\n              <Col>\r\n                <div className=\"fancytext\">{tempTitle}</div>\r\n              </Col>\r\n\r\n              <Col\r\n                sm=\"auto\"\r\n                md=\"auto\"\r\n                lg=\"auto\"\r\n                style={{ width: \"100%\", height: \"100%\" }}\r\n              >\r\n                {tempPhoto ? (\r\n                  <img\r\n                    src={tempPhoto}\r\n                    alt=\"Routine\"\r\n                    height={this.state.thumbnailHeight}\r\n                    width={this.state.thumbnailWidth}\r\n                    className=\"center\"\r\n                  />\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row\r\n              style={{\r\n                margin: \"0\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"10px\",\r\n                marginBottom: \"10px\"\r\n              }}\r\n            >\r\n              <DeleteAT\r\n                deleteIndex={i}\r\n                type={\"actions&tasks\"}\r\n                Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\r\n                Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\r\n                refresh={this.refreshATItem}\r\n              />\r\n\r\n              <EditAT\r\n                i={i} //index to edit\r\n                ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\r\n                FBPath={this.state.singleGR.fbPath} //holds the path to the array data\r\n                refresh={this.refreshATItem} //function to refresh AT data\r\n              />\r\n            </Row> */}\r\n          </ListGroup.Item>\r\n        </div>\r\n      );\r\n    }\r\n    return res;\r\n  };\r\n\r\n  /**\r\n   * takes the list of steps/instructions and returns\r\n   * it in the form of a ListGroup for presentation\r\n   */\r\n  createListofIS = A => {\r\n    let res = [];\r\n    for (let i = 0; i < A.length; i++) {\r\n      // console.log(A[i][\"title\"]);\r\n      // console.log(A[i][\"id\"]);\r\n      /**\r\n       * TODO: notify jeremy of this issue:\r\n       * Some of these here don't have IDs, so we need to\r\n       * ignore it for now\r\n       */\r\n      let tempPhoto = A[i][\"photo\"];\r\n      // console.log(\"IS index \" + i + \" photo url :\" + tempPhoto);\r\n      let tempTitle = A[i][\"title\"];\r\n      let tempAvailable = A[i][\"is_available\"];\r\n      res.push(\r\n        <div key={\"IS\" + i} style={{ width: \"100%\" }}>\r\n          <ListGroup.Item\r\n            action\r\n            onClick={() => {\r\n              this.ISonClickEvent(tempTitle);\r\n            }}\r\n            variant=\"light\"\r\n            style={{ width: \"100%\", marginBottom: \"3px\" }}\r\n          >\r\n           \r\n          <Row style={{ margin: \"0\", marginBottom:\"10px\"}} className=\"d-flex flex-row-center\">\r\n            <Col>\r\n              <div className=\"fancytext\">{tempTitle}</div>\r\n            </Col>\r\n          </Row>\r\n           {tempPhoto ? (\r\n          <Row >\r\n            <Col xs={7}\r\n                style={{  paddingRight:\"0px\"}}\r\n              >\r\n                  <img\r\n                    src={tempPhoto}\r\n                    alt=\"Action/Task\"\r\n                    className=\"center\"\r\n                    height=\"80px\"\r\n                    width=\"auto\"\r\n                  />\r\n              </Col>\r\n              <Col style = {{paddingLeft: \"0px\"}}>\r\n                <Row style = {{marginTop:\"10px\"}}>\r\n                    {tempAvailable ? (\r\n                    <div style={{ marginLeft: \"5px\" }}>\r\n                      <FontAwesomeIcon\r\n                        title=\"Available to Cailin\"\r\n                        style={{ color: this.state.availabilityColorCode }}\r\n                        onClick={e => {\r\n                          e.stopPropagation();\r\n                          alert(\"Item Is Availble to Caitlin\");\r\n                        }}\r\n                        icon={faUser}\r\n                        size=\"lg\"\r\n                      />{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    <div >\r\n                      <FontAwesomeIcon\r\n                        title=\"Unavailable to Caitlin\"\r\n                        style={{ color: \"#000000\" }}\r\n                        onClick={e => {\r\n                          e.stopPropagation();\r\n                          alert(\"Item Is NOT Availble to Caitlin\");\r\n                        }}\r\n                        icon={faUserAltSlash}\r\n                        size=\"lg\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {/* <ShowATList /> */}\r\n                </Row>\r\n                <Row style ={{marginTop:\"15px\", marginBottom: \"10px\"}}>\r\n                  <DeleteISItem\r\n                    deleteIndex={i}\r\n                    ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\r\n                    ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\r\n                    refresh={this.refreshISItem}\r\n                  />\r\n\r\n                  <EditIS\r\n                    marginLeftV= \"-170px\"\r\n                    i={i} //index to edit\r\n                    ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\r\n                    FBPath={this.state.singleAT.fbPath} //holds the fbPath to arr to be updated\r\n                    refresh={this.refreshISItem} //function to refresh IS data\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            ) : (\r\n              <div>\r\n              <Row style ={{marginLeft:\"100px\"}} className=\"d-flex \" >\r\n                  {tempAvailable ? (\r\n                  <div style={{ marginLeft: \"5px\" }}>\r\n                    <FontAwesomeIcon\r\n                      title=\"Available to Cailin\"\r\n                      style={{ color: this.state.availabilityColorCode }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is Availble to Caitlin\");\r\n                      }}\r\n                      icon={faUser}\r\n                      size=\"lg\"\r\n                    />{\" \"}\r\n                  </div>\r\n                ) : (\r\n                  <div >\r\n                    <FontAwesomeIcon\r\n                      title=\"Unavailable to Caitlin\"\r\n                      style={{ color: \"#000000\" }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is NOT Availble to Caitlin\");\r\n                      }}\r\n                      icon={faUserAltSlash}\r\n                      size=\"lg\"\r\n                    />\r\n                  </div>\r\n                )}\r\n                {/* <ShowATList /> */}\r\n              </Row>\r\n              <Row style={{ marginTop:\"15px\", marginLeft:\"100px\"}} className=\"d-flex \" >\r\n                <DeleteISItem\r\n                  deleteIndex={i}\r\n                  ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\r\n                  ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\r\n                  refresh={this.refreshISItem}\r\n                />\r\n\r\n                <EditIS\r\n                  marginLeftV= \"-130px\"\r\n                  i={i} //index to edit\r\n                  ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\r\n                  FBPath={this.state.singleAT.fbPath} //holds the fbPath to arr to be updated\r\n                  refresh={this.refreshISItem} //function to refresh IS data\r\n                />\r\n              </Row>\r\n              </div>\r\n            \r\n            )}\r\n          </ListGroup.Item>\r\n        </div>\r\n      );\r\n    }\r\n    return res;\r\n  };\r\n\r\n  ISonClickEvent = title => {\r\n    console.log(\"Inside IS Click \" + title);\r\n  };\r\n\r\n  /**\r\n   * In this function we are passed in the id title and persist property of the incoming routine/goal\r\n   * and we need to make return a viewable list of all the actions/tasks for this routine/goal\r\n   * which is done in getATList function\r\n   */\r\n  GRonClickEvent = (title, id, persist) => {\r\n    // console.log(id, title, persist);\r\n    this.getATList(id, title, persist);\r\n  };\r\n\r\n  /**\r\n   * we are passed in the action/task id and title\r\n   * and we will need to grab all steps/Instructions related to this action/task,\r\n   *\r\n   */\r\n  ATonClickEvent = (title, id) => {\r\n    let stepsInstructionArrayPath = this.state.firebaseRootPath\r\n      .collection(\"goals&routines\")\r\n      .doc(this.state.singleGR.id)\r\n      .collection(\"actions&tasks\")\r\n      .doc(id);\r\n    console.log(id, title);\r\n    let temp = {\r\n      show: true,\r\n      type: \"Action/Task\",\r\n      title: title,\r\n      id: id,\r\n      arr: [],\r\n      fbPath: stepsInstructionArrayPath\r\n    };\r\n    stepsInstructionArrayPath\r\n      .get()\r\n      .then(doc => {\r\n        if (doc.exists) {\r\n          // console.log(\"Grabbing steps/instructions data:\");\r\n          // console.log(doc.data());\r\n          var x = doc.data();\r\n          x = x[\"instructions&steps\"];\r\n          if (x == null) {\r\n            this.setState({ singleAT: temp });\r\n            return;\r\n          }\r\n          // console.log(x);\r\n          //Below is a fix for fbPath Null when we pass it\r\n          //createListofIS and DeleteISItem.jsx, we need a path\r\n          //to delete the item, so we set the path then create the\r\n          //the array and reset it.\r\n          this.setState({ singleAT: temp, singleISitemArr: x });\r\n          temp.arr = this.createListofIS(x);\r\n          this.setState({ singleAT: temp, singleISitemArr: x });\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No Instruction/Step documents!\");\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n        alert(\"Error getting document:\", error);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * findIndexByID:\r\n   * given a id, it will loop through the original goals and routine array to\r\n   * return the index with the corresonding id\r\n   */\r\n  findIndexByID = id => {\r\n    let originalGoalsAndRoutineArr = this.state.originalGoalsAndRoutineArr;\r\n    for (let i = 0; i < originalGoalsAndRoutineArr.length; i++) {\r\n      if (id === originalGoalsAndRoutineArr[i].id) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  // ListFalse = ()=>{\r\n  //   this.setState({\r\n  //     is_sublist_available:false\r\n  //   });\r\n  // };\r\n\r\n  getRoutines = () => {\r\n    let displayRoutines = [];\r\n    if (this.state.routines.length !== 0) {\r\n      //Check to make sure routines exists\r\n      for (let i = 0; i < this.state.routines.length; i++) {\r\n        let tempTitle = this.state.routines[i][\"title\"];\r\n        let tempID = this.state.routines[i][\"id\"];\r\n        let tempPersist = this.state.routines[i][\"is_persistent\"];\r\n\r\n        displayRoutines.push(\r\n          <div key={\"test0\" + i}>\r\n            <ListGroup.Item\r\n              action\r\n              onClick={() => {\r\n                this.GRonClickEvent(tempTitle, tempID, tempPersist);\r\n              }}\r\n              variant=\"light\"\r\n              style={{ marginBottom: \"3px\" }}\r\n            >\r\n            \r\n          <Row style={{ margin: \"0\", marginBottom:\"10px\"}} className=\"d-flex flex-row-center\">\r\n            <Col>\r\n                  <div className=\"fancytext\">\r\n                    {this.state.routines[i][\"title\"]}\r\n                  </div>\r\n                </Col>\r\n          </Row>\r\n           {this.state.routines[i][\"photo\"] ? (\r\n          <Row >\r\n            <Col xs={7}\r\n                style={{  paddingRight:\"0px\"}}\r\n              >\r\n                  <img\r\n                    src={this.state.routines[i][\"photo\"]}\r\n                    alt=\"Routines\"\r\n                    className=\"center\"\r\n                    height=\"80px\"\r\n                    width=\"auto\"\r\n                  />\r\n              </Col>\r\n              <Col style = {{paddingLeft: \"0px\"}}>\r\n                <Row style = {{marginTop:\"10px\"}}>\r\n                    {this.state.routines[i][\"is_available\"]  ? (\r\n                    <div style={{ marginLeft: \"5px\" }}>\r\n                      <FontAwesomeIcon\r\n                        title=\"Available to Cailin\"\r\n                        style={{ color: this.state.availabilityColorCode }}\r\n                        onClick={e => {\r\n                          e.stopPropagation();\r\n                          alert(\"Item Is Availble to Caitlin\");\r\n                        }}\r\n                        icon={faUser}\r\n                        size=\"lg\"\r\n                      />{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    <div >\r\n                      <FontAwesomeIcon\r\n                        title=\"Unavailable to Caitlin\"\r\n                        style={{ color: \"#000000\" }}\r\n                        onClick={e => {\r\n                          e.stopPropagation();\r\n                          alert(\"Item Is NOT Availble to Caitlin\");\r\n                        }}\r\n                        icon={faUserAltSlash}\r\n                        size=\"lg\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <ShowATList  \r\n                    Index={this.findIndexByID(tempID)}\r\n                    Array={this.state.originalGoalsAndRoutineArr}\r\n                    Path={this.state.firebaseRootPath}\r\n                    // ListCameBackFalse= {this.ListFalse}\r\n                  />\r\n                </Row>\r\n                <Row style ={{marginTop:\"15px\", marginBottom: \"10px\"}}>\r\n                  <DeleteGR\r\n                    deleteIndex={this.findIndexByID(tempID)}\r\n                    Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                    Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                    refresh={this.grabFireBaseRoutinesGoalsData}\r\n                  />\r\n                 \r\n                  <EditGR\r\n                    marginLeftV= \"-170px\"\r\n                    i={this.findIndexByID(tempID)} //index to edit\r\n                    ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                    FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                    refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\r\n                    is_sublist_available= {this.is_sublist_available}\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            ) : (\r\n              <div>\r\n              <Row style ={{marginLeft:\"100px\"}} className=\"d-flex \" >\r\n                  {this.state.routines[i][\"is_available\"] ? (\r\n                  <div style={{ marginLeft: \"5px\" }}>\r\n                    <FontAwesomeIcon\r\n                      title=\"Available to Cailin\"\r\n                      style={{ color: this.state.availabilityColorCode }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is Availble to Caitlin\");\r\n                      }}\r\n                      icon={faUser}\r\n                      size=\"lg\"\r\n                    />{\" \"}\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <FontAwesomeIcon\r\n                      title=\"Unavailable to Caitlin\"\r\n                      style={{ color: \"#000000\" }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is NOT Availble to Caitlin\");\r\n                      }}\r\n                      icon={faUserAltSlash}\r\n                      size=\"lg\"\r\n                    />\r\n                  </div>\r\n                )}\r\n                <ShowATList \r\n                  Index={this.findIndexByID(tempID)}\r\n                  Array={this.state.originalGoalsAndRoutineArr}\r\n                  Path={this.state.firebaseRootPath}\r\n                  />\r\n              </Row>\r\n              <Row style={{ marginTop:\"15px\", marginLeft:\"100px\"}} className=\"d-flex \" >\r\n                <DeleteGR\r\n                  deleteIndex={this.findIndexByID(tempID)}\r\n                  Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                  Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                  refresh={this.grabFireBaseRoutinesGoalsData}\r\n                />\r\n                <EditGR\r\n                  marginLeftV= \"-130px\"\r\n                  i={this.findIndexByID(tempID)} //index to edit\r\n                  ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                  FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                  refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\r\n                />\r\n              </Row>\r\n             </div>\r\n            )}\r\n              <Row>\r\n                <div style={{ fontSize: \"12px\" }}>\r\n                  {this.state.routines[i][\"datetime_started\"] ? (\r\n                    <div style={{ marginTop: \"3px\" }}>\r\n                      {\"Previous Start Time: \" +\r\n                        this.formatDateTime(\r\n                          this.state.routines[i][\"datetime_started\"]\r\n                        )}{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    <div> </div>\r\n                  )}\r\n                  {this.state.routines[i][\"datetime_completed\"] ? (\r\n                    <div>\r\n                      {\"Previous Completed Time: \" +\r\n                        this.formatDateTime(\r\n                          this.state.routines[i][\"datetime_completed\"]\r\n                        )}{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    <div> </div>\r\n                  )}\r\n                </div>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return displayRoutines;\r\n  };\r\n\r\n  getGoals = () => {\r\n    let displayGoals = [];\r\n    if (this.state.goals.length != null) {\r\n      //Check to make sure routines exists\r\n      for (let i = 0; i < this.state.goals.length; i++) {\r\n        let tempTitle = this.state.goals[i][\"title\"];\r\n        let tempID = this.state.goals[i][\"id\"];\r\n        let tempPersist = this.state.goals[i][\"is_persistent\"];\r\n        displayGoals.push(\r\n          <div key={\"test1\" + i}>\r\n            <ListGroup.Item\r\n              action\r\n              onClick={() => {\r\n                this.GRonClickEvent(tempTitle, tempID, tempPersist);\r\n              }}\r\n              variant=\"light\"\r\n              style={{ marginBottom: \"3px\" }}\r\n            >\r\n            \r\n\r\n            <Row style={{ margin: \"0\", marginBottom:\"10px\"}} className=\"d-flex flex-row-center\">\r\n            <Col>\r\n              <div className=\"fancytext\">{tempTitle}</div>\r\n            </Col>\r\n          </Row>\r\n           {this.state.goals[i][\"photo\"] ? (\r\n          <Row >\r\n            <Col xs={7}\r\n                style={{  paddingRight:\"0px\"}}\r\n              >\r\n                  <img\r\n                    src={this.state.goals[i][\"photo\"]}\r\n                    alt=\"Instructions/Steps\"\r\n                    className=\"center\"\r\n                    height=\"80px\"\r\n                    width=\"auto\"\r\n                  />\r\n              </Col>\r\n              <Col style = {{paddingLeft: \"0px\"}}>\r\n                <Row style = {{marginTop:\"10px\"}}>\r\n                    {this.state.goals[i][\"is_available\"] ? (\r\n                    <div style={{ marginLeft: \"5px\" }}>\r\n                      <FontAwesomeIcon\r\n                        title=\"Available to Cailin\"\r\n                        style={{ color: this.state.availabilityColorCode }}\r\n                        onClick={e => {\r\n                          e.stopPropagation();\r\n                          alert(\"Item Is Availble to Caitlin\");\r\n                        }}\r\n                        icon={faUser}\r\n                        size=\"lg\"\r\n                      />{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    <div >\r\n                      <FontAwesomeIcon\r\n                        title=\"Unavailable to Caitlin\"\r\n                        style={{ color: \"#000000\" }}\r\n                        onClick={e => {\r\n                          e.stopPropagation();\r\n                          alert(\"Item Is NOT Availble to Caitlin\");\r\n                        }}\r\n                        icon={faUserAltSlash}\r\n                        size=\"lg\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <ShowATList\r\n                    Index={this.findIndexByID(tempID)} \r\n                    Array={this.state.originalGoalsAndRoutineArr}\r\n                    Path={this.state.firebaseRootPath}\r\n                    />\r\n                </Row>\r\n                <Row style ={{marginTop:\"15px\", marginBottom: \"10px\"}}>\r\n                  <DeleteGR\r\n                    deleteIndex={this.findIndexByID(tempID)}\r\n                    Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                    Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                    refresh={this.grabFireBaseRoutinesGoalsData}\r\n                  />\r\n                  <EditGR\r\n                    marginLeftV= \"-170px\"\r\n                    i={this.findIndexByID(tempID)} //index to edit\r\n                    ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                    FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                    refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            ) : (\r\n              <div>\r\n              <Row style ={{marginLeft:\"100px\"}} className=\"d-flex \" >\r\n                  {this.state.goals[i][\"is_available\"] ? (\r\n                  <div style={{ marginLeft: \"5px\" }}>\r\n                    <FontAwesomeIcon\r\n                      title=\"Available to Cailin\"\r\n                      style={{ color: this.state.availabilityColorCode }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is Availble to Caitlin\");\r\n                      }}\r\n                      icon={faUser}\r\n                      size=\"lg\"\r\n                    />{\" \"}\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <FontAwesomeIcon\r\n                      title=\"Unavailable to Caitlin\"\r\n                      style={{ color: \"#000000\" }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is NOT Availble to Caitlin\");\r\n                      }}\r\n                      icon={faUserAltSlash}\r\n                      size=\"lg\"\r\n                    />\r\n                  </div>\r\n                )}\r\n                <ShowATList \r\n                  Index={this.findIndexByID(tempID)} \r\n                  Array={this.state.originalGoalsAndRoutineArr}\r\n                  Path={this.state.firebaseRootPath}\r\n                />\r\n              </Row>\r\n              <Row style={{ marginTop:\"15px\", marginLeft:\"100px\"}} className=\"d-flex \" >\r\n                <DeleteGR\r\n                  deleteIndex={this.findIndexByID(tempID)}\r\n                  Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                  Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                  refresh={this.grabFireBaseRoutinesGoalsData}\r\n                />\r\n                <EditGR\r\n                  marginLeftV= \"-130px\"\r\n                  i={this.findIndexByID(tempID)} //index to edit\r\n                  ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                  FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                  refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\r\n                />\r\n              </Row>\r\n              </div>\r\n            \r\n            )}\r\n\r\n\r\n\r\n\r\n\r\n\r\n              {/* <Row style={{ margin: \"0\" }} className=\"d-flex justify-content-between\">\r\n              <ShowATList />\r\n                {this.state.goals[i][\"is_available\"] ? (\r\n                  <div style={{ marginLeft: \"5px\" }}>\r\n                    <FontAwesomeIcon\r\n                      title=\"Available to Cailin\"\r\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                      style={{ color: this.state.availabilityColorCode }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is Availble to Caitlin\");\r\n                      }}\r\n                      icon={faUser}\r\n                      size=\"lg\"\r\n                    />{\" \"}\r\n                  </div>\r\n                ) : (\r\n                  <div style={{ marginLeft: \"5px\" }}>\r\n                    <FontAwesomeIcon\r\n                      title=\"Unavailable to Caitlin\"\r\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                      style={{ color: \"#000000\" }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is NOT Availble to Caitlin\");\r\n                      }}\r\n                      icon={faUserAltSlash}\r\n                      size=\"lg\"\r\n                    />\r\n                  </div>\r\n                )}\r\n                 \r\n              </Row>\r\n             \r\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\r\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                  <div className=\"fancytext\">\r\n                    {\" \"}\r\n                    {this.state.goals[i][\"title\"]}\r\n                  </div>\r\n                  {/* <div className=\"fancytext\"> Time: {Math.floor(1 + Math.random() * (45 - 1))} Minutes </div> */}\r\n                {/* </Col>\r\n                <Col\r\n                  sm=\"auto\"\r\n                  md=\"auto\"\r\n                  lg=\"auto\"\r\n                  style={{ width: \"100%\", height: \"100%\" }}\r\n                >\r\n                  {this.state.goals[i][\"photo\"] ? (\r\n                    <img\r\n                      src={this.state.goals[i][\"photo\"]}\r\n                      alt=\"Goals\"\r\n                      className=\"center\"\r\n                      height={this.state.thumbnailHeight}\r\n                      width={this.state.thumbnailWidth}\r\n                    />\r\n                  ) : (\r\n                    <div></div>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n              <Row\r\n                className=\"d-flex flex-row-center\"\r\n                style={{\r\n                  margin: \"0\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  marginTop: \"10px\",\r\n                  marginBottom: \"10px\"\r\n                }}\r\n              >\r\n                <DeleteGR\r\n                  deleteIndex={this.findIndexByID(tempID)}\r\n                  Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                  Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                  refresh={this.grabFireBaseRoutinesGoalsData}\r\n                />\r\n                <EditGR\r\n                  i={this.findIndexByID(tempID)} //index to edit\r\n                  ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n                  FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\r\n                  refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\r\n                />\r\n              </Row>  */}\r\n\r\n              <div style={{ fontSize: \"12px\" }}>\r\n                {this.state.goals[i][\"datetime_started\"] ? (\r\n                  <div style={{ marginTop: \"3px\" }}>\r\n                    {\"Previous Start Time: \" +\r\n                      this.formatDateTime(\r\n                        this.state.goals[i][\"datetime_started\"]\r\n                      )}{\" \"}\r\n                  </div>\r\n                ) : (\r\n                  <div> </div>\r\n                )}\r\n\r\n                {this.state.goals[i][\"datetime_completed\"] ? (\r\n                  <div>\r\n                    {\"Previous Completed Time: \" +\r\n                      this.formatDateTime(\r\n                        this.state.goals[i][\"datetime_completed\"]\r\n                      )}{\" \"}\r\n                  </div>\r\n                ) : (\r\n                  <div> </div>\r\n                )}\r\n              </div>\r\n            </ListGroup.Item>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\r\n    return displayGoals;\r\n  };\r\n\r\n  getGoalsStatus = () => {\r\n    let displayGoals = [];\r\n    if (this.state.goals.length != null) {\r\n      //Check to make sure routines exists\r\n      for (let i = 0; i < this.state.goals.length; i++) {\r\n        let tempTitle = this.state.goals[i][\"title\"];\r\n        // let tempID = this.state.goals[i][\"id\"];\r\n        let isComplete = this.state.goals[i][\"is_complete\"];\r\n        if (!this.state.goals[i][\"is_available\"]) {\r\n          continue; //skip if not available\r\n        }\r\n        displayGoals.push(\r\n          <div key={\"goalStatus\" + i}>\r\n            <ListGroup.Item\r\n              action\r\n              variant=\"light\"\r\n              style={{ width: \"100%\", marginBottom: \"3px\" }}\r\n            >\r\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\r\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                  <div className=\"fancytext\"> {tempTitle}</div>\r\n                </Col>\r\n              </Row>\r\n              <Row\r\n                style={{\r\n                  margin: \"0\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\"\r\n                }}\r\n              >\r\n                {isComplete ? (\r\n                  <div>\r\n                    <FontAwesomeIcon\r\n                      title=\"Completed Item\"\r\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                      style={{ color: this.state.availabilityColorCode }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is Completed\");\r\n                      }}\r\n                      icon={faTrophy}\r\n                      size=\"lg\"\r\n                    />{\" \"}\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <FontAwesomeIcon\r\n                      title=\"Not Completed Item\"\r\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                      style={{ color: \"black\" }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is Not Completed\");\r\n                      }}\r\n                      icon={faRunning}\r\n                      size=\"lg\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\r\n    return displayGoals;\r\n  };\r\n\r\n  getRoutinesStatus = () => {\r\n    let displayRoutines = [];\r\n    if (this.state.routines.length != null) {\r\n      //Check to make sure routines exists\r\n      for (let i = 0; i < this.state.routines.length; i++) {\r\n        let tempTitle = this.state.routines[i][\"title\"];\r\n        // let tempID = this.state.routines[i]['id'];\r\n        let isComplete = this.state.routines[i][\"is_complete\"];\r\n        if (!this.state.routines[i][\"is_available\"]) {\r\n          continue; //skip if not available\r\n        }\r\n        displayRoutines.push(\r\n          <div key={\"goalStatus\" + i}>\r\n            <ListGroup.Item\r\n              action\r\n              variant=\"light\"\r\n              style={{ marginBottom: \"3px\" }}\r\n            >\r\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\r\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\r\n                  <div className=\"fancytext\"> {tempTitle}</div>\r\n                </Col>\r\n              </Row>\r\n              <Row\r\n                style={{\r\n                  margin: \"0\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\"\r\n                }}\r\n              >\r\n                {isComplete ? (\r\n                  <div>\r\n                    <FontAwesomeIcon\r\n                      title=\"Completed Item\"\r\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                      style={{ color: this.state.availabilityColorCode }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is Completed\");\r\n                      }}\r\n                      icon={faTrophy}\r\n                      size=\"lg\"\r\n                    />{\" \"}\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <FontAwesomeIcon\r\n                      title=\"Not Completed Item\"\r\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\r\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\r\n                      style={{ color: \"black\" }}\r\n                      onClick={e => {\r\n                        e.stopPropagation();\r\n                        alert(\"Item Is Not Completed\");\r\n                      }}\r\n                      icon={faRunning}\r\n                      size=\"lg\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Row>\r\n            </ListGroup.Item>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\r\n    return displayRoutines;\r\n  };\r\n\r\n  render() {\r\n    // console.log(\"ran render firebasev2\");\r\n    var displayRoutines = this.getRoutines();\r\n    var displayGoals = this.getGoals();\r\n    var displayCompletedGoals = this.getGoalsStatus();\r\n    var displayCompletedRoutines = this.getRoutinesStatus();\r\n    return (\r\n      <div style={{ marginTop: \"0\" }}>\r\n        {/* <div style={{ marginTop: \"40px\" }}> */}\r\n        {this.props.showRoutineGoalModal ? (\r\n          <Col\r\n            style={{\r\n              width: this.state.modalWidth,\r\n              marginTop: \"0\",\r\n              marginRight: \"15px\"\r\n            }}\r\n            sm=\"auto\"\r\n            md=\"auto\"\r\n            lg=\"auto\"\r\n          >\r\n            <div\r\n              style={{\r\n                borderRadius: \"15px\",\r\n                boxShadow:\r\n                  \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n              }}\r\n            >\r\n              {this.abstractedRoutineGoalStatusList(\r\n                displayCompletedRoutines,\r\n                displayCompletedGoals\r\n              )}\r\n            </div>\r\n          </Col>\r\n        ) : (\r\n          <div> </div>\r\n        )}\r\n\r\n        {this.props.showRoutine ? (\r\n          <Col\r\n            style={{\r\n              width: this.state.modalWidth,\r\n              marginTop: \"0\",\r\n              marginRight: \"15px\"\r\n            }}\r\n            sm=\"auto\"\r\n            md=\"auto\"\r\n            lg=\"auto\"\r\n          >\r\n            <div style={{ borderRadius: \"15px\" }}>\r\n              {this.abstractedRoutineList(displayRoutines)}\r\n            </div>\r\n          </Col>\r\n        ) : (\r\n          <div> </div>\r\n        )}\r\n\r\n        {this.props.showGoal ? (\r\n          <Col\r\n            style={{\r\n              width: this.state.modalWidth,\r\n              marginTop: \"0\",\r\n              marginRight: \"15px\"\r\n            }}\r\n            sm=\"auto\"\r\n            md=\"auto\"\r\n            lg=\"auto\"\r\n          >\r\n            <div style={{ borderRadius: \"15px\" }}>\r\n              {this.abstractedGoalsList(displayGoals)}\r\n            </div>\r\n          </Col>\r\n        ) : (\r\n          <div> </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /*\r\nabstractedGoalsList:\r\nshows entire list of goals and routines\r\n*/\r\n  abstractedGoalsList = displayGoals => {\r\n    return (\r\n      <Modal.Dialog\r\n        style={{\r\n          borderRadius: \"15px\",\r\n          marginTop: \"0\",\r\n          width: this.state.modalWidth,\r\n          marginLeft: \"0\",\r\n          boxShadow:\r\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n        }}\r\n      >\r\n        <Modal.Header onHide={this.props.closeGoal} closeButton>\r\n          <Modal.Title>\r\n            <h5 className=\"normalfancytext\">Goals</h5>{\" \"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/**\r\n           * To allow for the Modals to pop up in front of one another\r\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\r\n          <div\r\n            style={{\r\n              borderRadius: \"15px\",\r\n              boxShadow:\r\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n            }}\r\n          >\r\n            {this.state.addNewGRModalShow ? this.AddNewGRModalAbstracted() : \"\"}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              borderRadius: \"15px\",\r\n              boxShadow:\r\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n            }}\r\n          >\r\n            {this.state.singleGR.show ? (\r\n              this.abstractedActionsAndTaskList()\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n          <ListGroup>\r\n            <div style={{ height: \"650px\", overflow: \"scroll\" }}>\r\n              {displayGoals}\r\n            </div>\r\n            {/* Button to add new Goal */}\r\n          </ListGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info btn-md\"\r\n            onClick={() => {\r\n              this.setState({ addNewGRModalShow: true, isRoutine: false });\r\n            }}\r\n          >\r\n            Add Goal\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  };\r\n  /*\r\n    abstractedRoutineList:\r\n    shows entire list of routines\r\n    */\r\n  abstractedRoutineList = displayRoutines => {\r\n    return (\r\n      <Modal.Dialog\r\n        style={{\r\n          borderRadius: \"15px\",\r\n          marginTop: \"0\",\r\n          width: this.state.modalWidth,\r\n          marginLeft: \"0px\",\r\n          boxShadow:\r\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n        }}\r\n      >\r\n        <Modal.Header onHide={this.props.closeRoutine} closeButton>\r\n          <Modal.Title>\r\n            {\" \"}\r\n            <h5 className=\"normalfancytext\">Routines</h5>{\" \"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/**\r\n           * To allow for the Modals to pop up in front of one another\r\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\r\n\r\n          <div\r\n            style={{\r\n              borderRadius: \"15px\",\r\n              boxShadow:\r\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n            }}\r\n          >\r\n            {this.state.addNewGRModalShow ? this.AddNewGRModalAbstracted() : \"\"}\r\n          </div>\r\n          <div\r\n            style={{\r\n              borderRadius: \"15px\",\r\n              boxShadow:\r\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n            }}\r\n          >\r\n            {this.state.singleGR.show ? (\r\n              this.abstractedActionsAndTaskList()\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n          <ListGroup>\r\n            <div style={{ height: \"650px\", overflow: \"scroll\" }}>\r\n              {displayRoutines}\r\n            </div>\r\n          </ListGroup>\r\n          {/* Button To add new Routine */}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info btn-md\"\r\n            onClick={() => {\r\n              this.setState({ addNewGRModalShow: true, isRoutine: true });\r\n            }}\r\n          >\r\n            Add Routine\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * AddNewGRModalAbstracted:\r\n   * returns a modal showing us a slot to add a new Goal/Routine\r\n   */\r\n  AddNewGRModalAbstracted = () => {\r\n    return (\r\n      <AddNewGRItem\r\n        closeModal={() => {\r\n          this.setState({ addNewGRModalShow: false });\r\n        }}\r\n        ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\r\n        refresh={this.grabFireBaseRoutinesGoalsData}\r\n        isRoutine={this.state.isRoutine}\r\n        width={this.state.modalWidth}\r\n      />\r\n    );\r\n  };\r\n\r\n  /*\r\n    abstractedInstructionsAndStepsList:\r\n    currently only shows the single Action/Task Title with no steps\r\n    */\r\n\r\n  /**\r\n   * abstractedInstructionsAndStepsList:\r\n   * Shows a single Task / Action as Title with\r\n   * the list of instructions/steps underneath of it\r\n   *\r\n   */\r\n  abstractedInstructionsAndStepsList = () => {\r\n    return (\r\n      <Modal.Dialog\r\n        style={{\r\n          marginTop: \"0\",\r\n          marginLeft: \"0\",\r\n          width: this.state.modalWidth\r\n        }}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          onHide={() => {\r\n            this.setState({ singleAT: { show: false } });\r\n          }}\r\n        >\r\n          <Modal.Title>\r\n            <h5 className=\"normalfancytext\">{this.state.singleAT.title}</h5>{\" \"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div\r\n            style={{\r\n              borderRadius: \"15px\",\r\n              boxShadow:\r\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n            }}\r\n          >\r\n            {this.state.addNewISModalShow ? (\r\n              <AddNewISItem\r\n                ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\r\n                ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\r\n                refresh={this.refreshISItem}\r\n                hideNewISModal={\r\n                  //function to hide the modal\r\n                  () => {\r\n                    this.setState({ addNewISModalShow: false });\r\n                  }\r\n                }\r\n                width={this.state.modalWidth}\r\n              />\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n          <ListGroup>\r\n            <div style={{ height: \"500px\", overflow: \"scroll\" }}>\r\n              {this.state.singleAT.arr}\r\n            </div>\r\n          </ListGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info btn-md\"\r\n            onClick={() => {\r\n              this.setState({ addNewISModalShow: true });\r\n            }}\r\n          >\r\n            Add Step\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * abstractedActionsAndTaskList -\r\n   * returns modal with with a single Routine/ Goal as title\r\n   * and beneath it is the list of action/ task associated with the\r\n   * goal/ routine\r\n   */\r\n  abstractedActionsAndTaskList = () => {\r\n    return (\r\n      <Modal.Dialog\r\n        style={{\r\n          marginTop: \"0\",\r\n          marginLeft: \"0\",\r\n          width: this.state.modalWidth\r\n        }}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          onHide={() => {\r\n            this.setState({ singleGR: { show: false } });\r\n          }}\r\n        >\r\n          <Modal.Title>\r\n            <h5 className=\"normalfancytext\">{this.state.singleGR.title}</h5>{\" \"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div\r\n            style={{\r\n              borderRadius: \"15px\",\r\n              boxShadow:\r\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n            }}\r\n          >\r\n            {this.state.addNewATModalShow ? (\r\n              <AddNewATItem\r\n                refresh={this.refreshATItem} //refreshes the list of AT\r\n                ATArray={this.state.singleATitemArr}\r\n                ATItem={this.state.singleGR} //The parent item\r\n                hideNewATModal={() => {\r\n                  this.setState({ addNewATModalShow: false });\r\n                }}\r\n                width={this.state.modalWidth}\r\n              />\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n          {/**\r\n           * Here Below, the IS list will pop up inside the AT list\r\n           */}\r\n          <div\r\n            style={{\r\n              borderRadius: \"15px\",\r\n              boxShadow:\r\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n            }}\r\n          >\r\n            {this.state.singleAT.show ? (\r\n              this.abstractedInstructionsAndStepsList()\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n          <ListGroup>\r\n            <div style={{ height: \"500px\", overflow: \"scroll\" }}>\r\n              {this.state.singleGR.arr}\r\n            </div>\r\n          </ListGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info btn-md\"\r\n            onClick={() => {\r\n              this.setState({ addNewATModalShow: true });\r\n            }}\r\n          >\r\n            Add Action/Task\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  };\r\n\r\n  addNewTaskInputBox = () => {\r\n    return (\r\n      <InputGroup size=\"lg\" style={{ marginTop: \"20px\" }} className=\"mb-3\">\r\n        <FormControl\r\n          onChange={() => {\r\n            console.log(\"addNewGoalInputBox\");\r\n          }}\r\n          placeholder=\"\"\r\n        />\r\n        <InputGroup.Append>\r\n          <Button variant=\"outline-secondary\">Add</Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    );\r\n  };\r\n\r\n  /*\r\n    abstractedRoutineGoalStatusList:\r\n    shows entire list of goals and routines\r\n    */\r\n  abstractedRoutineGoalStatusList = (displayRoutines, displayGoals) => {\r\n    return (\r\n      <Modal.Dialog\r\n        style={{\r\n          borderRadius: \"15px\",\r\n          marginTop: \"0\",\r\n          width: this.state.modalWidth,\r\n          marginLeft: \"0\",\r\n          boxShadow:\r\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n        }}\r\n      >\r\n        <Modal.Header onHide={this.props.closeRoutineGoalModal} closeButton>\r\n          <Modal.Title>\r\n            {\" \"}\r\n            <h5 className=\"normalfancytext\">Current Status</h5>{\" \"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h2 className=\"normalfancytext\">Routines:</h2>\r\n\r\n          {/**\r\n           * To allow for the Modals to pop up in front of one another\r\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\r\n\r\n          {/* <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\r\n                        {(this.state.singleGR.show) ? this.abstractedActionsAndTaskList() : (<div></div>)}\r\n                    </div> */}\r\n\r\n          <ListGroup style={{ height: \"350px\", overflow: \"scroll\" }}>\r\n            {displayRoutines}\r\n            {/* <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: true }) }} >Add Routine</button> */}\r\n          </ListGroup>\r\n          {/* Button To add new Routine */}\r\n          <h2 className=\"normalfancytext\" style={{ marginTop: \"50px\" }}>\r\n            Goals:\r\n          </h2>\r\n          <ListGroup style={{ height: \"250px\", overflow: \"scroll\" }}>\r\n            {displayGoals}\r\n            {/* Button to add new Goal */}\r\n            {/* <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: false }) }}>Add Goal</button> */}\r\n          </ListGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer></Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  };\r\n\r\n  addNewGoalInputBox = () => {\r\n    return (\r\n      <InputGroup\r\n        size=\"lg\"\r\n        style={{ marginTop: \"20px\", width: this.state.modalWidth }}\r\n        className=\"mb-3\"\r\n      >\r\n        <FormControl\r\n          onChange={() => {\r\n            console.log(\"addNewGoalInputBox\");\r\n          }}\r\n          placeholder=\"place holder!!\"\r\n        />\r\n        <InputGroup.Append>\r\n          <Button variant=\"outline-secondary\">Add</Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default class TylersCalendarv1 extends React.Component {\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  weekdays = moment.weekdays();\r\n  weekdaysShort = moment.weekdaysShort(); // [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  year = () => {\r\n    return this.props.dateContext.format(\"Y\");\r\n  }\r\n\r\n  currentDay = () => {\r\n    return this.props.dateObject.format(\"D\");\r\n  };\r\n  month = () => {\r\n    return this.props.dateContext.format(\"MMMM\");\r\n  }\r\n\r\n  daysInMonth = () => {\r\n    return this.props.dateContext.daysInMonth();\r\n  }\r\n\r\n  firstDayOfMonth = () => {\r\n    let dateContext = this.props.dateContext;\r\n    let firstDay = moment(dateContext)\r\n      .startOf(\"month\")\r\n      .format(\"d\"); // Day of week 0...1..5...6\r\n    return firstDay;\r\n  };\r\n\r\n  //Returns a dense populated set of icons to be pushed onto a day i\r\n  //into the table\r\n\r\n  getEventsforDay = (i) => {\r\n\r\n    var res = [];\r\n    var tempStart = null;\r\n    var tempEnd = null;\r\n    if (this.props.originalEvents == null) {\r\n      return []\r\n    }\r\n    // console.log(this.props.originalEvents);\r\n    for (let j = 0; j < this.props.originalEvents.length; ++j) {\r\n      if (this.props.originalEvents[j].start.dateTime) {\r\n        tempStart = this.props.originalEvents[j].start.dateTime;\r\n        tempEnd = this.props.originalEvents[j].end.dateTime;\r\n        let startDate = new Date(tempStart).getDate();\r\n        let endDate = new Date(tempEnd).getDate();\r\n        // console.log(startDate)\r\n        if (i >= startDate && i <= endDate) {\r\n          res.push(<div key={'event' + j}><button\r\n            value={j}\r\n            onClick={this.onEventClick}\r\n            className=\"btn btn-sm\" style={{\r\n              padding: '3px',\r\n              paddingLeft: '4px',\r\n              paddingRight: '4px',\r\n              fontSize: '9px', color: \"white\",\r\n              borderRadius: '4px', background: \"#42B8DD\",\r\n              textShadow: \"0 1px 1px rgba(0, 0, 0, 0.2)\", marginBottom: \"3px\"\r\n            }} >{this.props.originalEvents[j].summary}</button><br /></div>);\r\n        }\r\n      }\r\n      else {\r\n        tempStart = this.props.originalEvents[j].start.date;\r\n        // console.log('start date');\r\n        // console.log(this.props.originalEvents[j].start.date);\r\n        tempEnd = this.props.originalEvents[j].end.date;\r\n        let startDate = new Date(tempStart).getDate();\r\n        let endDate = new Date(tempEnd).getDate();\r\n        // console.log(startDate)\r\n        if (i > startDate && i <= endDate) {\r\n          // console.log('sss' + i, startDate, endDate);\r\n          res.push(<div key={'event' + j}><button\r\n            value={j}\r\n            onClick={this.onEventClick}\r\n            className=\"btn btn-sm\" style={{\r\n              padding: '3px',\r\n              paddingLeft: '4px',\r\n              paddingRight: '4px',\r\n              fontSize: '9px', color: \"white\",\r\n              borderRadius: '3px', background: \"CornflowerBlue\",\r\n              textShadow: \"0 1px 1px rgba(0, 0, 0, 0.2), \", marginBottom: \"3px\"\r\n            }} >{this.props.originalEvents[j].summary}</button><br /></div>);\r\n        }\r\n      }\r\n\r\n    }\r\n    return res;\r\n  }\r\n\r\n  onEventClick = (x) => {\r\n    x.stopPropagation();\r\n    this.props.eventClick(x.target.value);\r\n  }\r\n\r\n  onDayClick = (d) => {\r\n    this.props.handleDateClick(this.props.dateContext.format(\"M\") + '/' + d + '/' + this.props.dateContext.format(\"Y\"));\r\n  }\r\n\r\n  onExpandClick = (d) => {\r\n    this.props.handleExpandClick(this.props.dateContext.format(\"M\") + '/' + d + '/' + this.props.dateContext.format(\"Y\"));\r\n  }\r\n\r\n  render() {\r\n    let daysInMonth = [];\r\n    let weekdays = this.weekdays.map((day) => {\r\n      return (\r\n        <td className=\"fancytext\" key={day}>{day}</td>\r\n      )\r\n    });\r\n\r\n    //create the blank slots to push day 1 to right day\r\n    let blanks = [];\r\n\r\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n      blanks.push(<td key={'empty' + i} className=\"calendar-day empty\">{\"\"}</td>);\r\n    }\r\n\r\n    //The variable below tells us if the current month we are at is today's month\r\n    var sameDate = this.props.dateObject.format(\"MM/YYYY\") === this.props.dateContext.format(\"MM/YYYY\");\r\n\r\n    // console.log(this.props.dateObject.format(\"DD/MM/YYYY\") + \"  == \" + this.props.dateContext.format(\"DD/MM/YYYY\"));\r\n    for (var d = 1; d <= this.daysInMonth(); d++) {\r\n      // let currentDay = d == this.currentDay() ? \"today\" : \"\";\r\n\r\n      // const todayStyle = { boxShadow: '4px 4px 8px 4px rgba(0, 0, 0, 0.2)' };\r\n\r\n      daysInMonth.push(\r\n        <td key={d} onClick={this.onDayClick.bind(this, d)}>\r\n          <div style={{ padding: '0', margin: '0', height: '110px', width: \"100px\", overflow: 'auto' }}>\r\n            {\r\n              // eslint-disable-next-line max-len\r\n            }\r\n              <div className={(sameDate && (d === parseInt(this.currentDay(), 10))) ? \"numberCircleCurrent\" : \"numberCircle\"} onClick={this.onExpandClick.bind(this, d)}>\r\n                <a className=\"fancytext\"> {d} </a>\r\n              </div>\r\n            {this.getEventsforDay(d)}\r\n          </div>\r\n        </td>\r\n      );\r\n    }\r\n\r\n    var totalSlots = [...blanks, ...daysInMonth];\r\n    let rows = [];\r\n    let cells = [];\r\n\r\n    totalSlots.forEach((row, i) => {\r\n      if (i % 7 !== 0) {\r\n        cells.push(row);\r\n      } else {\r\n        rows.push(cells);\r\n        cells = [];\r\n        cells.push(row);\r\n      }\r\n      if (i === totalSlots.length - 1) {\r\n        // let insertRow = cells.slice();\r\n        rows.push(cells);\r\n      }\r\n    });\r\n\r\n    var daysinmonth = rows.map((data, i) => {\r\n      return <tr style={{ padding: '0px' }} key={i * 11}>{data}</tr>;\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <table className=\"table\" style={{ height: '450px', tableLayout: 'fixed', width: '910px' }}>\r\n          <thead>\r\n            <tr>\r\n              {weekdays}\r\n            </tr>\r\n          </thead>\r\n          <tbody style={{ height: '450px', width: '600px' }}>\r\n            {daysinmonth}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n// import axios from 'axios';\r\nimport moment from 'moment';\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\n\r\nimport firebase from \"./firebase\";\r\nexport default class DayRoutines extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firebaseRootPath: firebase.firestore().collection('users').doc('7R6hAVmDrNutRkG3sVRy'),\r\n            goals: [], //array to hold all  goals\r\n            routines: [], // array to hold all routines\r\n            pxPerHour: \"30px\", //preset size for all columns\r\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\r\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\r\n            eventBoxSize: \"200\", //width size for event box\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.grabFireBaseRoutinesGoalsData();\r\n    }\r\n\r\n    /**\r\n * grabFireBaseRoutinesGoalsData:\r\n * this function grabs the goals&routines array from the path located in this function\r\n * which will then populate the goals, routines,originalGoalsAndRoutineArr array\r\n * separately. The arrays will be used for display and data manipulation later.\r\n *\r\n*/\r\n    grabFireBaseRoutinesGoalsData = () => {\r\n        const db = firebase.firestore();\r\n        // console.log('DayRoutine component did mount');\r\n        const docRef = db.collection('users').doc('7R6hAVmDrNutRkG3sVRy');\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                // console.log(doc.data());\r\n                var x = doc.data();\r\n                // console.log(\"from DayRoutines\");\r\n                // console.log(x['goals&routines']);\r\n                x = x['goals&routines'];\r\n                let routine = [];\r\n                let goal = [];\r\n                for (let i = 0; i < x.length; ++i) {\r\n                    if (!x[i]['deleted'] && x[i]['is_persistent']) {\r\n                        // console.log(\"routine \" + x[i]['title']);\r\n                        routine.push(x[i]);\r\n                    }\r\n                    else if (!x[i]['deleted'] && !x[i]['is_persistent']) {\r\n                        // console.log(\"not routine \" + x[i]['title']);\r\n                        goal.push(x[i]);\r\n                    }\r\n                }\r\n                this.setState({\r\n                    originalGoalsAndRoutineArr: x,\r\n                    goals: goal,\r\n                    routines: routine\r\n                })\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n\r\n\r\n    dayView = () => { //this essentially creates the time row\r\n        let arr = [];\r\n        for (let i = 0; i < 24; ++i) {\r\n            arr.push(\r\n                <Row key={\"dayDayViewRoutines\" + i}>\r\n                    <Col style={{\r\n                        borderTop: \"1px solid  mistyrose\",\r\n                    textAlign: \"right\",\r\n                    height: this.state.pxPerHour }}>\r\n                        {i}:00\r\n                    </Col >\r\n                </Row>\r\n            )\r\n        }\r\n        return arr\r\n    }\r\n\r\n    RoutineClicked = () =>{\r\n        this.props.dayRoutineClick();\r\n    }\r\n\r\n    /**\r\n     * getEventItem: given an hour, this will return all events that was started during that hour\r\n     *\r\n    */\r\n    getEventItem = (hour) => {\r\n        var res = []\r\n        var arr = this.state.routines;\r\n        var sameTimeEventCount = 0;\r\n        let itemWidth = this.state.eventBoxSize;\r\n        // var overlapEvent = 0;\r\n        var addmarginLeft = 0;\r\n        var fontSize = 10;\r\n        for (let i = 0; i < arr.length; i++) {\r\n\r\n            let start_dateObj = new Date();\r\n            let start_dateStr = start_dateObj.toISOString().split('T').shift();\r\n            let start_timeStr = arr[i].available_start_time;\r\n            let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\r\n\r\n            let end_dateObj = new Date();\r\n            let end_dateStr = end_dateObj.toISOString().split('T').shift();\r\n            let end_timeStr = arr[i].available_end_time;\r\n            let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\r\n\r\n            let tempStartTime = start_timeAndDate;\r\n            let tempEndTime = end_timeAndDate;\r\n            /**\r\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\r\n            */\r\n            if (tempStartTime.getHours() === hour) {\r\n                // console.log(\"matched\" + i );\r\n                let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\r\n                let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\r\n                let minDiff = (tempEndTime.getMinutes()) / 60;\r\n                let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\r\n                let color = 'PaleTurquoise';\r\n\r\n                sameTimeEventCount++;\r\n                //check if there is already an event there overlapping from another hour\r\n                for(let i = 0; i < arr.length; i++){\r\n                    let start_dateObj = new Date();\r\n                    let start_dateStr = start_dateObj.toISOString().split('T').shift();\r\n                    let start_timeStr = arr[i].available_start_time;\r\n                    let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\r\n\r\n                    let end_dateObj = new Date();\r\n                    let end_dateStr = end_dateObj.toISOString().split('T').shift();\r\n                    let end_timeStr = arr[i].available_end_time;\r\n                    let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\r\n\r\n                    let tempStartTime = start_timeAndDate;\r\n                    let tempEndTime = end_timeAndDate;\r\n                    if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\r\n                        // console.log(\"We ARE IN HEREEEE\");\r\n                        addmarginLeft += 20;\r\n                        itemWidth = itemWidth - 20;\r\n                        // overlapEvent++;\r\n                    }\r\n                }\r\n\r\n                if(sameTimeEventCount > 1  ){\r\n                     addmarginLeft += 20;\r\n                    // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\r\n                    // itemWidth = itemWidth/(sameHourItems-1);\r\n                    itemWidth = itemWidth - 20;\r\n                    // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\r\n                }\r\n\r\n                //chnage font size if not enough space\r\n                if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\r\n                    fontSize = 8;\r\n                }\r\n                // change color if more than one event in same time.\r\n                if(sameTimeEventCount <= 1){\r\n                     color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\r\n                }\r\n                else if( sameTimeEventCount === 2){\r\n                    color = 'skyblue';\r\n                }\r\n                else{\r\n                    color = 'blue';\r\n                }\r\n                let newElement =\r\n                    (<div key={\"dayRoutineItem\" + i}\r\n                    data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\r\n\r\n                        onMouseOver={e => {\r\n                            e.target.style.color = \"#FFFFFF\";\r\n                            e.target.style.background = \"RebeccaPurple\";\r\n                            // e.target.style.marginLeft = \"5px\";\r\n                            // e.target.style.border= \"3px solid w\";\r\n                            e.target.style.zIndex=\"2\";\r\n\r\n\r\n\r\n\r\n                        }}\r\n                        onMouseOut={e => {\r\n                            e.target.style.zIndex=\"1\";\r\n\r\n                            // e.target.style.marginLeft = \"0px\";\r\n                             e.target.style.color = \"#000000\";\r\n                            //  e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\r\n                             e.target.style.border= \"1px lightgray solid\";\r\n\r\n                             e.target.style.background = color;\r\n\r\n\r\n                            }}\r\n\r\n                        onClick = {this.RoutineClicked}\r\n                        style={{\r\n                            zIndex: this.state.zIndex,\r\n                            marginTop: minsToMarginTop + \"px\",\r\n                            padding: \"5px\",\r\n                            // fontSize: \"10px\",\r\n                            border: \"1px lightgray solid \",\r\n                            // float: \"left\",\r\n                            borderRadius: \"5px\",\r\n                            // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\r\n                            //  width: this.state.eventBoxSize,\r\n                            position: \"absolute\",\r\n                            height: height + \"px\",\r\n\r\n                            fontSize: fontSize + \"px\",\r\n                            background: color,\r\n                            width: itemWidth + \"px\",\r\n                            marginLeft: addmarginLeft + \"px\"\r\n                        }}>\r\n                        {arr[i].title}\r\n                    </div>);\r\n                res.push(newElement);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\r\n    */\r\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\r\n        var arr = [];\r\n        for (let i = 0; i < 24; ++i) {\r\n            arr.push(\r\n                <Row key={\"dayRoutine\" + i} style={{ position: \"relative\" }}>\r\n                    <Col\r\n                        style={{\r\n                            position: \"relative\",\r\n                            borderTop: \"1px solid mistyrose\",\r\n                            width: '180px',\r\n                            background: \"aliceblue\",\r\n                            height: this.state.pxPerHour\r\n                        }}>\r\n                        {this.getEventItem(i)}\r\n                    </Col >\r\n                </Row>\r\n            )\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                padding: '20px',\r\n                // marginTop: \"10px\",\r\n                width: \"300px\",\r\n                borderRadius: \"20px\" }}>\r\n                Today's Routines:\r\n                <Container style={{}}>\r\n                    <Row >\r\n                        <Col>\r\n                            <Container style={{ margin: '0', padding: '0' }}>\r\n                                {this.dayViewItems()}\r\n                            </Container>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\n// import axios from 'axios';\r\nimport moment from 'moment';\r\nimport {  Container, Row, Col} from 'react-bootstrap';\r\n\r\nimport firebase from \"./firebase\";\r\nexport default class DayGoals extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firebaseRootPath: firebase.firestore().collection('users').doc('7R6hAVmDrNutRkG3sVRy'),\r\n            goals: [], //array to hold all  goals\r\n            routines: [], // array to hold all routine\r\n            pxPerHour: \"30px\", //preset size for all columns\r\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\r\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\r\n            eventBoxSize: \"200\", //width size for event box\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.grabFireBaseRoutinesGoalsData();\r\n    }\r\n\r\n    /**\r\n * grabFireBaseRoutinesGoalsData:\r\n * this function grabs the goals&routines array from the path located in this function\r\n * which will then populate the goals, routines,originalGoalsAndRoutineArr array\r\n * separately. The arrays will be used for display and data manipulation later.\r\n *\r\n*/\r\n    grabFireBaseRoutinesGoalsData = () => {\r\n        const db = firebase.firestore();\r\n        const docRef = db.collection('users').doc('7R6hAVmDrNutRkG3sVRy');\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n                // console.log(doc.data());\r\n                var x = doc.data();\r\n                // console.log(\"from DayRoutines\");\r\n                // console.log(x['goals&routines']);\r\n                x = x['goals&routines'];\r\n                let routine = [];\r\n                let goal = [];\r\n                for (let i = 0; i < x.length; ++i) {\r\n                    if (!x[i]['deleted'] && x[i]['is_persistent']) {\r\n                        // console.log(\"routine \" + x[i]['title']);\r\n                        routine.push(x[i]);\r\n                    }\r\n                    else if (!x[i]['deleted'] && !x[i]['is_persistent']) {\r\n                        // console.log(\"not routine \" + x[i]['title']);\r\n                        goal.push(x[i]);\r\n                    }\r\n                }\r\n                this.setState({\r\n                    originalGoalsAndRoutineArr: x,\r\n                    goals: goal,\r\n                    routines: routine\r\n                })\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n\r\n\r\n    dayView = () => { //this essentially creates the time row\r\n        let arr = [];\r\n        for (let i = 0; i < 24; ++i) {\r\n            arr.push(\r\n                <Row key={\"dayDayViewGoals\" + i}>\r\n                    <Col style={{ borderTop: \"1px solid mistyrose\", textAlign: \"right\", height: this.state.pxPerHour }}>\r\n                        {i}:00\r\n                    </Col >\r\n                </Row>\r\n            )\r\n        }\r\n        return arr\r\n    }\r\n\r\n    GoalClicked  = ()=>{\r\n        this.props.dayGoalClick();\r\n    }\r\n    /**\r\n     * getEventItem: given an hour, this will return all events that was started during that hour\r\n     *\r\n    */\r\n    getEventItem = (hour) => {\r\n        var res = []\r\n        var arr = this.state.goals;\r\n        var sameTimeEventCount = 0;\r\n        let itemWidth = this.state.eventBoxSize;\r\n        // var overlapEvent = 0;\r\n        var addmarginLeft = 0;\r\n        var fontSize = 10;\r\n        for (let i = 0; i < arr.length; i++) {\r\n\r\n            let start_dateObj = new Date();\r\n            let start_dateStr = start_dateObj.toISOString().split('T').shift();\r\n            let start_timeStr = arr[i].available_start_time;\r\n            let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\r\n\r\n            let end_dateObj = new Date();\r\n            let end_dateStr = end_dateObj.toISOString().split('T').shift();\r\n            let end_timeStr = arr[i].available_end_time;\r\n            let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\r\n\r\n            let tempStartTime = start_timeAndDate;\r\n            let tempEndTime = end_timeAndDate;\r\n            /**\r\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\r\n            */\r\n            if (tempStartTime.getHours() === hour) {\r\n                // addmarginLeft = 0;\r\n                // itemWidth = this.state.eventBoxSize;\r\n                // itemWidth = 0;\r\n                // console.log(\"matched\" + i );\r\n                let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\r\n                let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\r\n                let minDiff = (tempEndTime.getMinutes()) / 60;\r\n                let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\r\n                let color = 'PaleTurquoise';\r\n\r\n                sameTimeEventCount++;\r\n                //check if there is already an event there overlapping from another hour\r\n                for(let i = 0; i < arr.length; i++){\r\n                    let start_dateObj = new Date();\r\n                    let start_dateStr = start_dateObj.toISOString().split('T').shift();\r\n                    let start_timeStr = arr[i].available_start_time;\r\n                    let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\r\n\r\n                    let end_dateObj = new Date();\r\n                    let end_dateStr = end_dateObj.toISOString().split('T').shift();\r\n                    let end_timeStr = arr[i].available_end_time;\r\n                    let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\r\n\r\n                    let tempStartTime = start_timeAndDate;\r\n                    let tempEndTime = end_timeAndDate;\r\n                    if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\r\n                        //  console.log(\"this is statr time :\"+ tempStartTime.getHours() );\r\n                        //  console.log(\"this is end time :\"+ tempEndTime.getHours() );\r\n                        //  console.log(\"add 20\");\r\n                        addmarginLeft += 20;\r\n                        itemWidth = itemWidth - 20;\r\n                        // console.log(addmarginLeft);\r\n                        // overlapEvent++;\r\n                    }\r\n                }\r\n\r\n\r\n                if(sameTimeEventCount > 1  ){\r\n                    // console.log(\"In here because same hour  \");\r\n                    // console.log(\"add 20\");\r\n                     addmarginLeft += 20;\r\n                    // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\r\n                    // itemWidth = itemWidth/(sameHourItems-1);\r\n                    itemWidth = itemWidth - 20;\r\n                    // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\r\n                    // console.log(addmarginLeft);\r\n                }\r\n                // console.log(addmarginLeft);\r\n                // console.log(\"end of this element \");\r\n\r\n                //chnage font size if not enough space\r\n                if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\r\n                    fontSize = 8;\r\n                }\r\n                // change color if more than one event in same time.\r\n                if(sameTimeEventCount <= 1){\r\n                     color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\r\n                }\r\n                else if( sameTimeEventCount === 2){\r\n                    color = 'skyblue';\r\n                }\r\n                else{\r\n                    color = 'blue';\r\n                }\r\n                let newElement =\r\n                    (<div key={\"dayGoalItem\" + i}\r\n                    data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\r\n\r\n                        onMouseOver={e => {\r\n                            e.target.style.color = \"#FFFFFF\";\r\n                            e.target.style.background = \"RebeccaPurple\";\r\n                            // e.target.style.marginLeft = \"5px\";\r\n                            e.target.style.zIndex=\"2\";\r\n\r\n                        }}\r\n                        onMouseOut={e => {\r\n                            e.target.style.zIndex=\"1\";\r\n                            // e.target.style.marginLeft = \"0px\";\r\n                            e.target.style.color = \"#000000\";\r\n                            e.target.style.background = color;\r\n                            e.target.style.border= \"1px lightgray solid\";\r\n                            // e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\r\n                        }}\r\n                        onClick = {this.GoalClicked}\r\n                        style={{\r\n                            zIndex: this.state.zIndex,\r\n                            marginTop: minsToMarginTop + \"px\",\r\n                            padding: \"5px\",\r\n                            // fontSize: \"10px\",\r\n                            border: \"1px lightgray solid \",\r\n                            // float: \"left\",\r\n                            borderRadius: \"5px\",\r\n                            // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\r\n                            // width: this.state.eventBoxSize,\r\n                            position: \"absolute\",\r\n                            height: height + \"px\",\r\n\r\n                            fontSize: fontSize + \"px\",\r\n                            background: color,\r\n                            width: itemWidth + \"px\",\r\n                            marginLeft: addmarginLeft + \"px\"\r\n                        }}>\r\n                        {arr[i].title}\r\n                    </div>);\r\n                res.push(newElement);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\r\n    */\r\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\r\n        var arr = [];\r\n        for (let i = 0; i < 24; ++i) {\r\n            arr.push(\r\n                <Row key={\"dayGoal\" + i} style={{ position: \"relative\" }}>\r\n                    <Col\r\n                        style={{\r\n                            position: \"relative\",\r\n                            borderTop: \"1px solid mistyrose\",\r\n                            width: '180px',\r\n                            background: \"aliceblue\",\r\n                            height: this.state.pxPerHour\r\n                        }}>\r\n                        {this.getEventItem(i)}\r\n                    </Col >\r\n                </Row>\r\n            )\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            <div style={{margin:'20px',\r\n            padding: '20px',\r\n            marginTop: \"0px\",\r\n            width: \"300px\",\r\n            borderRadius: \"20px\" }}>\r\n                Today's Goals:\r\n                <Container style={{}}>\r\n                    <Row >\r\n                        {/* <div class=\"table col-md-1\" > */}\r\n                        <Col>\r\n                            {/* this is for the actual event slots */}\r\n                            <Container style={{ margin: '0', padding: '0' }}>\r\n                                {this.dayViewItems()}\r\n                            </Container>\r\n                            {/* </div> */}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\n// import axios from 'axios';\r\n// import moment from 'moment';\r\nimport {\r\n     Container, Row, Col\r\n} from 'react-bootstrap';\r\n\r\nexport default class DayEvents extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // console.log(this.props.dateContext);\r\n        this.state = {\r\n            //dayEvents: [], //holds google events data for a single day\r\n            // todayDateObject: moment(\"03/07/2020\"), //this is the date of interset for events to be displaye\r\n            pxPerHour: \"30px\", //preset size for all columns\r\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\r\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\r\n            eventBoxSize: 150, //width size for event box\r\n            marginFromLeft: 0\r\n        }\r\n    }\r\n\r\n    timeDisplay = () => { //this essentially creates the time row\r\n        let arr = [];\r\n        for (let i = 0; i < 24; ++i) {\r\n            arr.push(\r\n                <Row key={\"dayEvent\" + i}>\r\n                    <Col style={{\r\n                        borderTop: \"1px solid lavender\",\r\n                        textAlign: \"right\",\r\n                        height: this.state.pxPerHour\r\n                    }}>\r\n                        {i}:00\r\n                    </Col >\r\n                </Row>\r\n            )\r\n        }\r\n        return arr\r\n    }\r\n\r\n    onEventClick = (e, i) => {\r\n        var arr = this.props.dayEvents;\r\n        e.stopPropagation();\r\n        this.props.eventClickDayView(arr[i]);\r\n    }\r\n\r\n\r\n    /*\r\n     * TODO: events spanning multiple days\r\n     * getEventItem: given an hour, this will return all events that was started during that hour\r\n     *\r\n    */\r\n    getEventItem = (hour) => {\r\n        var res = []\r\n        var tempStart = null;\r\n        var tempEnd = null;\r\n        var arr = this.props.dayEvents;\r\n        var sameTimeEventCount = 0;\r\n        var addmarginLeft = 0;\r\n        let itemWidth = this.state.eventBoxSize;\r\n        var fontSize = 10;\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            tempStart = arr[i].start.dateTime;\r\n            tempEnd = arr[i].end.dateTime;\r\n            /**\r\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\r\n            */\r\n            let tempStartTime = new Date(tempStart);\r\n            let tempEndTime = new Date(tempEnd);\r\n            let curDate = this.props.dateContext.get('date')\r\n            if (tempStartTime.getDate() ===  curDate) {\r\n              if (tempStartTime.getHours() == hour) {\r\n                if (tempStartTime.getDate() !==  tempEndTime.getDate()) {\r\n                  let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\r\n                  let hourDiff = 24 - tempStartTime.getHours();\r\n                  let minDiff = 0;\r\n                  let color = 'lavender';\r\n                  let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\r\n                  sameTimeEventCount++;\r\n                  let newElement =\r\n                      (\r\n                          <div key={\"event\" + i}>\r\n                              <div\r\n\r\n                                  data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\r\n                                  onMouseOver={e => {\r\n                                      e.target.style.color = \"#FFFFFF\";\r\n                                      e.target.style.background = \"RebeccaPurple\";\r\n                                      e.target.style.zIndex = \"2\";\r\n                                  }}\r\n                                  onMouseOut={e => {\r\n                                      e.target.style.zIndex = \"1\";\r\n                                      e.target.style.color = \"#000000\";\r\n                                      e.target.style.background = color;\r\n                                  }}\r\n                                  key={i}\r\n                                  // value = {i}\r\n                                  onClick={e => this.onEventClick(e, i)}\r\n                                  style={{\r\n                                      zIndex: this.state.zIndex,\r\n                                      marginTop: minsToMarginTop + \"px\",\r\n                                      padding: \"5px\",\r\n                                      fontSize: fontSize + \"px\",\r\n                                      border: \"1px lightgray solid \",\r\n                                      float: \"left\",\r\n                                      //  verticalAlign: \" \",\r\n                                      // verticalAlign: 'text-top',\r\n                                      // textAlign:\"left\",\r\n                                      borderRadius: \"5px\",\r\n                                      background: color,\r\n                                      // width: this.state.eventBoxSize - (addmarginLeft/16),\r\n                                      width: itemWidth + \"px\",\r\n                                      position: \"absolute\",\r\n                                      height: height + \"px\",\r\n                                      marginLeft: addmarginLeft + \"px\"\r\n                                  }}>\r\n                                  {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\r\n                                  {arr[i].summary}\r\n                              </div>\r\n                          </div>\r\n                      );\r\n                  res.push(newElement);\r\n                } else {\r\n                  // addmarginLeft = 0;\r\n                  // itemWidth = this.state.eventBoxSize;\r\n                  let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\r\n                  let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\r\n                  let minDiff = (tempEndTime.getMinutes()) / 60;\r\n                  let color = 'PaleTurquoise';\r\n                  let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\r\n                  sameTimeEventCount++;\r\n                  //check if there is already an event there overlapping from another hour\r\n                  for (let i = 0; i < arr.length; i++) {\r\n                      tempStart = arr[i].start.dateTime;\r\n                      tempEnd = arr[i].end.dateTime;\r\n                      let tempStartTime = new Date(tempStart);\r\n                      let tempEndTime = new Date(tempEnd);\r\n                      if (tempStartTime.getHours() < hour && tempEndTime.getHours() > hour) {\r\n                          addmarginLeft += 20;\r\n                          itemWidth = itemWidth - 20;\r\n                      }\r\n                  }\r\n\r\n                  if (sameTimeEventCount > 1) {\r\n                      // console.log(\"add 20 in day\");\r\n                      addmarginLeft += 20;\r\n                      // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\r\n                      // itemWidth = itemWidth/(sameHourItems-1);\r\n                      itemWidth = itemWidth - 20;\r\n                  }\r\n                  //chnage font size if not enough space\r\n                  if ((tempEndTime.getHours() - tempStartTime.getHours()) < 2) {\r\n                      fontSize = 8;\r\n                  }\r\n\r\n                  // change color if more than one event in same time.\r\n                  if (sameTimeEventCount <= 1) {\r\n                      color = (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue');\r\n                  }\r\n                  else if (sameTimeEventCount == 2) {\r\n                      color = 'skyblue';\r\n                  }\r\n                  else {\r\n                      color = 'blue';\r\n                  }\r\n\r\n                  let newElement =\r\n                      (\r\n\r\n                          <div key={\"event\" + i}>\r\n                              <div\r\n\r\n                                  data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\r\n                                  onMouseOver={e => {\r\n                                      e.target.style.color = \"#FFFFFF\";\r\n                                      e.target.style.background = \"RebeccaPurple\";\r\n                                      e.target.style.zIndex = \"2\";\r\n                                  }}\r\n                                  onMouseOut={e => {\r\n                                      e.target.style.zIndex = \"1\";\r\n                                      e.target.style.color = \"#000000\";\r\n                                      e.target.style.background = color;\r\n                                  }}\r\n                                  key={i}\r\n                                  // value = {i}\r\n                                  onClick={e => this.onEventClick(e, i)}\r\n                                  style={{\r\n                                      zIndex: this.state.zIndex,\r\n                                      marginTop: minsToMarginTop + \"px\",\r\n                                      padding: \"5px\",\r\n                                      fontSize: fontSize + \"px\",\r\n                                      border: \"1px lightgray solid \",\r\n                                      float: \"left\",\r\n                                      //  verticalAlign: \" \",\r\n                                      // verticalAlign: 'text-top',\r\n                                      // textAlign:\"left\",\r\n                                      borderRadius: \"5px\",\r\n                                      background: color,\r\n                                      // width: this.state.eventBoxSize - (addmarginLeft/16),\r\n                                      width: itemWidth + \"px\",\r\n                                      position: \"absolute\",\r\n                                      height: height + \"px\",\r\n                                      marginLeft: addmarginLeft + \"px\"\r\n                                  }}>\r\n                                  {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\r\n                                  {arr[i].summary}\r\n                              </div>\r\n                          </div>\r\n                      );\r\n                  res.push(newElement);\r\n                }\r\n              }\r\n            } else if ( hour === 0 && tempEndTime.getDate() ===  curDate) {\r\n              let minsToMarginTop = 0\r\n              let hourDiff = tempEndTime.getHours();\r\n              let minDiff = (tempEndTime.getMinutes()) / 60;\r\n              let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\r\n              let color = 'lavender';\r\n              sameTimeEventCount++;\r\n              let newElement =\r\n                  (\r\n                      <div key={\"event\" + i}>\r\n                          <div\r\n                              data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\r\n                              onMouseOver={e => {\r\n                                  e.target.style.color = \"#FFFFFF\";\r\n                                  e.target.style.background = \"RebeccaPurple\";\r\n                                  e.target.style.zIndex = \"2\";\r\n                              }}\r\n                              onMouseOut={e => {\r\n                                  e.target.style.zIndex = \"1\";\r\n                                  e.target.style.color = \"#000000\";\r\n                                  e.target.style.background = color;\r\n                              }}\r\n                              key={i}\r\n                              // value = {i}\r\n                              onClick={e => this.onEventClick(e, i)}\r\n                              style={{\r\n                                  zIndex: this.state.zIndex,\r\n                                  marginTop: minsToMarginTop + \"px\",\r\n                                  padding: \"5px\",\r\n                                  fontSize: fontSize + \"px\",\r\n                                  border: \"1px lightgray solid \",\r\n                                  float: \"left\",\r\n                                  //  verticalAlign: \" \",\r\n                                  // verticalAlign: 'text-top',\r\n                                  // textAlign:\"left\",\r\n                                  borderRadius: \"5px\",\r\n                                  background: color,\r\n                                  // width: this.state.eventBoxSize - (addmarginLeft/16),\r\n                                  width: itemWidth + \"px\",\r\n                                  position: \"absolute\",\r\n                                  height: height + \"px\",\r\n                                  marginLeft: addmarginLeft + \"px\"\r\n                              }}>\r\n                              {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\r\n                              {arr[i].summary}\r\n                          </div>\r\n                      </div>\r\n                  );\r\n                  res.push(newElement);\r\n            } else if ( hour === 0 && tempStartTime.getDate() < curDate && tempEndTime.getDate() > curDate ){\r\n              let minsToMarginTop = 0\r\n              let hourDiff = 24\r\n              let height = (hourDiff) * this.state.pxPerHourForConversion;\r\n              let color = 'lavender';\r\n              sameTimeEventCount++;\r\n              let newElement =\r\n                  (\r\n                      <div key={\"event\" + i}>\r\n                          <div\r\n                              data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\r\n                              onMouseOver={e => {\r\n                                  e.target.style.color = \"#FFFFFF\";\r\n                                  e.target.style.background = \"RebeccaPurple\";\r\n                                  e.target.style.zIndex = \"2\";\r\n                              }}\r\n                              onMouseOut={e => {\r\n                                  e.target.style.zIndex = \"1\";\r\n                                  e.target.style.color = \"#000000\";\r\n                                  e.target.style.background = color;\r\n                              }}\r\n                              key={i}\r\n                              // value = {i}\r\n                              onClick={e => this.onEventClick(e, i)}\r\n                              style={{\r\n                                  zIndex: this.state.zIndex,\r\n                                  marginTop: minsToMarginTop + \"px\",\r\n                                  padding: \"5px\",\r\n                                  fontSize: fontSize + \"px\",\r\n                                  border: \"1px lightgray solid \",\r\n                                  float: \"left\",\r\n                                  //  verticalAlign: \" \",\r\n                                  // verticalAlign: 'text-top',\r\n                                  // textAlign:\"left\",\r\n                                  borderRadius: \"5px\",\r\n                                  background: color,\r\n                                  // width: this.state.eventBoxSize - (addmarginLeft/16),\r\n                                  width: itemWidth + \"px\",\r\n                                  position: \"absolute\",\r\n                                  height: height + \"px\",\r\n                                  marginLeft: addmarginLeft + \"px\"\r\n                              }}>\r\n                              {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\r\n                              {arr[i].summary}\r\n                          </div>\r\n                      </div>\r\n                  );\r\n              res.push(newElement);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    onDayClick = (e, i) => {\r\n\r\n        console.log(\"this is the hour:\" + i);\r\n        this.props.handleDateClick((this.props.dateContext.format(\"M\") + '/' + this.props.dateContext.format(\"D\") + '/' + this.props.dateContext.format(\"Y\")), i);\r\n    }\r\n\r\n\r\n    /**\r\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\r\n    */\r\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\r\n        var arr = [];\r\n        for (let i = 0; i < 24; ++i) {\r\n            arr.push(\r\n                <Row key={\"dayEvent\" + i} style={{ position: \"relative\" }}>\r\n                    <Col\r\n                        style={{\r\n                            position: \"relative\",\r\n                            borderTop: \"1px solid lavender\",\r\n                            width: '180px', //lyman change width to adjust\r\n                            background: \"aliceblue\",\r\n                            height: this.state.pxPerHour\r\n                        }}\r\n                        onClick={e => this.onDayClick(e, i)}\r\n                    >\r\n                        {this.getEventItem(i)}\r\n                    </Col >\r\n                </Row>\r\n            )\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                padding: '20px',\r\n                width: \"300px\",\r\n                borderRadius: \"20px\"\r\n            }}>\r\n                Today's Events:\r\n                <Container style={{}}>\r\n                    <Row >\r\n                        <Col >\r\n                            {/* this is Just for the time */}\r\n                            <Container style={{ margin: '0', padding: '0' }}>\r\n                                {this.timeDisplay()}\r\n                            </Container>\r\n                        </Col>\r\n                        <Col>\r\n                            {/* this is for the actual event slots */}\r\n                            <Container style={{ margin: '0', padding: '0' }}>\r\n                                {this.dayViewItems()}\r\n                            </Container>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport moment from 'moment';\r\nimport axios from \"axios\";\r\nimport {\r\n     Container, Row, Col\r\n} from 'react-bootstrap';\r\n\r\nexport default class WeekEvents extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          pxPerHour: \"30px\", //preset size for all columns\r\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\r\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\r\n          eventBoxSize: 80, //width size for event box\r\n          marginFromLeft: 0\r\n      }\r\n  }\r\n\r\n\r\n  timeDisplay = () => { //this essentially creates the time row\r\n      let arr = [];\r\n      for (let i = 0; i < 24; ++i) {\r\n          arr.push(\r\n              <Row key={\"dayEvent\" + i}>\r\n                  <Col style={{\r\n                      borderTop: \"1px solid lavender\",\r\n                      textAlign: \"right\",\r\n                      height: this.state.pxPerHour,\r\n                  }}>\r\n                      {i}:00\r\n                  </Col >\r\n              </Row>\r\n          )\r\n      }\r\n      return arr\r\n  }\r\n\r\n  onEventClick = (e, i) => {\r\n    var arr = this.props.weekEvents;\r\n    e.stopPropagation();\r\n    this.props.eventClick(arr[i]);\r\n  }\r\n\r\n  onWeekClick = (event, day, hour) => {\r\n    let startObject = this.props.dateContext.clone();\r\n    let startDay = startObject.startOf(\"week\");\r\n    let curDate = startDay.clone();\r\n    curDate.add(24*day+hour,'hour');\r\n    this.props.onDayClick(curDate);\r\n  }\r\n\r\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\r\n      var res= [];\r\n      for (let i = 0; i < 7; ++i) {\r\n          var arr = []\r\n          for( let j = 0; j < 24; ++j) {\r\n            arr.push(\r\n              <Container key={\"weekEvent\" + i + j}>\r\n                <Row style={{ position: \"relative\"}}>\r\n                  <Col\r\n                      style={{\r\n                          position: \"relative\",\r\n                          borderTop: \"1px solid lavender\",\r\n                          background: \"aliceblue\",\r\n                          height: this.state.pxPerHour,\r\n                          width: '80px',\r\n                      }}\r\n                      onClick={e => this.onWeekClick(e, i, j)}\r\n                  >\r\n                      {this.getEventItem(i,j)}\r\n                  </Col >\r\n                </Row>\r\n              </Container>\r\n            );\r\n          }\r\n        res.push(\r\n          <Col key={\"dayEvent\" + i}>\r\n            {arr}\r\n          </Col>\r\n        );\r\n      }\r\n      return res;\r\n  }\r\n\r\n  getEventItem = (day, hour) => {\r\n      let startObject = this.props.dateContext.clone();\r\n      let startDay = startObject.startOf(\"week\");\r\n      let curDate = startDay.clone();\r\n      curDate.add(day,'days');\r\n      var res = []\r\n      var tempStart = null;\r\n      var tempEnd = null;\r\n      var arr = this.props.weekEvents;\r\n      var sameTimeEventCount = 0;\r\n      var addmarginLeft = 0;\r\n      let itemWidth = this.state.eventBoxSize;\r\n      var fontSize = 10;\r\n      for (let i = 0; i < arr.length; i++) {\r\n          tempStart = arr[i].start.dateTime;\r\n          tempEnd = arr[i].end.dateTime;\r\n          /**\r\n           * TODO: add the case where arr[i].start.dateTime doesn't exists\r\n          */\r\n          let tempStartTime = new Date(tempStart);\r\n          let tempEndTime = new Date(tempEnd);\r\n          let startDate = moment(tempStartTime);\r\n          let endDate = moment(tempEndTime)\r\n          if(curDate.isSameOrAfter(startDate,'day') && curDate.isSameOrBefore(endDate,'day')) {\r\n            if (startDate.date() ===  curDate.date()) {\r\n                if (startDate.hour() === hour) {\r\n                    if(startDate.date() === endDate.date()) {\r\n                        // addmarginLeft = 0;\r\n                            // itemWidth = this.state.eventBoxSize;\r\n                            let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\r\n                            let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\r\n                            let minDiff = (tempEndTime.getMinutes()) / 60;\r\n                            let color = 'PaleTurquoise';\r\n                            let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\r\n                            sameTimeEventCount++;\r\n                            //check if there is already an event there overlapping from another hour\r\n                            for (let i = 0; i < arr.length; i++) {\r\n                                tempStart = arr[i].start.dateTime;\r\n                                tempEnd = arr[i].end.dateTime;\r\n                                let tempStartTime = new Date(tempStart);\r\n                                let tempEndTime = new Date(tempEnd);\r\n                                if (tempStartTime.getHours() < hour && tempEndTime.getHours() > hour) {\r\n                                    addmarginLeft += 20;\r\n                                    itemWidth = itemWidth - 20;\r\n                                }\r\n                            }\r\n\r\n                            if (sameTimeEventCount > 1) {\r\n                                // console.log(\"add 20 in day\");\r\n                                addmarginLeft += 20;\r\n                                // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\r\n                                // itemWidth = itemWidth/(sameHourItems-1);\r\n                                itemWidth = itemWidth - 20;\r\n                            }\r\n                            //chnage font size if not enough space\r\n                            if ((tempEndTime.getHours() - tempStartTime.getHours()) < 2) {\r\n                                fontSize = 8;\r\n                            }\r\n\r\n                            // change color if more than one event in same time.\r\n                            if (sameTimeEventCount <= 1) {\r\n                                color = (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue');\r\n                            }\r\n                            else if (sameTimeEventCount == 2) {\r\n                                color = 'skyblue';\r\n                            }\r\n                            else {\r\n                                color = 'blue';\r\n                            }\r\n\r\n                            let newElement =\r\n                                (\r\n\r\n                                    <div key={\"event\" + i}>\r\n                                        <div\r\n\r\n                                            data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\r\n                                            onMouseOver={e => {\r\n                                                e.target.style.color = \"#FFFFFF\";\r\n                                                e.target.style.background = \"RebeccaPurple\";\r\n                                                e.target.style.zIndex = \"2\";\r\n                                            }}\r\n                                            onMouseOut={e => {\r\n                                                e.target.style.zIndex = \"1\";\r\n                                                e.target.style.color = \"#000000\";\r\n                                                e.target.style.background = color;\r\n                                            }}\r\n                                            key={i}\r\n                                            // value = {i}\r\n                                            onClick={e => this.onEventClick(e, i)}\r\n                                            style={{\r\n                                                zIndex: this.state.zIndex,\r\n                                                marginTop: minsToMarginTop + \"px\",\r\n                                                padding: \"5px\",\r\n                                                fontSize: fontSize + \"px\",\r\n                                                border: \"1px lightgray solid \",\r\n                                                float: \"left\",\r\n                                                //  verticalAlign: \" \",\r\n                                                // verticalAlign: 'text-top',\r\n                                                // textAlign:\"left\",\r\n                                                borderRadius: \"5px\",\r\n                                                background: color,\r\n                                                // width: this.state.eventBoxSize - (addmarginLeft/16),\r\n                                                width: itemWidth + \"px\",\r\n                                                position: \"absolute\",\r\n                                                height: height + \"px\",\r\n                                                marginLeft: addmarginLeft + \"px\"\r\n                                            }}>\r\n                                            {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\r\n                                            {arr[i].summary}\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            res.push(newElement);\r\n                    } else if(startDate.date() !== endDate.date()) {\r\n                        let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\r\n                            let hourDiff = 24 - tempStartTime.getHours();\r\n                            let minDiff = 0;\r\n                            let color = 'lavender';\r\n                            let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\r\n                            sameTimeEventCount++;\r\n                            let newElement =\r\n                                (\r\n                                    <div key={\"event\" + i}>\r\n                                        <div\r\n\r\n                                            data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\r\n                                            onMouseOver={e => {\r\n                                                e.target.style.color = \"#FFFFFF\";\r\n                                                e.target.style.background = \"RebeccaPurple\";\r\n                                                e.target.style.zIndex = \"2\";\r\n                                            }}\r\n                                            onMouseOut={e => {\r\n                                                e.target.style.zIndex = \"1\";\r\n                                                e.target.style.color = \"#000000\";\r\n                                                e.target.style.background = color;\r\n                                            }}\r\n                                            key={i}\r\n                                            // value = {i}\r\n                                            onClick={e => this.onEventClick(e, i)}\r\n                                            style={{\r\n                                                zIndex: this.state.zIndex,\r\n                                                marginTop: minsToMarginTop + \"px\",\r\n                                                padding: \"5px\",\r\n                                                fontSize: fontSize + \"px\",\r\n                                                border: \"1px lightgray solid \",\r\n                                                float: \"left\",\r\n                                                //  verticalAlign: \" \",\r\n                                                // verticalAlign: 'text-top',\r\n                                                // textAlign:\"left\",\r\n                                                borderRadius: \"5px\",\r\n                                                background: color,\r\n                                                // width: this.state.eventBoxSize - (addmarginLeft/16),\r\n                                                width: itemWidth + \"px\",\r\n                                                position: \"absolute\",\r\n                                                height: height + \"px\",\r\n                                                marginLeft: addmarginLeft + \"px\"\r\n                                            }}>\r\n                                            {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\r\n                                            {arr[i].summary}\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            res.push(newElement);\r\n                    }\r\n                }\r\n            } else if (hour === 0) {\r\n                if(endDate.date() ===  curDate.date()) {\r\n                    let minsToMarginTop = 0\r\n                        let hourDiff = tempEndTime.getHours();\r\n                        let minDiff = (tempEndTime.getMinutes()) / 60;\r\n                        let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\r\n                        let color = 'lavender';\r\n                        sameTimeEventCount++;\r\n                        let newElement =\r\n                            (\r\n                                <div key={\"event\" + i}>\r\n                                    <div\r\n                                        data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\r\n                                        onMouseOver={e => {\r\n                                            e.target.style.color = \"#FFFFFF\";\r\n                                            e.target.style.background = \"RebeccaPurple\";\r\n                                            e.target.style.zIndex = \"2\";\r\n                                        }}\r\n                                        onMouseOut={e => {\r\n                                            e.target.style.zIndex = \"1\";\r\n                                            e.target.style.color = \"#000000\";\r\n                                            e.target.style.background = color;\r\n                                        }}\r\n                                        key={i}\r\n                                        // value = {i}\r\n                                        onClick={e => this.onEventClick(e, i)}\r\n                                        style={{\r\n                                            zIndex: this.state.zIndex,\r\n                                            marginTop: minsToMarginTop + \"px\",\r\n                                            padding: \"5px\",\r\n                                            fontSize: fontSize + \"px\",\r\n                                            border: \"1px lightgray solid \",\r\n                                            float: \"left\",\r\n                                            //  verticalAlign: \" \",\r\n                                            // verticalAlign: 'text-top',\r\n                                            // textAlign:\"left\",\r\n                                            borderRadius: \"5px\",\r\n                                            background: color,\r\n                                            // width: this.state.eventBoxSize - (addmarginLeft/16),\r\n                                            width: itemWidth + \"px\",\r\n                                            position: \"absolute\",\r\n                                            height: height + \"px\",\r\n                                            marginLeft: addmarginLeft + \"px\"\r\n                                        }}>\r\n                                        {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\r\n                                        {arr[i].summary}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                            res.push(newElement);\r\n                } else {\r\n                    let minsToMarginTop = 0\r\n                        let height = 24 * this.state.pxPerHourForConversion;\r\n                        let color = 'lavender';\r\n                        sameTimeEventCount++;\r\n                        let newElement =\r\n                            (\r\n                                <div key={\"event\" + i}>\r\n                                    <div\r\n                                        data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\r\n                                        onMouseOver={e => {\r\n                                            e.target.style.color = \"#FFFFFF\";\r\n                                            e.target.style.background = \"RebeccaPurple\";\r\n                                            e.target.style.zIndex = \"2\";\r\n                                        }}\r\n                                        onMouseOut={e => {\r\n                                            e.target.style.zIndex = \"1\";\r\n                                            e.target.style.color = \"#000000\";\r\n                                            e.target.style.background = color;\r\n                                        }}\r\n                                        key={i}\r\n                                        // value = {i}\r\n                                        onClick={e => this.onEventClick(e, i)}\r\n                                        style={{\r\n                                            zIndex: this.state.zIndex,\r\n                                            marginTop: minsToMarginTop + \"px\",\r\n                                            padding: \"5px\",\r\n                                            fontSize: fontSize + \"px\",\r\n                                            border: \"1px lightgray solid \",\r\n                                            float: \"left\",\r\n                                            //  verticalAlign: \" \",\r\n                                            // verticalAlign: 'text-top',\r\n                                            // textAlign:\"left\",\r\n                                            borderRadius: \"5px\",\r\n                                            background: color,\r\n                                            // width: this.state.eventBoxSize - (addmarginLeft/16),\r\n                                            width: itemWidth + \"px\",\r\n                                            position: \"absolute\",\r\n                                            height: height + \"px\",\r\n                                            marginLeft: addmarginLeft + \"px\"\r\n                                        }}>\r\n                                        {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\r\n                                        {arr[i].summary}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                            res.push(newElement);\r\n                }\r\n            }\r\n          }\r\n      }\r\n      return res;\r\n  }\r\n\r\n render() {\r\n    let weekdays = moment.weekdays().map((day) => {\r\n      return (\r\n        <Col key={\"event\"+day} className=\"fancytext\">{day}</Col>\r\n      )\r\n    });\r\n     return (\r\n         <Container style={{ height: 'auto', width: '1000px'}}>\r\n           <Row>\r\n             Events\r\n           </Row>\r\n           <Row>\r\n             <Col className=\"fancytext\">Time</Col>\r\n             {weekdays}\r\n           </Row>\r\n           <Row style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\r\n             <Col>\r\n                 <Container style={{ margin: '0', padding: '0'}}>\r\n                     {this.timeDisplay()}\r\n                 </Container>\r\n             </Col>\r\n             {this.weekViewItems()}\r\n           </Row>\r\n         </Container>\r\n     )\r\n }\r\n}\r\n","import React, { Component } from 'react'\r\nimport moment from 'moment';\r\nimport {\r\n     Container, Row, Col\r\n} from 'react-bootstrap';\r\n\r\nimport firebase from \"./firebase\";\r\n\r\nexport default class WeekRoutines extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      // console.log(this.props.dateContext);\r\n      this.state = {\r\n          firebaseRootPath: firebase.firestore().collection('users').doc('7R6hAVmDrNutRkG3sVRy'),\r\n          goals: [], //array to hold all  goals\r\n          routines: [], // array to hold all routines\r\n          pxPerHour: \"30px\", //preset size for all columns\r\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\r\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\r\n          eventBoxSize: 80, //width size for event box\r\n          marginFromLeft: 0\r\n      }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.grabFireBaseRoutinesGoalsData();\r\n  }\r\n\r\n  /**\r\n * grabFireBaseRoutinesGoalsData:\r\n * this function grabs the goals&routines array from the path located in this function\r\n * which will then populate the goals, routines,originalGoalsAndRoutineArr array\r\n * separately. The arrays will be used for display and data manipulation later.\r\n *\r\n*/\r\ngrabFireBaseRoutinesGoalsData = () => {\r\n  const db = firebase.firestore();\r\n  // console.log('DayRoutine component did mount');\r\n  const docRef = db.collection('users').doc('7R6hAVmDrNutRkG3sVRy');\r\n  docRef.get().then((doc) => {\r\n      if (doc.exists) {\r\n          // console.log(doc.data());\r\n          var x = doc.data();\r\n          // console.log(\"from DayRoutines\");\r\n          // console.log(x['goals&routines']);\r\n          x = x['goals&routines'];\r\n          let routine = [];\r\n          let goal = [];\r\n          for (let i = 0; i < x.length; ++i) {\r\n              if (!x[i]['deleted'] && x[i]['is_persistent']) {\r\n                  // console.log(\"routine \" + x[i]['title']);\r\n                  routine.push(x[i]);\r\n              }\r\n              else if (!x[i]['deleted'] && !x[i]['is_persistent']) {\r\n                  // console.log(\"not routine \" + x[i]['title']);\r\n                  goal.push(x[i]);\r\n              }\r\n          }\r\n          this.setState({\r\n              originalGoalsAndRoutineArr: x,\r\n              goals: goal,\r\n              routines: routine\r\n          })\r\n      } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such document!\");\r\n      }\r\n  }).catch(function (error) {\r\n      console.log(\"Error getting document:\", error);\r\n  });\r\n}\r\n\r\ngetEventItem = (day, hour) => {\r\n  var res = []\r\n  var arr = this.state.routines;\r\n  var sameTimeEventCount = 0;\r\n  let itemWidth = this.state.eventBoxSize;\r\n  // var overlapEvent = 0;\r\n  var addmarginLeft = 0;\r\n  var fontSize = 10;\r\n  for (let i = 0; i < arr.length; i++) {\r\n\r\n      let start_dateObj = new Date();\r\n      let start_dateStr = start_dateObj.toISOString().split('T').shift();\r\n      let start_timeStr = arr[i].available_start_time;\r\n      let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\r\n\r\n      let end_dateObj = new Date();\r\n      let end_dateStr = end_dateObj.toISOString().split('T').shift();\r\n      let end_timeStr = arr[i].available_end_time;\r\n      let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\r\n\r\n      let tempStartTime = start_timeAndDate;\r\n      let tempEndTime = end_timeAndDate;\r\n      /**\r\n       * TODO: add the case where arr[i].start.dateTime doesn't exists\r\n      */\r\n      if (tempStartTime.getHours() === hour) {\r\n          // console.log(\"matched\" + i );\r\n          let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\r\n          let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\r\n          let minDiff = (tempEndTime.getMinutes()) / 60;\r\n          let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\r\n          let color = 'PaleTurquoise';\r\n\r\n          sameTimeEventCount++;\r\n          //check if there is already an event there overlapping from another hour\r\n          for(let i = 0; i < arr.length; i++){\r\n              let start_dateObj = new Date();\r\n              let start_dateStr = start_dateObj.toISOString().split('T').shift();\r\n              let start_timeStr = arr[i].available_start_time;\r\n              let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\r\n\r\n              let end_dateObj = new Date();\r\n              let end_dateStr = end_dateObj.toISOString().split('T').shift();\r\n              let end_timeStr = arr[i].available_end_time;\r\n              let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\r\n\r\n              let tempStartTime = start_timeAndDate;\r\n              let tempEndTime = end_timeAndDate;\r\n              if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\r\n                  // console.log(\"We ARE IN HEREEEE\");\r\n                  addmarginLeft += 20;\r\n                  itemWidth = itemWidth - 20;\r\n                  // overlapEvent++;\r\n              }\r\n          }\r\n\r\n          if(sameTimeEventCount > 1  ){\r\n               addmarginLeft += 20;\r\n              // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\r\n              // itemWidth = itemWidth/(sameHourItems-1);\r\n              itemWidth = itemWidth - 20;\r\n              // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\r\n          }\r\n\r\n          //chnage font size if not enough space\r\n          if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\r\n              fontSize = 8;\r\n          }\r\n          // change color if more than one event in same time.\r\n          if(sameTimeEventCount <= 1){\r\n               color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\r\n          }\r\n          else if( sameTimeEventCount === 2){\r\n              color = 'skyblue';\r\n          }\r\n          else{\r\n              color = 'blue';\r\n          }\r\n          let newElement =\r\n              (<div key={\"dayRoutineItem\" + i}\r\n              data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\r\n\r\n                  onMouseOver={e => {\r\n                      e.target.style.color = \"#FFFFFF\";\r\n                      e.target.style.background = \"RebeccaPurple\";\r\n                      // e.target.style.marginLeft = \"5px\";\r\n                      // e.target.style.border= \"3px solid w\";\r\n                      e.target.style.zIndex=\"2\";\r\n\r\n\r\n\r\n\r\n                  }}\r\n                  onMouseOut={e => {\r\n                      e.target.style.zIndex=\"1\";\r\n\r\n                      // e.target.style.marginLeft = \"0px\";\r\n                       e.target.style.color = \"#000000\";\r\n                      //  e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\r\n                       e.target.style.border= \"1px lightgray solid\";\r\n\r\n                       e.target.style.background = color;\r\n\r\n\r\n                      }}\r\n\r\n                  onClick = {this.RoutineClicked}\r\n                  style={{\r\n                      zIndex: this.state.zIndex,\r\n                      marginTop: minsToMarginTop + \"px\",\r\n                      padding: \"5px\",\r\n                      // fontSize: \"10px\",\r\n                      border: \"1px lightgray solid \",\r\n                      // float: \"left\",\r\n                      borderRadius: \"5px\",\r\n                      // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\r\n                      //  width: this.state.eventBoxSize,\r\n                      position: \"absolute\",\r\n                      height: height + \"px\",\r\n\r\n                      fontSize: fontSize + \"px\",\r\n                      background: color,\r\n                      width: itemWidth + \"px\",\r\n                      marginLeft: addmarginLeft + \"px\"\r\n                  }}>\r\n                  {arr[i].title}\r\n              </div>);\r\n          res.push(newElement);\r\n      }\r\n  }\r\n  return res;\r\n}\r\n\r\n  timeDisplay = () => { //this essentially creates the time row\r\n      let arr = [];\r\n      for (let i = 0; i < 24; ++i) {\r\n          arr.push(\r\n              <Row key={\"dayEvent\" + i}>\r\n                  <Col style={{\r\n                      borderTop: \"1px solid lavender\",\r\n                      textAlign: \"right\",\r\n                      height: this.state.pxPerHour,\r\n                  }}>\r\n                      {i}:00\r\n                  </Col >\r\n              </Row>\r\n          )\r\n      }\r\n      return arr\r\n  }\r\n\r\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\r\n      var res= [];\r\n      for (let i = 0; i < 7; ++i) {\r\n          var arr = []\r\n          for( let j = 0; j < 24; ++j) {\r\n            arr.push(\r\n              <Container key={\"weekRoutine\" + i + j}>\r\n                <Row style={{ position: \"relative\"}}>\r\n                  <Col\r\n                      style={{\r\n                          position: \"relative\",\r\n                          borderTop: \"1px solid lavender\",\r\n                          background: \"aliceblue\",\r\n                          height: this.state.pxPerHour,\r\n                      }}\r\n                  >\r\n                      {this.getEventItem(i,j)}\r\n                  </Col >\r\n                </Row>\r\n              </Container>\r\n            );\r\n          }\r\n        res.push(\r\n          <Col key={\"dayRoutine\" + i}>\r\n            {arr}\r\n          </Col>\r\n        );\r\n      }\r\n      return res;\r\n  }\r\n\r\n render() {\r\n    let weekdays = moment.weekdays().map((day) => {\r\n      return (\r\n        <Col key={\"routine\"+day} className=\"fancytext\">{day}</Col>\r\n      )\r\n    });\r\n     return (\r\n         <Container style={{ height: 'auto', width: '1000px'}}>\r\n           <Row>\r\n             Routines\r\n           </Row>\r\n           <Row>\r\n             <Col className=\"fancytext\">Time</Col>\r\n             {weekdays}\r\n           </Row>\r\n           <Row style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\r\n             <Col >\r\n                 <Container style={{ margin: '0', padding: '0', width: '80px' }}>\r\n                     {this.timeDisplay()}\r\n                 </Container>\r\n             </Col>\r\n             {this.weekViewItems()}\r\n           </Row>\r\n         </Container>\r\n     )\r\n }\r\n}\r\n","import React, { Component } from 'react'\r\nimport moment from 'moment';\r\nimport {\r\n     Container, Row, Col\r\n} from 'react-bootstrap';\r\nimport firebase from \"./firebase\";\r\n\r\nexport default class WeekGoals extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      // console.log(this.props.dateContext);\r\n      this.state = {\r\n          firebaseRootPath: firebase.firestore().collection('users').doc('7R6hAVmDrNutRkG3sVRy'),\r\n          goals: [], //array to hold all  goals\r\n          routines: [], // array to hold all routine\r\n          pxPerHour: \"30px\", //preset size for all columns\r\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\r\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\r\n          eventBoxSize: 80, //width size for event box\r\n      }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.grabFireBaseRoutinesGoalsData();\r\n  }\r\n\r\n    /**\r\n   * grabFireBaseRoutinesGoalsData:\r\n   * this function grabs the goals&routines array from the path located in this function\r\n   * which will then populate the goals, routines,originalGoalsAndRoutineArr array\r\n   * separately. The arrays will be used for display and data manipulation later.\r\n   *\r\n  */\r\n  grabFireBaseRoutinesGoalsData = () => {\r\n    const db = firebase.firestore();\r\n    const docRef = db.collection('users').doc('7R6hAVmDrNutRkG3sVRy');\r\n    docRef.get().then((doc) => {\r\n        if (doc.exists) {\r\n            // console.log(doc.data());\r\n            var x = doc.data();\r\n            // console.log(\"from DayRoutines\");\r\n            // console.log(x['goals&routines']);\r\n            x = x['goals&routines'];\r\n            let routine = [];\r\n            let goal = [];\r\n            for (let i = 0; i < x.length; ++i) {\r\n                if (!x[i]['deleted'] && x[i]['is_persistent']) {\r\n                    // console.log(\"routine \" + x[i]['title']);\r\n                    routine.push(x[i]);\r\n                }\r\n                else if (!x[i]['deleted'] && !x[i]['is_persistent']) {\r\n                    // console.log(\"not routine \" + x[i]['title']);\r\n                    goal.push(x[i]);\r\n                }\r\n            }\r\n            this.setState({\r\n                originalGoalsAndRoutineArr: x,\r\n                goals: goal,\r\n                routines: routine\r\n            })\r\n        } else {\r\n            // doc.data() will be undefined in this case\r\n            console.log(\"No such document!\");\r\n        }\r\n    }).catch(function (error) {\r\n        console.log(\"Error getting document:\", error);\r\n    });\r\n  }\r\n\r\n  /**\r\n     * getEventItem: given an hour, this will return all events that was started during that hour\r\n     *\r\n    */\r\n   getEventItem = (day, hour) => {\r\n    var res = []\r\n    var arr = this.state.goals;\r\n    var sameTimeEventCount = 0;\r\n    let itemWidth = this.state.eventBoxSize;\r\n    // var overlapEvent = 0;\r\n    var addmarginLeft = 0;\r\n    var fontSize = 10;\r\n    for (let i = 0; i < arr.length; i++) {\r\n\r\n        let start_dateObj = new Date();\r\n        let start_dateStr = start_dateObj.toISOString().split('T').shift();\r\n        let start_timeStr = arr[i].available_start_time;\r\n        let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\r\n\r\n        let end_dateObj = new Date();\r\n        let end_dateStr = end_dateObj.toISOString().split('T').shift();\r\n        let end_timeStr = arr[i].available_end_time;\r\n        let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\r\n\r\n        let tempStartTime = start_timeAndDate;\r\n        let tempEndTime = end_timeAndDate;\r\n        /**\r\n         * TODO: add the case where arr[i].start.dateTime doesn't exists\r\n        */\r\n        if (tempStartTime.getHours() === hour) {\r\n            // addmarginLeft = 0;\r\n            // itemWidth = this.state.eventBoxSize;\r\n            // itemWidth = 0;\r\n            // console.log(\"matched\" + i );\r\n            let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\r\n            let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\r\n            let minDiff = (tempEndTime.getMinutes()) / 60;\r\n            let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\r\n            let color = 'PaleTurquoise';\r\n\r\n            sameTimeEventCount++;\r\n            //check if there is already an event there overlapping from another hour\r\n            for(let i = 0; i < arr.length; i++){\r\n                let start_dateObj = new Date();\r\n                let start_dateStr = start_dateObj.toISOString().split('T').shift();\r\n                let start_timeStr = arr[i].available_start_time;\r\n                let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\r\n\r\n                let end_dateObj = new Date();\r\n                let end_dateStr = end_dateObj.toISOString().split('T').shift();\r\n                let end_timeStr = arr[i].available_end_time;\r\n                let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\r\n\r\n                let tempStartTime = start_timeAndDate;\r\n                let tempEndTime = end_timeAndDate;\r\n                if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\r\n                    //  console.log(\"this is statr time :\"+ tempStartTime.getHours() );\r\n                    //  console.log(\"this is end time :\"+ tempEndTime.getHours() );\r\n                    //  console.log(\"add 20\");\r\n                    addmarginLeft += 20;\r\n                    itemWidth = itemWidth - 20;\r\n                    // console.log(addmarginLeft);\r\n                    // overlapEvent++;\r\n                }\r\n            }\r\n\r\n\r\n            if(sameTimeEventCount > 1  ){\r\n                // console.log(\"In here because same hour  \");\r\n                // console.log(\"add 20\");\r\n                 addmarginLeft += 20;\r\n                // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\r\n                // itemWidth = itemWidth/(sameHourItems-1);\r\n                itemWidth = itemWidth - 20;\r\n                // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\r\n                // console.log(addmarginLeft);\r\n            }\r\n            // console.log(addmarginLeft);\r\n            // console.log(\"end of this element \");\r\n\r\n            //chnage font size if not enough space\r\n            if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\r\n                fontSize = 8;\r\n            }\r\n            // change color if more than one event in same time.\r\n            if(sameTimeEventCount <= 1){\r\n                 color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\r\n            }\r\n            else if( sameTimeEventCount === 2){\r\n                color = 'skyblue';\r\n            }\r\n            else{\r\n                color = 'blue';\r\n            }\r\n            let newElement =\r\n                (<div key={\"dayGoalItem\" + i}\r\n                data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\r\n\r\n                    onMouseOver={e => {\r\n                        e.target.style.color = \"#FFFFFF\";\r\n                        e.target.style.background = \"RebeccaPurple\";\r\n                        // e.target.style.marginLeft = \"5px\";\r\n                        e.target.style.zIndex=\"2\";\r\n\r\n                    }}\r\n                    onMouseOut={e => {\r\n                        e.target.style.zIndex=\"1\";\r\n                        // e.target.style.marginLeft = \"0px\";\r\n                        e.target.style.color = \"#000000\";\r\n                        e.target.style.background = color;\r\n                        e.target.style.border= \"1px lightgray solid\";\r\n                        // e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\r\n                    }}\r\n                    onClick = {this.GoalClicked}\r\n                    style={{\r\n                        zIndex: this.state.zIndex,\r\n                        marginTop: minsToMarginTop + \"px\",\r\n                        padding: \"5px\",\r\n                        // fontSize: \"10px\",\r\n                        border: \"1px lightgray solid \",\r\n                        // float: \"left\",\r\n                        borderRadius: \"5px\",\r\n                        // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\r\n                        // width: this.state.eventBoxSize,\r\n                        position: \"absolute\",\r\n                        height: height + \"px\",\r\n\r\n                        fontSize: fontSize + \"px\",\r\n                        background: color,\r\n                        width: itemWidth + \"px\",\r\n                        marginLeft: addmarginLeft + \"px\"\r\n                    }}>\r\n                    {arr[i].title}\r\n                </div>);\r\n            res.push(newElement);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n  timeDisplay = () => { //this essentially creates the time row\r\n      let arr = [];\r\n      for (let i = 0; i < 24; ++i) {\r\n          arr.push(\r\n              <Row key={\"dayEvent\" + i}>\r\n                  <Col style={{\r\n                      borderTop: \"1px solid lavender\",\r\n                      textAlign: \"right\",\r\n                      height: this.state.pxPerHour,\r\n                  }}>\r\n                      {i}:00\r\n                  </Col >\r\n              </Row>\r\n          )\r\n      }\r\n      return arr\r\n  }\r\n\r\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\r\n      var res= [];\r\n      for (let i = 0; i < 7; ++i) {\r\n          var arr = []\r\n          for( let j = 0; j < 24; ++j) {\r\n            arr.push(\r\n              <Container key={\"weekGoal\" + i + j}>\r\n                <Row style={{ position: \"relative\"}}>\r\n                  <Col\r\n                      style={{\r\n                          position: \"relative\",\r\n                          borderTop: \"1px solid lavender\",\r\n                          background: \"aliceblue\",\r\n                          height: this.state.pxPerHour,\r\n                      }}\r\n                  >\r\n                      {this.getEventItem(i,j)}\r\n                  </Col >\r\n                </Row>\r\n              </Container>\r\n            );\r\n          }\r\n        res.push(\r\n          <Col key={\"dayGoal\" + i}>\r\n            {arr}\r\n          </Col>\r\n        );\r\n      }\r\n      return res;\r\n  }\r\n\r\n render() {\r\n    let weekdays = moment.weekdays().map((day) => {\r\n      return (\r\n        <Col key={\"goal\"+day} className=\"fancytext\">{day}</Col>\r\n      )\r\n    });\r\n     return (\r\n         <Container style={{ height: 'auto', width: '1000px'}}>\r\n           <Row>\r\n             Goals\r\n           </Row>\r\n           <Row>\r\n             <Col className=\"fancytext\">Time</Col>\r\n             {weekdays}\r\n           </Row>\r\n           <Row style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\r\n             <Col >\r\n                 <Container style={{ margin: '0', padding: '0', width: '80px' }}>\r\n                     {this.timeDisplay()}\r\n                 </Container>\r\n             </Col>\r\n             {this.weekViewItems()}\r\n           </Row>\r\n         </Container>\r\n     )\r\n }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./firebase\";\r\nimport { Button, Modal} from \"react-bootstrap\";\r\nimport { storage } from './firebase';\r\n\r\n  export default class AddNewPeople extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n    state = {\r\n      itemToEdit: {\r\n        have_pic: false,\r\n        important: false,\r\n        name: \"\",\r\n        phone_number: \"\",\r\n        pic: \"\",\r\n        relationship: \"\",\r\n        unique_id: \"\"\r\n      }, \r\n      saveChangesButtonEnabled: true,\r\n      peopleDocsPath: firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(\"7R6hAVmDrNutRkG3sVRy\")\r\n        .collection(\"people\")\r\n    };\r\n  \r\n    handleFileSelected = event => {\r\n        event.preventDefault(); \r\n        event.stopPropagation();                \r\n        const file = event.target.files[0];\r\n        this.setState({\r\n            saveChangesButtonEnabled: false\r\n        }, ()=>{\r\n            let targetFile = file\r\n            if(targetFile != null ){\r\n                let temp = this.state.itemToEdit;\r\n    \r\n                // Create a reference to the firebase storage. \r\n                var storageRef = storage.ref('People/' + targetFile.name);\r\n                //upload file to firebase storage\r\n                var task = storageRef.put(targetFile);\r\n                //check on the the upload progress\r\n                task.on('state_changed',\r\n                    function progress(snapshot){\r\n                        //get percentage uplaoded \r\n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\r\n                        console.log(percentage);\r\n    \r\n                    },\r\n                    function error(err){\r\n                        console.log(err);\r\n                    },\r\n                    (snapshot) =>{\r\n                        temp.have_pic = true;\r\n                        console.log(\"completed\");\r\n                        storage.ref('People').child(targetFile.name).getDownloadURL().then(url => {\r\n                            temp.pic = url;\r\n                            this.setState({\r\n                                itemToEdit: temp,\r\n                                saveChangesButtonEnabled: true\r\n                            }); \r\n                        });\r\n                    }\r\n                );     \r\n            }}); \r\n    };\r\n\r\n    newPersonInputSubmit = ( ) => {\r\n        this.state.peopleDocsPath\r\n          .add(this.state.itemToEdit)\r\n          .then(ref => {\r\n            if (ref.id === null) {\r\n              alert(\"Fail to add new routine / goal item\");\r\n              return;\r\n            }\r\n   \r\n            let temp = this.state.itemToEdit;\r\n            temp.unique_id = ref.id;\r\n            console.log(\"Added document with ID: \", ref.id);\r\n            this.updateWithId();\r\n            // this.props.closeModal();\r\n   \r\n          });\r\n    }\r\n\r\n    updateWithId = ( ) => {\r\n        this.state.peopleDocsPath.doc(this.state.itemToEdit.unique_id).update(this.state.itemToEdit).then(\r\n            (doc) => {\r\n                if(this.state.itemToEdit.important === true){\r\n                    this.addToImportantPeopleInAboutModal();\r\n                }\r\n                this.props.closeModal();  \r\n            }\r\n        )\r\n    }\r\n\r\n    addToImportantPeopleInAboutModal = ( ) => {\r\n       \r\n        // const db = firebase.firestore();\r\n        // let collectionRef = db.collection('Users');\r\n        // let documentRefWithName = collectionRef.doc('7R6hAVmDrNutRkG3sVRy').collection(\"people\").doc(this.state.itemToEdit.unique_id);\r\n        // collectionRef.doc(\"7R6hAVmDrNutRkG3sVRy\")['about_me'].update({\"important_people\":documentRefWithName}).then(\r\n        //     (doc) => {\r\n        //            console.log(\"it madddee it hererer\");\r\n        //     }\r\n        // )\r\n    }\r\n\r\n  \r\n    render() {\r\n      return (\r\n        <Modal.Dialog style={{ marginLeft: \"0\", width: \"350px\" }}>\r\n          <Modal.Header closeButton onHide={this.props.closeModal} >\r\n            <Modal.Title>\r\n              <h5 className=\"normalfancytext\">\r\n                Add New People\r\n              </h5>{\" \"}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div>\r\n              <label>Name</label>\r\n              <div className=\"input-group mb-3\">\r\n                <input\r\n                  style={{ width: \"200px\" }}\r\n                  placeholder=\"Enter Name\"\r\n                  value={this.state.itemToEdit.name}\r\n                  onChange={e => {\r\n                    e.stopPropagation();\r\n                    let temp = this.state.itemToEdit;\r\n                    temp.name = e.target.value;\r\n                    this.setState({ itemToEdit: temp });\r\n                  }}\r\n                />\r\n              </div>\r\n              <label>Relationship</label>\r\n              <div className=\"input-group mb-3\">\r\n                <input\r\n                  style={{ width: \"200px\" }}\r\n                  placeholder=\"Enter Relationship \"\r\n                  value={this.state.itemToEdit.relationship}\r\n                  onChange={e => {\r\n                    e.stopPropagation();\r\n                    let temp = this.state.itemToEdit;\r\n                    temp.relationship = e.target.value;\r\n                    this.setState({ itemToEdit: temp });\r\n                  }}\r\n                />\r\n              </div>\r\n              <label>Phone Number</label>\r\n              <div className=\"input-group mb-3\">\r\n                <input\r\n                  style={{ width: \"200px\" }}\r\n                  placeholder=\"Enter Phone Number\"\r\n                  value={this.state.itemToEdit.phone_number}\r\n                  onChange={e => {\r\n                    e.stopPropagation();\r\n                    let temp = this.state.itemToEdit;\r\n                    temp.phone_number = e.target.value;\r\n                    this.setState({ itemToEdit: temp });\r\n                  }}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\r\n              <label className=\"form-check-label\" >Important Person?</label>\r\n              <input\r\n                style={{  marginLeft: \"10px\",width: \"20px\", height: \"20px\"}}\r\n                type=\"checkbox\"\r\n                checked={this.state.itemToEdit.important}\r\n                onChange={e => {\r\n                  e.stopPropagation();\r\n                  let temp = this.state.itemToEdit;\r\n                //   console.log(temp.important);\r\n                  temp.important = !temp.important;\r\n                  this.setState({ itemToEdit: temp });\r\n                }}\r\n              />\r\n            </div>\r\n            <label>Upload Photo</label>\r\n              <div className=\"input-group mb-3\">\r\n              <input\r\n                style = {{color: \"transparent\", width: \"200px\"}} \r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={this.handleFileSelected}\r\n                // id=\"ProfileImage\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button style = {{marginLeft:\"10px\"}} variant=\"secondary\" onClick = {this.props.closeModal}>\r\n              Close\r\n            </Button>\r\n            {(this.state.saveChangesButtonEnabled === false?\r\n              <Button variant=\"info\" style = {{marginLeft:\"50px\", marginRight:\"30px\"}} type=\"submit\" disabled>\r\n                Save changes\r\n              </Button>:\r\n              <Button variant=\"info\" style = {{marginLeft:\"50px\", marginRight:\"30px\"}} type=\"submit\" onClick={(e) => {e.stopPropagation(); this.newPersonInputSubmit()}} >\r\n                Save changes\r\n              </Button>\r\n            )}\r\n           \r\n          </Modal.Footer>\r\n        </Modal.Dialog>\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\n  ","import React from 'react';\r\nimport firebase from \"./firebase\";\r\nimport AddNewPeople from \"./AddNewPeople\";\r\nimport { Form,Row,Col ,Modal,Button,Container} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faImage\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { storage } from './firebase';\r\n\r\nclass AboutModal extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            firebaseRootPath: firebase\r\n            .firestore()\r\n            .collection(\"users\")\r\n            .doc(\"7R6hAVmDrNutRkG3sVRy\"),\r\n            importantPeople1DocRef: null,\r\n            importantPeople2DocRef: null,\r\n            importantPeople3DocRef: null,\r\n            aboutMeObject: {},\r\n            importantPeople1: {},\r\n            importantPeople2: {},\r\n            importantPeople3: {},\r\n            saveButtonEnabled: true,\r\n            showAddNewPeopleModal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.grabFireBaseAboutMeData();\r\n        this.grabFireBasePeople1Data();\r\n        this.grabFireBasePeople2Data();\r\n        this.grabFireBasePeople3Data();\r\n        \r\n    }\r\n\r\n    hideAboutForm = e => {\r\n        this.props.CameBackFalse();   \r\n    };\r\n\r\n    handleFileSelected = event => {\r\n        event.preventDefault(); \r\n        event.stopPropagation();                \r\n        const file = event.target.files[0];\r\n        this.setState({\r\n            saveButtonEnabled: false\r\n        }, ()=>{\r\n            let targetFile = file\r\n            if(targetFile != null && Object.keys(this.state.aboutMeObject).length != 0 ){\r\n                let temp = this.state.aboutMeObject;\r\n    \r\n                // Create a reference to the firebase storage. \r\n                var storageRef = storage.ref('Profile_Pics/' + targetFile.name);\r\n                //upload file to firebase storage\r\n                var task = storageRef.put(targetFile);\r\n                //check on the the upload progress\r\n                task.on('state_changed',\r\n                    function progress(snapshot){\r\n                        //get percentage uplaoded \r\n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\r\n                        console.log(percentage);\r\n    \r\n                    },\r\n                    function error(err){\r\n                        console.log(err);\r\n                    },\r\n                    (snapshot) =>{\r\n                        temp.have_pic = true;\r\n                        console.log(\"completed\");\r\n                        storage.ref('Profile_Pics').child(targetFile.name).getDownloadURL().then(url => {\r\n                            temp.pic = url;\r\n                            this.setState({\r\n                                aboutMeObject: temp,\r\n                                saveButtonEnabled: true\r\n                            }); \r\n                        });\r\n                    }\r\n                );     \r\n            }}); \r\n    };\r\n\r\n  \r\n\r\n    handleImpPeople1 = (event) =>{\r\n        event.preventDefault(); \r\n        event.stopPropagation();                \r\n        const file2 = event.target.files[0];\r\n        this.setState({\r\n            saveButtonEnabled: false\r\n        }, ()=>{\r\n            let targetFile = file2\r\n            if(targetFile != null && Object.keys(this.state.importantPeople1).length != 0 ){\r\n                let temp = this.state.importantPeople1;\r\n    \r\n                // Create a reference to the firebase storage. \r\n                var storageRef = storage.ref('Important_People/' + targetFile.name);\r\n                //upload file to firebase storage\r\n                var task = storageRef.put(targetFile);\r\n                //check on the the upload progress\r\n                task.on('state_changed',\r\n                    function progress(snapshot){\r\n                        //get percentage uplaoded \r\n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\r\n                        console.log(percentage);\r\n    \r\n                    },\r\n                    function error(err){\r\n                        console.log(err);\r\n                    },\r\n                    (snapshot) =>{\r\n                        temp.have_pic = true;\r\n                        console.log(\"completed\");\r\n                        storage.ref('Important_People').child(targetFile.name).getDownloadURL().then(url => {\r\n                            // console.log(url);\r\n                            temp.pic = url;\r\n                            this.setState({\r\n                                importantPeople1: temp,\r\n                                saveButtonEnabled: true\r\n                            }); \r\n                        });\r\n                    }\r\n                );     \r\n            }}); \r\n    }\r\n\r\n    handleImpPeople2 = (event) =>{\r\n        event.preventDefault(); \r\n        event.stopPropagation();                \r\n        const file3 = event.target.files[0];\r\n        this.setState({\r\n            saveButtonEnabled: false\r\n        }, ()=>{\r\n            let targetFile = file3\r\n            if(targetFile != null && Object.keys(this.state.importantPeople2).length != 0 ){\r\n                let temp = this.state.importantPeople2;\r\n    \r\n                // Create a reference to the firebase storage. \r\n                var storageRef = storage.ref('Important_People/' + targetFile.name);\r\n                //upload file to firebase storage\r\n                var task = storageRef.put(targetFile);\r\n                //check on the the upload progress\r\n                task.on('state_changed',\r\n                    function progress(snapshot){\r\n                        //get percentage uplaoded \r\n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\r\n                        console.log(percentage);\r\n    \r\n                    },\r\n                    function error(err){\r\n                        console.log(err);\r\n                    },\r\n                    (snapshot) =>{\r\n                        temp.have_pic = true;\r\n                        console.log(\"completed\");\r\n                        storage.ref('Important_People').child(targetFile.name).getDownloadURL().then(url => {\r\n                            // console.log(url);\r\n                            temp.pic = url;\r\n                            this.setState({\r\n                                importantPeople2: temp,\r\n                                saveButtonEnabled: true\r\n                            }); \r\n                        });\r\n                    }\r\n                );     \r\n            }});\r\n    }\r\n\r\n    handleImpPeople3 = (event) =>{\r\n        event.preventDefault(); \r\n        event.stopPropagation();                \r\n        const file4 = event.target.files[0];\r\n        this.setState({\r\n            saveButtonEnabled: false\r\n        }, ()=>{\r\n            let targetFile = file4\r\n            if(targetFile != null && Object.keys(this.state.importantPeople3).length != 0 ){\r\n                let temp = this.state.importantPeople3;\r\n    \r\n                // Create a reference to the firebase storage. \r\n                var storageRef = storage.ref('Important_People/' + targetFile.name);\r\n                //upload file to firebase storage\r\n                var task = storageRef.put(targetFile);\r\n                //check on the the upload progress\r\n                task.on('state_changed',\r\n                    function progress(snapshot){\r\n                        //get percentage uplaoded \r\n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\r\n                        console.log(percentage);\r\n    \r\n                    },\r\n                    function error(err){\r\n                        console.log(err);\r\n                    },\r\n                    (snapshot) =>{\r\n                        temp.have_pic = true;\r\n                        console.log(\"completed\");\r\n                        storage.ref('Important_People').child(targetFile.name).getDownloadURL().then(url => {\r\n                            // console.log(url);\r\n                            temp.pic = url;\r\n                            this.setState({\r\n                                importantPeople3: temp,\r\n                                saveButtonEnabled: true\r\n                            }); \r\n                        });\r\n                    }\r\n                );     \r\n            }});\r\n    }\r\n\r\n\r\n    grabFireBasePeople1Data = () =>{\r\n        const db = firebase.firestore();\r\n        let collectionRef = db.collection('Users');\r\n        let documentRefWithName = collectionRef.doc('7R6hAVmDrNutRkG3sVRy').collection(\"people\").doc(\"KC3jz0SW9xyYhMgsj0v0\");\r\n\r\n        db.collection('users').get()\r\n        .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n            \r\n            let temp = {};\r\n            const document_ref = doc.data()[\"about_me\"][\"important_people\"][0];\r\n            console.log(\"this is document_ref\",document_ref.path);\r\n\r\n            document_ref.get().then((doc2) => {\r\n                if (doc2.exists) {\r\n                    temp = doc2.data();\r\n                    this.setState({importantPeople1: temp, importantPeople1DocRef: document_ref}, () =>{\r\n                        console.log(\"this is the important People1\", this.state.importantPeople1)\r\n                    });\r\n                } else {\r\n                    // doc.data() will be undefined in this case\r\n                    console.log(\"No such document!\");\r\n                }\r\n                \r\n            }).catch(function(error: any) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log('Error getting documents', err);\r\n        });\r\n    }\r\n\r\n    grabFireBasePeople2Data = () =>{\r\n        console.log(\"why is it not going here\")\r\n        const db = firebase.firestore();\r\n        db.collection('users').get()\r\n        .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n            \r\n            let temp = {};\r\n            const document_ref = doc.data()[\"about_me\"][\"important_people\"][1];\r\n            console.log(\"this is the docu ref 2\", document_ref);\r\n\r\n            document_ref.get().then((doc2) => {\r\n                if (doc2.exists) {\r\n                    temp = doc2.data();\r\n\r\n                    this.setState({importantPeople2: temp, importantPeople2DocRef: document_ref}, () =>{\r\n                        console.log(\"this is the important People2\", this.state.importantPeople2)\r\n                    });\r\n                } else {\r\n                    console.log(\"No such document!\");\r\n                }\r\n                \r\n            }).catch(function(error: any) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n            \r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log('Error getting documents', err);\r\n        });\r\n    }\r\n\r\n    grabFireBasePeople3Data = () =>{\r\n        console.log(\"why is it not going here\")\r\n        const db = firebase.firestore();\r\n        db.collection('users').get()\r\n        .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n            \r\n            let temp = {};\r\n            const document_ref = doc.data()[\"about_me\"][\"important_people\"][2];\r\n            console.log(\"this is the docu ref 3\", document_ref);\r\n            if(document_ref === undefined){\r\n                this.state.importantPeople3.have_pic =false;\r\n                this.state.importantPeople3.important = false;\r\n                this.state.importantPeople3.name = \"\";\r\n                this.state.importantPeople3.phone_number=\"\";\r\n                this.state.importantPeople3.pic = \"\";\r\n                this.state.importantPeople3.relationship = \"\";\r\n                this.state.importantPeople3.unique_id = \"\";\r\n            }\r\n\r\n            document_ref.get().then((doc2) => {\r\n                if (doc2.exists) {\r\n                    temp = doc2.data();\r\n\r\n                    this.setState({importantPeople3: temp, importantPeople3DocRef: document_ref}, () =>{\r\n                        console.log(\"this is the important People3\", this.state.importantPeople3)\r\n                    });\r\n                } else {\r\n                    console.log(\"No such document!\");\r\n                }\r\n                \r\n            }).catch(function(error: any) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n            \r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log('Error getting documents', err);\r\n        });\r\n    }\r\n\r\n    grabFireBaseAboutMeData = () => {\r\n        const db = firebase.firestore();\r\n        const docRef = db.collection(\"users\").doc(\"7R6hAVmDrNutRkG3sVRy\");\r\n        docRef\r\n          .get()\r\n          .then(doc => {\r\n            if (doc.exists) {\r\n              var x = doc.data();\r\n              x = x[\"about_me\"];\r\n              console.log(\"this is about page\");\r\n              console.log(x);\r\n              this.setState({\r\n                aboutMeObject: x\r\n              });\r\n              \r\n            } else {\r\n              console.log(\"No such document!\");\r\n            }\r\n          })\r\n          .catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n          });\r\n      };\r\n\r\n    newInputSubmit = () => {\r\n        let newArr = this.state.aboutMeObject;\r\n        this.state.importantPeople1DocRef.update(this.state.importantPeople1).then(\r\n            (doc) => {\r\n                   \r\n            }\r\n        )\r\n        this.state.importantPeople2DocRef.update(this.state.importantPeople2).then(\r\n            (doc) => {\r\n                   \r\n            }\r\n        )\r\n        this.state.importantPeople3DocRef.update(this.state.importantPeople3).then(\r\n            (doc) => {\r\n                   \r\n            }\r\n        )\r\n        this.state.firebaseRootPath.update({ 'about_me': newArr }).then(\r\n            (doc) => {\r\n                this.props.updateProfilePic(this.state.aboutMeObject.pic, this.state.aboutMeObject.name);\r\n                this.hideAboutForm();   \r\n            }\r\n        )\r\n    }\r\n\r\n    hidePeopleModal = () => {\r\n        this.setState({showAddNewPeopleModal: false});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Modal.Dialog\r\n                    style={{\r\n                    borderRadius: \"15px\",\r\n                    boxShadow:\r\n                        \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n                    marginLeft: \"35px\",\r\n                    width: \"350px\",\r\n                    marginTop: \"0\"\r\n                    }}\r\n                >\r\n                <Modal.Header\r\n                closeButton\r\n                onHide={() => {\r\n                    this.hideAboutForm();\r\n                }}\r\n                >\r\n                    <Modal.Title>\r\n                        <h5 className=\"normalfancytext\">About Me</h5>{\" \"}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group>\r\n                        <Form.Label>Name:</Form.Label>\r\n                        <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"First Last\"\r\n                        value={this.state.aboutMeObject.name || ''}\r\n                        onChange={\r\n                            (e) => { e.stopPropagation(); let temp = this.state.aboutMeObject; temp.name = e.target.value; this.setState({ aboutMeObject: temp }) }\r\n                        }\r\n                        />\r\n                    </Form.Group>\r\n                    <Row>\r\n                        <Col>  \r\n                            {(this.state.aboutMeObject.have_pic === false  ? \r\n                            <FontAwesomeIcon icon={faImage} size=\"6x\"/> : \r\n                            <img style = \r\n                                {{display: \"block\",\r\n                                marginLeft: \"auto\",\r\n                                marginRight:\"auto\" ,\r\n                                width: \"100%\",\r\n                                height:\"70px\",\r\n                                }}\r\n                                src={this.state.aboutMeObject.pic}\r\n                                alt=\"Profile\"\r\n                            /> )\r\n                            }\r\n                        </Col>\r\n                        <Col xs={8}>\r\n                        <label >Upload A New Image</label>\r\n                        <input\r\n                            style = {{color: \"transparent\"}} \r\n                            accept=\"image/*\"\r\n                            type=\"file\"\r\n                            onChange={this.handleFileSelected}\r\n                            id=\"ProfileImage\"\r\n                        />\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                    <Form.Group controlId=\"AboutMessage\" style={{ marginTop: \"10px\" }}>\r\n                        <Form.Label>Message (My Day):</Form.Label>\r\n                        <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"4\"\r\n                        type=\"text\"\r\n                        placeholder=\"You are a strong ...\"\r\n                        value={this.state.aboutMeObject.message_day || ''}\r\n                        onChange={\r\n                             (e) => { e.stopPropagation(); let temp = this.state.aboutMeObject; temp.message_day = e.target.value; this.setState({ aboutMeObject: temp }) }\r\n                        }\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"AboutMessageCard\">\r\n                        <Form.Label>Message (My Card):</Form.Label>\r\n                        <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"4\"\r\n                        type=\"text\"\r\n                        placeholder=\"You are a safe ...\"\r\n                        value={this.state.aboutMeObject.message_card || ''}\r\n                        onChange={\r\n                            (e) => { e.stopPropagation(); let temp = this.state.aboutMeObject; temp.message_card = e.target.value; this.setState({ aboutMeObject: temp }) }\r\n                       }\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group >\r\n                        <Form.Label>Important People</Form.Label>\r\n                        {this.state.showAddNewPeopleModal && <AddNewPeople closeModal= {this.hidePeopleModal}/>}\r\n                        <Row>\r\n                            <Col>\r\n                            \r\n                                {(this.state.importantPeople1.have_pic === false ? \r\n                                <div>\r\n                                    <FontAwesomeIcon icon={faImage} size=\"6x\" style = {{marginLeft:\"10px\"}} /> \r\n                                    <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name ...\"\r\n                                    value = {this.state.importantPeople1.name || ''}\r\n                                    onChange={\r\n                                        (e) => { e.stopPropagation(); let temp = this.state.importantPeople1; temp.name = e.target.value; this.setState({ importantPeople1: temp }) }\r\n                                     }\r\n                                    />\r\n                                </div>: \r\n                                <div>\r\n                                    <img style = \r\n                                        {{display: \"block\",\r\n                                         width: \"80%\",\r\n                                         height:\"70px\",\r\n                                         marginTop:\"10px\",\r\n                                         marginLeft:\"5px\"\r\n                                        }}\r\n                                        src={this.state.importantPeople1.pic } \r\n                                        alt=\"Important Person 1\"\r\n                                    /> \r\n                                    <Form.Control\r\n                                    style = {{marginTop:\"10px\"}}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name ...\"\r\n                                    value = {this.state.importantPeople1.name || ''}\r\n                                    onChange={\r\n                                        (e) => { e.stopPropagation(); let temp = this.state.importantPeople1; temp.name = e.target.value; this.setState({ importantPeople1: temp }) }\r\n                                     }\r\n                                    />\r\n                                </div>)} \r\n                            </Col>\r\n                            <Col xs={7} style = {{paddingLeft:\"0px\", marginTop:\"10px\"}}>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Relationship\"\r\n                                    value = {this.state.importantPeople1.relationship || ''}\r\n                                    onChange={\r\n                                        (e) => { e.stopPropagation(); let temp = this.state.importantPeople1; temp.relationship = e.target.value; this.setState({ importantPeople1: temp }) }\r\n                                     } \r\n                                 />\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Phone Number\"\r\n                                    value = {this.state.importantPeople1.phone_number || ''}\r\n                                    onChange={\r\n                                        (e) => { e.stopPropagation(); let temp = this.state.importantPeople1; temp.phone_number = e.target.value; this.setState({ importantPeople1: temp }) }\r\n                                     } \r\n                                />\r\n                                <input \r\n                                    style = {{color: \"transparent\", marginTop:\"10px\"}}\r\n                                    type= \"file\" accept=\"image/*\" \r\n                                    onChange={this.handleImpPeople1}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: \"20px\" }}>\r\n                            <Col>\r\n                                {(this.state.importantPeople2.have_pic === false ? \r\n                                <div>\r\n                                    <FontAwesomeIcon icon={faImage} size=\"6x\" style = {{marginLeft:\"10px\"}} /> \r\n                                    <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name ...\"\r\n                                    value = {this.state.importantPeople2.name || ''}\r\n                                    onChange={\r\n                                        (e) => { e.stopPropagation(); let temp = this.state.importantPeople2; temp.name = e.target.value; this.setState({ importantPeople2: temp }) }\r\n                                     }\r\n                                    />\r\n                                </div>: \r\n                                <div>\r\n                                    <img style = \r\n                                        {{display: \"block\",\r\n                                        width: \"80%\",\r\n                                        height:\"70px\",\r\n                                        marginTop:\"10px\",\r\n                                        marginLeft:\"5px\"\r\n                                       }}\r\n                                        src={this.state.importantPeople2.pic } \r\n                                        alt=\"Important People 2\"\r\n                                    /> \r\n                                    <Form.Control\r\n                                        style = {{marginTop:\"10px\"}}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Name ...\"\r\n                                        value = {this.state.importantPeople2.name || ''}\r\n                                        onChange={\r\n                                            (e) => { e.stopPropagation(); let temp = this.state.importantPeople2; temp.name = e.target.value; this.setState({ importantPeople2: temp }) }\r\n                                        }\r\n                                    />\r\n                                </div>)}\r\n                                \r\n                            </Col>\r\n                            <Col xs={7} style = {{paddingLeft:\"0px\", marginTop:\"10px\"}}>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Relationship\"\r\n                                    value = {this.state.importantPeople2.relationship || ''}\r\n                                    onChange={\r\n                                        (e) => { e.stopPropagation(); let temp = this.state.importantPeople2; temp.relationship = e.target.value; this.setState({ importantPeople2: temp }) }\r\n                                     }\r\n                                 />\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Phone Number\" \r\n                                    value = {this.state.importantPeople2.phone_number || ''}\r\n                                    onChange={\r\n                                        (e) => { e.stopPropagation(); let temp = this.state.importantPeople2; temp.phone_number = e.target.value; this.setState({ importantPeople2: temp }) }\r\n                                     }\r\n                                />\r\n                                <input \r\n                                    style = {{color: \"transparent\", marginTop:\"10px\"}}\r\n                                    type= \"file\" \r\n                                    accept=\"image/*\"\r\n                                    onChange={this.handleImpPeople2}/>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: \"20px\" }}>\r\n                            <Col>\r\n                                {(this.state.importantPeople3.have_pic === false ? \r\n                                <div>\r\n                                    <FontAwesomeIcon icon={faImage} size=\"6x\" style = {{marginLeft:\"10px\"}} /> \r\n                                    <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name ...\"\r\n                                    value = {this.state.importantPeople3.name || ''}\r\n                                    onChange={\r\n                                        (e) => { e.stopPropagation(); let temp = this.state.importantPeople3; temp.name = e.target.value; this.setState({ importantPeople3: temp }) }\r\n                                     }\r\n                                    />\r\n                                </div>: \r\n                                <div>\r\n                                    <img style = \r\n                                        {{display: \"block\",\r\n                                        width: \"80%\",\r\n                                        height:\"70px\",\r\n                                        marginTop:\"10px\",\r\n                                        marginLeft:\"5px\"\r\n                                       }}\r\n                                        src={this.state.importantPeople3.pic } \r\n                                        alt=\"Important People 3\"\r\n                                    /> \r\n                                    <Form.Control\r\n                                        style = {{marginTop:\"10px\"}}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Name ...\"\r\n                                        value = {this.state.importantPeople3.name || ''}\r\n                                        onChange={\r\n                                            (e) => { e.stopPropagation(); let temp = this.state.importantPeople3; temp.name = e.target.value; this.setState({ importantPeople3: temp }) }\r\n                                        }\r\n                                    />\r\n                                </div>)}\r\n                                \r\n                            </Col>\r\n                            <Col xs={7} style = {{paddingLeft:\"0px\", marginTop:\"10px\"}}>\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Relationship\" \r\n                                    value = {this.state.importantPeople3.relationship || ''}\r\n                                    onChange={\r\n                                        (e) => { e.stopPropagation(); let temp = this.state.importantPeople3; temp.relationship = e.target.value; this.setState({ importantPeople3: temp }) }\r\n                                     }\r\n                                />\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Phone Number\" \r\n                                    value = {this.state.importantPeople3.phone_number || ''}\r\n                                    onChange={\r\n                                        (e) => { e.stopPropagation(); let temp = this.state.importantPeople3; temp.phone_number = e.target.value; this.setState({ importantPeople3: temp }) }\r\n                                     }\r\n                                />\r\n                                <input \r\n                                    style = {{color: \"transparent\", marginTop:\"10px\"}}\r\n                                    type= \"file\" \r\n                                    accept=\"image/*\" \r\n                                    onChange={this.handleImpPeople3}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col xs={3}>\r\n                            {((this.state.saveButtonEnabled === false || this.state.showAddNewPeopleModal === true)  ? \r\n                            <Button variant=\"info\" type=\"submit\" disabled>\r\n                            Save\r\n                            </Button>: \r\n                            <Button variant=\"info\" type=\"submit\" onClick={(e) => {e.stopPropagation(); this.newInputSubmit()}}>\r\n                            Save\r\n                            </Button>)}\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Button variant=\"secondary\" onClick={this.hideAboutForm}>\r\n                                Cancel\r\n                                </Button>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Button variant=\"primary\" onClick = {(e) => {e.stopPropagation(); this.setState({showAddNewPeopleModal: true})}}>\r\n                                Add People\r\n                                </Button>\r\n                            </Col>\r\n                            \r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Footer>\r\n            </Modal.Dialog>\r\n         </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutModal;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from \"react-bootstrap\";\r\nimport firebase from \"./firebase\";\r\nimport Firebasev2 from \"./Firebasev2.jsx\";\r\nimport \"./App.css\";\r\nimport moment from \"moment\";\r\nimport TylersCalendarv1 from \"./TCal.jsx\";\r\nimport DayRoutines from \"./DayRoutines.jsx\";\r\nimport DayGoals from \"./DayGoals.jsx\";\r\nimport DayEvents from \"./DayEvents.jsx\";\r\nimport WeekEvents from \"./WeekEvents.jsx\";\r\nimport WeekRoutines from \"./WeekRoutines.jsx\";\r\nimport WeekGoals from \"./WeekGoals.jsx\";\r\nimport AboutModal from \"./AboutModal.jsx\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faImage,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      originalEvents: [], //holds the google events data in it's original JSON form\r\n      dayEvents: [], //holds google events data for a single day\r\n      weekEvents: [], //holds google events data for a week\r\n      showRoutineGoalModal: false,\r\n      showGoalModal: false,\r\n      showRoutineModal: false,\r\n      showAboutModal: false,\r\n      dayEventSelected: false, //use to show modal to create new event\r\n      // modelSelected: false, // use to display the routine/goals modal\r\n      newEventID: \"\", //save the event ID for possible future use\r\n      newEventRecurringID: \"\",\r\n      newEventName: \"\",\r\n      newEventGuests: \"\",\r\n      newEventLocation: \"\",\r\n      newEventNotification: 30,\r\n      newEventDescription: \"\",\r\n      newEventStart0: new Date(), //start and end for a event... it's currently set to today\r\n      newEventEnd0: new Date(), //start and end for a event... it's currently set to today\r\n      isEvent: false, // use to check whether we clicked on a event and populate extra buttons in event form\r\n      //////////New additions for new calendar\r\n      dateContext: moment(), //Keep track of day and month\r\n      todayDateObject: moment(), //Remember today's date to create the circular effect over todays day\r\n      calendarView: \"Day\", // decides which type of calendar to display\r\n      showRepeatModal: false,\r\n      repeatOption: false,\r\n      repeatOptionDropDown: \"Does not repeat\",\r\n      repeatDropDown: \"DAY\",\r\n      repeatDropDown_temp: \"DAY\",\r\n      repeatMonthlyDropDown: \"Monthly on day 13\",\r\n      repeatInputValue: \"1\",\r\n      repeatInputValue_temp: \"1\",\r\n      repeatOccurrence: \"1\",\r\n      repeatOccurrence_temp: \"1\",\r\n      repeatRadio: \"Never\",\r\n      repeatRadio_temp: \"Never\",\r\n      repeatEndDate: \"\",\r\n      repeatEndDate_temp: \"\",\r\n      showNoTitleError: \"\",\r\n      showDateError: \"\",\r\n      notificationBeforeChecked: false,\r\n      byDay: {\r\n        0: \"\",\r\n        1: \"\",\r\n        2: \"\",\r\n        3: \"\",\r\n        4: \"\",\r\n        5: \"\",\r\n        6: \"\",\r\n      },\r\n      byDay_temp: {\r\n        0: \"\",\r\n        1: \"\",\r\n        2: \"\",\r\n        3: \"\",\r\n        4: \"\",\r\n        5: \"\",\r\n        6: \"\",\r\n      },\r\n      repeatSummary: \"\",\r\n      recurrenceRule: \"\",\r\n      profilePicUrl: \"\",\r\n      profileName: \"\",\r\n      showDeleteRecurringModal: false,\r\n      deleteRecurringOption: \"This event\",\r\n      showEditRecurringModal: false,\r\n      editRecurringOption: \"\",\r\n    };\r\n  }\r\n\r\n  handleRepeatDropDown = (eventKey, week_days) => {\r\n    if (eventKey === \"WEEK\") {\r\n      const newByDay = {\r\n        ...this.state.byDay_temp,\r\n        [this.state.newEventStart0.getDay()]: week_days[\r\n          this.state.newEventStart0.getDay()\r\n        ],\r\n      };\r\n      this.setState({\r\n        repeatDropDown_temp: eventKey,\r\n        byDay_temp: newByDay,\r\n      });\r\n    }\r\n    this.setState({\r\n      repeatDropDown_temp: eventKey,\r\n    });\r\n  };\r\n\r\n  handleRepeatMonthlyDropDown = (eventKey) => {\r\n    this.setState({\r\n      repeatMonthlyDropDown: eventKey,\r\n    });\r\n  };\r\n\r\n  handleRepeatEndDate = (date) => {\r\n    this.setState(\r\n      {\r\n        repeatEndDate_temp: date,\r\n      },\r\n      console.log(\"handleRepeatEndDate\", date, this.state.repeatEndDate)\r\n    );\r\n  };\r\n\r\n  handleRepeatInputValue = (eventKey) => {\r\n    this.setState({\r\n      repeatInputValue_temp: eventKey,\r\n    });\r\n  };\r\n\r\n  handleRepeatOccurrence = (eventKey) => {\r\n    this.setState({\r\n      repeatOccurrence_temp: eventKey,\r\n    });\r\n  };\r\n\r\n  componentDidUpdate() {}\r\n\r\n  componentDidMount() {\r\n    this.updateEventsArray();\r\n    this.updateProfilePicFromFirebase();\r\n  }\r\n\r\n\r\n  /*Grabs the URL the the profile pic from the about me modal to\r\n  display on the top left corner.\r\n  */\r\n  updateProfilePicFromFirebase = () => {\r\n    const db = firebase.firestore();\r\n    const docRef = db.collection(\"users\").doc(\"7R6hAVmDrNutRkG3sVRy\");\r\n    docRef\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          var x = doc.data();\r\n          x = x[\"about_me\"];\r\n          this.setState({\r\n            profilePicUrl: x.pic,\r\n            profileName: x.name,\r\n          });\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n  };\r\n\r\n  /*\r\n  getThisMonthEvents:\r\n  By passing in a empty interval, this method will get a response from the server with\r\n  the current month's events\r\n  */\r\n  getThisMonthEvents = () => {\r\n    axios\r\n      .get(\"/getEventsByInterval\", {\r\n        //get normal google calendar data for possible future use\r\n        params: {},\r\n      })\r\n      .then((response) => {\r\n        var events = response.data;\r\n        this.setState({ originalEvents: events }, () => {\r\n          console.log(\"New Events Arrived cdm\", events);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        //console.log('Error Occurred ' + error);\r\n      });\r\n  };\r\n\r\n  handleDayEventClick = (A) => {\r\n    var guestList = \"\";\r\n    console.log(A, \"handleDayEventClick\");\r\n    if (A.attendees) {\r\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\r\n        return guestList + \" \" + nextGuest.email;\r\n      }, \"\");\r\n      console.log(\"Guest List:\", A.attendees, guestList);\r\n    }\r\n    this.setState({\r\n      newEventID: A.id,\r\n      newEventStart0: A.start.dateTime\r\n        ? new Date(A.start.dateTime)\r\n        : new Date(A.start.date),\r\n      newEventEnd0: A.end.dateTime\r\n        ? new Date(A.end.dateTime)\r\n        : new Date(A.end.date),\r\n      newEventName: A.summary,\r\n      newEventGuests: guestList,\r\n      newEventLocation: A.location ? A.location : \"\",\r\n      newEventNotification: A.reminders.overrides\r\n        ? A.reminders.overrides[0].minutes\r\n        : \"\",\r\n      newEventDescription: A.description ? A.description : \"\",\r\n      dayEventSelected: true,\r\n      isEvent: true,\r\n      showNoTitleError: \"\",\r\n      showDateError: \"\",\r\n      showRepeatModal: false,\r\n      showAboutModal: false,\r\n      repeatOption: false,\r\n      repeatOptionDropDown: \"Does not repeat\",\r\n      repeatDropDown: \"DAY\",\r\n      repeatDropDown_temp: \"DAY\",\r\n      repeatMonthlyDropDown: \"Monthly on day 13\",\r\n      repeatInputValue: \"1\",\r\n      repeatInputValue_temp: \"1\",\r\n      repeatOccurrence: \"1\",\r\n      repeatOccurrence_temp: \"1\",\r\n      repeatRadio: \"Never\",\r\n      repeatRadio_temp: \"Never\",\r\n      repeatEndDate: \"\",\r\n      repeatEndDate_temp: \"\",\r\n      byDay: {\r\n        0: \"\",\r\n        1: \"\",\r\n        2: \"\",\r\n        3: \"\",\r\n        4: \"\",\r\n        5: \"\",\r\n        6: \"\",\r\n      },\r\n      byDay_temp: {\r\n        0: \"\",\r\n        1: \"\",\r\n        2: \"\",\r\n        3: \"\",\r\n        4: \"\",\r\n        5: \"\",\r\n        6: \"\",\r\n      },\r\n      repeatSummary: \"\",\r\n      recurrenceRule: \"\",\r\n      showDeleteRecurringModal: false,\r\n      deleteRecurringOption: \"This event\",\r\n      showEditRecurringModal: false,\r\n      editRecurringOption: \"\",\r\n    });\r\n  };\r\n\r\n  handleWeekEventClick = (A) => {\r\n    var guestList = \"\";\r\n    if (A.attendees) {\r\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\r\n        return guestList + \" \" + nextGuest.email;\r\n      }, \"\");\r\n      console.log(\"Guest List:\", A.attendees, guestList);\r\n    }\r\n    this.setState({\r\n      newEventID: A.id,\r\n      newEventStart0: A.start.dateTime\r\n        ? new Date(A.start.dateTime)\r\n        : new Date(A.start.date),\r\n      newEventEnd0: A.end.dateTime\r\n        ? new Date(A.end.dateTime)\r\n        : new Date(A.end.date),\r\n      newEventName: A.summary,\r\n      newEventGuests: guestList,\r\n      newEventLocation: A.location ? A.location : \"\",\r\n      newEventNotification: A.reminders.overrides\r\n        ? A.reminders.overrides[0].minutes\r\n        : \"\",\r\n      newEventDescription: A.description ? A.description : \"\",\r\n      dayEventSelected: true,\r\n      isEvent: true,\r\n      showNoTitleError: \"\",\r\n      showDateError: \"\",\r\n      showRepeatModal: false,\r\n      showAboutModal: false,\r\n      repeatOption: false,\r\n      repeatOptionDropDown: \"Does not repeat\",\r\n      repeatDropDown: \"DAY\",\r\n      repeatDropDown_temp: \"DAY\",\r\n      repeatMonthlyDropDown: \"Monthly on day 13\",\r\n      repeatInputValue: \"1\",\r\n      repeatInputValue_temp: \"1\",\r\n      repeatOccurrence: \"1\",\r\n      repeatOccurrence_temp: \"1\",\r\n      repeatRadio: \"Never\",\r\n      repeatRadio_temp: \"Never\",\r\n      repeatEndDate: \"\",\r\n      repeatEndDate_temp: \"\",\r\n      byDay: {\r\n        0: \"\",\r\n        1: \"\",\r\n        2: \"\",\r\n        3: \"\",\r\n        4: \"\",\r\n        5: \"\",\r\n        6: \"\",\r\n      },\r\n      byDay_temp: {\r\n        0: \"\",\r\n        1: \"\",\r\n        2: \"\",\r\n        3: \"\",\r\n        4: \"\",\r\n        5: \"\",\r\n        6: \"\",\r\n      },\r\n      repeatSummary: \"\",\r\n      recurrenceRule: \"\",\r\n      showDeleteRecurringModal: false,\r\n      deleteRecurringOption: \"This event\",\r\n      showEditRecurringModal: false,\r\n      editRecurringOption: \"\",\r\n    });\r\n  };\r\n  repeatSummaryCompute = () => {\r\n    const { recurrenceRule } = this.state;\r\n\r\n    let untilSubString = \"\";\r\n    let untilIndex = recurrenceRule.indexOf(\"UNTIL\");\r\n    if (untilIndex !== -1) {\r\n      untilSubString = recurrenceRule.substring(untilIndex);\r\n    }\r\n    console.log(untilSubString);\r\n\r\n    if (untilSubString.includes(\";\")) {\r\n      let endUntilIndex = untilSubString.indexOf(\";\");\r\n      untilSubString = moment(\r\n        untilSubString.substring(6, endUntilIndex)\r\n      ).format(\"LL\");\r\n    } else if (untilSubString) {\r\n      console.log(moment(\"20200406T065959Z\").format(\"LL\"));\r\n      untilSubString = moment(untilSubString.substring(6, 14)).format(\"LL\");\r\n    }\r\n    console.log(untilSubString);\r\n\r\n    let countSubString = \"\";\r\n    let countIndex = recurrenceRule.indexOf(\"COUNT\");\r\n    if (countIndex !== -1) {\r\n      countSubString = recurrenceRule.substring(countIndex);\r\n    }\r\n    if (countSubString.includes(\";\")) {\r\n      let endCountIndex = countSubString.indexOf(\";\");\r\n      countSubString = countSubString.substring(6, endCountIndex);\r\n    } else if (countSubString) {\r\n      countSubString = countSubString.substring(6);\r\n    }\r\n\r\n    console.log(countSubString, \"countSubString\");\r\n\r\n    let intervalSubString = \"\";\r\n    let intervalIndex = recurrenceRule.indexOf(\"INTERVAL\");\r\n    if (intervalIndex !== -1) {\r\n      intervalSubString = recurrenceRule.substring(intervalIndex);\r\n    }\r\n    if (intervalSubString.includes(\";\")) {\r\n      let endIntervalIndex = intervalSubString.indexOf(\";\");\r\n      intervalSubString = intervalSubString.substring(9, endIntervalIndex);\r\n    } else if (intervalSubString) {\r\n      intervalSubString = intervalSubString.substring(9);\r\n    }\r\n\r\n    let byDaySubString = \"\";\r\n    let byDayArray = [];\r\n    let byDayIndex = recurrenceRule.indexOf(\"BYDAY\");\r\n    if (byDayIndex !== -1) {\r\n      byDaySubString = recurrenceRule.substring(byDayIndex);\r\n    }\r\n    console.log(byDaySubString);\r\n\r\n    if (byDaySubString.includes(\";\")) {\r\n      let endByDayIndex = byDaySubString.indexOf(\";\");\r\n      byDaySubString = byDaySubString.substring(6, endByDayIndex);\r\n    } else if (byDaySubString) {\r\n      byDaySubString = byDaySubString.substring(6);\r\n    }\r\n\r\n    byDayArray = byDaySubString.split(\",\");\r\n    console.log(byDayArray);\r\n\r\n    // If freq is daily in rrule\r\n    if (recurrenceRule.includes(\"FREQ=DAILY\")) {\r\n      if (intervalSubString === \"1\" || !intervalSubString) {\r\n        if (\r\n          !recurrenceRule.includes(\"COUNT\") &&\r\n          !recurrenceRule.includes(\"UNTIL\")\r\n        ) {\r\n          this.setState({\r\n            repeatOptionDropDown: \"Daily\",\r\n          });\r\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\r\n          this.setState({\r\n            repeatOptionDropDown: `Daily, until ${untilSubString}`,\r\n          });\r\n        } else if (recurrenceRule.includes(\"COUNT\")) {\r\n          if (countSubString === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Daily, ${countSubString} times`,\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        if (\r\n          !recurrenceRule.includes(\"COUNT\") &&\r\n          !recurrenceRule.includes(\"UNTIL\")\r\n        ) {\r\n          this.setState({\r\n            repeatOptionDropDown: `Every ${intervalSubString} days`,\r\n          });\r\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\r\n          this.setState({\r\n            repeatOptionDropDown: `Every ${intervalSubString} days, until ${untilSubString}`,\r\n          });\r\n        } else if (recurrenceRule.includes(\"COUNT\")) {\r\n          if (countSubString === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${intervalSubString} days, ${countSubString} times`,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // If freq is weekly in rrule\r\n    else if (recurrenceRule.includes(\"FREQ=WEEKLY\")) {\r\n      if (intervalSubString === \"1\" || !intervalSubString) {\r\n        if (\r\n          !recurrenceRule.includes(\"COUNT\") &&\r\n          !recurrenceRule.includes(\"UNTIL\")\r\n        ) {\r\n          if (byDayArray.length === 7) {\r\n            this.setState({\r\n              repeatOptionDropDown: \"Weekly on all days\",\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Weekly on ${byDayArray.join(\", \")}`,\r\n            });\r\n          }\r\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\r\n          if (byDayArray.length === 7) {\r\n            this.setState({\r\n              repeatOptionDropDown: `Weekly on all days, until ${untilSubString}`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Weekly on ${byDayArray.join(\r\n                \", \"\r\n              )}, until ${untilSubString}`,\r\n            });\r\n          }\r\n        } else if (recurrenceRule.includes(\"COUNT\")) {\r\n          if (countSubString === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            if (byDayArray.length === 7) {\r\n              this.setState({\r\n                repeatOptionDropDown: `Weekly on all days, ${countSubString} times`,\r\n              });\r\n            } else {\r\n              this.setState({\r\n                repeatOptionDropDown: `Weekly on ${byDayArray.join(\r\n                  \", \"\r\n                )}, ${countSubString} times`,\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (\r\n          !recurrenceRule.includes(\"COUNT\") &&\r\n          !recurrenceRule.includes(\"UNTIL\")\r\n        ) {\r\n          if (byDayArray.length === 7) {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on all days`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on ${byDayArray.join(\r\n                \", \"\r\n              )}`,\r\n            });\r\n          }\r\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\r\n          if (byDayArray.length === 7) {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on all days, until ${untilSubString}`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on ${byDayArray.join(\r\n                \", \"\r\n              )}, until ${untilSubString}`,\r\n            });\r\n          }\r\n        } else if (recurrenceRule.includes(\"COUNT\")) {\r\n          if (countSubString === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: \"Once\",\r\n            });\r\n          } else {\r\n            if (byDayArray.length === 7) {\r\n              this.setState({\r\n                repeatOptionDropDown: `Every ${intervalSubString} weeks on all days, ${countSubString} times`,\r\n              });\r\n            } else {\r\n              this.setState({\r\n                repeatOptionDropDown: `Every ${intervalSubString} weeks on ${byDayArray.join(\r\n                  \", \"\r\n                )}, ${countSubString} times`,\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // If freq is monthly in rrule\r\n    else if (recurrenceRule.includes(\"FREQ=MONTHLY\")) {\r\n      if (intervalSubString === \"1\" || !intervalSubString) {\r\n        if (\r\n          !recurrenceRule.includes(\"COUNT\") &&\r\n          !recurrenceRule.includes(\"UNTIL\")\r\n        ) {\r\n          this.setState({\r\n            repeatOptionDropDown: \"Monthly\",\r\n          });\r\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\r\n          this.setState({\r\n            repeatOptionDropDown: `Monthly, until ${untilSubString}`,\r\n          });\r\n        } else if (recurrenceRule.includes(\"COUNT\")) {\r\n          if (countSubString === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Monthly, ${countSubString} times`,\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        if (\r\n          !recurrenceRule.includes(\"COUNT\") &&\r\n          !recurrenceRule.includes(\"UNTIL\")\r\n        ) {\r\n          this.setState({\r\n            repeatOptionDropDown: `Every ${intervalSubString} months`,\r\n          });\r\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\r\n          this.setState({\r\n            repeatOptionDropDown: `Every ${intervalSubString} months, until ${untilSubString}`,\r\n          });\r\n        } else if (recurrenceRule.includes(\"COUNT\")) {\r\n          if (countSubString === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${intervalSubString} months, ${countSubString} times`,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // If freq is yearly in rrule\r\n    else if (recurrenceRule.includes(\"FREQ=YEARLY\")) {\r\n      if (intervalSubString === \"1\" || !intervalSubString) {\r\n        if (\r\n          !recurrenceRule.includes(\"COUNT\") &&\r\n          !recurrenceRule.includes(\"UNTIL\")\r\n        ) {\r\n          this.setState({\r\n            repeatOptionDropDown: \"Annually\",\r\n          });\r\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\r\n          this.setState({\r\n            repeatOptionDropDown: `Annually, until ${untilSubString}`,\r\n          });\r\n        } else if (recurrenceRule.includes(\"COUNT\")) {\r\n          if (countSubString === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Annually, ${countSubString} times`,\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        if (\r\n          !recurrenceRule.includes(\"COUNT\") &&\r\n          !recurrenceRule.includes(\"UNTIL\")\r\n        ) {\r\n          this.setState({\r\n            repeatOptionDropDown: `Every ${intervalSubString} years`,\r\n          });\r\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\r\n          this.setState({\r\n            repeatOptionDropDown: `Every ${intervalSubString} years, until ${untilSubString}`,\r\n          });\r\n        } else if (recurrenceRule.includes(\"COUNT\")) {\r\n          if (countSubString === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${intervalSubString} years, ${countSubString} times`,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /*\r\n  handleEventClick For Month View.\r\n  when a event on the calendar is clicked, the function below\r\n  will execute and save the clicked event varibles to this.state and\r\n  passed that into the form where the user can edit that data\r\n\r\n  TODO: set dateContext to the date clicked\r\n  */\r\n  handleEventClick = (i) => {\r\n    // bind with an arrow function\r\n    let A = this.state.originalEvents[i];\r\n    console.log(\"A\", A);\r\n    if (A.recurringEventId) {\r\n      axios\r\n        .get(\"/getRecurringRules\", {\r\n          params: {\r\n            recurringEventId: A.recurringEventId,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data, \"getRecurringRules\");\r\n          this.setState(\r\n            {\r\n              recurrenceRule: res.data[0],\r\n            },\r\n            () => {\r\n              this.repeatSummaryCompute();\r\n            }\r\n          );\r\n        });\r\n    }\r\n    //Guest list erroneously includes owner's email as well\r\n    var guestList = \"\";\r\n    if (A.attendees) {\r\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\r\n        return guestList + \" \" + nextGuest.email;\r\n      }, \"\");\r\n      console.log(\"Guest List:\", A.attendees, guestList);\r\n    }\r\n    this.setState(\r\n      {\r\n        newEvent: A,\r\n        newEventID: A.id,\r\n        newEventRecurringID: A.recurringEventId,\r\n        newEventStart0: A.start.dateTime\r\n          ? new Date(A.start.dateTime)\r\n          : new Date(A.start.date),\r\n        newEventEnd0: A.end.dateTime\r\n          ? new Date(A.end.dateTime)\r\n          : new Date(A.end.date),\r\n        newEventName: A.summary,\r\n        newEventGuests: guestList,\r\n        newEventLocation: A.location ? A.location : \"\",\r\n        newEventNotification: A.reminders.overrides\r\n          ? A.reminders.overrides[0].minutes\r\n          : \"\",\r\n        newEventDescription: A.description ? A.description : \"\",\r\n        dayEventSelected: true,\r\n        isEvent: true,\r\n        showRepeatModal: false,\r\n        repeatOption: false,\r\n        repeatOptionDropDown: \"Does not repeat\",\r\n        repeatDropDown: \"DAY\",\r\n        repeatDropDown_temp: \"DAY\",\r\n        repeatMonthlyDropDown: \"Monthly on day 13\",\r\n        repeatInputValue: \"1\",\r\n        repeatInputValue_temp: \"1\",\r\n        repeatOccurrence: \"1\",\r\n        repeatOccurrence_temp: \"1\",\r\n        repeatRadio: \"Never\",\r\n        repeatRadio_temp: \"Never\",\r\n        repeatEndDate: \"\",\r\n        repeatEndDate_temp: \"\",\r\n        showNoTitleError: \"\",\r\n        showDateError: \"\",\r\n        showAboutModal: false,\r\n        byDay: {\r\n          0: \"\",\r\n          1: \"\",\r\n          2: \"\",\r\n          3: \"\",\r\n          4: \"\",\r\n          5: \"\",\r\n          6: \"\",\r\n        },\r\n        byDay_temp: {\r\n          0: \"\",\r\n          1: \"\",\r\n          2: \"\",\r\n          3: \"\",\r\n          4: \"\",\r\n          5: \"\",\r\n          6: \"\",\r\n        },\r\n        repeatSummary: \"\",\r\n        recurrenceRule: \"\",\r\n        showDeleteRecurringModal: false,\r\n        deleteRecurringOption: \"This event\",\r\n        showEditRecurringModal: false,\r\n        editRecurringOption: \"\",\r\n      },\r\n      () => {\r\n        console.log(\"callback from handEventClick\");\r\n      }\r\n    );\r\n  };\r\n\r\n  //Create event from clicking empty space from week view\r\n  //Note arg is moment object of the time pressed\r\n  handleDateClickOnWeekView = (arg) => {\r\n    let newStart = arg.toDate();\r\n    arg.add(1,'hour');\r\n    let newEnd = arg.toDate();\r\n    this.setState({\r\n      newEventID: \"\",\r\n      newEventStart0: newStart,\r\n      newEventEnd0: newEnd,\r\n      newEventName: \"\",\r\n      newEventGuests: \"\",\r\n      newEventLocation: \"\",\r\n      newEventNotification: 30,\r\n      newEventDescription: \"\",\r\n      dayEventSelected: true,\r\n      isEvent: false,\r\n      showNoTitleError: \"\",\r\n      showDateError: \"\",\r\n      showRepeatModal: false,\r\n      showAboutModal: false,\r\n      repeatOption: false,\r\n      repeatOptionDropDown: \"Does not repeat\",\r\n      repeatDropDown: \"DAY\",\r\n      repeatDropDown_temp: \"DAY\",\r\n      repeatMonthlyDropDown: \"Monthly on day 13\",\r\n      repeatInputValue: \"1\",\r\n      repeatInputValue_temp: \"1\",\r\n      repeatOccurrence: \"1\",\r\n      repeatOccurrence_temp: \"1\",\r\n      repeatRadio: \"Never\",\r\n      repeatRadio_temp: \"Never\",\r\n      repeatEndDate: \"\",\r\n      repeatEndDate_temp: \"\",\r\n      byDay: {\r\n        0: \"\",\r\n        1: \"\",\r\n        2: \"\",\r\n        3: \"\",\r\n        4: \"\",\r\n        5: \"\",\r\n        6: \"\",\r\n      },\r\n      byDay_temp: {\r\n        0: \"\",\r\n        1: \"\",\r\n        2: \"\",\r\n        3: \"\",\r\n        4: \"\",\r\n        5: \"\",\r\n        6: \"\",\r\n      },\r\n    });\r\n  }\r\n\r\n  handleDateClickOnDayView = (arg, i) => {\r\n    var newStart = new Date(arg);\r\n    newStart.setHours(i, 0, 0);\r\n    var newEnd = new Date(arg);\r\n    newEnd.setHours(i + 1, 0, 0);\r\n    this.setState({\r\n      newEventID: \"\",\r\n      newEventStart0: newStart,\r\n      newEventEnd0: newEnd,\r\n      newEventName: \"\",\r\n      newEventGuests: \"\",\r\n      newEventLocation: \"\",\r\n      newEventNotification: 30,\r\n      newEventDescription: \"\",\r\n      dayEventSelected: true,\r\n      isEvent: false,\r\n      showNoTitleError: \"\",\r\n      showDateError: \"\",\r\n      showRepeatModal: false,\r\n      showAboutModal: false,\r\n      repeatOption: false,\r\n      repeatOptionDropDown: \"Does not repeat\",\r\n      repeatDropDown: \"DAY\",\r\n      repeatDropDown_temp: \"DAY\",\r\n      repeatMonthlyDropDown: \"Monthly on day 13\",\r\n      repeatInputValue: \"1\",\r\n      repeatInputValue_temp: \"1\",\r\n      repeatOccurrence: \"1\",\r\n      repeatOccurrence_temp: \"1\",\r\n      repeatRadio: \"Never\",\r\n      repeatRadio_temp: \"Never\",\r\n      repeatEndDate: \"\",\r\n      repeatEndDate_temp: \"\",\r\n      byDay: {\r\n        0: \"\",\r\n        1: \"\",\r\n        2: \"\",\r\n        3: \"\",\r\n        4: \"\",\r\n        5: \"\",\r\n        6: \"\",\r\n      },\r\n      byDay_temp: {\r\n        0: \"\",\r\n        1: \"\",\r\n        2: \"\",\r\n        3: \"\",\r\n        4: \"\",\r\n        5: \"\",\r\n        6: \"\",\r\n      },\r\n      repeatSummary: \"\",\r\n      recurrenceRule: \"\",\r\n      showDeleteRecurringModal: false,\r\n      deleteRecurringOption: \"This event\",\r\n      showEditRecurringModal: false,\r\n      editRecurringOption: \"\",\r\n    });\r\n  };\r\n\r\n  /*\r\n  handleDateClick on Month View.\r\n  This will trigger when a date is clicked, it will present\r\n  the user with a new form to create a event\r\n  */\r\n  //TODO: Initialize Date, set other properties to empty\r\n  handleDateClick = (arg) => {\r\n    var newStart = new Date(arg);\r\n    newStart.setHours(0, 0, 0, 0);\r\n    var newEnd = new Date(arg);\r\n    newEnd.setHours(23, 59, 59, 59);\r\n    this.setState(\r\n      {\r\n        newEventID: \"\",\r\n        newEventStart0: newStart,\r\n        newEventEnd0: newEnd,\r\n        newEventName: \"\",\r\n        newEventGuests: \"\",\r\n        newEventLocation: \"\",\r\n        newEventNotification: 30,\r\n        newEventDescription: \"\",\r\n        dayEventSelected: true,\r\n        isEvent: false,\r\n        repeatOption: false,\r\n        repeatOptionDropDown: \"Does not repeat\",\r\n        repeatDropDown: \"DAY\",\r\n        repeatDropDown_temp: \"DAY\",\r\n        repeatMonthlyDropDown: \"Monthly on day 13\",\r\n        repeatInputValue: \"1\",\r\n        repeatInputValue_temp: \"1\",\r\n        repeatOccurrence: \"1\",\r\n        repeatOccurrence_temp: \"1\",\r\n        repeatRadio: \"Never\",\r\n        repeatRadio_temp: \"Never\",\r\n        repeatEndDate: \"\",\r\n        repeatEndDate_temp: \"\",\r\n        showNoTitleError: \"\",\r\n        showDateError: \"\",\r\n        showAboutModal: false,\r\n        byDay: {\r\n          0: \"\",\r\n          1: \"\",\r\n          2: \"\",\r\n          3: \"\",\r\n          4: \"\",\r\n          5: \"\",\r\n          6: \"\",\r\n        },\r\n        byDay_temp: {\r\n          0: \"\",\r\n          1: \"\",\r\n          2: \"\",\r\n          3: \"\",\r\n          4: \"\",\r\n          5: \"\",\r\n          6: \"\",\r\n        },\r\n        repeatSummary: \"\",\r\n        recurrenceRule: \"\",\r\n        showDeleteRecurringModal: false,\r\n        deleteRecurringOption: \"This event\",\r\n        showEditRecurringModal: false,\r\n        editRecurringOption: \"\",\r\n      },\r\n      console.log(\"handledateclick\")\r\n    );\r\n  };\r\n\r\n  validate = () => {\r\n    let titleError = \"\";\r\n    let dayError = \"\";\r\n    var startDay = new Date(this.state.newEventStart0).getDate();\r\n    var endDay = new Date(this.state.newEventEnd0).getDate();\r\n    var startMonth = new Date(this.state.newEventStart0).getUTCMonth();\r\n    var endMonth = new Date(this.state.newEventEnd0).getUTCMonth();\r\n    var startYear = new Date(this.state.newEventStart0).getFullYear();\r\n    var endYear = new Date(this.state.newEventEnd0).getFullYear();\r\n    var startHour = new Date(this.state.newEventStart0).getHours();\r\n    var endHour = new Date(this.state.newEventEnd0).getHours();\r\n    if (\r\n      (startDay > endDay && startMonth === endMonth) ||\r\n      (startMonth > endMonth && startYear === endYear) ||\r\n      startYear > endYear ||\r\n      (startHour > endHour && startDay === endDay)\r\n    ) {\r\n      dayError = \"Invalid: start date is before end date\";\r\n    }\r\n    if (this.state.newEventName === \"\") {\r\n      titleError = \"Invalid: No Title\";\r\n    }\r\n    //empty string evalutes to false.\r\n    if (titleError || dayError) {\r\n      this.setState({ showNoTitleError: titleError, showDateError: dayError });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // handleSubmit:\r\n\r\n  handleExpandClick = (arg) => {\r\n    let newDate = new Date(arg);\r\n    console.log(newDate);\r\n    this.setState(\r\n      {\r\n        dateContext: moment(newDate),\r\n        calendarView: \"Day\",\r\n      },\r\n      this.updateEventsArray\r\n    );\r\n  };\r\n\r\n  // handleSubmit:\r\n\r\n  // submits the data to be passed up to be integrated into google calendar\r\n\r\n  handleSubmit = (event) => {\r\n    if (this.state.start === \"\" || this.state.end === \"\") {\r\n      console.log(\"invalid params\");\r\n      return;\r\n    }\r\n    const isValid = this.validate();\r\n    if (isValid) {\r\n      event.preventDefault();\r\n      this.createEvent(this.state.newEventName);\r\n      this.setState({ showNoTitleError: \"\", showDateError: \"\" });\r\n    }\r\n  };\r\n\r\n  updateEventClick = (event) => {\r\n    event.preventDefault();\r\n    let eventList = this.state.originalEvents;\r\n    if (this.state.calendarView === \"Day\") {\r\n      eventList = this.state.dayEvents;\r\n    } else if (this.state.calendarView === \"Week\") {\r\n      eventList = this.state.weekEvents;\r\n    }\r\n    const isValid = this.validate();\r\n    if (isValid) {\r\n      if (this.state.newEventID === \"\") {\r\n        return;\r\n      } else {\r\n        for (let i = 0; i < eventList.length; i++) {\r\n          if (eventList[i].id === this.state.newEventID) {\r\n            this.updateRequest(eventList, i);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /*\r\n  updateRequest:\r\n  updates the google calendar based  on\r\n  */\r\n  updateRequest = async (eventList, index) => {\r\n    const guests = this.state.newEventGuests;\r\n    var formattedEmail = null;\r\n    const emailList = guests.match(\r\n      /[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*(\\.)?/g\r\n    );\r\n    if (emailList) {\r\n      formattedEmail = emailList.map((guests) => {\r\n        return {\r\n          email: guests,\r\n          responseStatus: \"needsAction\",\r\n        };\r\n      });\r\n    }\r\n\r\n    var minutesNotification = 30;\r\n    if (this.state.newEventNotification) {\r\n      minutesNotification = this.state.newEventNotification;\r\n    }\r\n\r\n    let updatedEvent = eventList[index];\r\n    updatedEvent.summary = this.state.newEventName;\r\n    updatedEvent.attendees = formattedEmail;\r\n    updatedEvent.location = this.state.newEventLocation;\r\n    updatedEvent.description = this.state.newEventDescription;\r\n    updatedEvent.start = {\r\n      dateTime: this.state.newEventStart0.toISOString(),\r\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    };\r\n    updatedEvent.end = {\r\n      dateTime: this.state.newEventEnd0.toISOString(),\r\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    };\r\n    updatedEvent.recurrence = this.state.repeatOption\r\n      ? this.defineRecurrence()\r\n      : [this.state.recurrenceRule];\r\n    updatedEvent.reminders = {\r\n      overrides: [\r\n        {\r\n          method: \"popup\",\r\n          minutes: minutesNotification,\r\n        },\r\n      ],\r\n      useDefault: false,\r\n      sequence: 0,\r\n    };\r\n\r\n    let event = {\r\n      summary: updatedEvent.summary,\r\n      attendees: updatedEvent.attendees,\r\n      location: updatedEvent.location,\r\n      description: updatedEvent.description,\r\n      start: updatedEvent.start,\r\n      end: updatedEvent.end,\r\n      recurrence: updatedEvent.recurrence ? updatedEvent.recurrence : false,\r\n      reminders: updatedEvent.reminders,\r\n    };\r\n\r\n    console.log(updatedEvent, \"updatedEvent\");\r\n\r\n    let ID = \"\";\r\n    if (this.state.editRecurringOption === \"All events\") {\r\n      ID = updatedEvent.recurringEventId;\r\n      console.log(\"All events\");\r\n\r\n      await axios\r\n        .get(\"/getRecurringEventInstances\", {\r\n          params: {\r\n            recurringEventId: updatedEvent.recurringEventId,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          event.start = res.data[0].start;\r\n          event.end = res.data[0].end;\r\n        });\r\n    } else if (this.state.editRecurringOption === \"This event\") {\r\n      ID = this.state.newEventID;\r\n      event.recurrence = null;\r\n    } else if (this.state.editRecurringOption === \"This and following events\") {\r\n      ID = updatedEvent.recurringEventId;\r\n      let newEvent = {\r\n        reminders: this.state.newEvent.reminders,\r\n        creator: this.state.newEvent.creator,\r\n        created: this.state.newEvent.created,\r\n        organizer: this.state.newEvent.organizer,\r\n        sequence: this.state.newEvent.sequence,\r\n        status: this.state.newEvent.status,\r\n      };\r\n      let newRecurrenceRule = this.state.recurrenceRule;\r\n      let newUntilSubString = `${moment(this.state.newEventStart0).format(\r\n        \"YYYYMMDD\"\r\n      )}`;\r\n\r\n      let untilSubString = \"\";\r\n      let untilIndex = this.state.recurrenceRule.indexOf(\"UNTIL\");\r\n      if (untilIndex !== -1) {\r\n        untilSubString = this.state.recurrenceRule.substring(untilIndex);\r\n      }\r\n      if (untilSubString.includes(\";\")) {\r\n        let endUntilIndex = untilSubString.indexOf(\";\");\r\n        untilSubString = untilSubString.substring(6, endUntilIndex);\r\n      } else if (untilSubString) {\r\n        untilSubString = untilSubString = untilSubString.substring(6);\r\n      }\r\n\r\n      newRecurrenceRule = newRecurrenceRule.replace(\r\n        untilSubString,\r\n        newUntilSubString\r\n      );\r\n      console.log(newEvent.summary, this.state.newEvent.summary);\r\n      await axios\r\n        .get(\"/getRecurringEventInstances\", {\r\n          params: {\r\n            recurringEventId: updatedEvent.recurringEventId,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          newEvent.start = res.data[0].start;\r\n          newEvent.end = res.data[0].end;\r\n          newEvent.recurrence = [newRecurrenceRule];\r\n          newEvent.summary = res.data[0].summary;\r\n          axios\r\n            .post(\"/createNewEvent\", {\r\n              newEvent: newEvent,\r\n            })\r\n            .then((res) => {\r\n              console.log(\"createnewevent\", res);\r\n              this.setState({\r\n                dayEventSelected: false,\r\n              });\r\n              this.updateEventsArray();\r\n            })\r\n            .catch(function (error) {\r\n              // console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    axios\r\n      .put(\"/updateEvent\", {\r\n        extra: event,\r\n        ID: updatedEvent.recurringEventId ? ID : this.state.newEventID,\r\n        // start: updatedEvent.start,\r\n        // end: updatedEvent.end,\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          dayEventSelected: false,\r\n          newEventName: \"\",\r\n          newEventStart0: new Date(),\r\n          newEventEnd0: new Date(),\r\n        });\r\n\r\n        this.updateEventsArray();\r\n      })\r\n\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  defineRecurrence = () => {\r\n    // frequency in RRULE\r\n    let frequency =\r\n      this.state.repeatDropDown === \"DAY\"\r\n        ? \"DAILY\"\r\n        : this.state.repeatDropDown.concat(\"LY\");\r\n\r\n    // recurrence string\r\n    let rrule = `RRULE:FREQ=${frequency};INTERVAL=${this.state.repeatInputValue}`;\r\n    let recurrence = [];\r\n    let exdate = \"\";\r\n\r\n    // If seleted WEEK, add BYDAY to recurrence string\r\n    if (this.state.repeatDropDown === \"WEEK\") {\r\n      let selectedDays = [];\r\n      for (let [key, value] of Object.entries(this.state.byDay)) {\r\n        // Excluding today if today is not selected\r\n        if (key === this.state.newEventStart0.getDay().toString()) {\r\n          if (value === \"\") {\r\n            exdate = `EXDATE;TZID=America/Los_Angeles:${moment(\r\n              this.state.newEventStart0\r\n            ).format(\"YYYYMMDD\")}T070000Z`;\r\n            recurrence.unshift(exdate);\r\n          }\r\n        }\r\n        value !== \"\" && selectedDays.push(value.substring(0, 2).toUpperCase());\r\n      }\r\n      rrule = rrule.concat(`;BYDAY=${selectedDays.toString()}`);\r\n    }\r\n\r\n    // If selected After, add COUNT to recurrence string\r\n    if (this.state.repeatRadio === \"After\")\r\n      rrule = rrule.concat(`;COUNT=${this.state.repeatOccurrence}`);\r\n\r\n    // If selected On, add UNTIL to recurrence string\r\n    if (this.state.repeatRadio === \"On\") {\r\n      let repeat_end_date = moment(this.state.repeatEndDate).add(1, \"days\");\r\n      rrule = rrule.concat(`;UNTIL=${repeat_end_date.format(\"YYYYMMDD\")}`);\r\n    }\r\n\r\n    recurrence.push(rrule);\r\n    console.log(\"recurrence\", recurrence);\r\n    return recurrence;\r\n  };\r\n\r\n  /*\r\n  calls the backend API to delete a item with a particular eventID\r\n  */\r\n\r\n  deleteSubmit = () => {\r\n    if (this.state.newEventID === \"\") {\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/deleteEvent\", {\r\n        ID: this.state.newEventID,\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          dayEventSelected: false,\r\n          showDeleteRecurringModal: false,\r\n        });\r\n        this.updateEventsArray();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  /*\r\n  createEvent:\r\n  Basically creates a new event based on details given\r\n  */\r\n  /*\r\n   * TODO: Replace formatting email with function\r\n   */\r\n  /*\r\n   * https://tools.ietf.org/html/rfc3696 for what is valid email addresses\r\n   *\r\n   * local-part@domain-part\r\n   * local-part: alphanumeric, symbols ! # $ % & ' * + - / = ?  ^ _ ` . { | } ~ with restriction no two . in a row\r\n   * localWord = [a-zA-Z!#$%&'*+\\-/=?^_`{|}~]+\r\n   * localPart = localWord (\\.localWord)*\r\n   * domain-part:\r\n   * domains: alphanumeric, symbol - with restriction - not at beginning or end\r\n   * dot separate domains, top level domain can have optional . at end\r\n   * domain = [a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?\r\n   * domainPart = domain(\\.domain)*\\.domain(\\.)?\r\n   * email: localPart@domainPart\r\n   */\r\n  //Note: This works, but does not email the guests that they are invited to the event\r\n  createEvent = (newTitle) => {\r\n    const guests = this.state.newEventGuests;\r\n    var formattedEmail = null;\r\n    const emailList = guests.match(\r\n      /[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*(\\.)?/g\r\n    );\r\n    if (emailList) {\r\n      formattedEmail = emailList.map((guests) => {\r\n        return {\r\n          email: guests,\r\n          responseStatus: \"needsAction\",\r\n        };\r\n      });\r\n    }\r\n\r\n    var minutesNotification = 30;\r\n    if (this.state.newEventNotification) {\r\n      minutesNotification = this.state.newEventNotification;\r\n    }\r\n\r\n    let event = {\r\n      summary: this.state.newEventName,\r\n      location: this.state.newEventLocation,\r\n      description: this.state.newEventDescription,\r\n      reminders: {\r\n        useDefault: false,\r\n        sequence: 0,\r\n        overrides: [\r\n          {\r\n            method: \"popup\",\r\n            minutes: minutesNotification,\r\n          },\r\n        ],\r\n      },\r\n      start: {\r\n        dateTime: this.state.newEventStart0.toISOString(),\r\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n      },\r\n      end: {\r\n        dateTime: this.state.newEventEnd0.toISOString(),\r\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n      },\r\n      recurrence: this.state.repeatOption && this.defineRecurrence(),\r\n      attendees: formattedEmail,\r\n    };\r\n    axios\r\n      .post(\"/createNewEvent\", {\r\n        newEvent: event,\r\n        reminderTime: minutesNotification,\r\n        title: newTitle,\r\n        start: this.state.newEventStart0.toISOString(),\r\n        end: this.state.newEventEnd0.toISOString(),\r\n      })\r\n      .then((response) => {\r\n        console.log(\"createnewevent\", response);\r\n        this.setState({\r\n          dayEventSelected: false,\r\n        });\r\n        this.updateEventsArray();\r\n      })\r\n      .catch(function (error) {\r\n        // console.log(error);\r\n      });\r\n  };\r\n\r\n  /*\r\n  handleModalClicked:\r\n  this will toggle show hide of the firebase modal currently\r\n  */\r\n  // handleModalClicked = arg => {\r\n  //   // bind with an arrow function\r\n  //   this.setState({\r\n  //     modelSelected: !this.state.modelSelected\r\n  //   });\r\n  // };\r\n\r\n  nextMonth = () => {\r\n    let dateContext = Object.assign({}, this.state.dateContext);\r\n    dateContext = moment(dateContext).add(1, \"month\");\r\n    this.setState(\r\n      {\r\n        dateContext: dateContext,\r\n        originalEvents: [],\r\n      },\r\n      this.updateEventsArray\r\n    );\r\n  };\r\n\r\n  prevMonth = () => {\r\n    let dateContext = Object.assign({}, this.state.dateContext);\r\n    dateContext = moment(dateContext).subtract(1, \"month\");\r\n    this.setState(\r\n      {\r\n        dateContext: dateContext,\r\n        originalEvents: [],\r\n      },\r\n      this.updateEventsArray\r\n    );\r\n  };\r\n\r\n  nextDay = () => {\r\n    let dateContext = Object.assign({}, this.state.dateContext);\r\n    dateContext = moment(dateContext).add(1, \"day\");\r\n    this.setState(\r\n      {\r\n        dateContext: dateContext,\r\n        dayEvents: [],\r\n      },\r\n      this.updateEventsArray\r\n    );\r\n  };\r\n\r\n  prevDay = () => {\r\n    let dateContext = Object.assign({}, this.state.dateContext);\r\n    dateContext = moment(dateContext).subtract(1, \"day\");\r\n    this.setState(\r\n      {\r\n        dateContext: dateContext,\r\n        dayEvents: [],\r\n      },\r\n      this.updateEventsArray\r\n    );\r\n  };\r\n\r\n  nextWeek = () => {\r\n    let dateContext = Object.assign({}, this.state.dateContext);\r\n    dateContext = moment(dateContext).add(1, \"week\");\r\n    this.setState(\r\n      {\r\n        dateContext: dateContext,\r\n        dayEvents: [],\r\n      },\r\n      this.updateEventsArray\r\n    );\r\n  };\r\n\r\n  prevWeek = () => {\r\n    let dateContext = Object.assign({}, this.state.dateContext);\r\n    dateContext = moment(dateContext).subtract(1, \"week\");\r\n    this.setState(\r\n      {\r\n        dateContext: dateContext,\r\n        dayEvents: [],\r\n      },\r\n      this.updateEventsArray\r\n    );\r\n  };\r\n\r\n  /*\r\n  updateEventsArray:\r\n  updates the array if the month view changes to a different month.\r\n  */\r\n\r\n  updateEventsArray = () => {\r\n    if (this.state.calendarView === \"Month\") {\r\n      //The month view has transferred to a different month\r\n      let startObject = this.state.dateContext.clone();\r\n      let endObject = this.state.dateContext.clone();\r\n      let startDay = startObject.startOf(\"month\");\r\n      let endDay = endObject.endOf(\"month\");\r\n      let startDate = new Date(startDay.format(\"MM/DD/YYYY\"));\r\n      let endDate = new Date(endDay.format(\"MM/DD/YYYY\"));\r\n      startDate.setHours(0, 0, 0);\r\n      endDate.setHours(23, 59, 59);\r\n      this.getEventsByInterval(startDate.toString(), endDate.toString());\r\n    } else if (this.state.calendarView === \"Day\") {\r\n      this.getEventsByIntervalDayVersion(\r\n        this.state.dateContext.format(\"MM/DD/YYYY\")\r\n      );\r\n    } else if (this.state.calendarView === \"Week\") {\r\n      let startObject = this.state.dateContext.clone();\r\n      let endObject = this.state.dateContext.clone();\r\n      let startDay = startObject.startOf(\"week\");\r\n      let endDay = endObject.endOf(\"week\");\r\n      let startDate = new Date(startDay.format(\"MM/DD/YYYY\"));\r\n      let endDate = new Date(endDay.format(\"MM/DD/YYYY\"));\r\n      this.getEventsByIntervalWeekVersion(\r\n        startObject.toDate(),\r\n        endObject.toDate()\r\n      );\r\n    }\r\n  };\r\n\r\n  /*\r\n  openRepeatModal:\r\n  this will open repeat modal.\r\n  */\r\n  openRepeatModal = () => {\r\n    this.setState((prevState) => {\r\n      return { showRepeatModal: !prevState.showRepeatModal };\r\n    });\r\n  };\r\n\r\n  /*\r\n  closeRepeatModal:\r\n  this will close repeat modal.\r\n  */\r\n  closeRepeatModal = () => {\r\n    this.setState((prevState) => ({\r\n      showRepeatModal: false,\r\n      repeatInputValue_temp: prevState.repeatInputValue,\r\n      repeatOccurrence_temp: prevState.repeatOccurrence,\r\n      repeatDropDown_temp: prevState.repeatDropDown,\r\n      repeatRadio_temp: prevState.repeatRadio,\r\n      repeatEndDate_temp: prevState.repeatEndDate,\r\n      byDay_temp: prevState.byDay,\r\n    }));\r\n    if (\r\n      !this.state.repeatOption &&\r\n      this.state.repeatOptionDropDown === \"Custom...\"\r\n    ) {\r\n      this.setState({\r\n        repeatOptionDropDown: \"Does not repeat\",\r\n      });\r\n    }\r\n  };\r\n\r\n  /*\r\n  saveRepeatChanges:\r\n  this will close repeat modal.\r\n  */\r\n  saveRepeatChanges = () => {\r\n    const {\r\n      // repeatOptionDropDown,\r\n      repeatDropDown_temp,\r\n      repeatInputValue_temp,\r\n      repeatOccurrence_temp,\r\n      repeatRadio_temp,\r\n      repeatEndDate_temp,\r\n      byDay_temp,\r\n    } = this.state;\r\n\r\n    this.setState((prevState) => ({\r\n      showRepeatModal: false,\r\n      repeatOption: true,\r\n      repeatInputValue: prevState.repeatInputValue_temp,\r\n      repeatOccurrence: prevState.repeatOccurrence_temp,\r\n      repeatDropDown: prevState.repeatDropDown_temp,\r\n      repeatRadio: prevState.repeatRadio_temp,\r\n      repeatEndDate: prevState.repeatEndDate_temp,\r\n      byDay: prevState.byDay_temp,\r\n    }));\r\n\r\n    // If repeatDropDown_temp is DAY\r\n    if (repeatDropDown_temp === \"DAY\") {\r\n      if (repeatInputValue_temp === \"1\") {\r\n        if (repeatRadio_temp === \"Never\") {\r\n          this.setState({\r\n            repeatOptionDropDown: \"Daily\",\r\n          });\r\n        } else if (repeatRadio_temp === \"On\") {\r\n          this.setState({\r\n            repeatOptionDropDown: `Daily, until ${moment(\r\n              repeatEndDate_temp\r\n            ).format(\"LL\")}`,\r\n          });\r\n        } else {\r\n          if (repeatOccurrence_temp === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Daily, ${repeatOccurrence_temp} times`,\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        if (repeatRadio_temp === \"Never\") {\r\n          this.setState({\r\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days`,\r\n          });\r\n        } else if (repeatRadio_temp === \"On\") {\r\n          this.setState({\r\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days, until ${moment(\r\n              repeatEndDate_temp\r\n            ).format(\"LL\")}`,\r\n          });\r\n        } else {\r\n          if (repeatOccurrence_temp === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} days, ${repeatOccurrence_temp} times`,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // If repeatDropDown_temp is WEEK\r\n    else if (repeatDropDown_temp === \"WEEK\") {\r\n      let selectedDays = [];\r\n      for (let [key, value] of Object.entries(byDay_temp)) {\r\n        value !== \"\" && selectedDays.push(value);\r\n      }\r\n      console.log(selectedDays, \"selectedDays week\");\r\n      if (repeatInputValue_temp === \"1\") {\r\n        if (repeatRadio_temp === \"Never\") {\r\n          if (selectedDays.length === 7) {\r\n            this.setState({\r\n              repeatOptionDropDown: \"Weekly on all days\",\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\", \")}`,\r\n            });\r\n          }\r\n        } else if (repeatRadio_temp === \"On\") {\r\n          if (selectedDays.length === 7) {\r\n            this.setState({\r\n              repeatOptionDropDown: `Weekly on all days, until ${moment(\r\n                repeatEndDate_temp\r\n              ).format(\"LL\")}`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\r\n                \", \"\r\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`,\r\n            });\r\n          }\r\n        } else {\r\n          if (repeatOccurrence_temp === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            if (selectedDays.length === 7) {\r\n              this.setState({\r\n                repeatOptionDropDown: `Weekly on all days, , ${repeatOccurrence_temp} times`,\r\n              });\r\n            } else {\r\n              this.setState({\r\n                repeatOptionDropDown: `Weekly on ${selectedDays.join(\r\n                  \", \"\r\n                )}, ${repeatOccurrence_temp} times`,\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (repeatRadio_temp === \"Never\") {\r\n          if (selectedDays.length === 7) {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\r\n                \", \"\r\n              )}`,\r\n            });\r\n          }\r\n        } else if (repeatRadio_temp === \"On\") {\r\n          if (selectedDays.length === 7) {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, until ${moment(\r\n                repeatEndDate_temp\r\n              ).format(\"LL\")}`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\r\n                \", \"\r\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`,\r\n            });\r\n          }\r\n        } else {\r\n          if (repeatOccurrence_temp === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: \"Once\",\r\n            });\r\n          } else {\r\n            if (selectedDays.length === 7) {\r\n              this.setState({\r\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, ${repeatOccurrence_temp} times`,\r\n              });\r\n            } else {\r\n              this.setState({\r\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\r\n                  \", \"\r\n                )}, ${repeatOccurrence_temp} times`,\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // If repeatDropDown_temp is MONTH\r\n    else if (repeatDropDown_temp === \"MONTH\") {\r\n      if (repeatInputValue_temp === \"1\") {\r\n        if (repeatRadio_temp === \"Never\") {\r\n          this.setState({\r\n            repeatOptionDropDown: \"Monthly\",\r\n          });\r\n        } else if (repeatRadio_temp === \"On\") {\r\n          this.setState({\r\n            repeatOptionDropDown: `Monthly, until ${moment(\r\n              repeatEndDate_temp\r\n            ).format(\"LL\")}`,\r\n          });\r\n        } else {\r\n          if (repeatOccurrence_temp === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Monthly, ${repeatOccurrence_temp} times`,\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        if (repeatRadio_temp === \"Never\") {\r\n          this.setState({\r\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months`,\r\n          });\r\n        } else if (repeatRadio_temp === \"On\") {\r\n          this.setState({\r\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months, until ${moment(\r\n              repeatEndDate_temp\r\n            ).format(\"LL\")}`,\r\n          });\r\n        } else {\r\n          if (repeatOccurrence_temp === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} months, ${repeatOccurrence_temp} times`,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // If repeatDropDown_temp is YEAR\r\n    else if (repeatDropDown_temp === \"YEAR\") {\r\n      if (repeatInputValue_temp === \"1\") {\r\n        if (repeatRadio_temp === \"Never\") {\r\n          this.setState({\r\n            repeatOptionDropDown: \"Annually\",\r\n          });\r\n        } else if (repeatRadio_temp === \"On\") {\r\n          this.setState({\r\n            repeatOptionDropDown: `Annually, until ${moment(\r\n              repeatEndDate_temp\r\n            ).format(\"LL\")}`,\r\n          });\r\n        } else {\r\n          if (repeatOccurrence_temp === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Annually, ${repeatOccurrence_temp} times`,\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        if (repeatRadio_temp === \"Never\") {\r\n          this.setState({\r\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years`,\r\n          });\r\n        } else if (repeatRadio_temp === \"On\") {\r\n          this.setState({\r\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years, until ${moment(\r\n              repeatEndDate_temp\r\n            ).format(\"LL\")}`,\r\n          });\r\n        } else {\r\n          if (repeatOccurrence_temp === \"1\") {\r\n            this.setState({\r\n              repeatOptionDropDown: `Once`,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} years, ${repeatOccurrence_temp} times`,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  hideAboutForm = (e) => {\r\n    this.setState({\r\n      showAboutModal: false,\r\n    });\r\n  };\r\n\r\n  updatePic = (url,name) => {\r\n    this.setState({\r\n      profilePicUrl: url,\r\n      profileName: name\r\n    });\r\n  };\r\n\r\n  showDayViewOrAboutView = () => {\r\n    if (this.state.dayEventSelected) {\r\n      return this.eventFormAbstracted();\r\n    } else if (this.state.showAboutModal) {\r\n      // return this.aboutFormAbstracted();\r\n      return <AboutModal CameBackFalse={this.hideAboutForm}  updateProfilePic= {this.updatePic}/>\r\n    }\r\n  };\r\n\r\n  showCalendarView = () => {\r\n    if (this.state.calendarView === \"Month\") return this.calendarAbstracted();\r\n    else if (this.state.calendarView === \"Day\") return this.dayViewAbstracted();\r\n    else if (this.state.calendarView === \"Week\")\r\n      return this.weekViewAbstracted();\r\n  };\r\n\r\n  render() {\r\n    //The variable below will help decide whether to center the Calendar object or not\r\n    var onlyCal =\r\n      !this.state.showRoutineGoalModal &&\r\n      !this.state.showGoalModal &&\r\n      !this.state.showRoutineModal;\r\n\r\n    return (\r\n      //width and height is fixed now but should be by % percentage later on\r\n      <div\r\n        className=\"normalfancytext\"\r\n        style={{\r\n          marginLeft: \"0px\",\r\n          height: \"100%\",\r\n          width: \"2000px\",\r\n          // width: \"100%\",\r\n          // display: \"flex\",\r\n          // flexDirection: \"column\",\r\n          // justifyContent: \"center\",\r\n          // alignItems: \"center\",\r\n          // background: \"lightblue\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            margin: \"0\",\r\n            padding: \"0\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Row style={{ margin: \"0\"}} className=\"d-flex flex-row\">\r\n\r\n\r\n            <div style={{float: \"right\", width: \"80px\", height: \"70px\", marginLeft: \"50px\", marginTop:\"5px\"}}>\r\n            {(this.state.profilePicUrl === \"\"  ?\r\n              <FontAwesomeIcon icon={faImage} size=\"5x\"/> :\r\n              <img style =\r\n                  {{display: \"block\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight:\"auto\" ,\r\n                  width: \"100%\",\r\n                  height:\"70px\",\r\n                  }}\r\n                  src={this.state.profilePicUrl}\r\n                  alt=\"Profile\"\r\n              /> )}\r\n              </div>\r\n\r\n              <div style={{float: \"left\", width: \"227px\", height: \"50px\"}}>\r\n\r\n                 {(this.state.profileName === \"\" ?\r\n                  <p style = {{ marginTop:\"30px\", marginLeft:\"10px\"}}>First Last</p>:\r\n                  <p style = {{ marginTop:\"30px\", marginLeft:\"10px\"}}>{this.state.profileName}</p>\r\n\r\n                 )}\r\n              </div>\r\n\r\n            <div style={{ float: \"left\", width: \"227px\", height: \"50px\" }}>\r\n              {this.state.profileName === \"\" ? (\r\n                <p style={{ marginTop: \"25px\", marginLeft: \"10px\" }}>\r\n                  First Last\r\n                </p>\r\n              ) : (\r\n                <p style={{ marginTop: \"25px\", marginLeft: \"10px\" }}>\r\n                  {this.state.profileName}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </Row>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            margin: \"0\",\r\n            padding: \"0\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {this.abstractedMainEventGRShowButtons()}\r\n        </div>\r\n        <Container\r\n          fluid\r\n          style={{\r\n            marginTop: \"15px\",\r\n            marginLeft: \"0\",\r\n            // display: \"flex\",\r\n            // flexDirection: \"column\",\r\n            // justifyContent: \"center\",\r\n            // alignItems: \"center\",\r\n            // width: \"100%\"\r\n          }}\r\n        >\r\n          <Row\r\n            style={{\r\n              marginTop: \"0\",\r\n              // width: \"100%\",\r\n              // display: \"flex\",\r\n              // flexDirection: \"column\",\r\n              // justifyContent: \"center\"\r\n              // alignItems: \"center\"\r\n            }}\r\n          >\r\n            {/* the modal for routine/goal is called Firebasev2 currently */}\r\n            <Firebasev2\r\n              closeRoutineGoalModal={() => {\r\n                this.setState({ showRoutineGoalModal: false });\r\n              }}\r\n              showRoutineGoalModal={this.state.showRoutineGoalModal}\r\n              closeGoal={() => {\r\n                this.setState({ showGoalModal: false });\r\n              }}\r\n              closeRoutine={() => {\r\n                this.setState({ showRoutineModal: false });\r\n              }}\r\n              showRoutine={this.state.showRoutineModal}\r\n              showGoal={this.state.showGoalModal}\r\n            />\r\n            <Col\r\n              sm=\"auto\"\r\n              md=\"auto\"\r\n              lg=\"auto\"\r\n              style={onlyCal ? { marginLeft: \"20%\" } : { marginLeft: \"35px\" }}\r\n            >\r\n              {this.showCalendarView()}\r\n              <div\r\n                style={{ marginTop: \"50px\", textAlign: \"center\" }}\r\n                className=\"fancytext\"\r\n              >\r\n                Dedicated to Caitlin Little\r\n              </div>\r\n            </Col>\r\n            {/* <Col style={{ marginLeft: \"25px\" }}> */}\r\n            <Col>{this.showDayViewOrAboutView()}</Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  dayViewAbstracted = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          borderRadius: \"20px\",\r\n          backgroundColor: \"white\",\r\n          width: \"100%\",\r\n          marginLeft: \"10px\",\r\n          padding: \"20px\",\r\n          // border:\"1px black solid\",\r\n          boxShadow:\r\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        <Container>\r\n          <Row style={{ marginTop: \"0px\" }}>\r\n            <Col>\r\n              <div>\r\n                <FontAwesomeIcon\r\n                  style={{ marginLeft: \"50%\" }}\r\n                  icon={faChevronLeft}\r\n                  size=\"2x\"\r\n                  className=\"X\"\r\n                  onClick={(e) => {\r\n                    this.prevDay();\r\n                  }}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              md=\"auto\"\r\n              style={{ textAlign: \"center\" }}\r\n              className=\"bigfancytext\"\r\n            >\r\n              <p>\r\n                {\" \"}\r\n                {this.state.dateContext.format(\"dddd\")} {this.getDay()}{\" \"}\r\n                {this.getMonth()} {this.getYear()}{\" \"}\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <FontAwesomeIcon\r\n                style={{ marginLeft: \"50%\" }}\r\n                icon={faChevronRight}\r\n                size=\"2x\"\r\n                className=\"X\"\r\n                onClick={(e) => {\r\n                  this.nextDay();\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Row>\r\n          <DayEvents\r\n            dateContext={this.state.dateContext}\r\n            eventClickDayView={this.handleDayEventClick}\r\n            handleDateClick={this.handleDateClickOnDayView}\r\n            dayEvents={this.state.dayEvents}\r\n            getEventsByInterval={this.getEventsByIntervalDayVersion}\r\n          />\r\n          <DayRoutines dayRoutineClick={this.toggleShowRoutine} />\r\n          <DayGoals dayGoalClick={this.toggleShowGoal} />\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  weekViewAbstracted = () => {\r\n    let startObject = this.state.dateContext.clone();\r\n    let startWeek = startObject.startOf(\"week\");\r\n    return (\r\n      <div\r\n        style={{\r\n          borderRadius: \"20px\",\r\n          backgroundColor: \"white\",\r\n          width: \"100%\",\r\n          marginLeft: \"10px\",\r\n          padding: \"20px\",\r\n          // border:\"1px black solid\",\r\n          boxShadow:\r\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        <Container>\r\n          <Container>\r\n            <Row style={{ marginTop: \"0px\" }}>\r\n              <Col>\r\n                <div>\r\n                  <FontAwesomeIcon\r\n                    style={{ marginLeft: \"50%\" }}\r\n                    icon={faChevronLeft}\r\n                    size=\"2x\"\r\n                    className=\"X\"\r\n                    onClick={(e) => {\r\n                      this.prevWeek();\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                md=\"auto\"\r\n                style={{ textAlign: \"center\" }}\r\n                className=\"bigfancytext\"\r\n              >\r\n                <p> Week of {startWeek.format(\"D MMMM YYYY\")} </p>\r\n              </Col>\r\n              <Col>\r\n                <FontAwesomeIcon\r\n                  style={{ marginLeft: \"50%\" }}\r\n                  icon={faChevronRight}\r\n                  size=\"2x\"\r\n                  className=\"X\"\r\n                  onClick={(e) => {\r\n                    this.nextWeek();\r\n                  }}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Row>\r\n            <WeekEvents\r\n              weekEvents={this.state.weekEvents}\r\n              dateContext={this.state.dateContext}\r\n              eventClick={this.handleWeekEventClick}\r\n              onDayClick={this.handleDateClickOnWeekView}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <WeekGoals />\r\n          </Row>\r\n          <Row>\r\n            <WeekRoutines />\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  toggleShowRoutine = () => {\r\n    this.setState({\r\n      showRoutineModal: !this.state.showRoutineModal,\r\n      showGoalModal: false,\r\n      showRoutineGoalModal: false,\r\n    });\r\n  };\r\n\r\n  toggleShowGoal = () => {\r\n    this.setState({\r\n      showGoalModal: !this.state.showGoalModal,\r\n      showRoutineModal: false,\r\n      showRoutineGoalModal: false,\r\n    });\r\n  };\r\n\r\n  showEventsFormbyCreateNewEventButton = () => {\r\n    var newStart, newEnd;\r\n    if (this.state.calendarView === \"Month\") {\r\n      newStart = new Date();\r\n      newStart.setHours(0, 0, 0, 0);\r\n      newEnd = new Date();\r\n      newEnd.setHours(23, 59, 59, 59);\r\n    } else if (this.state.calendarView === \"Day\") {\r\n      newStart = new Date(this.state.dateContext.toDate());\r\n      newStart.setHours(0, 0, 0, 0);\r\n      newEnd = new Date(this.state.dateContext.toDate());\r\n      newEnd.setHours(23, 59, 59, 59);\r\n    }\r\n\r\n    this.setState({\r\n      newEventID: \"\",\r\n      newEventStart0: newStart,\r\n      newEventEnd0: newEnd,\r\n      newEventName: \"\",\r\n      newEventGuests: \"\",\r\n      newEventLocation: \"\",\r\n      newEventDescription: \"\",\r\n      dayEventSelected: true,\r\n      isEvent: false,\r\n    });\r\n  };\r\n\r\n  changeCalendarView = (view) => {\r\n    this.setState(\r\n      {\r\n        calendarView: view,\r\n      },\r\n      this.updateEventsArray\r\n    );\r\n  };\r\n\r\n  abstractedMainEventGRShowButtons = () => {\r\n    // Redefine the width of those buttons; Should fix to be 100% and make\r\n    // enclosing div to be based on % and not 2000px\r\n\r\n    return (\r\n\r\n      // <Row>\r\n\r\n      <Row\r\n        style={{\r\n          display: \"block\",\r\n          textAlign: \"center\",\r\n          fontSize: \"20px\",\r\n          paddingRight: \"170px\",\r\n          // display: \"flex\",\r\n          // justifyContent: \"center\",\r\n          // alignItems: \"center\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"inline-block\",\r\n            margin: \"10px\",\r\n            marginBottom: \"0\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          <DropdownButton\r\n            style={{ top: \"5px\" }}\r\n            title={this.state.calendarView}\r\n          >\r\n            <Dropdown.Item\r\n              onClick={(e) => {\r\n                this.changeCalendarView(\"Day\");\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Day{\" \"}\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={(e) => {\r\n                this.changeCalendarView(\"Week\");\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Week{\" \"}\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={(e) => {\r\n                this.changeCalendarView(\"Month\");\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Month{\" \"}\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n        </div>\r\n        <Button\r\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={() => {\r\n            this.setState(\r\n              {\r\n                dateContext: moment(),\r\n              },\r\n              this.updateEventsArray\r\n            );\r\n          }}\r\n        >\r\n          Today\r\n        </Button>\r\n        <Button\r\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={() => {\r\n            this.setState(\r\n              {\r\n                showAboutModal: false,\r\n                // dayEventSelected: !this.state.dayEventSelected\r\n              },\r\n              () => {\r\n                this.showEventsFormbyCreateNewEventButton();\r\n              }\r\n            );\r\n          }}\r\n        >\r\n          New Event\r\n        </Button>\r\n\r\n        <Button\r\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={this.toggleShowRoutine}\r\n        >\r\n          Routines\r\n        </Button>\r\n\r\n        <Button\r\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={this.toggleShowGoal}\r\n        >\r\n          {\" \"}\r\n          Goals{\" \"}\r\n        </Button>\r\n\r\n        <Button\r\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={() => {\r\n            this.setState({\r\n              showRoutineGoalModal: !this.state.showRoutineGoalModal,\r\n              showGoalModal: false,\r\n              showRoutineModal: false,\r\n            });\r\n          }}\r\n        >\r\n          Current Status\r\n        </Button>\r\n        <Button\r\n          style={{\r\n            display: \"inline-block\",\r\n            margin: \"10px\",\r\n            marginBottom: \"0\",\r\n            // marginRight: \"200px\",\r\n          }}\r\n          variant=\"outline-primary\"\r\n          onClick={() => {\r\n            this.setState({\r\n              showAboutModal: !this.state.showAboutModal,\r\n              dayEventSelected: false,\r\n            });\r\n          }}\r\n        >\r\n          About\r\n        </Button>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  calendarAbstracted = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          borderRadius: \"2%\",\r\n          backgroundColor: \"white\",\r\n          width: \"1000px\",\r\n          // marginLeft: \"10px\",\r\n          padding: \"45px\",\r\n          paddingBottom: \"10px\",\r\n          boxShadow:\r\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n        }}\r\n      >\r\n        <div>\r\n          <Row style={{ marginTop: \"0px\" }}>\r\n            <Col>\r\n              <div>\r\n                <FontAwesomeIcon\r\n                  style={{ marginLeft: \"50%\" }}\r\n                  icon={faChevronLeft}\r\n                  size=\"2x\"\r\n                  className=\"X\"\r\n                  onClick={(e) => {\r\n                    this.prevMonth();\r\n                  }}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col style={{ textAlign: \"center\" }} className=\"bigfancytext\">\r\n              <p>\r\n                {this.getMonth()} {this.getYear()}\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <FontAwesomeIcon\r\n                style={{ marginLeft: \"50%\" }}\r\n                icon={faChevronRight}\r\n                size=\"2x\"\r\n                className=\"X\"\r\n                onClick={(e) => {\r\n                  this.nextMonth();\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <TylersCalendarv1\r\n          eventClick={this.handleEventClick}\r\n          handleDateClick={this.handleDateClick}\r\n          handleExpandClick={this.handleExpandClick}\r\n          originalEvents={this.state.originalEvents}\r\n          dateObject={this.state.todayDateObject}\r\n          today={this.state.today}\r\n          dateContext={this.state.dateContext}\r\n          // selectedDay={this.state.selectedDay}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * This is where the event form is made\r\n   *\r\n   */\r\n  eventFormAbstracted = () => {\r\n    return (\r\n      <Modal.Dialog\r\n        style={{\r\n          borderRadius: \"15px\",\r\n          boxShadow:\r\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n          marginLeft: \"35px\",\r\n          width: \"350px\",\r\n          marginTop: \"0\",\r\n        }}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          onHide={() => {\r\n            this.setState({\r\n              dayEventSelected: false,\r\n              repeatOptionDropDown: \"Does not repeat\",\r\n            });\r\n          }}\r\n        >\r\n          <Modal.Title>\r\n            <h5 className=\"normalfancytext\">Event Form</h5>{\" \"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {\r\n            this.state.showRepeatModal && this.repeatModal()\r\n            // <RepeatModal\r\n            //   closeRepeatModal={this.closeRepeatModal}\r\n            //   todayObject={this.state.todayDateObject}\r\n            //   newEventStart0={this.state.newEventStart0}\r\n            // />\r\n          }\r\n          {this.state.showDeleteRecurringModal && this.deleteRecurringModal()}\r\n          {this.state.showEditRecurringModal && this.editRecurringModal()}\r\n          {this.eventFormInputArea()}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col style={{ float: \"right\", marginBottom: \"10px\" }}>\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  onClick={() => {\r\n                    this.openRepeatModal();\r\n                    console.log(\"repeating\", this.state.newEventStart0);\r\n                  }}\r\n                >\r\n                  Repeating Options\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col style={this.state.isEvent ? { display: \"none\" } : {}} xs={4}>\r\n                <Button\r\n                  onClick={this.handleSubmit}\r\n                  variant=\"info\"\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n              <Col\r\n                style={\r\n                  this.state.isEvent\r\n                    ? { marginTop: \"0px\" }\r\n                    : { display: \"none\" }\r\n                }\r\n                xs={4}\r\n              >\r\n                <Button\r\n                  onClick={(e) =>\r\n                    this.state.newEventRecurringID\r\n                      ? this.openEditRecurringModal()\r\n                      : this.updateEventClick(e)\r\n                  }\r\n                  className=\"btn btn-info\"\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Button variant=\"secondary\" onClick={this.hideEventForm}>\r\n                  Cancel\r\n                </Button>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Button\r\n                  style={this.state.isEvent ? {} : { display: \"none\" }}\r\n                  variant=\"danger\"\r\n                  onClick={() =>\r\n                    this.state.newEventRecurringID\r\n                      ? this.openDeleteRecurringModal()\r\n                      : this.deleteSubmit()\r\n                  }\r\n                >\r\n                  {\" \"}\r\n                  Delete\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  };\r\n\r\n  repeatModal = () => {\r\n    // const [title, setTitle] = useState(\"DAY\");\r\n    // const [monthly, setMonthly] = useState(\"Monthly on day 13\");\r\n    // const [endDate, setEndDate] = useState(this.state.newEventStart0);\r\n    // const [inputValue, setInputValue] = useState(1);\r\n\r\n    // this.state.repeatEndDate = this.state.newEventStart0;\r\n\r\n    const week_days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n\r\n    const d = new Date();\r\n\r\n    // Custom styles\r\n    const modalStyle = {\r\n      position: \"absolute\",\r\n      zIndex: \"5\",\r\n      left: \"50%\",\r\n      top: \"50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      width: \"400px\",\r\n    };\r\n\r\n    const inputStyle = {\r\n      padding: \"8px 5px 8px 15px\",\r\n      marginLeft: \"8px\",\r\n      background: \"#F8F9FA\",\r\n      border: \"none\",\r\n      width: \"70px\",\r\n      borderRadius: \"4px\",\r\n      marginRight: \"8px\",\r\n    };\r\n\r\n    const selectStyle = {\r\n      display: \"inline-block\",\r\n    };\r\n\r\n    const weekStyle = {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      marginTop: \"10px\",\r\n    };\r\n\r\n    // const radioInputStyle = { display: \"flex\", alignItems: \"center\" };\r\n\r\n    // onClick event handler for the circles\r\n    const selectedDot = (e, index) => {\r\n      let curClass = e.target.classList;\r\n      if (curClass.contains(\"selected\")) {\r\n        curClass.remove(\"selected\");\r\n        const newByDay = { ...this.state.byDay_temp, [index]: \"\" };\r\n        this.setState({\r\n          byDay_temp: newByDay,\r\n        });\r\n      } else {\r\n        curClass.add(\"selected\");\r\n        const newByDay = {\r\n          ...this.state.byDay_temp,\r\n          [index]: week_days[index],\r\n        };\r\n        this.setState({\r\n          byDay_temp: newByDay,\r\n        });\r\n      }\r\n    };\r\n\r\n    let selectedDays = [];\r\n    for (let [key, value] of Object.entries(this.state.byDay_temp)) {\r\n      if (value !== \"\") selectedDays.push(key);\r\n    }\r\n    // If selected repeat every week, the following shows.\r\n    const weekSelected = (\r\n      <>\r\n        Repeat On\r\n        <div style={weekStyle}>\r\n          {week_days.map((day, i) => {\r\n            if (selectedDays.includes(i.toString())) {\r\n              return (\r\n                <span\r\n                  key={i}\r\n                  className=\"dot selected\"\r\n                  onClick={(e) => selectedDot(e, i)}\r\n                >\r\n                  {day.charAt(0)}\r\n                </span>\r\n              );\r\n            } else {\r\n              return (\r\n                <span\r\n                  key={i}\r\n                  className=\"dot\"\r\n                  onClick={(e) => selectedDot(e, i)}\r\n                >\r\n                  {day.charAt(0)}\r\n                </span>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n\r\n    // If selected repeat every month, the following shows.\r\n    // const monthSelected = (\r\n    //   <DropdownButton\r\n    //     title={this.state.repeatMonthlyDropDown}\r\n    //     variant=\"light\"\r\n    //     style={{ marginTop: \"20px\" }}\r\n    //   >\r\n    //     <Dropdown.Item\r\n    //       eventKey=\"Monthly on day 13\"\r\n    //       onSelect={eventKey => this.handleRepeatMonthlyDropDown(eventKey)}\r\n    //     >\r\n    //       Monthly on day 13\r\n    //     </Dropdown.Item>\r\n    //     <Dropdown.Item\r\n    //       eventKey=\"Monthly on the second Friday\"\r\n    //       onSelect={eventKey => this.handleRepeatMonthlyDropDown(eventKey)}\r\n    //     >\r\n    //       Monthly on the second Friday\r\n    //     </Dropdown.Item>\r\n    //   </DropdownButton>\r\n    // );\r\n\r\n    return (\r\n      <Modal.Dialog style={modalStyle}>\r\n        <Modal.Header closeButton onHide={this.closeRepeatModal}>\r\n          <Modal.Title>\r\n            <h5 className=\"normalfancytext\">Repeating Options</h5>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                marginLeft: \"5px\",\r\n              }}\r\n            >\r\n              Repeat every\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"10000\"\r\n                value={this.state.repeatInputValue_temp}\r\n                style={inputStyle}\r\n                onChange={(e) => this.handleRepeatInputValue(e.target.value)}\r\n              />\r\n              <DropdownButton\r\n                title={this.state.repeatDropDown_temp}\r\n                style={selectStyle}\r\n                variant=\"light\"\r\n              >\r\n                <Dropdown.Item\r\n                  eventKey=\"DAY\"\r\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\r\n                >\r\n                  day\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  eventKey=\"WEEK\"\r\n                  onSelect={(eventKey) =>\r\n                    this.handleRepeatDropDown(eventKey, week_days)\r\n                  }\r\n                >\r\n                  week\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  eventKey=\"MONTH\"\r\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\r\n                >\r\n                  month\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  eventKey=\"YEAR\"\r\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\r\n                >\r\n                  year\r\n                </Dropdown.Item>\r\n              </DropdownButton>\r\n            </Form.Group>\r\n            <Form.Group style={{ marginLeft: \"5px\" }}>\r\n              {this.state.repeatDropDown_temp === \"WEEK\" && weekSelected}\r\n            </Form.Group>\r\n            {/* {this.state.repeatDropDown === \"MONTH\" && monthSelected} */}\r\n            <Form.Group\r\n              style={{\r\n                height: \"140px\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-between\",\r\n                marginTop: \"20px\",\r\n                marginLeft: \"5px\",\r\n              }}\r\n              className=\"repeat-form\"\r\n              onChange={(e) => {\r\n                if (e.target.type === \"radio\") {\r\n                  this.setState({\r\n                    repeatRadio_temp: e.target.value,\r\n                  });\r\n                }\r\n              }}\r\n            >\r\n              Ends\r\n              <Form.Check type=\"radio\">\r\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\r\n                  <Form.Check.Input\r\n                    type=\"radio\"\r\n                    value=\"Never\"\r\n                    name=\"radios\"\r\n                    defaultChecked={\r\n                      this.state.repeatRadio_temp === \"Never\" && true\r\n                    }\r\n                  />\r\n                  Never\r\n                </Form.Check.Label>\r\n              </Form.Check>\r\n              <Form.Check type=\"radio\">\r\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\r\n                  <Form.Check.Input\r\n                    type=\"radio\"\r\n                    name=\"radios\"\r\n                    value=\"On\"\r\n                    style={{ marginTop: \"10px\" }}\r\n                    defaultChecked={\r\n                      this.state.repeatRadio_temp === \"On\" && true\r\n                    }\r\n                  />\r\n                  On\r\n                  <DatePicker\r\n                    className=\"date-picker-btn btn btn-light\"\r\n                    selected={this.state.repeatEndDate_temp}\r\n                    onChange={(date) => this.handleRepeatEndDate(date)}\r\n                  ></DatePicker>\r\n                </Form.Check.Label>\r\n              </Form.Check>\r\n              <Form.Check type=\"radio\">\r\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\r\n                  <Form.Check.Input\r\n                    type=\"radio\"\r\n                    name=\"radios\"\r\n                    value=\"After\"\r\n                    style={{ marginTop: \"12px\" }}\r\n                    defaultChecked={\r\n                      this.state.repeatRadio_temp === \"After\" && true\r\n                    }\r\n                  />\r\n                  After\r\n                  <span style={{ marginLeft: \"60px\" }}>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      max=\"10000\"\r\n                      value={this.state.repeatOccurrence_temp}\r\n                      onChange={(e) =>\r\n                        this.handleRepeatOccurrence(e.target.value)\r\n                      }\r\n                      style={inputStyle}\r\n                      className=\"input-exception\"\r\n                    />\r\n                    occurrence\r\n                  </span>\r\n                </Form.Check.Label>\r\n              </Form.Check>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.closeRepeatModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.saveRepeatChanges}>\r\n            Save changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  };\r\n\r\n  openEditRecurringModal = () => {\r\n    console.log(\"openeditrecurringmodal called\");\r\n    this.setState((prevState) => {\r\n      return { showEditRecurringModal: !prevState.showEditRecurringModal };\r\n    });\r\n  };\r\n\r\n  closeEditRecurringModal = () => {\r\n    this.setState({\r\n      showEditRecurringModal: false,\r\n    });\r\n  };\r\n\r\n  openDeleteRecurringModal = () => {\r\n    console.log(\"opendeleterecurringmodal called\");\r\n    this.setState((prevState) => {\r\n      return { showDeleteRecurringModal: !prevState.showDeleteRecurringModal };\r\n    });\r\n  };\r\n\r\n  closeDeleteRecurringModal = () => {\r\n    this.setState({\r\n      showDeleteRecurringModal: false,\r\n    });\r\n    // if (!this.state.repeatOption) {\r\n    //   this.setState({\r\n    //     repeatOptionDropDown: \"Does not repeat\",\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  deleteRecurring = () => {\r\n    const {\r\n      deleteRecurringOption,\r\n      newEventRecurringID,\r\n      newEventStart0,\r\n      recurrenceRule,\r\n    } = this.state;\r\n    if (deleteRecurringOption === \"This event\") {\r\n      this.deleteSubmit();\r\n    } else if (deleteRecurringOption === \"This and following events\") {\r\n      let untilSubString = \"\";\r\n      let untilIndex = recurrenceRule.indexOf(\"UNTIL\");\r\n      if (untilIndex !== -1) {\r\n        untilSubString = recurrenceRule.substring(untilIndex);\r\n      }\r\n      if (untilSubString.includes(\";\")) {\r\n        let endUntilIndex = untilSubString.indexOf(\";\");\r\n        untilSubString = untilSubString.substring(6, endUntilIndex);\r\n      } else if (untilSubString) {\r\n        untilSubString = untilSubString = untilSubString.substring(6);\r\n      }\r\n      axios\r\n        .get(\"/getRecurringEventInstances\", {\r\n          params: {\r\n            recurringEventId: newEventRecurringID,\r\n            timeMin: newEventStart0,\r\n            timeMax: moment(untilSubString).toISOString(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          res.data.map((event) => {\r\n            axios\r\n              .delete(\"/deleteRecurringEvent\", {\r\n                params: {\r\n                  eventId: event.id,\r\n                },\r\n              })\r\n              .then((res) => {\r\n                this.setState({\r\n                  dayEventSelected: false,\r\n                  showDeleteRecurringModal: false,\r\n                });\r\n                this.updateEventsArray();\r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          });\r\n        });\r\n\r\n      // axios\r\n      //   .delete(\"/\")\r\n      // axios\r\n      // .post(\"/deleteEvent\", {\r\n      //   ID: this.state.newEventID,\r\n      // })\r\n      // .then((response) => {\r\n      //   this.setState({\r\n      //     dayEventSelected: false,\r\n      //   });\r\n      //   this.updateEventsArray();\r\n      // })\r\n      // .catch(function (error) {\r\n      //   console.log(error);\r\n      // });\r\n    } else if (deleteRecurringOption === \"All events\") {\r\n      axios\r\n        .post(\"/deleteEvent\", {\r\n          ID: newEventRecurringID,\r\n        })\r\n        .then((response) => {\r\n          this.setState({\r\n            dayEventSelected: false,\r\n            showDeleteRecurringModal: false,\r\n          });\r\n          this.updateEventsArray();\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  editRecurringModal = () => {\r\n    const modalStyle = {\r\n      position: \"absolute\",\r\n      left: \"50%\",\r\n      zIndex: \"5\",\r\n      top: \"50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      width: \"400px\",\r\n    };\r\n\r\n    return (\r\n      <Modal.Dialog style={modalStyle}>\r\n        <Modal.Header closeButton onHide={this.closeEditRecurringModal}>\r\n          <Modal.Title>\r\n            <h5 className=\"normalfancytext\">Edit Recurring Event</h5>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body\r\n          style={{\r\n            // padding: \"85px 0\",\r\n            height: \"250px\",\r\n            margin: \"auto\",\r\n          }}\r\n        >\r\n          <Form\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Form.Group\r\n              style={{\r\n                height: \"60%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n              }}\r\n              className=\"delete-repeat-form\"\r\n              onChange={(e) => {\r\n                if (e.target.type === \"radio\") {\r\n                  this.setState({\r\n                    editRecurringOption: e.target.value,\r\n                  });\r\n                }\r\n              }}\r\n            >\r\n              {this.state.newEvent.summary !== this.state.newEventName &&\r\n                !this.state.repeatOption && (\r\n                  <Form.Check type=\"radio\">\r\n                    <Form.Check.Label style={{ marginLeft: \"5px\" }}>\r\n                      <Form.Check.Input\r\n                        type=\"radio\"\r\n                        value=\"This event\"\r\n                        name=\"radios\"\r\n                        defaultChecked={\r\n                          this.state.editRecurringOption === \"This event\" &&\r\n                          true\r\n                        }\r\n                      />\r\n                      This event\r\n                    </Form.Check.Label>\r\n                  </Form.Check>\r\n                )}\r\n              <Form.Check type=\"radio\">\r\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\r\n                  <Form.Check.Input\r\n                    type=\"radio\"\r\n                    value=\"This and following events\"\r\n                    name=\"radios\"\r\n                    defaultChecked={\r\n                      this.state.editRecurringOption ===\r\n                        \"This and following events\" && true\r\n                    }\r\n                  />\r\n                  This and following events\r\n                </Form.Check.Label>\r\n              </Form.Check>\r\n              <Form.Check type=\"radio\">\r\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\r\n                  <Form.Check.Input\r\n                    type=\"radio\"\r\n                    value=\"All events\"\r\n                    name=\"radios\"\r\n                    defaultChecked={\r\n                      this.state.editRecurringOption === \"All events\" && true\r\n                    }\r\n                  />\r\n                  All events\r\n                </Form.Check.Label>\r\n              </Form.Check>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.closeEditRecurringModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.updateEventClick}>\r\n            OK\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  };\r\n\r\n  deleteRecurringModal = () => {\r\n    const modalStyle = {\r\n      position: \"absolute\",\r\n      left: \"50%\",\r\n      zIndex: \"5\",\r\n      top: \"50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      width: \"400px\",\r\n    };\r\n\r\n    return (\r\n      <Modal.Dialog style={modalStyle}>\r\n        <Modal.Header closeButton onHide={this.closeDeleteRecurringModal}>\r\n          <Modal.Title>\r\n            <h5 className=\"normalfancytext\">Delete Recurring Event</h5>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body\r\n          style={{\r\n            // padding: \"85px 0\",\r\n            height: \"250px\",\r\n            margin: \"auto\",\r\n          }}\r\n        >\r\n          <Form\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Form.Group\r\n              style={{\r\n                height: \"60%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-around\",\r\n              }}\r\n              className=\"delete-repeat-form\"\r\n              onChange={(e) => {\r\n                if (e.target.type === \"radio\") {\r\n                  this.setState({\r\n                    deleteRecurringOption: e.target.value,\r\n                  });\r\n                }\r\n              }}\r\n            >\r\n              <Form.Check type=\"radio\">\r\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\r\n                  <Form.Check.Input\r\n                    type=\"radio\"\r\n                    value=\"This event\"\r\n                    name=\"radios\"\r\n                    defaultChecked={\r\n                      this.state.deleteRecurringOption === \"This event\" && true\r\n                    }\r\n                  />\r\n                  This event\r\n                </Form.Check.Label>\r\n              </Form.Check>\r\n              <Form.Check type=\"radio\">\r\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\r\n                  <Form.Check.Input\r\n                    type=\"radio\"\r\n                    value=\"This and following events\"\r\n                    name=\"radios\"\r\n                    defaultChecked={\r\n                      this.state.deleteRecurringOption ===\r\n                        \"This and following events\" && true\r\n                    }\r\n                  />\r\n                  This and following events\r\n                </Form.Check.Label>\r\n              </Form.Check>\r\n              <Form.Check type=\"radio\">\r\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\r\n                  <Form.Check.Input\r\n                    type=\"radio\"\r\n                    value=\"All events\"\r\n                    name=\"radios\"\r\n                    defaultChecked={\r\n                      this.state.deleteRecurringOption === \"All events\" && true\r\n                    }\r\n                  />\r\n                  All events\r\n                </Form.Check.Label>\r\n              </Form.Check>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.closeDeleteRecurringModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.deleteRecurring}>\r\n            OK\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    );\r\n  };\r\n\r\n  eventFormInputArea = () => {\r\n    return (\r\n      <Form>\r\n        <Row>\r\n          <Col>\r\n            <div style={{ width: \"300px\" }}>\r\n              <Form.Group>\r\n                <Form.Label>Event Name</Form.Label>\r\n                <Form.Control\r\n                  value={this.state.newEventName}\r\n                  onChange={this.handleNameChange}\r\n                  type=\"text\"\r\n                  placeholder=\"Title\"\r\n                />\r\n                <div style={{ color: \"red\" }}>\r\n                  {\" \"}\r\n                  {this.state.showNoTitleError}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group value={this.state.newEventStart0} controlId=\"Y\">\r\n                <Form.Label>Start Time</Form.Label> <br />\r\n                {this.startTimePicker()}\r\n              </Form.Group>\r\n              <Form.Group value={this.state.newEventEnd0} controlId=\"X\">\r\n                <Form.Label>End Time</Form.Label>\r\n                <br />\r\n                {this.endTimePicker()}\r\n                <div style={{ color: \"red\" }}> {this.state.showDateError}</div>\r\n              </Form.Group>\r\n              <Form.Group style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <Form.Label>Repeating Options</Form.Label>\r\n                <DropdownButton\r\n                  className=\"repeatOptionDropDown\"\r\n                  // onClick={this.openRepeatModal}\r\n                  title={this.state.repeatOptionDropDown}\r\n                  variant=\"light\"\r\n                >\r\n                  <Dropdown.Item\r\n                    eventKey=\"Does not repeat\"\r\n                    onSelect={(eventKey) =>\r\n                      this.setState({\r\n                        repeatOptionDropDown: eventKey,\r\n                        repeatOption: false,\r\n                      })\r\n                    }\r\n                  >\r\n                    Does not repeat\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    eventKey=\"Custom...\"\r\n                    onSelect={(eventKey) => {\r\n                      this.openRepeatModal();\r\n                      // this.setState({ repeatOptionDropDown: eventKey });\r\n                    }}\r\n                  >\r\n                    Custom...\r\n                  </Dropdown.Item>\r\n                </DropdownButton>\r\n              </Form.Group>\r\n              <Form.Group value={\"Extra Slot\"}>\r\n                <Form.Label>Guests</Form.Label>\r\n                <Form.Control\r\n                  value={this.state.newEventGuests}\r\n                  onChange={this.handleGuestChange}\r\n                  type=\"email\"\r\n                  placeholder=\"example@gmail.com\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"Location\">\r\n                <Form.Label>Location:</Form.Label>\r\n                <Form.Control\r\n                  value={this.state.newEventLocation}\r\n                  onChange={this.handleLocationChange}\r\n                  type=\"text\"\r\n                  placeholder=\"Location\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Notifications:</Form.Label>\r\n                <Row>\r\n                  <Col style={{ paddingRight: \"0px\" }}>\r\n                    <Form.Control\r\n                      value={this.state.newEventNotification}\r\n                      onChange={this.handleNotificationChange}\r\n                      type=\"number\"\r\n                      placeholder=\"5\"\r\n                      style={{ width: \"70px\", marginTop: \".25rem\" }}\r\n                    />\r\n                  </Col>\r\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\r\n                    <Form.Text style={{ fontSize: \"65%\" }}>\r\n                      {\" \"}\r\n                      Min Before Start Time\r\n                    </Form.Text>\r\n                  </Col>\r\n                </Row>\r\n                <Row style={{ marginTop: \"15px\" }}>\r\n                  <Col style={{ paddingRight: \"0px\" }}>\r\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\r\n                  </Col>\r\n                  <Col xs={8}>\r\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\r\n                      <Form.Check.Input\r\n                        type=\"checkbox\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      />\r\n\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"1\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message Here\"\r\n                        style={{ marginLeft: \"10px\" }}\r\n                      />\r\n                    </Form.Check>\r\n                  </Col>\r\n                </Row>\r\n                <Row style={{ marginTop: \"10px\" }}>\r\n                  <Col style={{ paddingRight: \"0px\" }}>\r\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\r\n                  </Col>\r\n                  <Col xs={8}>\r\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\r\n                      <Form.Check.Input\r\n                        type=\"checkbox\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      />\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"1\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message Here\"\r\n                        style={{ marginLeft: \"10px\" }}\r\n                      />\r\n                    </Form.Check>\r\n                  </Col>\r\n                </Row>\r\n                <Row style={{ marginTop: \"10px\" }}>\r\n                  <Col style={{ paddingRight: \"0px\" }}>\r\n                    <Form.Control\r\n                      // value={this.state.newEventNotification}\r\n                      // onChange={this.handleNotificationChange}\r\n                      type=\"number\"\r\n                      placeholder=\"30\"\r\n                      style={{ width: \"70px\", marginTop: \".25rem\" }}\r\n                    />\r\n                  </Col>\r\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\r\n                    <Form.Text style={{ fontSize: \"65%\" }}>\r\n                      {\" \"}\r\n                      Min After Start Time\r\n                    </Form.Text>\r\n                  </Col>\r\n                </Row>\r\n                <Row style={{ marginTop: \"15px\" }}>\r\n                  <Col style={{ paddingRight: \"0px\" }}>\r\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\r\n                  </Col>\r\n                  <Col xs={8}>\r\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\r\n                      <Form.Check.Input\r\n                        type=\"checkbox\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      />\r\n\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"1\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message Here\"\r\n                        style={{ marginLeft: \"10px\" }}\r\n                      />\r\n                    </Form.Check>\r\n                  </Col>\r\n                </Row>\r\n                <Row style={{ marginTop: \"10px\" }}>\r\n                  <Col style={{ paddingRight: \"0px\" }}>\r\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\r\n                  </Col>\r\n                  <Col xs={8}>\r\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\r\n                      <Form.Check.Input\r\n                        type=\"checkbox\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      />\r\n\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"1\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message Here\"\r\n                        style={{ marginLeft: \"10px\" }}\r\n                      />\r\n                    </Form.Check>\r\n                  </Col>\r\n                </Row>\r\n                <Row style={{ marginTop: \"10px\" }}>\r\n                  <Col style={{ paddingRight: \"0px\" }}>\r\n                    <Form.Control\r\n                      // value={this.state.newEventNotification}\r\n                      // onChange={this.handleNotificationChange}\r\n                      type=\"number\"\r\n                      placeholder=\"5\"\r\n                      style={{ width: \"70px\", marginTop: \".25rem\" }}\r\n                    />\r\n                  </Col>\r\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\r\n                    <Form.Text style={{ fontSize: \"65%\" }}>\r\n                      {\" \"}\r\n                      Min After End Time\r\n                    </Form.Text>\r\n                  </Col>\r\n                </Row>\r\n                <Row style={{ marginTop: \"15px\" }}>\r\n                  <Col style={{ paddingRight: \"0px\" }}>\r\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\r\n                  </Col>\r\n                  <Col xs={8}>\r\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\r\n                      <Form.Check.Input\r\n                        type=\"checkbox\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      />\r\n\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"1\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message Here\"\r\n                        style={{ marginLeft: \"10px\" }}\r\n                      />\r\n                    </Form.Check>\r\n                  </Col>\r\n                </Row>\r\n                <Row style={{ marginTop: \"10px\" }}>\r\n                  <Col style={{ paddingRight: \"0px\" }}>\r\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\r\n                  </Col>\r\n                  <Col xs={8}>\r\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\r\n                      <Form.Check.Input\r\n                        type=\"checkbox\"\r\n                        style={{ width: \"20px\", height: \"20px\" }}\r\n                      />\r\n\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"1\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message Here\"\r\n                        style={{ marginLeft: \"10px\" }}\r\n                      />\r\n                    </Form.Check>\r\n                  </Col>\r\n                </Row>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"Description\">\r\n                <Form.Label>Description:</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"3\"\r\n                  value={this.state.newEventDescription}\r\n                  onChange={this.handleDescriptionChange}\r\n                  type=\"text\"\r\n                  placeholder=\"Description\"\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  notifyBefore = (e) => {\r\n    console.log(\"this is result of checked:\");\r\n    console.log(e.target.checked);\r\n    let beforeChecked = e.target.checked;\r\n    this.setState({ notificationBeforeChecked: beforeChecked });\r\n  };\r\n\r\n  startTimePicker = () => {\r\n    // const [startDate, setStartDate] = useState(new Date());\r\n    return (\r\n      <DatePicker\r\n        className=\"form-control\"\r\n        type=\"text\"\r\n        selected={this.state.newEventStart0}\r\n        onChange={(date) => {\r\n          this.setState(\r\n            {\r\n              newEventStart0: date,\r\n            },\r\n            () => {\r\n              console.log(\"starttimepicker\", this.state.newEventStart0);\r\n            }\r\n          );\r\n        }}\r\n        showTimeSelect\r\n        timeIntervals={15}\r\n        timeCaption=\"time\"\r\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n      />\r\n    );\r\n  };\r\n\r\n  endTimePicker = () => {\r\n    // const [startDate, setStartDate] = useState(new Date());\r\n    return (\r\n      <DatePicker\r\n        className=\"form-control\"\r\n        type=\"text\"\r\n        style={{ width: \"100%\" }}\r\n        selected={this.state.newEventEnd0}\r\n        onChange={(date) => {\r\n          this.setState(\r\n            {\r\n              newEventEnd0: date,\r\n            },\r\n            () => {\r\n              console.log(this.state.newEventEnd0);\r\n            }\r\n          );\r\n        }}\r\n        showTimeSelect\r\n        timeIntervals={15}\r\n        timeCaption=\"time\"\r\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n      />\r\n    );\r\n  };\r\n  /*\r\n  getYear:\r\n  returns the year based on year format\r\n  */\r\n  getYear = () => {\r\n    return this.state.dateContext.format(\"Y\");\r\n  };\r\n\r\n  /*\r\n  getMonth:\r\n  returns the month based on the month of the dateContext\r\n  in english word form\r\n  */\r\n  getMonth = () => {\r\n    return this.state.dateContext.format(\"MMMM\");\r\n  };\r\n\r\n  getDay = () => {\r\n    return this.state.dateContext.format(\"D\");\r\n  };\r\n\r\n  /*\r\n  hideEventForm:\r\n  Hides the create/edit events form when a date or event is clicked\r\n  */\r\n  hideEventForm = (e) => {\r\n    //console.log(\"Tyler says: Hello\");\r\n    this.setState({\r\n      dayEventSelected: false,\r\n      repeatOptionDropDown: \"Does not repeat\",\r\n    });\r\n  };\r\n\r\n  /*\r\nAll functions below will change a variables\r\nwhen there is a change in the event form\r\n*/\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({ newEventName: event.target.value });\r\n  };\r\n\r\n  handleGuestChange = (event) => {\r\n    this.setState({ newEventGuests: event.target.value });\r\n  };\r\n\r\n  handleLocationChange = (event) => {\r\n    this.setState({ newEventLocation: event.target.value });\r\n  };\r\n\r\n  handleNotificationChange = (event) => {\r\n    this.setState({ newEventNotification: event.target.value });\r\n  };\r\n\r\n  handleDescriptionChange = (event) => {\r\n    this.setState({ newEventDescription: event.target.value });\r\n  };\r\n\r\n  /*\r\n  *\r\n  getEvents:\r\n  this essentially gets the events data from google calendar and puts it\r\n  into the proper state variables. Currently the parsed data for full calendar\r\n  is used but the unfiltered data from google calendar API is not used but\r\n  in case we do need it, it's saved in this.state.originalEvents\r\n  *\r\n  *\r\n  */\r\n  getEventsByInterval = (start0, end0) => {\r\n    axios\r\n      .get(\"/getEventsByInterval\", {\r\n        //get normal google calendar data for possible future use\r\n        params: {\r\n          start: start0,\r\n          end: end0,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        var events = response.data;\r\n        this.setState(\r\n          {\r\n            newEventID: \"\",\r\n            newEventName: \"\",\r\n            // newEventStart: \"\",\r\n            // newEventEnd: \"\",\r\n            originalEvents: events,\r\n          },\r\n          () => {\r\n            console.log(\"New Events Arrived\", events);\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error Occurred \" + error);\r\n      });\r\n  };\r\n\r\n  /*\r\n   * getEventsByIntervalDayVersion:\r\n   * gets exactly the days worth of events from the google calendar\r\n   */\r\n  getEventsByIntervalDayVersion = (day) => {\r\n    axios\r\n      .get(\"/getEventsByInterval\", {\r\n        //get normal google calendar data for possible future use\r\n        params: {\r\n          start: day.toString(),\r\n          end: day.toString(),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        var events = response.data;\r\n        this.setState(\r\n          {\r\n            dayEvents: events,\r\n          },\r\n          () => {\r\n            console.log(\"New Events Arrived\", events);\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error Occurred \" + error);\r\n      });\r\n  };\r\n\r\n  //Get and store events by week, take first and last day of the week as parameters as date object\r\n  getEventsByIntervalWeekVersion = (start0, end0) => {\r\n    axios\r\n      .get(\"/getEventsByInterval\", {\r\n        //get normal google calendar data for possible future use\r\n        params: {\r\n          start: start0,\r\n          end: end0,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        var events = response.data;\r\n        this.setState(\r\n          {\r\n            weekEvents: events,\r\n          }\r\n          // () => {\r\n          //   console.log(\"New Events Arrived\");\r\n          //   console.log(this.state.weekEvents)\r\n          // }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error Occurred \" + error);\r\n      });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\n// import { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport MainPage from \"./components/Main.jsx\";\r\n// import Header from './components/Header.jsx'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <header className=\"App-header\"> */}\r\n        {/* <Router> */}\r\n        {/* <Header /> */}\r\n        {/* <div> */}\r\n        <MainPage />\r\n        {/* </div> */}\r\n\r\n        {/* </Router> */}\r\n        {/* </ header> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nReactDOM.render(\r\n<BrowserRouter>\r\n\t<App />\r\n\t</BrowserRouter>\r\n, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}