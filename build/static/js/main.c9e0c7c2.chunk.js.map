{"version":3,"sources":["components/firebase.js","components/ShowNotifications.jsx","components/addNewGRItem.jsx","components/addNewATItem.jsx","components/addNewISItem.jsx","components/DeleteISItem.jsx","components/deleteAT.jsx","components/deleteGR.jsx","components/editGR.jsx","components/editIS.jsx","components/EditAT.jsx","components/ShowATList.jsx","components/Firebasev2.jsx","components/TCal.jsx","components/DayRoutines.jsx","components/DayGoals.jsx","components/DayEvents.jsx","components/WeekEvents.jsx","components/WeekRoutines.jsx","components/WeekGoals.jsx","components/Main.jsx","App.js","registerServiceWorker.js","index.js"],"names":["firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ShowNotifications","console","log","Form","Group","controlId","Row","Col","style","paddingRight","Control","type","placeholder","width","marginTop","xs","paddingLeft","Text","fontSize","Check","Input","height","as","rows","marginLeft","React","Component","AddNewGRItem","props","state","grArr","itemToEdit","title","id","is_persistent","isRoutine","photo","is_complete","is_available","available_end_time","available_start_time","datetime_completed","datetime_started","audio","is_timed","routineDocsPath","firestore","collection","doc","arrPath","getGRDataFromFB","get","then","exists","x","data","setState","catch","error","alert","newInputSubmit","addNewDoc","add","ref","newArr","ATArray","temp","push","updateEntireArray","update","refresh","this","Modal","Dialog","Header","closeButton","onHide","closeModal","Title","className","Body","value","onChange","e","stopPropagation","target","name","checked","Footer","Button","variant","onClick","AddNewATItem","ATItem","fbPath","hideNewATModal","newActionTitle","arr","AddNewISItem","atArr","newInstructionTitle","handleInputChange","ISArray","ISItem","hideNewISModal","pop","DeleteISItem","submitRequest","items","i","deleteIndex","slice","concat","confirmation","window","confirm","onMouseOver","event","color","onMouseOut","marginRight","icon","faTrashAlt","size","deleteAT","tempdeleteArrPortion","Array","Item","deleteArrPortion","deleteGR","Path","editGR","FBPath","showEditModal","startTimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","selected","Date","date","editGRForm","border","padding","preventDefault","onKeyDown","keyCode","showIcon","faEdit","editIS","editISForm","marginLeftV","editAT","editATForm","ShowATList","iconShowATModal","faList","faSlash","FirebaseV2","firebaseRootPath","originalGoalsAndRoutineArr","goals","routines","singleGR","show","singleAT","singleATitemArr","singleISitemArr","modalWidth","addNewGRModalShow","addNewATModalShow","addNewISModalShow","thumbnailWidth","thumbnailHeight","thumbnailWidthV2","thumbnailHeightV2","availabilityColorCode","refreshATItem","resArr","createListofAT","refreshISItem","createListofIS","singleAt","grabFireBaseRoutinesGoalsData","routine","goal","onInputChange","getATList","persist","docRef","A","res","tempID","tempPhoto","tempTitle","tempAvailable","key","ListGroup","action","ATonClickEvent","marginBottom","margin","src","alt","faUser","faUserAltSlash","class","ISonClickEvent","GRonClickEvent","stepsInstructionArrayPath","findIndexByID","getRoutines","displayRoutines","tempPersist","formatDateTime","getGoals","displayGoals","getGoalsStatus","isComplete","textAlign","display","justifyContent","alignItems","faTrophy","faRunning","getRoutinesStatus","abstractedGoalsList","borderRadius","boxShadow","closeGoal","AddNewGRModalAbstracted","abstractedActionsAndTaskList","overflow","abstractedRoutineList","closeRoutine","abstractedInstructionsAndStepsList","addNewTaskInputBox","InputGroup","FormControl","Append","abstractedRoutineGoalStatusList","closeRoutineGoalModal","addNewGoalInputBox","str","formattedStr","replace","moment","format","displayCompletedGoals","displayCompletedRoutines","showRoutineGoalModal","sm","md","lg","showRoutine","showGoal","TylersCalendarv1","weekdays","weekdaysShort","year","dateContext","currentDay","dateObject","month","daysInMonth","firstDayOfMonth","startOf","getEventsforDay","tempStart","tempEnd","originalEvents","j","start","dateTime","end","startDate","getDate","endDate","onEventClick","background","textShadow","summary","eventClick","onDayClick","d","handleDateClick","onExpandClick","handleExpandClick","map","day","blanks","sameDate","bind","parseInt","totalSlots","cells","forEach","row","daysinmonth","tableLayout","DayRoutines","dayView","borderTop","pxPerHour","RoutineClicked","dayRoutineClick","getEventItem","hour","sameTimeEventCount","itemWidth","eventBoxSize","addmarginLeft","start_dateStr","toISOString","split","shift","start_timeStr","start_timeAndDate","toDate","end_dateStr","end_timeStr","end_timeAndDate","tempStartTime","tempEndTime","getHours","minsToMarginTop","getMinutes","pxPerHourForConversion","newElement","data-toggle","data-placement","zIndex","position","dayViewItems","dayEvents","todayDateObject","Container","DayGoals","GoalClicked","dayGoalClick","DayEvents","timeDisplay","eventClickDayView","curDate","hourDiff","float","minDiff","marginFromLeft","WeekEvents","weekViewItems","overflowX","overflowY","WeekRoutines","WeekGoals","MainPage","handleRepeatDropDown","eventKey","week_days","newByDay","byDay_temp","newEventStart0","getDay","repeatDropDown_temp","handleRepeatMonthlyDropDown","repeatMonthlyDropDown","handleRepeatEndDate","repeatEndDate_temp","repeatEndDate","handleRepeatInputValue","repeatInputValue_temp","handleRepeatOccurrence","repeatOccurrence_temp","getThisMonthEvents","axios","params","response","events","handleDayEventClick","guestList","attendees","reduce","nextGuest","email","newEventID","newEventEnd0","newEventName","newEventGuests","newEventLocation","location","newEventNotification","reminders","overrides","minutes","newEventDescription","description","dayEventSelected","isEvent","showNoTitleError","showDateError","showRepeatModal","showAboutModal","repeatOption","repeatOptionDropDown","repeatDropDown","repeatInputValue","repeatOccurrence","repeatRadio","repeatRadio_temp","byDay","0","1","2","3","4","5","6","handleEventClick","handleDateClickOnDayView","arg","newStart","setHours","newEnd","validate","titleError","dayError","startDay","endDay","startMonth","getUTCMonth","endMonth","startYear","getFullYear","endYear","startHour","endHour","newDate","calendarView","updateEventsArray","handleSubmit","createEvent","updateEventClick","updateRequest","index","formattedEmail","emailList","match","guests","responseStatus","minutesNotification","updatedEvent","timeZone","Intl","DateTimeFormat","resolvedOptions","recurrence","defineRecurrence","method","useDefault","sequence","put","extra","ID","frequency","rrule","exdate","selectedDays","Object","entries","toString","unshift","substring","toUpperCase","repeat_end_date","deleteSubmit","post","newTitle","newEvent","reminderTime","nextMonth","assign","prevMonth","subtract","nextDay","prevDay","startObject","clone","endObject","endOf","getEventsByInterval","getEventsByIntervalDayVersion","openRepeatModal","prevState","closeRepeatModal","saveRepeatChanges","join","showDayViewOrAboutView","eventFormAbstracted","aboutFormAbstracted","showCalendarView","calendarAbstracted","dayViewAbstracted","weekViewAbstracted","backgroundColor","faChevronLeft","getMonth","getYear","faChevronRight","toggleShowRoutine","toggleShowGoal","showRoutineModal","showGoalModal","showEventsFormbyCreateNewEventButton","changeCalendarView","view","abstractedMainEventGRShowButtons","DropdownButton","top","Dropdown","paddingBottom","today","faImage","for","handleFileSelected","Label","fluid","hideAboutForm","imageUploadHandler","files","repeatModal","eventFormInputArea","hideEventForm","inputStyle","selectedDot","curClass","classList","contains","remove","weekSelected","includes","charAt","left","transform","min","max","onSelect","flexDirection","defaultChecked","handleNameChange","endTimePicker","handleGuestChange","handleLocationChange","handleNotificationChange","handleDescriptionChange","notifyBefore","beforeChecked","notificationBeforeChecked","start0","end0","repeatSummary","onlyCal","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c9e0c7c2.chunk.js","sourcesContent":["import * as firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDBgPVcjoV8LbR4hDA7tm3UoP0abMw8guE\",\n    authDomain: \"project-caitlin-c71a9.firebaseapp.com\",\n    databaseURL: \"https://project-caitlin-c71a9.firebaseio.com\",\n    projectId: \"project-caitlin-c71a9\",\n    storageBucket: \"project-caitlin-c71a9.appspot.com\",\n    messagingSenderId: \"711685546849\",\n    appId: \"1:711685546849:web:5c7a982748eb3bec35db20\",\n    measurementId: \"G-DCQF4LY5ZH\"\n  };\n\nexport default !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\n","import React from 'react';\nimport { Form,Row,Col} from \"react-bootstrap\";\n\n\nclass ShowNotifications extends React.Component{\n    render(){\n        console.log(\"I am in the component\");\n        return (\n            <div> \n                <Form.Group controlId=\"Notification\">\n                <Row>\n                  <Col style = {{paddingRight: \"0px\" }}>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"5\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n                    />\n                  </Col>\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min Before Start Time</Form.Text>\n                  </Col>\n                </Row>\n                <Row style = {{ marginTop:\"15px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n           \n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\" }}>\n                    <Form.Control\n                      // value={this.state.newEventNotification}\n                      // onChange={this.handleNotificationChange}\n                      type=\"number\"\n                      placeholder=\"30\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n                    />\n                  </Col>\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min After Start Time</Form.Text>\n                  </Col>\n                </Row>\n                <Row style = {{ marginTop:\"15px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                     \n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}} >\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                     \n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\" }}>\n                    <Form.Control\n                      // value={this.state.newEventNotification}\n                      // onChange={this.handleNotificationChange}\n                      type=\"number\"\n                      placeholder=\"5\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n                    />\n                  </Col>\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min After End Time</Form.Text>\n                  </Col>\n                </Row>\n                <Row style = {{ marginTop:\"15px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                     \n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}} >\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                     \n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n              \n              </Form.Group>\n            </div>\n        );\n    }\n}\n\nexport default ShowNotifications;","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport { Button, Modal} from \"react-bootstrap\";\nimport ShowNotifications from \"./ShowNotifications\"\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\nexport default class AddNewGRItem extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Is this a Routine? \" + this.props.isRoutine);\n  }\n  state = {\n    grArr: [], //goal, routine original array\n    itemToEdit: {\n      title: \"\",\n      id: \"\",\n      is_persistent: this.props.isRoutine,\n      photo: \"\",\n      is_complete: false,\n      is_available: true,\n      available_end_time: \"23:59:59\",\n      available_start_time: \"00:00:00\",\n      datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      audio: \"\",\n      is_timed: false\n    }, //this is essentially the new item\n    //below are references to firebase directories\n    routineDocsPath: firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(\"7R6hAVmDrNutRkG3sVRy\")\n      .collection(\"goals&routines\"),\n    arrPath: firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(\"7R6hAVmDrNutRkG3sVRy\")\n  };\n\n  componentDidMount() {\n    this.props.isRoutine\n      ? console.log(\"Routine Input\")\n      : console.log(\"Goal Input\");\n\n    this.getGRDataFromFB();\n  }\n\n  getGRDataFromFB = () => {\n    //Grab the goals/routine array from firebase and then store it in state varible grArr\n    console.log(this.state.arrPath);\n    this.state.arrPath\n      .get()\n      .then(doc => {\n        if (doc.exists) {\n          console.log(\"getGRDataFromFB DATA:\");\n          // console.log(doc.data());\n          var x = doc.data();\n          x = x[\"goals&routines\"];\n          console.log(x);\n          this.setState({\n            grArr: x\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document! 2\");\n        }\n      })\n      .catch(function(error) {\n        console.log(\"Error getting document:\", error);\n        alert(\"Error getting document:\", error);\n      });\n  };\n\n  newInputSubmit = () => {\n    if (this.state.itemToEdit.title === \"\") {\n      alert(\"Invalid Input\");\n      return;\n    }\n    this.addNewDoc();\n  };\n\n  addNewDoc = () => {\n    this.state.routineDocsPath\n      .add({\n        title: this.state.itemToEdit.title,\n        \"actions&tasks\": []\n      })\n      .then(ref => {\n        if (ref.id === null) {\n          alert(\"Fail to add new routine / goal item\");\n          return;\n        }\n\n        let newArr = this.props.ATArray;\n        let temp = this.state.itemToEdit;\n        temp.id = ref.id;\n        console.log(\"Added document with ID: \", ref.id);\n        // this.state.grArr.push(temp);\n        newArr.push(temp);\n        this.updateEntireArray(newArr);\n      });\n  };\n\n  //This function will below will essentially take in a array and have a key map to it\n  updateEntireArray = newArr => {\n    // 2. update adds to the document\n    let db = this.state.arrPath;\n    db.update({ \"goals&routines\": newArr }).then(doc => {\n      console.log(\"updateEntireArray Finished\");\n      console.log(doc);\n      this.getGRDataFromFB();\n      if (this.props != null) {\n        console.log(\"refreshing FireBasev2 from AddNewGRItem\");\n        this.props.refresh();\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\n        <Modal.Header closeButton onHide={this.props.closeModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">\n              Add New {this.props.isRoutine ? \"Routine\" : \"Goal\"}\n            </h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <label>Title</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Title\"\n                value={this.state.itemToEdit.title}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.title = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Photo URL \"\n                value={this.state.itemToEdit.photo}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.photo = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\n                value={this.state.itemToEdit.available_start_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_start_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_end_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_end_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n            \n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        // value={this.state.newEventNotification}\n                        // onChange={this.handleNotificationChange}\n                        type=\"number\"\n                        placeholder=\"30\"\n                        style = {{ width:\"70px\", marginTop:\".25rem\", paddingRight:\"0px\"}}\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"0px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n            \n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n              <label className=\"form-check-label\" >Time?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_timed}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  console.log(temp.is_timed);\n                  temp.is_timed = !temp.is_timed;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Available to Caitlin?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Available\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_available}\n                onChange={e => {\n                  e.stopPropagation();\n                  console.log(e.target.checked);\n                  let temp = this.state.itemToEdit;\n                //   console.log(temp.is_available);\n                  temp.is_available = e.target.checked;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            {this.state.itemToEdit.is_available && <ShowNotifications />}\n\n            {/* <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Notify TA?</label>\n\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.notifies_ta}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  console.log(temp.notifies_ta);\n                  temp.notifies_ta = !temp.notifies_ta;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Remind User? </label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.reminds_user}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  console.log(temp.reminds_user);\n                  temp.reminds_user = !temp.reminds_user;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div> */}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.closeModal}>\n            Close\n          </Button>\n          <Button variant=\"info\" onClick={this.newInputSubmit}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import firebase from \"./firebase\";\nimport ShowNotifications from \"./ShowNotifications\"\nimport { Button, Modal } from \"react-bootstrap\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\nexport default class AddNewATItem extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"AddNewATItem constructor\");\n    this.state = {\n      newActionTitle: \"\", //Old delete Later\n      itemToEdit: {\n        id: \"\",\n        title: \"\",\n        photo: \"\",\n        audio: \"\",\n        is_complete: false,\n        is_available: true,\n        available_end_time: \"23:59:59\",\n        available_start_time: \"00:00:00\",\n        datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n        is_timed: false,\n        datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"AddNewATItem did mount\");\n    console.log(this.props.ATItem);\n    console.log(this.props.ATItem.fbPath);\n    console.log(this.props.ATItem.arr);\n    console.log(this.props.ATArray);\n  }\n\n  newInputSubmit = () => {\n    if (this.state.itemToEdit.title === \"\") {\n      alert(\"Invalid Input\");\n      return;\n    }\n    console.log(\"Submitting Input: \" + this.state.itemToEdit.title);\n    this.addNewDoc();\n  };\n\n  addNewDoc = () => {\n    this.props.ATItem.fbPath\n      .collection(\"actions&tasks\")\n      .add({\n        title: this.state.itemToEdit.title,\n        \"instructions&steps\": []\n      })\n      .then(ref => {\n        if (ref.id === null) {\n          alert(\"Fail to add new Action / Task item\");\n          return;\n        }\n        console.log(\"Added document with ID: \", ref.id);\n        let newArr = this.props.ATArray;\n        let temp = this.state.itemToEdit;\n        temp.id = ref.id;\n        newArr.push(temp);\n        console.log(newArr);\n        console.log(\"adding new item\");\n        this.updateEntireArray(newArr);\n      });\n  };\n\n  //This function will below will essentially take in a array and have a key map to it\n  updateEntireArray = newArr => {\n    // 2. update adds to the document\n    this.props.ATItem.fbPath.update({ \"actions&tasks\": newArr }).then(doc => {\n      console.log(\"updateEntireArray Finished\");\n      console.log(doc);\n      if (this.props != null) {\n        this.props.hideNewATModal();\n        console.log(\"refreshing FireBasev2 from AddNewATItem\");\n        this.props.refresh(newArr);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.props.hideNewATModal();\n            console.log(\"closed button clicked\");\n          }}\n        >\n          <Modal.Title>\n            <h2 className=\"normalfancytext\">Add New Task/Action</h2>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* <AddNewGRItem refresh={this.grabFireBaseRoutinesGoalsData} isRoutine={this.state.isRoutine} /> */}\n          <div>\n            <label>Title</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Title\"\n                value={this.state.itemToEdit.title}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.title = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Photo URL \"\n                value={this.state.itemToEdit.photo}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.photo = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\n                value={this.state.itemToEdit.available_start_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_start_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_end_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_end_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        type=\"number\"\n                        placeholder=\"30\"\n                        style = {{ width:\"70px\", marginTop:\".25rem\", paddingRight:\"0px\"}}\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"0px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n\n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n              <label className=\"form-check-label\" >Time?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_timed}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  console.log(temp.is_timed);\n                  temp.is_timed = !temp.is_timed;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Available to Caitlin?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Available\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_available}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  console.log(temp.is_available);\n                  temp.is_available = !temp.is_available;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            {this.state.itemToEdit.is_available && <ShowNotifications />}\n            \n\n            {/* <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Notify TA?</label>\n\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.notifies_ta}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  console.log(temp.notifies_ta);\n                  temp.notifies_ta = !temp.notifies_ta;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Remind User? </label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.reminds_user}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  console.log(temp.reminds_user);\n                  temp.reminds_user = !temp.reminds_user;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div> */}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              this.props.hideNewATModal();\n              console.log(\"closed button clicked\");\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              this.newInputSubmit();\n            }}\n          >\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import firebase from \"./firebase\";\nimport ShowNotifications from \"./ShowNotifications\"\nimport { Button, Modal } from \"react-bootstrap\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\n/**\n *\n * This class is responsible for adding a new elemnt to the\n * firebase database. If it becomes successful then we update\n * the view on the firebasev2\n */\n\nexport default class AddNewISItem extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"AddNewISItem constructor\");\n  }\n\n  state = {\n    atArr: [], //goal, routine original array\n    newInstructionTitle: \"\",\n    itemToEdit: {\n      //new item to add to array\n      id: \"\",\n      title: \"\",\n      photo: \"\",\n      is_complete: false,\n      is_available: true,\n      available_end_time: \"23:59:59\",\n      available_start_time: \"00:00:00\",\n      datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      audio: \"\",\n      is_timed: false\n    }\n  };\n\n  componentDidMount() {\n    console.log(\"AddNewISItem did mount\");\n    console.log(this.props.ISArray);\n    console.log(this.props.ISItem);\n  }\n\n  handleInputChange = e => {\n    console.log(e.target.value);\n    this.setState({\n      newInstructionTitle: e.target.value\n    });\n  };\n\n  newInputSubmit = () => {\n    if (this.state.itemToEdit.title === \"\") {\n      alert(\"Invalid Input\");\n      return;\n    }\n    console.log(\"Submitting Input: \" + this.state.itemToEdit.title);\n\n    this.props.ISArray.push(this.state.itemToEdit);\n    this.updateEntireArray(this.props.ISArray);\n  };\n\n  //This function will below will essentially take in a array and have a key map to it\n  updateEntireArray = newArr => {\n    // 2. update adds to the document\n\n    this.props.ISItem.fbPath\n      .update({ \"instructions&steps\": newArr })\n      .then(doc => {\n        console.log(\"updateEntireArray Finished\");\n        console.log(doc);\n        if (this.props != null) {\n          this.props.hideNewISModal();\n          console.log(\"refreshing FireBasev2 from ISItem\");\n          this.props.refresh(newArr);\n        } else {\n          console.log(\"removing newly added item due to failure\");\n          this.props.ISArray.pop();\n        }\n      });\n  };\n\n  render() {\n    return (\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.props.hideNewISModal();\n            console.log(\"closed button clicked\");\n          }}\n        >\n          <Modal.Title>\n            <h2 className=\"normalfancytext\">Add New Step</h2>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* <AddNewGRItem refresh={this.grabFireBaseRoutinesGoalsData} isRoutine={this.state.isRoutine} /> */}\n          <div>\n            <label>Title</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Title\"\n                value={this.state.itemToEdit.title}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.title = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Photo URL \"\n                value={this.state.itemToEdit.photo}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.photo = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\n                value={this.state.itemToEdit.available_start_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_start_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_end_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_end_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n            \n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        // value={this.state.newEventNotification}\n                        // onChange={this.handleNotificationChange}\n                        type=\"number\"\n                        placeholder=\"30\"\n                        style = {{ width:\"70px\", marginTop:\".25rem\", paddingRight:\"0px\"}}\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"0px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n\n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n              <label className=\"form-check-label\" >Time?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_timed}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  console.log(temp.is_timed);\n                  temp.is_timed = !temp.is_timed;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Available to Caitlin?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Available\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_available}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  console.log(temp.is_available);\n                  temp.is_available = !temp.is_available;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            {this.state.itemToEdit.is_available && <ShowNotifications />}\n\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              this.props.hideNewISModal();\n              console.log(\"closed button clicked\");\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              this.newInputSubmit();\n            }}\n          >\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n","import React, { Component } from 'react'\n// import { Button, Row, Col, Modal, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n/**\n * \n * This class is responsible for adding a new elemnt to the\n * firebase database. If it becomes successful then we update\n * the view on the firebasev2\n*/\nexport default class DeleteISItem extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('DeleteISItem constructor');\n        // console.log('delete index ' + this.props.deleteIndex)\n        // console.log(this.props.ISItem)\n        // console.log(this.props.ISArray)\n    }\n\n    componentDidMount() {\n        // console.log('DeleteISItem did mount');\n    }\n\n\n    submitRequest = () => {\n        // console.log(\"request was made to delete for element \" +  this.props.deleteIndex);\n        let items = [...this.props.ISArray];\n        // console.log(\"delete with: \")\n        // console.log(items)\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length))\n        // console.log(\"delete 2 with: \")\n        // console.log(newArr)\n        this.props.ISItem.fbPath.update({ 'instructions&steps': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\n                    this.props.refresh(newArr);\n                }\n                else{\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    confirmation = () => {\n        const r = window.confirm(\"Confirm Delete\"); \n        if(r == true){ \n            // console.log(\"Delete Confirm\")\n            this.submitRequest();\n            return;\n        }\n        // console.log(\"Delete Not Confirm\")\n    }\n\n\n    render() {\n        return (\n            < div>\n                <FontAwesomeIcon \n                    onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut ={event => {event.target.style.color = \"#000000\";}}\n                    style ={{color:  \"#000000\", marginRight:\"15px\", marginLeft: \"5px\" }}\n                    onClick={(e)=>{e.stopPropagation(); this.confirmation()}}\n                    icon={faTrashAlt} size=\"lg\" \n                />\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n// import { Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nexport default class deleteAT extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    /**\n     * Does a check to make sure the element is within bounds and then calls then right function to\n     * delete the stupid AT\n    */\n    submitRequest = () => {\n        if (this.props.deleteIndex < 0) {\n            console.log(\"deleteAT index error\")\n            return;\n        }\n        this.tempdeleteArrPortion();\n    }\n\n    tempdeleteArrPortion = () => {\n        // console.log(\"request was made to delete this index \" + this.props.deleteIndex);\n        let items = [...this.props.Array];\n        let i = this.props.deleteIndex;\n        items[i]['deleted'] = true;\n        this.props.Item.fbPath.update({ 'actions&tasks': items }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    this.props.refresh(items);\n                }\n                else {\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n\n    /**\n     * \n     * deleteArrPortion :\n     * this function will go into the array of that action&task and delete that specific element, after which\n     * it will update the array in firestore and refresh the page once that is completed\n    */\n    deleteArrPortion = () => {\n        // console.log(\"request was made to delete this  element \" + this.props.deleteIndex);\n        let items = [...this.props.Array];\n        // console.log(\"delete with: \");\n        // console.log(items);\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\n        // console.log(\"delete 2 with: \");\n        // console.log(newArr);\n        this.props.Item.fbPath.update({ 'actions&tasks': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\n                    this.props.refresh(newArr);\n                }\n                else {\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    \n    confirmation = () => {\n        const r = window.confirm(\"Confirm Delete\"); \n        if(r === true){ \n            // console.log(\"Delete Confirm\")\n            this.submitRequest();\n            return;\n        }\n        // console.log(\"Delete Not Confirm\")\n    }\n\n    render() {\n        return (\n            <div style={{ marginLeft: \"5px\" }} >\n                <FontAwesomeIcon\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style ={{marginRight: '15px', color:  \"#000000\" }}\n                    onClick={(e) => { e.stopPropagation(); this.confirmation() }}\n                    icon={faTrashAlt} size=\"lg\"\n                />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt} from '@fortawesome/free-solid-svg-icons';\nexport default class deleteGR extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('Delete AT constructor');  \n       \n    }\n\n    submitRequest = () => {\n        // console.log(\"request to delete GR\")\n        // console.log('delete index ' + this.props.deleteIndex)\n        // console.log(this.props.Item)\n        // console.log(this.props.Array)\n        if (this.props.deleteIndex < 0){\n            console.log(\"invalid index exiting delete\");\n            return;\n        }\n        this.tempdeleteArrPortion();\n    } \n\n    tempdeleteArrPortion= () => {\n        let items = [...this.props.Array];\n        items[this.props.deleteIndex]['deleted'] = true;\n        this.props.Path.update({ 'goals&routines': items }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete GRItem\");\n                    this.props.refresh();\n                }\n                else{\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    deleteArrPortion = () => {\n        // console.log(\"request was made to delete this  element \" +  this.props.deleteIndex);\n        let items = [...this.props.Array];\n        // console.log(\"delete with: \");\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\n        // console.log(\"delete 2 with: \");\n        // console.log(newArr);\n        this.props.Path.update({ 'goals&routines': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\n                    this.props.refresh();\n                }\n                else{\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    confirmation = () => {\n        const r = window.confirm(\"Confirm Delete\"); \n        if(r == true){ \n            // console.log(\"Delete Confirm\")\n            this.submitRequest();\n            return;\n        }\n        console.log(\"Delete Not Confirm\")\n    }\n\n\n    render() {\n        return (\n            <div  style={{ marginLeft: \"5px\" }}>\n            \n            <FontAwesomeIcon \n                title = \"Delete Item\"\n                onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\n                onMouseOut ={event => {event.target.style.color = \"#000000\";}}\n                style ={{marginRight: '15px', color:  \"#000000\" }}\n                // style ={{ color:  \"#000000\" }}\n                onClick={(e)=>{ e.stopPropagation(); this.confirmation()}}\n                icon={faTrashAlt} size=\"lg\" \n            />\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { faEdit} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button} from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport ShowNotifications from \"./ShowNotifications\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\nexport default class editGR extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('editAT constructor');\n        // console.log('Edit index ' + this.props.i)\n        // console.log(this.props.FBPath)\n        // console.log(this.props.ATArray)\n        // console.log(this.props.ATArray[this.props.i])\n\n        this.state = {\n            showEditModal: false,\n            itemToEdit: this.props.ATArray[this.props.i]\n        }\n    }\n\n    newInputSubmit = () => {\n        // console.log(\"submitting GR edited formed to firebase\");\n        let newArr = this.props.ATArray;\n\n        newArr[this.props.i] = this.state.itemToEdit;\n\n        //Add the below attributes in case they don't already exists\n\n        if (!newArr[this.props.i]['audio']) {\n            newArr[this.props.i]['audio'] = '';\n        }\n        if (!newArr[this.props.i]['datetime_completed']) {\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        if (!newArr[this.props.i]['datetime_started']) {\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        this.props.FBPath.update({ 'goals&routines': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                this.setState({ showEditModal: false })\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from updating GR ITEM \");\n                    this.props.refresh(newArr);\n                }\n                else {\n                    console.log(\"update failure\");\n                }\n            }\n        )\n    }\n\n\n    //For possible future use because we currently just typing out the time.\n    startTimePicker = () => {\n        // const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker className=\"form-control form-control-lg\" type=\"text\" style={{ width: '100%' }}\n                showTimeSelect\n                showTimeSelectOnly\n                timeIntervals={15}\n                timeCaption=\"Time\"\n                dateFormat=\"h:mm aa\"\n                selected={(this.state.itemToEdit.available_start_time) ? this.state.itemToEdit.available_start_time : new Date()}\n                onChange={(date) => {\n                    let temp = this.state.itemToEdit;\n                    temp.available_start_time = date;\n                    this.setState({\n                        itemToEdit: temp\n                    })\n\n                }}\n            // showTimeSelect\n            // timeFormat=\"HH:mm\"\n            // timeIntervals={15}\n            // timeCaption=\"time\"\n            // dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n        );\n    }\n\n\n    editGRForm = () => {\n        return (\n            \n            // <div style={{ border: \"2px\", margin: '0', width: \"315px\", padding: '20px' }}>\n            <Row style={{marginLeft:\"-170px\", border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\n                <label >Title</label>\n                 <div className=\"input-group mb-3\" >\n                    <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\n                        (e) => { e.preventDefault(); e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\n                    }\n\n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                            (e) => {\n                                if (e.keyCode === 32) {\n\n                                    let temp = this.state.itemToEdit; temp.title = e.target.value + \" \"; this.setState({ itemToEdit: temp })\n                                    e.preventDefault(); e.stopPropagation()\n                                }\n                            }} />\n                </div >\n\n                <label>Photo URL</label>\n                <div className=\"input-group mb-3\" >\n                    <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\n                    } />\n                </div >\n\n                <label>Available Start Time</label>\n                <div className=\"input-group mb-3\" >\n                    <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                    } />\n                </div >\n\n                <label>Available End Time</label>\n                <div className=\"input-group mb-3\" >\n                    <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                    } />\n                </div >\n\n                <label>This Takes Me</label>\n                <Row>\n                    <Col  style = {{paddingRight: \"0px\" }}>  \n                        <Form.Control\n                            // value={this.state.newEventNotification}\n                            // onChange={this.handleNotificationChange}\n                            type=\"number\"\n                            placeholder=\"30\"\n                            style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                        />\n                    </Col>\n                    <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                        <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                    </Col>\n                </Row>\n\n                <div className=\"input-group mb-3\"style ={{marginTop:\"10px\"}} >\n                    <label className=\"form-check-label\">Time?</label>\n\n                    <input\n                        style={{ marginTop: '5px', marginLeft: '5px' }}\n\n                        name=\"Timed\"\n                        type=\"checkbox\"\n                        checked={this.state.itemToEdit.is_timed}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.state.itemToEdit;\n                            // console.log(temp.is_timed)\n                            temp.is_timed = !temp.is_timed;\n                            this.setState({ itemToEdit: temp })\n                        }} />\n                </div >\n\n                <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n                    <label className=\"form-check-label\">Available to Caitlin?</label>\n                    <input\n                        style={{ marginTop: '5px', marginLeft: '5px' }}\n                        name=\"Available\"\n                        type=\"checkbox\"\n                        checked={this.state.itemToEdit.is_available}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.state.itemToEdit;\n                            // console.log(temp.is_available)\n                            temp.is_available = !temp.is_available;\n                            this.setState({ itemToEdit: temp })\n                        }} />\n                </div >\n                    \n                {this.state.itemToEdit.is_available && <ShowNotifications/>} \n                    \n\n                <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\n                <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\n            </Row>\n        )\n    }\n\n\n    showIcon = () => {\n        return (\n            <div style={{ marginLeft: \"5px\" }} >\n                <FontAwesomeIcon\n\n                    title=\"Edit Item\"\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: \"#000000\"}}\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\n                    icon={faEdit} size=\"lg\"\n                />\n            </div>\n        )\n    }\n   \n\n    \n\n    render() {\n        return (\n\n            <div onClick={(e) => { e.stopPropagation(); }}>\n                {(this.state.showEditModal) ? <div></div> : this.showIcon()} \n                 {(this.state.showEditModal ? this.editGRForm() : <div> </div>)}\n  \n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from 'react-bootstrap';\nimport ShowNotifications from \"./ShowNotifications\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\n\nexport default class editIS extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            showEditModal: false,\n            itemToEdit: this.props.ISArray[this.props.i]\n        }\n    }\n\n    newInputSubmit = () => {\n        let newArr  = this.props.ISArray;\n        newArr[this.props.i] = this.state.itemToEdit;\n\n        //Add the below attributes in case they don't already exists\n        if(!newArr[this.props.i]['datetime_completed']){\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n        if(!newArr[this.props.i]['datetime_started']){\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        if(!newArr[this.props.i]['audio']){\n            newArr[this.props.i]['audio'] = '';\n        }\n        this.props.FBPath.update({ 'instructions&steps': newArr }).then(\n            (doc) => {\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from updating ISItem\");\n                    this.setState({ showEditModal: false })\n                    this.props.refresh(newArr);\n                }\n                else{\n                    console.log(\"update failure\");\n                }\n            }\n        )\n    }\n\n    editISForm = () => {\n        return (\n            // <div style={{margin: '0', width: \"315px\", padding:'20px'}}>\n            <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\n            <label>Title</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        // value={this.state.newEventNotification}\n                        // onChange={this.handleNotificationChange}\n                        type=\"number\"\n                        placeholder=\"30\"\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n            \n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n                <label className=\"form-check-label\">Time?</label>\n                <input\n                    style={{ marginTop: '5px', marginLeft: '5px' }}\n                    name=\"Timed\"\n                    type=\"checkbox\"\n                    checked={this.state.itemToEdit.is_timed}\n                    onChange={(e) => {\n                        e.stopPropagation();\n                        let temp = this.state.itemToEdit;\n                        // console.log(temp.is_timed)\n                        temp.is_timed = !temp.is_timed;\n                        this.setState({ itemToEdit: temp })\n                    }} />\n            </div>\n            \n            <div className=\"input-group mb-3\" >\n                <label className=\"form-check-label\">Available to Caitlin?</label>\n                <input\n                    style={{ marginTop: '5px', marginLeft: '5px' }}\n                    name=\"Available\"\n                    type=\"checkbox\"\n                    checked={this.state.itemToEdit.is_available}\n                    onChange={(e) => {\n                        e.stopPropagation();\n                        let temp = this.state.itemToEdit;\n                        // console.log(temp.is_available)\n                        temp.is_available = !temp.is_available;\n                        this.setState({ itemToEdit: temp })\n                    }} />\n            </div >\n\n            {this.state.itemToEdit.is_available && <ShowNotifications />}\n\n\n            <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\n            <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\n        {/* </div> */}\n        </Row>\n        )\n    }\n\n    showIcon = () => {\n        return (\n            <div>\n                <FontAwesomeIcon\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: \"#000000\", marginLeft:\"5px\" }}\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\n                    icon={faEdit} size=\"lg\"\n                />\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {/* {(this.state.showEditModal) ? <div> </div> : this.showIcon()}\n                {(this.state.showEditModal ? this.editISForm() : <div> </div>)} */}\n                {this.state.showEditModal ? this.editISForm() : this.showIcon()}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {  Button } from 'react-bootstrap';\nimport ShowNotifications from \"./ShowNotifications\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\n\nexport default class editAT extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('editAT constructor');\n        // console.log('Edit index ' + this.props.i)\n        // console.log(this.props.FBPath)\n        // console.log(this.props.ATArray)\n\n        this.state = {\n            showEditModal: false,\n            itemToEdit: this.props.ATArray[this.props.i]\n        }\n    }\n\n    newInputSubmit = () => {\n        // console.log(\"submitting edited formed to firebase\");\n        let newArr  = this.props.ATArray;\n        newArr[this.props.i] = this.state.itemToEdit;\n        \n        //Add the below attributes in case they don't already exists\n        if(!newArr[this.props.i]['datetime_completed']){\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n        if(!newArr[this.props.i]['audio']){\n            newArr[this.props.i]['audio'] = '';\n        }\n\n        if(!newArr[this.props.i]['datetime_started']){\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        this.props.FBPath.update({ 'actions&tasks': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from updating ISItem\");\n                    this.setState({ showEditModal: false })\n                    this.props.refresh(newArr);\n                }\n                else{\n                    console.log(\"update failure\");\n                }\n            }\n        )\n    }\n\n    editATForm = () => {\n        return (\n            // <div style={{ margin: '0', width: \"315px\", padding:'20px'}}>\n                <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\n                  <label>Title</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } \n                            \n                            //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                    onKeyDown={\n                        (e) => {\n                            if (e.keyCode === 32) {\n                                 \n                                let temp = this.state.itemToEdit; temp.title = e.target.value + \" \"; this.setState({ itemToEdit: temp })\n                                e.preventDefault(); e.stopPropagation()\n                            }\n                        }}\n                            />\n                        </div >\n\n                        <label>Photo URL</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } />\n                        </div >\n\n                        <label>Available Start Time</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } />\n                        </div >\n\n                        <label>Available End Time</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } />\n                        </div >\n\n                        {/* <label>This Takes Me</label>\n                        <Row>\n                            <Col  style = {{paddingRight: \"0px\" }}>  \n                                <Form.Control\n                                    // value={this.state.newEventNotification}\n                                    // onChange={this.handleNotificationChange}\n                                    type=\"number\"\n                                    placeholder=\"30\"\n                                    style = {{ width:\"70px\", marginTop:\".25rem\", paddingRight:\"0px\"}}\n                                />\n                            </Col>\n                            <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                                <p style = {{marginLeft:\"0px\", marginTop:\"5px\"}}>minutes</p>\n                            </Col>\n                        </Row> */}\n\n                    <label>This Takes Me</label>\n                    <Row>\n                        <Col  style = {{paddingRight: \"0px\" }}>  \n                            <Form.Control\n                                // value={this.state.newEventNotification}\n                                // onChange={this.handleNotificationChange}\n                                type=\"number\"\n                                placeholder=\"30\"\n                                style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                            />\n                        </Col>\n                        <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                            <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                        </Col>\n                    </Row>\n\n                        <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n                            <label className=\"form-check-label\">Time?</label>\n                            <input\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\n                                name=\"Timed\"\n                                type=\"checkbox\"\n                                checked={this.state.itemToEdit.is_timed}\n                                onChange={(e) => {\n                                    e.stopPropagation();\n                                    let temp = this.state.itemToEdit;\n                                    // console.log(temp.is_timed)\n                                    temp.is_timed = !temp.is_timed;\n                                    this.setState({ itemToEdit: temp })\n                                }} />\n                        </div >\n\n                        <div className=\"input-group mb-3\" >\n                            <label className=\"form-check-label\">Available to Caitlin?</label>\n                            <input\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\n                                name=\"Available\"\n                                type=\"checkbox\"\n                                checked={this.state.itemToEdit.is_available}\n                                onChange={(e) => {\n                                    e.stopPropagation();\n                                    let temp = this.state.itemToEdit;\n                                    // console.log(temp.is_available)\n                                    temp.is_available = !temp.is_available;\n                                    this.setState({ itemToEdit: temp })\n                                }} />\n                        </div >\n\n                        {this.state.itemToEdit.is_available && <ShowNotifications />}\n                        \n\n                        \n\n                <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\n                <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\n             {/* </div> */}\n            </Row>\n        )\n    }\n\n    showIcon = () => {\n        return (\n            <div>\n          <FontAwesomeIcon\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: \"#000000\" }}\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\n                    icon={faEdit} size=\"lg\"\n                />\n                </div>\n        )\n    }\n\n    render() {\n        return (\n            // <div style={{ marginLeft: \"5px\" }} onClick={(e) => { e.stopPropagation();}}>\n            <div  style={{ marginLeft: \"5px\" }} onClick={(e) => { e.stopPropagation();}}>\n                {(this.state.showEditModal ? this.editATForm() : <div> </div>)}\n                {  (this.state.showEditModal) ? <div> </div> : this.showIcon()}\n\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlash, faList} from '@fortawesome/free-solid-svg-icons';\n\n\n\nexport default class ShowATList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            iconShowATModal: true\n        };\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.state.iconShowATModal &&  \n                    <div  >\n                        <FontAwesomeIcon\n                            icon={faList}\n                            title = \"Show List Item\"\n                            // onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\n                            // onMouseOut ={event => {event.target.style.color = \"#D6A34C\";}}\n                            style ={{ color:   \"#D6A34C\", marginLeft:\"20px\"}}\n                            onClick={(e)=>{ e.stopPropagation(); this.setState({iconShowATModal: !this.state.iconShowATModal})}}\n                            size=\"lg\" \n                            />\n                    </div>\n                }\n                {!this.state.iconShowATModal &&  \n                  <div  \n                  onClick={(e)=>{ e.stopPropagation(); this.setState({iconShowATModal: !this.state.iconShowATModal})}}>\n                      {/* <img src={require('../slash-list.png')} \n                      style = {{fontSize:\"1.3333333333em\", lineHeight: \"0.75em\", verticalAlign: \"-0.0667em\", marginLeft:\"20px\"}}\n                       alt=\"Slash-List Icon\"></img> */}\n                    <span className =\"fa-layers fa-fw\" style = {{marginLeft:\"20px\"}} >\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                        //   color=\"#000000\"\n                          icon={faList} \n                          title = \"Don't Show List Item\"\n                          onClick={(e)=>{ e.stopPropagation(); this.setState({iconShowATModal: !this.state.iconShowATModal})}}\n                          size=\"lg\" \n                        />\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                        //   color=\"#000000\"\n                          icon={faSlash} \n                          title = \"Don't Show List Item\"\n                          onClick={(e)=>{ e.stopPropagation(); this.setState({iconShowATModal: !this.state.iconShowATModal})}}\n                          size=\"lg\" \n                      />\n                    </span>\n                  </div>\n                }\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport firebase from \"./firebase\";\nimport {\n  ListGroup,\n  Button,\n  Row,\n  Col,\n  Modal,\n  InputGroup,\n  FormControl\n} from \"react-bootstrap\";\nimport AddNewGRItem from \"./addNewGRItem.jsx\";\nimport AddNewATItem from \"./addNewATItem.jsx\";\nimport AddNewISItem from \"./addNewISItem.jsx\";\nimport DeleteISItem from \"./DeleteISItem.jsx\";\nimport DeleteAT from \"./deleteAT.jsx\";\nimport DeleteGR from \"./deleteGR.jsx\";\nimport EditGR from \"./editGR.jsx\";\nimport EditIS from \"./editIS.jsx\";\nimport EditAT from \"./EditAT.jsx\";\nimport ShowATList from \"./ShowATList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faUserAltSlash,\n  faTrophy,\n  faRunning\n} from \"@fortawesome/free-solid-svg-icons\";\nimport moment from \"moment\";\n/**\n * Notes from Tyler:\n * 2/17/2020\n * TODOs:\n *\n * 1.Times from GR are not passed down to AT and times from AT are not passed\n * to IS\n *\n * 2.Clicking on the Goal and Routine at the top level should closed previous\n * AT and IS Modals.\n *\n *\n *\n */\n\nexport default class FirebaseV2 extends React.Component {\n  state = {\n    firebaseRootPath: firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(\"7R6hAVmDrNutRkG3sVRy\"),\n    originalGoalsAndRoutineArr: [],\n    goals: [],\n    routines: [],\n    //This single GR item is passed to AddNewATItem to help processed the new item\n    singleGR: {\n      //everytime a goal/routine is clicked, we open a modal and the modal info will be provided by this object\n      show: false, // Show the modal\n      type: \"None\",\n      title: \"GR Name\",\n      photo: \"\",\n      available_end_time: \"\", //TODO get these used\n      available_start_time: \"\", //TODO get these used\n      id: null,\n      arr: [],\n      fbPath: null\n    },\n\n    singleAT: {\n      //for each action/task we click on, we open a new modal to show the steps/instructions affiliate\n      //with the task\n      show: false, // Show the model\n      type: \"None\", // Action or Task\n      title: \"AT Name\", //Title of action task ,\n      available_end_time: \"\", //TODO get these used\n      available_start_time: \"\", //TODO get these used\n      photo: \"\",\n      id: null, //id of Action Task\n      arr: [], //array of instruction/steps formatted to display as a list\n      fbPath: null //Firebase direction to the arr\n    },\n    singleATitemArr: [], //temp fix for my bad memory of forgetting to add this in singleGR\n    singleISitemArr: [], //temp fix for my bad memory of forgetting to add this in singleAT\n    modalWidth: \"350px\", //primary width size for all modals\n\n    //Use to decided whether to show the respective modals\n    addNewGRModalShow: false,\n    addNewATModalShow: false,\n    addNewISModalShow: false,\n\n    //used to determine thumbnail picture size\n    thumbnailWidth: \"150px\",\n    thumbnailHeight: \"100px\",\n    thumbnailWidthV2: \"200px\",\n    thumbnailHeightV2: \"50px\",\n\n    //isRoutine is to check whether we clicked on add routine or add goal\n    isRoutine: true,\n    availabilityColorCode: \"#D6A34C\"\n\n    //used for the list item icon.If at GR and this icon is turned off. then wont be able to show Action and taske list.\n    // iconShowATModal: true\n  };\n\n  /**\n   * refreshATItem:\n   * Given a array, it will replace the current array of singleGR which holds the layout\n   * list of all action task under it and singleATitemArr which just holds the raw data.\n   *\n   */\n  refreshATItem = arr => {\n    // console.log(\"refreshATItem was called\");\n\n    this.setState({ singleATitemArr: arr });\n    let resArr = this.createListofAT(arr);\n    let singleGR = this.state.singleGR;\n    singleGR.arr = resArr;\n    this.setState({ singleGR: singleGR });\n  };\n\n  /**\n   *\n   * refreshISItem - given A array item,\n   * this method will take those items,\n   * put it in the list form to present\n   * as a list of instructions and the\n   * it will also update the array of\n   * the normal list of instructions with\n   * the one passed in.\n   */\n  refreshISItem = arr => {\n    // console.log(\"refreshISItem new arr\");\n    // console.log(arr);\n    this.setState({\n      singleISitemArr: arr\n    });\n    let resArr = this.createListofIS(arr);\n    let singleAt = this.state.singleAT;\n    singleAt.arr = resArr;\n    this.setState({ singleAT: singleAt });\n  };\n\n  constructor(props) {\n    // serves almost no purpose currently\n    super(props);\n    // console.log(\"running Firebase 2\");\n    // this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    //Grab the\n    this.grabFireBaseRoutinesGoalsData();\n  }\n\n  /**\n   * grabFireBaseRoutinesGoalsData:\n   * this function grabs the goals&routines array from the path located in this function\n   * which will then populate the goals, routines,originalGoalsAndRoutineArr array\n   * separately. The arrays will be used for display and data manipulation later.\n   *\n   */\n  grabFireBaseRoutinesGoalsData = () => {\n    const db = firebase.firestore();\n    // console.log(\"FirebaseV2 component did mount\");\n    const docRef = db.collection(\"users\").doc(\"7R6hAVmDrNutRkG3sVRy\");\n    docRef\n      .get()\n      .then(doc => {\n        if (doc.exists) {\n          // console.log(doc.data());\n          var x = doc.data();\n          // console.log(x[\"goals&routines\"]);\n          x = x[\"goals&routines\"];\n          let routine = [];\n          let goal = [];\n          for (let i = 0; i < x.length; ++i) {\n            if (!x[i][\"deleted\"] && x[i][\"is_persistent\"]) {\n              // console.log(\"routine \" + x[i][\"title\"]);\n              routine.push(x[i]);\n            } else if (!x[i][\"deleted\"] && !x[i][\"is_persistent\"]) {\n              // console.log(\"not routine \" + x[i][\"title\"]);\n              goal.push(x[i]);\n            }\n          }\n          this.setState({\n            originalGoalsAndRoutineArr: x,\n            goals: goal,\n            addNewGRModalShow: false,\n            routines: routine\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      })\n      .catch(function(error) {\n        console.log(\"Error getting document:\", error);\n      });\n  };\n\n  componentWillUnmount() {\n    console.log(\" FirebaseV2 will unmount web\");\n  }\n\n  formatDateTime(str) {\n    const formattedStr = str.replace(/\\//g, \"-\");\n    const time = moment(formattedStr);\n    return time.format(\"YYYY MMM DD HH:mm\");\n  }\n\n  onInputChange = e => {\n    const inputField = e.target.value;\n    // console.log(\"FirebaseV2.jsx :: onInputChange :: \" + inputField);\n  };\n  //This function essentially grabs all action/tasks\n  //for the routine or goal passed in and pops open the\n  //modal for the action/task\n  getATList = (id, title, persist) => {\n    const db = firebase.firestore();\n    // console.log(\"getATList function with id : \" + id);\n    let docRef = db\n      .collection(\"users\")\n      .doc(\"7R6hAVmDrNutRkG3sVRy\")\n      .collection(\"goals&routines\")\n      .doc(id);\n    docRef\n      .get()\n      .then(doc => {\n        if (doc.exists) {\n          // console.log(doc.data());\n          var x = doc.data()[\"actions&tasks\"];\n          // console.log(x);\n          if (x == null) {\n            // console.log(\"No actions&tasks array!\");\n            let singleGR = {\n              //Variable to hold information about the parent Goal/ Routine\n              show: true,\n              type: persist ? \"Routine\" : \"Goal\",\n              title: title,\n              id: id,\n              arr: [],\n              fbPath: docRef\n            };\n            this.setState({\n              singleGR: singleGR,\n              singleATitemArr: []\n            });\n            return;\n          }\n\n          let singleGR = {\n            //initialise without list to pass fbPath to child\n            show: true,\n            type: persist ? \"Routine\" : \"Goal\",\n            title: title,\n            id: id,\n            arr: [], //array of current action/task in this singular Routine\n            fbPath: docRef\n          };\n\n          this.setState({\n            singleGR: singleGR,\n            singleATitemArr: x\n          });\n\n          let resArr = this.createListofAT(x);\n          //assemble singleGR template here:\n\n          singleGR = {\n            show: true,\n            type: persist ? \"Routine\" : \"Goal\",\n            title: title,\n            id: id,\n            arr: resArr, //array of current action/task in this singular Routine\n            fbPath: docRef\n          };\n\n          this.setState({\n            singleGR: singleGR\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      })\n      .catch(function(error) {\n        console.log(\"Error getting document:\", error);\n      });\n  };\n\n  //Creates a array of all actions/task for get getATList function\n  //getATList stands for get all action/task\n  createListofAT = A => {\n    let res = [];\n    for (let i = 0; i < A.length; i++) {\n      // console.log(A[i][\"title\"]);\n      if (!A[i][\"id\"] || !A[i][\"title\"]) {\n        // console.log(\"missing title, or id at index : \" + i);\n        return [];\n      }\n      if (A[i][\"deleted\"]) {\n        //item is \"deleted\" and should not be shown...\n        continue;\n      }\n      let tempID = A[i][\"id\"];\n      let tempPhoto = A[i][\"photo\"];\n      // console.log(tempPhoto);\n      let tempTitle = A[i][\"title\"];\n      let tempAvailable = A[i][\"is_available\"];\n      res.push(\n        <div key={\"AT\" + i}>\n          <ListGroup.Item\n            action\n            onClick={() => {\n              this.ATonClickEvent(tempTitle, tempID);\n            }}\n            variant=\"light\"\n            style={{ marginBottom: \"3px\" }}\n          >\n          <Row style={{ margin: \"0\", marginBottom:\"10px\"}} className=\"d-flex flex-row-center\">\n            <Col>\n              <div className=\"fancytext\">{tempTitle}</div>\n            </Col>\n          </Row>\n\n              \n          {tempPhoto ? (\n          <Row >\n            <Col xs={7}\n                // sm=\"auto\"\n                // md=\"auto\"\n                // lg=\"auto\"\n                style={{  paddingRight:\"0px\"}}\n              >\n                  <img\n                    src={tempPhoto}\n                    alt=\"Action/Task\"\n                    // height={this.state.thumbnailHeight}\n                    // width={this.state.thumbnailWidth}\n                    className=\"center\"\n                    height=\"80px\"\n                    width=\"auto\"\n                  />\n              </Col>\n              <Col style = {{paddingLeft: \"0px\"}}>\n                <Row style = {{marginTop:\"10px\"}}>\n                    {tempAvailable ? (\n                    <div style={{ marginLeft: \"5px\" }}>\n                      <FontAwesomeIcon\n                        title=\"Available to Cailin\"\n                        style={{ color: this.state.availabilityColorCode }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is Availble to Caitlin\");\n                        }}\n                        icon={faUser}\n                        size=\"lg\"\n                      />{\" \"}\n                    </div>\n                  ) : (\n                    <div >\n                      <FontAwesomeIcon\n                        title=\"Unavailable to Caitlin\"\n                        style={{ color: \"#000000\" }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is NOT Availble to Caitlin\");\n                        }}\n                        icon={faUserAltSlash}\n                        size=\"lg\"\n                      />\n                    </div>\n                  )}\n                  <ShowATList />\n                </Row>\n                <Row style ={{marginTop:\"15px\", marginBottom: \"10px\"}}>\n                  <DeleteAT\n                  deleteIndex={i}\n                  type={\"actions&tasks\"}\n                  Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                  Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.refreshATItem}\n                  />\n                  <EditAT\n                    marginLeftV= \"-170px\"\n                    i={i} //index to edit\n                    ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                    FBPath={this.state.singleGR.fbPath} //holds the path to the array data\n                    refresh={this.refreshATItem} //function to refresh AT data\n                  />\n                </Row>\n              </Col>\n            </Row>\n            ) : (\n              <div>\n              <Row style ={{marginLeft:\"100px\"}} class=\"d-flex \" >\n                  {tempAvailable ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div >\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n                <ShowATList />\n              </Row>\n              <Row style={{ marginTop:\"15px\", marginLeft:\"100px\"}} class=\"d-flex \" >\n                <DeleteAT\n                  deleteIndex={i}\n                  type={\"actions&tasks\"}\n                  Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                  Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.refreshATItem}\n                  />\n                <EditAT\n                  marginLeftV= \"-130px\"\n                  i={i} //index to edit\n                  ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.singleGR.fbPath} //holds the path to the array data\n                  refresh={this.refreshATItem} //function to refresh AT data\n                />\n              </Row>\n              </div>\n              // </Row>\n            \n            )}\n\n\n\n            {/* This is the V1 */}\n            {/* <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-reverse\">\n              {tempAvailable ? (\n                <div style={{ marginLeft: \"5px\" }}>\n                  <FontAwesomeIcon\n                    title=\"Available to Cailin\"\n                    // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: this.state.availabilityColorCode }}\n                    onClick={e => {\n                      e.stopPropagation();\n                      alert(\"Item Is Availble to Caitlin\");\n                    }}\n                    icon={faUser}\n                    size=\"lg\"\n                  />{\" \"}\n                </div>\n              ) : (\n                <div style={{ marginLeft: \"5px\" }}>\n                  <FontAwesomeIcon\n                    title=\"Unavailable to Caitlin\"\n                    style={{ color: \"#000000\" }}\n                    onClick={e => {\n                      e.stopPropagation();\n                      alert(\"Item Is NOT Availble to Caitlin\");\n                    }}\n                    icon={faUserAltSlash}\n                    size=\"lg\"\n                  />\n                </div>\n              )}\n            </Row>\n\n            <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n              <Col>\n                <div className=\"fancytext\">{tempTitle}</div>\n              </Col>\n\n              <Col\n                sm=\"auto\"\n                md=\"auto\"\n                lg=\"auto\"\n                style={{ width: \"100%\", height: \"100%\" }}\n              >\n                {tempPhoto ? (\n                  <img\n                    src={tempPhoto}\n                    alt=\"Routine\"\n                    height={this.state.thumbnailHeight}\n                    width={this.state.thumbnailWidth}\n                    className=\"center\"\n                  />\n                ) : (\n                  <div></div>\n                )}\n              </Col>\n            </Row>\n\n            <Row\n              style={{\n                margin: \"0\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              }}\n            >\n              <DeleteAT\n                deleteIndex={i}\n                type={\"actions&tasks\"}\n                Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\n                refresh={this.refreshATItem}\n              />\n\n              <EditAT\n                i={i} //index to edit\n                ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                FBPath={this.state.singleGR.fbPath} //holds the path to the array data\n                refresh={this.refreshATItem} //function to refresh AT data\n              />\n            </Row> */}\n          </ListGroup.Item>\n        </div>\n      );\n    }\n    return res;\n  };\n\n  /**\n   * takes the list of steps/instructions and returns\n   * it in the form of a ListGroup for presentation\n   */\n  createListofIS = A => {\n    let res = [];\n    for (let i = 0; i < A.length; i++) {\n      // console.log(A[i][\"title\"]);\n      // console.log(A[i][\"id\"]);\n      /**\n       * TODO: notify jeremy of this issue:\n       * Some of these here don't have IDs, so we need to\n       * ignore it for now\n       */\n      let tempPhoto = A[i][\"photo\"];\n      // console.log(\"IS index \" + i + \" photo url :\" + tempPhoto);\n      let tempTitle = A[i][\"title\"];\n      let tempAvailable = A[i][\"is_available\"];\n      res.push(\n        <div key={\"IS\" + i} style={{ width: \"100%\" }}>\n          <ListGroup.Item\n            action\n            onClick={() => {\n              this.ISonClickEvent(tempTitle);\n            }}\n            variant=\"light\"\n            style={{ width: \"100%\", marginBottom: \"3px\" }}\n          >\n           \n          <Row style={{ margin: \"0\", marginBottom:\"10px\"}} className=\"d-flex flex-row-center\">\n            <Col>\n              <div className=\"fancytext\">{tempTitle}</div>\n            </Col>\n          </Row>\n           {tempPhoto ? (\n          <Row >\n            <Col xs={7}\n                style={{  paddingRight:\"0px\"}}\n              >\n                  <img\n                    src={tempPhoto}\n                    alt=\"Action/Task\"\n                    className=\"center\"\n                    height=\"80px\"\n                    width=\"auto\"\n                  />\n              </Col>\n              <Col style = {{paddingLeft: \"0px\"}}>\n                <Row style = {{marginTop:\"10px\"}}>\n                    {tempAvailable ? (\n                    <div style={{ marginLeft: \"5px\" }}>\n                      <FontAwesomeIcon\n                        title=\"Available to Cailin\"\n                        style={{ color: this.state.availabilityColorCode }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is Availble to Caitlin\");\n                        }}\n                        icon={faUser}\n                        size=\"lg\"\n                      />{\" \"}\n                    </div>\n                  ) : (\n                    <div >\n                      <FontAwesomeIcon\n                        title=\"Unavailable to Caitlin\"\n                        style={{ color: \"#000000\" }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is NOT Availble to Caitlin\");\n                        }}\n                        icon={faUserAltSlash}\n                        size=\"lg\"\n                      />\n                    </div>\n                  )}\n                  {/* <ShowATList /> */}\n                </Row>\n                <Row style ={{marginTop:\"15px\", marginBottom: \"10px\"}}>\n                  <DeleteISItem\n                    deleteIndex={i}\n                    ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                    ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.refreshISItem}\n                  />\n\n                  <EditIS\n                    marginLeftV= \"-170px\"\n                    i={i} //index to edit\n                    ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                    FBPath={this.state.singleAT.fbPath} //holds the fbPath to arr to be updated\n                    refresh={this.refreshISItem} //function to refresh IS data\n                  />\n                </Row>\n              </Col>\n            </Row>\n            ) : (\n              <div>\n              <Row style ={{marginLeft:\"100px\"}} class=\"d-flex \" >\n                  {tempAvailable ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div >\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n                {/* <ShowATList /> */}\n              </Row>\n              <Row style={{ marginTop:\"15px\", marginLeft:\"100px\"}} class=\"d-flex \" >\n                <DeleteISItem\n                  deleteIndex={i}\n                  ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                  ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.refreshISItem}\n                />\n\n                <EditIS\n                  marginLeftV= \"-130px\"\n                  i={i} //index to edit\n                  ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.singleAT.fbPath} //holds the fbPath to arr to be updated\n                  refresh={this.refreshISItem} //function to refresh IS data\n                />\n              </Row>\n              </div>\n              // </Row>\n            \n            )}\n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n            {/* <Row className=\"d-flex flex-row-reverse\">\n              {tempAvailable ? (\n                <div style={{ marginLeft: \"5px\" }}>\n                  <FontAwesomeIcon\n                    title=\"Available to Cailin\"\n                    // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: this.state.availabilityColorCode }}\n                    onClick={e => {\n                      e.stopPropagation();\n                      alert(\"Item Is Availble to Caitlin\");\n                    }}\n                    icon={faUser}\n                    size=\"lg\"\n                  />{\" \"}\n                </div>\n              ) : (\n                <div style={{ marginLeft: \"5px\" }}>\n                  <FontAwesomeIcon\n                    title=\"Unavailable to Caitlin\"\n                    // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: \"#000000\" }}\n                    onClick={e => {\n                      e.stopPropagation();\n                      alert(\"Item Is NOT Availble to Caitlin\");\n                    }}\n                    icon={faUserAltSlash}\n                    size=\"lg\"\n                  />\n                </div>\n              )}\n            </Row>\n\n            <Row\n              className=\"d-flex flex-row-center\"\n              style={{ margin: \"0\", textAlign: \"center\", width: \"100%\" }}\n            >\n              <Col>\n                <div className=\"fancytext\">{tempTitle}</div>\n              </Col>\n              <Col\n                sm=\"auto\"\n                md=\"auto\"\n                lg=\"auto\"\n                style={{ width: \"100%\", height: \"100%\" }}\n              >\n                {tempPhoto ? (\n                  <img\n                    src={tempPhoto}\n                    alt=\"Instruction/Step\"\n                    height={this.state.thumbnailHeight}\n                    width={this.state.thumbnailWidth}\n                    className=\"center\"\n                  />\n                ) : (\n                  <div></div>\n                )}\n              </Col>\n            </Row>\n\n            <Row\n              style={{\n                margin: \"0\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              <DeleteISItem\n                deleteIndex={i}\n                ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                refresh={this.refreshISItem}\n              />\n\n              <EditIS\n                i={i} //index to edit\n                ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                FBPath={this.state.singleAT.fbPath} //holds the fbPath to arr to be updated\n                refresh={this.refreshISItem} //function to refresh IS data\n              />\n            </Row> */}\n          </ListGroup.Item>\n        </div>\n      );\n    }\n    return res;\n  };\n\n  ISonClickEvent = title => {\n    console.log(\"Inside IS Click \" + title);\n  };\n\n  /**\n   * In this function we are passed in the id title and persist property of the incoming routine/goal\n   * and we need to make return a viewable list of all the actions/tasks for this routine/goal\n   * which is done in getATList function\n   */\n  GRonClickEvent = (title, id, persist) => {\n    // console.log(id, title, persist);\n    this.getATList(id, title, persist);\n  };\n\n  /**\n   * we are passed in the action/task id and title\n   * and we will need to grab all steps/Instructions related to this action/task,\n   *\n   */\n  ATonClickEvent = (title, id) => {\n    let stepsInstructionArrayPath = this.state.firebaseRootPath\n      .collection(\"goals&routines\")\n      .doc(this.state.singleGR.id)\n      .collection(\"actions&tasks\")\n      .doc(id);\n    console.log(id, title);\n    let temp = {\n      show: true,\n      type: \"Action/Task\",\n      title: title,\n      id: id,\n      arr: [],\n      fbPath: stepsInstructionArrayPath\n    };\n    stepsInstructionArrayPath\n      .get()\n      .then(doc => {\n        if (doc.exists) {\n          // console.log(\"Grabbing steps/instructions data:\");\n          // console.log(doc.data());\n          var x = doc.data();\n          x = x[\"instructions&steps\"];\n          if (x == null) {\n            this.setState({ singleAT: temp });\n            return;\n          }\n          // console.log(x);\n          //Below is a fix for fbPath Null when we pass it\n          //createListofIS and DeleteISItem.jsx, we need a path\n          //to delete the item, so we set the path then create the\n          //the array and reset it.\n          this.setState({ singleAT: temp, singleISitemArr: x });\n          temp.arr = this.createListofIS(x);\n          this.setState({ singleAT: temp, singleISitemArr: x });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No Instruction/Step documents!\");\n        }\n      })\n      .catch(function(error) {\n        console.log(\"Error getting document:\", error);\n        alert(\"Error getting document:\", error);\n      });\n  };\n\n  /**\n   * findIndexByID:\n   * given a id, it will loop through the original goals and routine array to\n   * return the index with the corresonding id\n   */\n  findIndexByID = id => {\n    let originalGoalsAndRoutineArr = this.state.originalGoalsAndRoutineArr;\n    for (let i = 0; i < originalGoalsAndRoutineArr.length; i++) {\n      if (id === originalGoalsAndRoutineArr[i].id) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n\n  getRoutines = () => {\n    let displayRoutines = [];\n    if (this.state.routines.length !== 0) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.state.routines.length; i++) {\n        let tempTitle = this.state.routines[i][\"title\"];\n        let tempID = this.state.routines[i][\"id\"];\n        let tempPersist = this.state.routines[i][\"is_persistent\"];\n\n        displayRoutines.push(\n          <div key={\"test0\" + i}>\n            <ListGroup.Item\n              action\n              onClick={() => {\n                this.GRonClickEvent(tempTitle, tempID, tempPersist);\n              }}\n              variant=\"light\"\n              style={{ marginBottom: \"3px\" }}\n            >\n            \n          <Row style={{ margin: \"0\", marginBottom:\"10px\"}} className=\"d-flex flex-row-center\">\n            <Col>\n                  <div className=\"fancytext\">\n                    {this.state.routines[i][\"title\"]}\n                  </div>\n                </Col>\n          </Row>\n           {this.state.routines[i][\"photo\"] ? (\n          <Row >\n            <Col xs={7}\n                style={{  paddingRight:\"0px\"}}\n              >\n                  <img\n                    src={this.state.routines[i][\"photo\"]}\n                    alt=\"Routines\"\n                    className=\"center\"\n                    height=\"80px\"\n                    width=\"auto\"\n                  />\n              </Col>\n              <Col style = {{paddingLeft: \"0px\"}}>\n                <Row style = {{marginTop:\"10px\"}}>\n                    {this.state.routines[i][\"is_available\"]  ? (\n                    <div style={{ marginLeft: \"5px\" }}>\n                      <FontAwesomeIcon\n                        title=\"Available to Cailin\"\n                        style={{ color: this.state.availabilityColorCode }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is Availble to Caitlin\");\n                        }}\n                        icon={faUser}\n                        size=\"lg\"\n                      />{\" \"}\n                    </div>\n                  ) : (\n                    <div >\n                      <FontAwesomeIcon\n                        title=\"Unavailable to Caitlin\"\n                        style={{ color: \"#000000\" }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is NOT Availble to Caitlin\");\n                        }}\n                        icon={faUserAltSlash}\n                        size=\"lg\"\n                      />\n                    </div>\n                  )}\n                  <ShowATList />\n                </Row>\n                <Row style ={{marginTop:\"15px\", marginBottom: \"10px\"}}>\n                  <DeleteGR\n                    deleteIndex={this.findIndexByID(tempID)}\n                    Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                    Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.grabFireBaseRoutinesGoalsData}\n                  />\n                  <EditGR\n                    marginLeftV= \"-170px\"\n                    i={this.findIndexByID(tempID)} //index to edit\n                    ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                    FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                  />\n                </Row>\n              </Col>\n            </Row>\n            ) : (\n              <div>\n              <Row style ={{marginLeft:\"100px\"}} class=\"d-flex \" >\n                  {this.state.routines[i][\"is_available\"] ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n                <ShowATList />\n              </Row>\n              <Row style={{ marginTop:\"15px\", marginLeft:\"100px\"}} class=\"d-flex \" >\n                <DeleteGR\n                  deleteIndex={this.findIndexByID(tempID)}\n                  Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData}\n                />\n                <EditGR\n                  marginLeftV= \"-130px\"\n                  i={this.findIndexByID(tempID)} //index to edit\n                  ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                />\n              </Row>\n             </div>\n            )}\n\n\n\n\n\n\n\n             \n              {/* <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-reverse\">\n                {this.state.routines[i][\"is_available\"] ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n              </Row> */}\n              {/* <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-reverse\"> <ShowATList /></Row> */}\n              {/* <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col>\n\n                  <div className=\"fancytext \" >\n                      {this.state.routines[i][\"title\"]}\n                  </div>\n                </Col>\n              </Row> */}\n              {/* <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col>\n                  <div className=\"fancytext\">\n                    {this.state.routines[i][\"title\"]}\n                  </div>\n                </Col>\n\n                <Col\n                  sm=\"auto\"\n                  md=\"auto\"\n                  lg=\"auto\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  {this.state.routines[i][\"photo\"] ? (\n                    <img\n                      src={this.state.routines[i][\"photo\"]}\n                      alt=\"Routine\"\n                      className=\"center\"\n                      height={this.state.thumbnailHeight}\n                      width={this.state.thumbnailWidth}\n                    />\n                  ) : (\n                    <div></div>\n                  )}\n                </Col>\n              </Row> */}\n\n              {/* <Row\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginTop: \"10px\",\n                  marginBottom: \"10px\"\n                }}\n              >\n                <DeleteGR\n                  deleteIndex={this.findIndexByID(tempID)}\n                  Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData}\n                />\n                <EditGR\n                  // ATArray should actually be named GR Array but the code with EditGT\n                  // and EditAT was so similar that it was copied that pasted\n                  i={this.findIndexByID(tempID)} //index to edit\n                  ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n\n                /> */}\n                 {/* <ShowATList /> */}\n              <Row>\n                <div style={{ fontSize: \"12px\" }}>\n                  {this.state.routines[i][\"datetime_started\"] ? (\n                    <div style={{ marginTop: \"3px\" }}>\n                      {\"Previous Start Time: \" +\n                        this.formatDateTime(\n                          this.state.routines[i][\"datetime_started\"]\n                        )}{\" \"}\n                    </div>\n                  ) : (\n                    <div> </div>\n                  )}\n                  {this.state.routines[i][\"datetime_completed\"] ? (\n                    <div>\n                      {\"Previous Completed Time: \" +\n                        this.formatDateTime(\n                          this.state.routines[i][\"datetime_completed\"]\n                        )}{\" \"}\n                    </div>\n                  ) : (\n                    <div> </div>\n                  )}\n                </div>\n              </Row>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    return displayRoutines;\n  };\n\n  getGoals = () => {\n    let displayGoals = [];\n    if (this.state.goals.length != null) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.state.goals.length; i++) {\n        let tempTitle = this.state.goals[i][\"title\"];\n        let tempID = this.state.goals[i][\"id\"];\n        let tempPersist = this.state.goals[i][\"is_persistent\"];\n        displayGoals.push(\n          <div key={\"test1\" + i}>\n            <ListGroup.Item\n              action\n              onClick={() => {\n                this.GRonClickEvent(tempTitle, tempID, tempPersist);\n              }}\n              variant=\"light\"\n              style={{ marginBottom: \"3px\" }}\n            >\n            \n\n            <Row style={{ margin: \"0\", marginBottom:\"10px\"}} className=\"d-flex flex-row-center\">\n            <Col>\n              <div className=\"fancytext\">{tempTitle}</div>\n            </Col>\n          </Row>\n           {this.state.goals[i][\"photo\"] ? (\n          <Row >\n            <Col xs={7}\n                style={{  paddingRight:\"0px\"}}\n              >\n                  <img\n                    src={this.state.goals[i][\"photo\"]}\n                    alt=\"Instructions/Steps\"\n                    className=\"center\"\n                    height=\"80px\"\n                    width=\"auto\"\n                  />\n              </Col>\n              <Col style = {{paddingLeft: \"0px\"}}>\n                <Row style = {{marginTop:\"10px\"}}>\n                    {this.state.goals[i][\"is_available\"] ? (\n                    <div style={{ marginLeft: \"5px\" }}>\n                      <FontAwesomeIcon\n                        title=\"Available to Cailin\"\n                        style={{ color: this.state.availabilityColorCode }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is Availble to Caitlin\");\n                        }}\n                        icon={faUser}\n                        size=\"lg\"\n                      />{\" \"}\n                    </div>\n                  ) : (\n                    <div >\n                      <FontAwesomeIcon\n                        title=\"Unavailable to Caitlin\"\n                        style={{ color: \"#000000\" }}\n                        onClick={e => {\n                          e.stopPropagation();\n                          alert(\"Item Is NOT Availble to Caitlin\");\n                        }}\n                        icon={faUserAltSlash}\n                        size=\"lg\"\n                      />\n                    </div>\n                  )}\n                  <ShowATList />\n                </Row>\n                <Row style ={{marginTop:\"15px\", marginBottom: \"10px\"}}>\n                  <DeleteGR\n                    deleteIndex={this.findIndexByID(tempID)}\n                    Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                    Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.grabFireBaseRoutinesGoalsData}\n                  />\n                  <EditGR\n                    marginLeftV= \"-170px\"\n                    i={this.findIndexByID(tempID)} //index to edit\n                    ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                    FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                  />\n                </Row>\n              </Col>\n            </Row>\n            ) : (\n              <div>\n              <Row style ={{marginLeft:\"100px\"}} class=\"d-flex \" >\n                  {this.state.goals[i][\"is_available\"] ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n                <ShowATList />\n              </Row>\n              <Row style={{ marginTop:\"15px\", marginLeft:\"100px\"}} class=\"d-flex \" >\n                <DeleteGR\n                  deleteIndex={this.findIndexByID(tempID)}\n                  Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData}\n                />\n                <EditGR\n                  marginLeftV= \"-130px\"\n                  i={this.findIndexByID(tempID)} //index to edit\n                  ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                />\n              </Row>\n              </div>\n            \n            )}\n\n\n\n\n\n\n              {/* <Row style={{ margin: \"0\" }} className=\"d-flex justify-content-between\">\n              <ShowATList />\n                {this.state.goals[i][\"is_available\"] ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n                 \n              </Row>\n             \n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\n                  <div className=\"fancytext\">\n                    {\" \"}\n                    {this.state.goals[i][\"title\"]}\n                  </div>\n                  {/* <div className=\"fancytext\"> Time: {Math.floor(1 + Math.random() * (45 - 1))} Minutes </div> */}\n                {/* </Col>\n                <Col\n                  sm=\"auto\"\n                  md=\"auto\"\n                  lg=\"auto\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  {this.state.goals[i][\"photo\"] ? (\n                    <img\n                      src={this.state.goals[i][\"photo\"]}\n                      alt=\"Goals\"\n                      className=\"center\"\n                      height={this.state.thumbnailHeight}\n                      width={this.state.thumbnailWidth}\n                    />\n                  ) : (\n                    <div></div>\n                  )}\n                </Col>\n              </Row>\n              <Row\n                className=\"d-flex flex-row-center\"\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginTop: \"10px\",\n                  marginBottom: \"10px\"\n                }}\n              >\n                <DeleteGR\n                  deleteIndex={this.findIndexByID(tempID)}\n                  Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData}\n                />\n                <EditGR\n                  i={this.findIndexByID(tempID)} //index to edit\n                  ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                />\n              </Row>  */}\n\n              <div style={{ fontSize: \"12px\" }}>\n                {this.state.goals[i][\"datetime_started\"] ? (\n                  <div style={{ marginTop: \"3px\" }}>\n                    {\"Previous Start Time: \" +\n                      this.formatDateTime(\n                        this.state.goals[i][\"datetime_started\"]\n                      )}{\" \"}\n                  </div>\n                ) : (\n                  <div> </div>\n                )}\n\n                {this.state.goals[i][\"datetime_completed\"] ? (\n                  <div>\n                    {\"Previous Completed Time: \" +\n                      this.formatDateTime(\n                        this.state.goals[i][\"datetime_completed\"]\n                      )}{\" \"}\n                  </div>\n                ) : (\n                  <div> </div>\n                )}\n              </div>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\n    return displayGoals;\n  };\n\n  getGoalsStatus = () => {\n    let displayGoals = [];\n    if (this.state.goals.length != null) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.state.goals.length; i++) {\n        let tempTitle = this.state.goals[i][\"title\"];\n        let tempID = this.state.goals[i][\"id\"];\n        let isComplete = this.state.goals[i][\"is_complete\"];\n        if (!this.state.goals[i][\"is_available\"]) {\n          continue; //skip if not available\n        }\n        displayGoals.push(\n          <div key={\"goalStatus\" + i}>\n            <ListGroup.Item\n              action\n              variant=\"light\"\n              style={{ width: \"100%\", marginBottom: \"3px\" }}\n            >\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\n                  <div className=\"fancytext\"> {tempTitle}</div>\n                </Col>\n              </Row>\n              <Row\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                }}\n              >\n                {isComplete ? (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Completed\");\n                      }}\n                      icon={faTrophy}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Not Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: \"black\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Not Completed\");\n                      }}\n                      icon={faRunning}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n              </Row>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\n    return displayGoals;\n  };\n\n  getRoutinesStatus = () => {\n    let displayRoutines = [];\n    if (this.state.routines.length != null) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.state.routines.length; i++) {\n        let tempTitle = this.state.routines[i][\"title\"];\n        // let tempID = this.state.routines[i]['id'];\n        let isComplete = this.state.routines[i][\"is_complete\"];\n        if (!this.state.routines[i][\"is_available\"]) {\n          continue; //skip if not available\n        }\n        displayRoutines.push(\n          <div key={\"goalStatus\" + i}>\n            <ListGroup.Item\n              action\n              variant=\"light\"\n              style={{ marginBottom: \"3px\" }}\n            >\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\n                  <div className=\"fancytext\"> {tempTitle}</div>\n                </Col>\n              </Row>\n              <Row\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                }}\n              >\n                {isComplete ? (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Completed\");\n                      }}\n                      icon={faTrophy}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Not Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: \"black\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Not Completed\");\n                      }}\n                      icon={faRunning}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n              </Row>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\n    return displayRoutines;\n  };\n\n  render() {\n    // console.log(\"ran render firebasev2\");\n    var displayRoutines = this.getRoutines();\n    var displayGoals = this.getGoals();\n    var displayCompletedGoals = this.getGoalsStatus();\n    var displayCompletedRoutines = this.getRoutinesStatus();\n    return (\n      <div style={{ marginTop: \"0\" }}>\n        {this.props.showRoutineGoalModal ? (\n          <Col\n            style={{\n              width: this.state.modalWidth,\n              marginTop: \"0\",\n              marginRight: \"15px\"\n            }}\n            sm=\"auto\"\n            md=\"auto\"\n            lg=\"auto\"\n          >\n            <div\n              style={{\n                borderRadius: \"15px\",\n                boxShadow:\n                  \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n              }}\n            >\n              {this.abstractedRoutineGoalStatusList(\n                displayCompletedRoutines,\n                displayCompletedGoals\n              )}\n            </div>\n          </Col>\n        ) : (\n          <div> </div>\n        )}\n\n        {this.props.showRoutine ? (\n          <Col\n            style={{\n              width: this.state.modalWidth,\n              marginTop: \"0\",\n              marginRight: \"15px\"\n            }}\n            sm=\"auto\"\n            md=\"auto\"\n            lg=\"auto\"\n          >\n            <div style={{ borderRadius: \"15px\" }}>\n              {this.abstractedRoutineList(displayRoutines)}\n            </div>\n          </Col>\n        ) : (\n          <div> </div>\n        )}\n\n        {this.props.showGoal ? (\n          <Col\n            style={{\n              width: this.state.modalWidth,\n              marginTop: \"0\",\n              marginRight: \"15px\"\n            }}\n            sm=\"auto\"\n            md=\"auto\"\n            lg=\"auto\"\n          >\n            <div style={{ borderRadius: \"15px\" }}>\n              {this.abstractedGoalsList(displayGoals)}\n            </div>\n          </Col>\n        ) : (\n          <div> </div>\n        )}\n      </div>\n    );\n  }\n\n  /*\nabstractedGoalsList:\nshows entire list of goals and routines\n*/\n  abstractedGoalsList = displayGoals => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          marginTop: \"0\",\n          width: this.state.modalWidth,\n          marginLeft: \"0\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n        }}\n      >\n        <Modal.Header onHide={this.props.closeGoal} closeButton>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Goals</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/**\n           * To allow for the Modals to pop up in front of one another\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.addNewGRModalShow ? this.AddNewGRModalAbstracted() : \"\"}\n          </div>\n\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.singleGR.show ? (\n              this.abstractedActionsAndTaskList()\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"650px\", overflow: \"scroll\" }}>\n              {displayGoals}\n            </div>\n            {/* Button to add new Goal */}\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewGRModalShow: true, isRoutine: false });\n            }}\n          >\n            Add Goal\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n  /*\n    abstractedRoutineList:\n    shows entire list of routines\n    */\n  abstractedRoutineList = displayRoutines => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          marginTop: \"0\",\n          width: this.state.modalWidth,\n          marginLeft: \"0px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n        }}\n      >\n        <Modal.Header onHide={this.props.closeRoutine} closeButton>\n          <Modal.Title>\n            {\" \"}\n            <h5 className=\"normalfancytext\">Routines</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/**\n           * To allow for the Modals to pop up in front of one another\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\n\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.addNewGRModalShow ? this.AddNewGRModalAbstracted() : \"\"}\n          </div>\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.singleGR.show ? (\n              this.abstractedActionsAndTaskList()\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"650px\", overflow: \"scroll\" }}>\n              {displayRoutines}\n            </div>\n          </ListGroup>\n          {/* Button To add new Routine */}\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewGRModalShow: true, isRoutine: true });\n            }}\n          >\n            Add Routine\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  /**\n   * AddNewGRModalAbstracted:\n   * returns a modal showing us a slot to add a new Goal/Routine\n   */\n  AddNewGRModalAbstracted = () => {\n    return (\n      <AddNewGRItem\n        closeModal={() => {\n          this.setState({ addNewGRModalShow: false });\n        }}\n        ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n        refresh={this.grabFireBaseRoutinesGoalsData}\n        isRoutine={this.state.isRoutine}\n        width={this.state.modalWidth}\n      />\n    );\n  };\n\n  /*\n    abstractedInstructionsAndStepsList:\n    currently only shows the single Action/Task Title with no steps\n    */\n\n  /**\n   * abstractedInstructionsAndStepsList:\n   * Shows a single Task / Action as Title with\n   * the list of instructions/steps underneath of it\n   *\n   */\n  abstractedInstructionsAndStepsList = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          marginTop: \"0\",\n          marginLeft: \"0\",\n          width: this.state.modalWidth\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({ singleAT: { show: false } });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">{this.state.singleAT.title}</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.addNewISModalShow ? (\n              <AddNewISItem\n                ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                refresh={this.refreshISItem}\n                hideNewISModal={\n                  //function to hide the modal\n                  () => {\n                    this.setState({ addNewISModalShow: false });\n                  }\n                }\n                width={this.state.modalWidth}\n              />\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"500px\", overflow: \"scroll\" }}>\n              {this.state.singleAT.arr}\n            </div>\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewISModalShow: true });\n            }}\n          >\n            Add Step\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  /**\n   * abstractedActionsAndTaskList -\n   * returns modal with with a single Routine/ Goal as title\n   * and beneath it is the list of action/ task associated with the\n   * goal/ routine\n   */\n  abstractedActionsAndTaskList = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          marginTop: \"0\",\n          marginLeft: \"0\",\n          width: this.state.modalWidth\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({ singleGR: { show: false } });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">{this.state.singleGR.title}</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.addNewATModalShow ? (\n              <AddNewATItem\n                refresh={this.refreshATItem} //refreshes the list of AT\n                ATArray={this.state.singleATitemArr}\n                ATItem={this.state.singleGR} //The parent item\n                hideNewATModal={() => {\n                  this.setState({ addNewATModalShow: false });\n                }}\n                width={this.state.modalWidth}\n              />\n            ) : (\n              <div></div>\n            )}\n          </div>\n          {/**\n           * Here Below, the IS list will pop up inside the AT list\n           */}\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n            }}\n          >\n            {this.state.singleAT.show ? (\n              this.abstractedInstructionsAndStepsList()\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"500px\", overflow: \"scroll\" }}>\n              {this.state.singleGR.arr}\n            </div>\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewATModalShow: true });\n            }}\n          >\n            Add Action/Task\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  addNewTaskInputBox = () => {\n    return (\n      <InputGroup size=\"lg\" style={{ marginTop: \"20px\" }} className=\"mb-3\">\n        <FormControl\n          onChange={() => {\n            console.log(\"addNewGoalInputBox\");\n          }}\n          placeholder=\"\"\n        />\n        <InputGroup.Append>\n          <Button variant=\"outline-secondary\">Add</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    );\n  };\n\n  /*\n    abstractedRoutineGoalStatusList:\n    shows entire list of goals and routines\n    */\n  abstractedRoutineGoalStatusList = (displayRoutines, displayGoals) => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          marginTop: \"0\",\n          width: this.state.modalWidth,\n          marginLeft: \"0\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n        }}\n      >\n        <Modal.Header onHide={this.props.closeRoutineGoalModal} closeButton>\n          <Modal.Title>\n            {\" \"}\n            <h5 className=\"normalfancytext\">Current Status</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h2 className=\"normalfancytext\">Routines:</h2>\n\n          {/**\n           * To allow for the Modals to pop up in front of one another\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\n\n          {/* <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\n                        {(this.state.singleGR.show) ? this.abstractedActionsAndTaskList() : (<div></div>)}\n                    </div> */}\n\n          <ListGroup style={{ height: \"350px\", overflow: \"scroll\" }}>\n            {displayRoutines}\n            {/* <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: true }) }} >Add Routine</button> */}\n          </ListGroup>\n          {/* Button To add new Routine */}\n          <h2 className=\"normalfancytext\" style={{ marginTop: \"50px\" }}>\n            Goals:\n          </h2>\n          <ListGroup style={{ height: \"250px\", overflow: \"scroll\" }}>\n            {displayGoals}\n            {/* Button to add new Goal */}\n            {/* <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: false }) }}>Add Goal</button> */}\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer></Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  addNewGoalInputBox = () => {\n    return (\n      <InputGroup\n        size=\"lg\"\n        style={{ marginTop: \"20px\", width: this.state.modalWidth }}\n        className=\"mb-3\"\n      >\n        <FormControl\n          onChange={() => {\n            console.log(\"addNewGoalInputBox\");\n          }}\n          placeholder=\"place holder!!\"\n        />\n        <InputGroup.Append>\n          <Button variant=\"outline-secondary\">Add</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    );\n  };\n}\n","import React from 'react';\nimport moment from 'moment';\n\nexport default class TylersCalendarv1 extends React.Component {\n\n  componentDidMount() {\n  }\n\n  weekdays = moment.weekdays();\n  weekdaysShort = moment.weekdaysShort(); // [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n\n  componentWillUnmount() {\n\n  }\n\n  year = () => {\n    return this.props.dateContext.format(\"Y\");\n  }\n\n  currentDay = () => {\n    return this.props.dateObject.format(\"D\");\n  };\n  month = () => {\n    return this.props.dateContext.format(\"MMMM\");\n  }\n\n  daysInMonth = () => {\n    return this.props.dateContext.daysInMonth();\n  }\n\n  firstDayOfMonth = () => {\n    let dateContext = this.props.dateContext;\n    let firstDay = moment(dateContext)\n      .startOf(\"month\")\n      .format(\"d\"); // Day of week 0...1..5...6\n    return firstDay;\n  };\n\n  //Returns a dense populated set of icons to be pushed onto a day i\n  //into the table\n\n  getEventsforDay = (i) => {\n\n    var res = [];\n    var tempStart = null;\n    var tempEnd = null;\n    if (this.props.originalEvents == null) {\n      return []\n    }\n    // console.log(this.props.originalEvents);\n    for (let j = 0; j < this.props.originalEvents.length; ++j) {\n      if (this.props.originalEvents[j].start.dateTime) {\n        tempStart = this.props.originalEvents[j].start.dateTime;\n        tempEnd = this.props.originalEvents[j].end.dateTime;\n        let startDate = new Date(tempStart).getDate();\n        let endDate = new Date(tempEnd).getDate();\n        // console.log(startDate)\n        if (i >= startDate && i <= endDate) {\n          res.push(<div key={'event' + j}><button\n            value={j}\n            onClick={this.onEventClick}\n            className=\"btn btn-sm\" style={{\n              padding: '3px',\n              paddingLeft: '4px',\n              paddingRight: '4px',\n              fontSize: '9px', color: \"white\",\n              borderRadius: '4px', background: \"#42B8DD\",\n              textShadow: \"0 1px 1px rgba(0, 0, 0, 0.2)\", marginBottom: \"3px\"\n            }} >{this.props.originalEvents[j].summary}</button><br /></div>);\n        }\n      }\n      else {\n        tempStart = this.props.originalEvents[j].start.date;\n        // console.log('start date');\n        // console.log(this.props.originalEvents[j].start.date);\n        tempEnd = this.props.originalEvents[j].end.date;\n        let startDate = new Date(tempStart).getDate();\n        let endDate = new Date(tempEnd).getDate();\n        // console.log(startDate)\n        if (i > startDate && i <= endDate) {\n          // console.log('sss' + i, startDate, endDate);\n          res.push(<div key={'event' + j}><button\n            value={j}\n            onClick={this.onEventClick}\n            className=\"btn btn-sm\" style={{\n              padding: '3px',\n              paddingLeft: '4px',\n              paddingRight: '4px',\n              fontSize: '9px', color: \"white\",\n              borderRadius: '3px', background: \"CornflowerBlue\",\n              textShadow: \"0 1px 1px rgba(0, 0, 0, 0.2), \", marginBottom: \"3px\"\n            }} >{this.props.originalEvents[j].summary}</button><br /></div>);\n        }\n      }\n\n    }\n    return res;\n  }\n\n  onEventClick = (x) => {\n    x.stopPropagation();\n    this.props.eventClick(x.target.value);\n  }\n\n  onDayClick = (d) => {\n    this.props.handleDateClick(this.props.dateContext.format(\"M\") + '/' + d + '/' + this.props.dateContext.format(\"Y\"));\n  }\n\n  onExpandClick = (d) => {\n    this.props.handleExpandClick(this.props.dateContext.format(\"M\") + '/' + d + '/' + this.props.dateContext.format(\"Y\"));\n  }\n\n  render() {\n    let daysInMonth = [];\n    let weekdays = this.weekdays.map((day) => {\n      return (\n        <td className=\"fancytext\" key={day}>{day}</td>\n      )\n    });\n\n    //create the blank slots to push day 1 to right day\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(<td key={'empty' + i} className=\"calendar-day empty\">{\"\"}</td>);\n    }\n\n    //The variable below tells us if the current month we are at is today's month\n    var sameDate = this.props.dateObject.format(\"MM/YYYY\") === this.props.dateContext.format(\"MM/YYYY\");\n\n    // console.log(this.props.dateObject.format(\"DD/MM/YYYY\") + \"  == \" + this.props.dateContext.format(\"DD/MM/YYYY\"));\n    for (var d = 1; d <= this.daysInMonth(); d++) {\n      // let currentDay = d == this.currentDay() ? \"today\" : \"\";\n\n      // const todayStyle = { boxShadow: '4px 4px 8px 4px rgba(0, 0, 0, 0.2)' };\n\n      daysInMonth.push(\n        <td key={d} onClick={this.onDayClick.bind(this, d)}>\n          <div style={{ padding: '0', margin: '0', height: '110px', width: \"100px\", overflow: 'auto' }}>\n            {\n              // eslint-disable-next-line max-len\n            }\n              <div className={(sameDate && (d === parseInt(this.currentDay(), 10))) ? \"numberCircleCurrent\" : \"numberCircle\"} onClick={this.onExpandClick.bind(this, d)}>\n                <a className=\"fancytext\"> {d} </a>\n              </div>\n            {this.getEventsforDay(d)}\n          </div>\n        </td>\n      );\n    }\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalSlots.length - 1) {\n        // let insertRow = cells.slice();\n        rows.push(cells);\n      }\n    });\n\n    var daysinmonth = rows.map((data, i) => {\n      return <tr style={{ padding: '0px' }} key={i * 11}>{data}</tr>;\n    });\n\n    return (\n      <div>\n        <table className=\"table\" style={{ height: '450px', tableLayout: 'fixed', width: '910px' }}>\n          <thead>\n            <tr>\n              {weekdays}\n            </tr>\n          </thead>\n          <tbody style={{ height: '450px', width: '600px' }}>\n            {daysinmonth}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n// import axios from 'axios';\nimport moment from 'moment';\nimport { Container, Row, Col} from 'react-bootstrap';\n\nimport firebase from \"./firebase\";\nexport default class DayRoutines extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            firebaseRootPath: firebase.firestore().collection('users').doc('7R6hAVmDrNutRkG3sVRy'),\n            goals: [], //array to hold all  goals\n            routines: [], // array to hold all routines\n            dayEvents: [], //holds google events data for a single day\n            todayDateObject: moment(\"03/02/2020\"), //this is the date of interset for events to be displaye\n            pxPerHour: \"30px\", //preset size for all columns\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n            eventBoxSize: \"200\", //width size for event box\n        }\n    }\n\n    componentDidMount() {\n        this.grabFireBaseRoutinesGoalsData();\n    }\n\n    /**\n * grabFireBaseRoutinesGoalsData:\n * this function grabs the goals&routines array from the path located in this function\n * which will then populate the goals, routines,originalGoalsAndRoutineArr array\n * separately. The arrays will be used for display and data manipulation later.\n *\n*/\n    grabFireBaseRoutinesGoalsData = () => {\n        const db = firebase.firestore();\n        // console.log('DayRoutine component did mount');\n        const docRef = db.collection('users').doc('7R6hAVmDrNutRkG3sVRy');\n        docRef.get().then((doc) => {\n            if (doc.exists) {\n                // console.log(doc.data());\n                var x = doc.data();\n                // console.log(\"from DayRoutines\");\n                // console.log(x['goals&routines']);\n                x = x['goals&routines'];\n                let routine = [];\n                let goal = [];\n                for (let i = 0; i < x.length; ++i) {\n                    if (!x[i]['deleted'] && x[i]['is_persistent']) {\n                        // console.log(\"routine \" + x[i]['title']);\n                        routine.push(x[i]);\n                    }\n                    else if (!x[i]['deleted'] && !x[i]['is_persistent']) {\n                        // console.log(\"not routine \" + x[i]['title']);\n                        goal.push(x[i]);\n                    }\n                }\n                this.setState({\n                    originalGoalsAndRoutineArr: x,\n                    goals: goal,\n                    routines: routine\n                })\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n        }).catch(function (error) {\n            console.log(\"Error getting document:\", error);\n        });\n    }\n\n\n    dayView = () => { //this essentially creates the time row\n        let arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayDayViewRoutines\" + i}>\n                    <Col style={{\n                        borderTop: \"1px solid  mistyrose\",\n                    textAlign: \"right\",\n                    height: this.state.pxPerHour }}>\n                        {i}:00\n                    </Col >\n                </Row>\n            )\n        }\n        return arr\n    }\n\n    RoutineClicked = () =>{\n        this.props.dayRoutineClick();\n    }\n\n    /**\n     * getEventItem: given an hour, this will return all events that was started during that hour\n     *\n    */\n    getEventItem = (hour) => {\n        var res = []\n        var arr = this.state.routines;\n        var sameTimeEventCount = 0;\n        let itemWidth = this.state.eventBoxSize;\n        // var overlapEvent = 0;\n        var addmarginLeft = 0;\n        var fontSize = 10;\n        for (let i = 0; i < arr.length; i++) {\n\n            let start_dateObj = new Date();\n            let start_dateStr = start_dateObj.toISOString().split('T').shift();\n            let start_timeStr = arr[i].available_start_time;\n            let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n            let end_dateObj = new Date();\n            let end_dateStr = end_dateObj.toISOString().split('T').shift();\n            let end_timeStr = arr[i].available_end_time;\n            let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n            let tempStartTime = start_timeAndDate;\n            let tempEndTime = end_timeAndDate;\n            /**\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\n            */\n            if (tempStartTime.getHours() === hour) {\n                // console.log(\"matched\" + i );\n                let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                let minDiff = (tempEndTime.getMinutes()) / 60;\n                let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                let color = 'PaleTurquoise';\n\n                sameTimeEventCount++;\n                //check if there is already an event there overlapping from another hour\n                for(let i = 0; i < arr.length; i++){\n                    let start_dateObj = new Date();\n                    let start_dateStr = start_dateObj.toISOString().split('T').shift();\n                    let start_timeStr = arr[i].available_start_time;\n                    let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n        \n                    let end_dateObj = new Date();\n                    let end_dateStr = end_dateObj.toISOString().split('T').shift();\n                    let end_timeStr = arr[i].available_end_time;\n                    let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n        \n                    let tempStartTime = start_timeAndDate;\n                    let tempEndTime = end_timeAndDate;\n                    if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\n                        // console.log(\"We ARE IN HEREEEE\");\n                        addmarginLeft += 20;\n                        itemWidth = itemWidth - 20;\n                        // overlapEvent++;\n                    }\n                }\n                \n                if(sameTimeEventCount > 1  ){\n                     addmarginLeft += 20; \n                    // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                    // itemWidth = itemWidth/(sameHourItems-1);\n                    itemWidth = itemWidth - 20;\n                    // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\n                }\n                \n                //chnage font size if not enough space \n                if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\n                    fontSize = 8;\n                }\n                // change color if more than one event in same time. \n                if(sameTimeEventCount <= 1){\n                     color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\n                }\n                else if( sameTimeEventCount === 2){\n                    color = 'skyblue';\n                }\n                else{\n                    color = 'blue';\n                }\n                let newElement =\n                    (<div key={\"dayRoutineItem\" + i}\n                    data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n\n                        onMouseOver={e => {\n                            e.target.style.color = \"#FFFFFF\";\n                            e.target.style.background = \"RebeccaPurple\";\n                            // e.target.style.marginLeft = \"5px\";\n                            // e.target.style.border= \"3px solid w\";\n                            e.target.style.zIndex=\"2\";\n\n\n\n\n                        }}\n                        onMouseOut={e => {\n                            e.target.style.zIndex=\"1\";\n\n                            // e.target.style.marginLeft = \"0px\";\n                             e.target.style.color = \"#000000\";\n                            //  e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\n                             e.target.style.border= \"1px lightgray solid\";\n\n                             e.target.style.background = color;\n\n\n                            }}\n\n                        onClick = {this.RoutineClicked}\n                        style={{\n                            zIndex: this.state.zIndex,\n                            marginTop: minsToMarginTop + \"px\",\n                            padding: \"5px\",\n                            // fontSize: \"10px\",\n                            border: \"1px lightgray solid \",\n                            // float: \"left\",\n                            borderRadius: \"5px\", \n                            // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\n                            //  width: this.state.eventBoxSize,\n                            position: \"absolute\", \n                            height: height + \"px\",\n\n                            fontSize: fontSize + \"px\",\n                            background: color,\n                            width: itemWidth + \"px\",\n                            marginLeft: addmarginLeft + \"px\"\n                        }}>\n                        {arr[i].title}\n                    </div>);\n                res.push(newElement);\n            }\n        }\n        return res;\n    }\n\n    /**\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\n    */\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n        var arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayRoutine\" + i} style={{ position: \"relative\" }}>\n                    <Col\n                        style={{\n                            position: \"relative\",\n                            borderTop: \"1px solid mistyrose\",\n                            width: '180px',\n                            background: \"aliceblue\",\n                            height: this.state.pxPerHour\n                        }}>\n                        {this.getEventItem(i)}\n                    </Col >\n                </Row>\n            )\n        }\n        return arr;\n    }\n\n    render() {\n        return (\n            <div style={{\n                padding: '20px',\n                // marginTop: \"10px\",\n                width: \"300px\",\n                borderRadius: \"20px\" }}>\n                Today's Routines:\n                <Container style={{}}>\n                    <Row >\n                        <Col>\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.dayViewItems()}\n                            </Container>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n\n}\n","import React, { Component } from 'react'\n// import axios from 'axios';\nimport moment from 'moment';\nimport {  Container, Row, Col} from 'react-bootstrap';\n\nimport firebase from \"./firebase\";\nexport default class DayGoals extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            firebaseRootPath: firebase.firestore().collection('users').doc('7R6hAVmDrNutRkG3sVRy'),\n            goals: [], //array to hold all  goals\n            routines: [], // array to hold all routines\n            dayEvents: [], //holds google events data for a single day\n            todayDateObject: moment(\"03/02/2020\"), //this is the date of interset for events to be displaye\n            pxPerHour: \"30px\", //preset size for all columns\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n            eventBoxSize: \"200\", //width size for event box\n        }\n    }\n\n    componentDidMount() {\n        this.grabFireBaseRoutinesGoalsData();\n    }\n\n    /**\n * grabFireBaseRoutinesGoalsData:\n * this function grabs the goals&routines array from the path located in this function\n * which will then populate the goals, routines,originalGoalsAndRoutineArr array\n * separately. The arrays will be used for display and data manipulation later.\n *\n*/\n    grabFireBaseRoutinesGoalsData = () => {\n        const db = firebase.firestore();\n        const docRef = db.collection('users').doc('7R6hAVmDrNutRkG3sVRy');\n        docRef.get().then((doc) => {\n            if (doc.exists) {\n                // console.log(doc.data());\n                var x = doc.data();\n                // console.log(\"from DayRoutines\");\n                // console.log(x['goals&routines']);\n                x = x['goals&routines'];\n                let routine = [];\n                let goal = [];\n                for (let i = 0; i < x.length; ++i) {\n                    if (!x[i]['deleted'] && x[i]['is_persistent']) {\n                        // console.log(\"routine \" + x[i]['title']);\n                        routine.push(x[i]);\n                    }\n                    else if (!x[i]['deleted'] && !x[i]['is_persistent']) {\n                        // console.log(\"not routine \" + x[i]['title']);\n                        goal.push(x[i]);\n                    }\n                }\n                this.setState({\n                    originalGoalsAndRoutineArr: x,\n                    goals: goal,\n                    routines: routine\n                })\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n            }\n        }).catch(function (error) {\n            console.log(\"Error getting document:\", error);\n        });\n    }\n\n\n    dayView = () => { //this essentially creates the time row\n        let arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayDayViewGoals\" + i}>\n                    <Col style={{ borderTop: \"1px solid mistyrose\", textAlign: \"right\", height: this.state.pxPerHour }}>\n                        {i}:00\n                    </Col >\n                </Row>\n            )\n        }\n        return arr\n    }\n   \n    GoalClicked  = ()=>{\n        this.props.dayGoalClick();\n    }\n    /**\n     * getEventItem: given an hour, this will return all events that was started during that hour\n     *\n    */\n    getEventItem = (hour) => {\n        var res = []\n        var arr = this.state.goals;\n        var sameTimeEventCount = 0;\n        let itemWidth = this.state.eventBoxSize;\n        // var overlapEvent = 0;\n        var addmarginLeft = 0;\n        var fontSize = 10;\n        for (let i = 0; i < arr.length; i++) {\n\n            let start_dateObj = new Date();\n            let start_dateStr = start_dateObj.toISOString().split('T').shift();\n            let start_timeStr = arr[i].available_start_time;\n            let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n            let end_dateObj = new Date();\n            let end_dateStr = end_dateObj.toISOString().split('T').shift();\n            let end_timeStr = arr[i].available_end_time;\n            let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n            let tempStartTime = start_timeAndDate;\n            let tempEndTime = end_timeAndDate;\n            /**\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\n            */\n            if (tempStartTime.getHours() === hour) {\n                // addmarginLeft = 0;\n                // itemWidth = this.state.eventBoxSize;\n                // itemWidth = 0;\n                // console.log(\"matched\" + i );\n                let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                let minDiff = (tempEndTime.getMinutes()) / 60;\n                let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                let color = 'PaleTurquoise';\n\n                sameTimeEventCount++;\n                //check if there is already an event there overlapping from another hour\n                for(let i = 0; i < arr.length; i++){\n                    let start_dateObj = new Date();\n                    let start_dateStr = start_dateObj.toISOString().split('T').shift();\n                    let start_timeStr = arr[i].available_start_time;\n                    let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n                    let end_dateObj = new Date();\n                    let end_dateStr = end_dateObj.toISOString().split('T').shift();\n                    let end_timeStr = arr[i].available_end_time;\n                    let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n                    let tempStartTime = start_timeAndDate;\n                    let tempEndTime = end_timeAndDate;\n                    if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\n                        //  console.log(\"this is statr time :\"+ tempStartTime.getHours() );\n                        //  console.log(\"this is end time :\"+ tempEndTime.getHours() );\n                        //  console.log(\"add 20\");\n                        addmarginLeft += 20;\n                        itemWidth = itemWidth - 20;\n                        // console.log(addmarginLeft);\n                        // overlapEvent++;\n                    }\n                }\n                \n                \n                if(sameTimeEventCount > 1  ){\n                    // console.log(\"In here because same hour  \");\n                    // console.log(\"add 20\");\n                     addmarginLeft += 20; \n                    // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                    // itemWidth = itemWidth/(sameHourItems-1);\n                    itemWidth = itemWidth - 20;\n                    // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\n                    // console.log(addmarginLeft);\n                }\n                // console.log(addmarginLeft);\n                // console.log(\"end of this element \");\n                \n                //chnage font size if not enough space \n                if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\n                    fontSize = 8;\n                }\n                // change color if more than one event in same time. \n                if(sameTimeEventCount <= 1){\n                     color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\n                }\n                else if( sameTimeEventCount === 2){\n                    color = 'skyblue';\n                }\n                else{\n                    color = 'blue';\n                }\n                let newElement =\n                    (<div key={\"dayGoalItem\" + i}\n                    data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n\n                        onMouseOver={e => {\n                            e.target.style.color = \"#FFFFFF\";\n                            e.target.style.background = \"RebeccaPurple\";\n                            // e.target.style.marginLeft = \"5px\";\n                            e.target.style.zIndex=\"2\";\n\n                        }}\n                        onMouseOut={e => {\n                            e.target.style.zIndex=\"1\";\n                            // e.target.style.marginLeft = \"0px\";\n                            e.target.style.color = \"#000000\";\n                            e.target.style.background = color;\n                            e.target.style.border= \"1px lightgray solid\";\n                            // e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\n                        }}\n                        onClick = {this.GoalClicked}\n                        style={{\n                            zIndex: this.state.zIndex,\n                            marginTop: minsToMarginTop + \"px\",\n                            padding: \"5px\",\n                            // fontSize: \"10px\",\n                            border: \"1px lightgray solid \",\n                            // float: \"left\",\n                            borderRadius: \"5px\", \n                            // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\n                            // width: this.state.eventBoxSize,\n                            position: \"absolute\", \n                            height: height + \"px\",\n\n                            fontSize: fontSize + \"px\",\n                            background: color,\n                            width: itemWidth + \"px\",\n                            marginLeft: addmarginLeft + \"px\"\n                        }}>\n                        {arr[i].title}\n                    </div>);\n                res.push(newElement);\n            }\n        }\n        return res;\n    }\n\n    /**\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\n    */\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n        var arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayGoal\" + i} style={{ position: \"relative\" }}>\n                    <Col\n                        style={{\n                            position: \"relative\",\n                            borderTop: \"1px solid mistyrose\",\n                            width: '180px',\n                            background: \"aliceblue\",\n                            height: this.state.pxPerHour\n                        }}>\n                        {this.getEventItem(i)}\n                    </Col >\n                </Row>\n            )\n        }\n        return arr;\n    }\n\n    render() {\n        return (\n\n\n            <div style={{margin:'20px',\n            padding: '20px',\n            marginTop: \"0px\",\n            width: \"300px\",\n            borderRadius: \"20px\" }}>\n                Today's Goals:\n                <Container style={{}}>\n                    <Row >\n                        {/* <div class=\"table col-md-1\" > */}\n                        <Col>\n                            {/* this is for the actual event slots */}\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.dayViewItems()}\n                            </Container>\n                            {/* </div> */}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n\n}\n","import React, { Component } from 'react'\n// import axios from 'axios';\n// import moment from 'moment';\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\nexport default class DayEvents extends Component {\n\n    constructor(props) {\n        super(props);\n        // console.log(this.props.dateContext);\n        this.state = {\n            //dayEvents: [], //holds google events data for a single day\n            // todayDateObject: moment(\"03/07/2020\"), //this is the date of interset for events to be displaye\n            pxPerHour: \"30px\", //preset size for all columns\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n            eventBoxSize: 150, //width size for event box\n            marginFromLeft: 0\n        }\n    }\n\n    timeDisplay = () => { //this essentially creates the time row\n        let arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayEvent\" + i}>\n                    <Col style={{\n                        borderTop: \"1px solid lavender\",\n                        textAlign: \"right\",\n                        height: this.state.pxPerHour\n                    }}>\n                        {i}:00\n                    </Col >\n                </Row>\n            )\n        }\n        return arr\n    }\n\n    onEventClick = (e, i) => {\n        var arr = this.props.dayEvents;\n        e.stopPropagation();\n        this.props.eventClickDayView(arr[i]);\n    }\n\n\n    /*\n     * TODO: events spanning multiple days\n     * getEventItem: given an hour, this will return all events that was started during that hour\n     *\n    */\n    getEventItem = (hour) => {\n        var res = []\n        var tempStart = null;\n        var tempEnd = null;\n        var arr = this.props.dayEvents;\n        var sameTimeEventCount = 0;\n        var addmarginLeft = 0;\n        let itemWidth = this.state.eventBoxSize;\n        var fontSize = 10;\n\n        for (let i = 0; i < arr.length; i++) {\n            tempStart = arr[i].start.dateTime;\n            tempEnd = arr[i].end.dateTime;\n            /**\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\n            */\n            let tempStartTime = new Date(tempStart);\n            let tempEndTime = new Date(tempEnd);\n            let curDate = this.props.dateContext.get('date')\n            if (tempStartTime.getDate() ===  curDate) {\n              if (tempStartTime.getHours() == hour) {\n                if (tempStartTime.getDate() !==  tempEndTime.getDate()) {\n                  let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                  let hourDiff = 24 - tempStartTime.getHours();\n                  let minDiff = 0;\n                  let color = 'lavender';\n                  let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                  sameTimeEventCount++;\n                  let newElement =\n                      (\n                          <div key={\"event\" + i}>\n                              <div\n\n                                  data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                  onMouseOver={e => {\n                                      e.target.style.color = \"#FFFFFF\";\n                                      e.target.style.background = \"RebeccaPurple\";\n                                      e.target.style.zIndex = \"2\";\n                                  }}\n                                  onMouseOut={e => {\n                                      e.target.style.zIndex = \"1\";\n                                      e.target.style.color = \"#000000\";\n                                      e.target.style.background = color;\n                                  }}\n                                  key={i}\n                                  // value = {i}\n                                  onClick={e => this.onEventClick(e, i)}\n                                  style={{\n                                      zIndex: this.state.zIndex,\n                                      marginTop: minsToMarginTop + \"px\",\n                                      padding: \"5px\",\n                                      fontSize: fontSize + \"px\",\n                                      border: \"1px lightgray solid \",\n                                      float: \"left\",\n                                      //  verticalAlign: \" \",\n                                      // verticalAlign: 'text-top',\n                                      // textAlign:\"left\",\n                                      borderRadius: \"5px\",\n                                      background: color,\n                                      // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                      width: itemWidth + \"px\",\n                                      position: \"absolute\",\n                                      height: height + \"px\",\n                                      marginLeft: addmarginLeft + \"px\"\n                                  }}>\n                                  {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                  {arr[i].summary}\n                              </div>\n                          </div>\n                      );\n                  res.push(newElement);\n                } else {\n                  // addmarginLeft = 0;\n                  // itemWidth = this.state.eventBoxSize;\n                  let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                  let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                  let minDiff = (tempEndTime.getMinutes()) / 60;\n                  let color = 'PaleTurquoise';\n                  let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                  sameTimeEventCount++;\n                  //check if there is already an event there overlapping from another hour\n                  for (let i = 0; i < arr.length; i++) {\n                      tempStart = arr[i].start.dateTime;\n                      tempEnd = arr[i].end.dateTime;\n                      let tempStartTime = new Date(tempStart);\n                      let tempEndTime = new Date(tempEnd);\n                      if (tempStartTime.getHours() < hour && tempEndTime.getHours() > hour) {\n                          addmarginLeft += 20;\n                          itemWidth = itemWidth - 20;\n                      }\n                  }\n\n                  if (sameTimeEventCount > 1) {\n                      // console.log(\"add 20 in day\");\n                      addmarginLeft += 20;\n                      // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                      // itemWidth = itemWidth/(sameHourItems-1);\n                      itemWidth = itemWidth - 20;\n                  }\n                  //chnage font size if not enough space\n                  if ((tempEndTime.getHours() - tempStartTime.getHours()) < 2) {\n                      fontSize = 8;\n                  }\n\n                  // change color if more than one event in same time.\n                  if (sameTimeEventCount <= 1) {\n                      color = (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue');\n                  }\n                  else if (sameTimeEventCount == 2) {\n                      color = 'skyblue';\n                  }\n                  else {\n                      color = 'blue';\n                  }\n\n                  let newElement =\n                      (\n\n                          <div key={\"event\" + i}>\n                              <div\n\n                                  data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                  onMouseOver={e => {\n                                      e.target.style.color = \"#FFFFFF\";\n                                      e.target.style.background = \"RebeccaPurple\";\n                                      e.target.style.zIndex = \"2\";\n                                  }}\n                                  onMouseOut={e => {\n                                      e.target.style.zIndex = \"1\";\n                                      e.target.style.color = \"#000000\";\n                                      e.target.style.background = color;\n                                  }}\n                                  key={i}\n                                  // value = {i}\n                                  onClick={e => this.onEventClick(e, i)}\n                                  style={{\n                                      zIndex: this.state.zIndex,\n                                      marginTop: minsToMarginTop + \"px\",\n                                      padding: \"5px\",\n                                      fontSize: fontSize + \"px\",\n                                      border: \"1px lightgray solid \",\n                                      float: \"left\",\n                                      //  verticalAlign: \" \",\n                                      // verticalAlign: 'text-top',\n                                      // textAlign:\"left\",\n                                      borderRadius: \"5px\",\n                                      background: color,\n                                      // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                      width: itemWidth + \"px\",\n                                      position: \"absolute\",\n                                      height: height + \"px\",\n                                      marginLeft: addmarginLeft + \"px\"\n                                  }}>\n                                  {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                  {arr[i].summary}\n                              </div>\n                          </div>\n                      );\n                  res.push(newElement);\n                }\n              }\n            } else if ( hour === 0 && tempEndTime.getDate() ===  curDate) {\n              let minsToMarginTop = 0\n              let hourDiff = tempEndTime.getHours();\n              let minDiff = (tempEndTime.getMinutes()) / 60;\n              let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n              let color = 'lavender';\n              sameTimeEventCount++;\n              let newElement =\n                  (\n                      <div key={\"event\" + i}>\n                          <div\n                              data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                              onMouseOver={e => {\n                                  e.target.style.color = \"#FFFFFF\";\n                                  e.target.style.background = \"RebeccaPurple\";\n                                  e.target.style.zIndex = \"2\";\n                              }}\n                              onMouseOut={e => {\n                                  e.target.style.zIndex = \"1\";\n                                  e.target.style.color = \"#000000\";\n                                  e.target.style.background = color;\n                              }}\n                              key={i}\n                              // value = {i}\n                              onClick={e => this.onEventClick(e, i)}\n                              style={{\n                                  zIndex: this.state.zIndex,\n                                  marginTop: minsToMarginTop + \"px\",\n                                  padding: \"5px\",\n                                  fontSize: fontSize + \"px\",\n                                  border: \"1px lightgray solid \",\n                                  float: \"left\",\n                                  //  verticalAlign: \" \",\n                                  // verticalAlign: 'text-top',\n                                  // textAlign:\"left\",\n                                  borderRadius: \"5px\",\n                                  background: color,\n                                  // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                  width: itemWidth + \"px\",\n                                  position: \"absolute\",\n                                  height: height + \"px\",\n                                  marginLeft: addmarginLeft + \"px\"\n                              }}>\n                              {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                              {arr[i].summary}\n                          </div>\n                      </div>\n                  );\n                  res.push(newElement);\n            } else if ( hour === 0 && tempStartTime.getDate() < curDate && tempEndTime.getDate() > curDate ){\n              let minsToMarginTop = 0\n              let hourDiff = 24\n              let height = (hourDiff) * this.state.pxPerHourForConversion;\n              let color = 'lavender';\n              sameTimeEventCount++;\n              let newElement =\n                  (\n                      <div key={\"event\" + i}>\n                          <div\n                              data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                              onMouseOver={e => {\n                                  e.target.style.color = \"#FFFFFF\";\n                                  e.target.style.background = \"RebeccaPurple\";\n                                  e.target.style.zIndex = \"2\";\n                              }}\n                              onMouseOut={e => {\n                                  e.target.style.zIndex = \"1\";\n                                  e.target.style.color = \"#000000\";\n                                  e.target.style.background = color;\n                              }}\n                              key={i}\n                              // value = {i}\n                              onClick={e => this.onEventClick(e, i)}\n                              style={{\n                                  zIndex: this.state.zIndex,\n                                  marginTop: minsToMarginTop + \"px\",\n                                  padding: \"5px\",\n                                  fontSize: fontSize + \"px\",\n                                  border: \"1px lightgray solid \",\n                                  float: \"left\",\n                                  //  verticalAlign: \" \",\n                                  // verticalAlign: 'text-top',\n                                  // textAlign:\"left\",\n                                  borderRadius: \"5px\",\n                                  background: color,\n                                  // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                  width: itemWidth + \"px\",\n                                  position: \"absolute\",\n                                  height: height + \"px\",\n                                  marginLeft: addmarginLeft + \"px\"\n                              }}>\n                              {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                              {arr[i].summary}\n                          </div>\n                      </div>\n                  );\n              res.push(newElement);\n            }\n        }\n        return res;\n    }\n\n    onDayClick = (e, i) => {\n\n        console.log(\"this is the hour:\" + i);\n        this.props.handleDateClick((this.props.dateContext.format(\"M\") + '/' + this.props.dateContext.format(\"D\") + '/' + this.props.dateContext.format(\"Y\")), i);\n    }\n\n\n    /**\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\n    */\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n        var arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayEvent\" + i} style={{ position: \"relative\" }}>\n                    <Col\n                        style={{\n                            position: \"relative\",\n                            borderTop: \"1px solid lavender\",\n                            width: '180px', //lyman change width to adjust\n                            background: \"aliceblue\",\n                            height: this.state.pxPerHour\n                        }}\n                        onClick={e => this.onDayClick(e, i)}\n                    >\n                        {this.getEventItem(i)}\n                    </Col >\n                </Row>\n            )\n        }\n        return arr;\n    }\n\n    render() {\n        return (\n            <div style={{\n                padding: '20px',\n                width: \"300px\",\n                borderRadius: \"20px\"\n            }}>\n                Today's Events:\n                <Container style={{}}>\n                    <Row >\n                        <Col >\n                            {/* this is Just for the time */}\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.timeDisplay()}\n                            </Container>\n                        </Col>\n                        <Col>\n                            {/* this is for the actual event slots */}\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.dayViewItems()}\n                            </Container>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment';\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\nexport default class WeekEvents extends Component {\n  constructor(props) {\n      super(props);\n      // console.log(this.props.dateContext);\n      this.state = {\n          dayEvents: [], //holds google events data for a single day\n          todayDateObject: moment(\"03/07/2020\"), //this is the date of interset for events to be displaye\n          pxPerHour: \"30px\", //preset size for all columns\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n          eventBoxSize: 130, //width size for event box\n          marginFromLeft: 0\n      }\n  }\n\n  timeDisplay = () => { //this essentially creates the time row\n      let arr = [];\n      for (let i = 0; i < 24; ++i) {\n          arr.push(\n              <Row key={\"dayEvent\" + i}>\n                  <Col style={{\n                      borderTop: \"1px solid lavender\",\n                      textAlign: \"right\",\n                      height: this.state.pxPerHour,\n                  }}>\n                      {i}:00\n                  </Col >\n              </Row>\n          )\n      }\n      return arr\n  }\n\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n      var res= [];\n      for (let i = 0; i < 7; ++i) {\n          var arr = []\n          for( let j = 0; j < 24; ++j) {\n            arr.push(\n              <Container>\n                <Row key={\"weekEvent\" + i + j} style={{ position: \"relative\"}}>\n                  <Col\n                      style={{\n                          position: \"relative\",\n                          borderTop: \"1px solid lavender\",\n                          background: \"aliceblue\",\n                          height: this.state.pxPerHour,\n                      }}\n                  >\n                      {/*TODO: Place calendar events {i} {j}*/}\n                  </Col >\n                </Row>\n              </Container>\n            );\n          }\n        res.push(\n          <Col>\n            {arr}\n          </Col>\n        );\n      }\n      return res;\n  }\n\n render() {\n    let weekdays = moment.weekdays().map((day) => {\n      return (\n        <Col className=\"fancytext\">{day}</Col>\n      )\n    });\n     return (\n         <Container style={{ height: 'auto', width: '1000px'}}>\n           <Row>\n             Events\n           </Row>\n           <Row>\n             <Col className=\"fancytext\">Time</Col>\n             {weekdays}\n           </Row>\n           <Row style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\n             <Col >\n                 <Container style={{ margin: '0', padding: '0', width: '80px' }}>\n                     {this.timeDisplay()}\n                 </Container>\n             </Col>\n             {this.weekViewItems()}\n           </Row>\n         </Container>\n     )\n }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment';\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\nexport default class WeekRoutines extends Component {\n  constructor(props) {\n      super(props);\n      // console.log(this.props.dateContext);\n      this.state = {\n          dayEvents: [], //holds google events data for a single day\n          todayDateObject: moment(\"03/07/2020\"), //this is the date of interset for events to be displaye\n          pxPerHour: \"30px\", //preset size for all columns\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n          eventBoxSize: 130, //width size for event box\n          marginFromLeft: 0\n      }\n  }\n\n  timeDisplay = () => { //this essentially creates the time row\n      let arr = [];\n      for (let i = 0; i < 24; ++i) {\n          arr.push(\n              <Row key={\"dayEvent\" + i}>\n                  <Col style={{\n                      borderTop: \"1px solid lavender\",\n                      textAlign: \"right\",\n                      height: this.state.pxPerHour,\n                  }}>\n                      {i}:00\n                  </Col >\n              </Row>\n          )\n      }\n      return arr\n  }\n\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n      var res= [];\n      for (let i = 0; i < 7; ++i) {\n          var arr = []\n          for( let j = 0; j < 24; ++j) {\n            arr.push(\n              <Container>\n                <Row key={\"weekEvent\" + i + j} style={{ position: \"relative\"}}>\n                  <Col\n                      style={{\n                          position: \"relative\",\n                          borderTop: \"1px solid lavender\",\n                          background: \"aliceblue\",\n                          height: this.state.pxPerHour,\n                      }}\n                  >\n                      {/*TODO: Place Routine events {i} {j}*/}\n                  </Col >\n                </Row>\n              </Container>\n            );\n          }\n        res.push(\n          <Col>\n            {arr}\n          </Col>\n        );\n      }\n      return res;\n  }\n\n render() {\n    let weekdays = moment.weekdays().map((day) => {\n      return (\n        <Col className=\"fancytext\">{day}</Col>\n      )\n    });\n     return (\n         <Container style={{ height: 'auto', width: '1000px'}}>\n           <Row>\n             Routines\n           </Row>\n           <Row>\n             <Col className=\"fancytext\">Time</Col>\n             {weekdays}\n           </Row>\n           <Row style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\n             <Col >\n                 <Container style={{ margin: '0', padding: '0', width: '80px' }}>\n                     {this.timeDisplay()}\n                 </Container>\n             </Col>\n             {this.weekViewItems()}\n           </Row>\n         </Container>\n     )\n }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment';\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\nexport default class WeekGoals extends Component {\n  constructor(props) {\n      super(props);\n      // console.log(this.props.dateContext);\n      this.state = {\n          dayEvents: [], //holds google events data for a single day\n          todayDateObject: moment(\"03/07/2020\"), //this is the date of interset for events to be displaye\n          pxPerHour: \"30px\", //preset size for all columns\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n          eventBoxSize: 130, //width size for event box\n          marginFromLeft: 0\n      }\n  }\n\n  timeDisplay = () => { //this essentially creates the time row\n      let arr = [];\n      for (let i = 0; i < 24; ++i) {\n          arr.push(\n              <Row key={\"dayEvent\" + i}>\n                  <Col style={{\n                      borderTop: \"1px solid lavender\",\n                      textAlign: \"right\",\n                      height: this.state.pxPerHour,\n                  }}>\n                      {i}:00\n                  </Col >\n              </Row>\n          )\n      }\n      return arr\n  }\n\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n      var res= [];\n      for (let i = 0; i < 7; ++i) {\n          var arr = []\n          for( let j = 0; j < 24; ++j) {\n            arr.push(\n              <Container>\n                <Row key={\"weekEvent\" + i + j} style={{ position: \"relative\"}}>\n                  <Col\n                      style={{\n                          position: \"relative\",\n                          borderTop: \"1px solid lavender\",\n                          background: \"aliceblue\",\n                          height: this.state.pxPerHour,\n                      }}\n                  >\n                      {/*TODO: Place Goal events {i} {j}*/}\n                  </Col >\n                </Row>\n              </Container>\n            );\n          }\n        res.push(\n          <Col>\n            {arr}\n          </Col>\n        );\n      }\n      return res;\n  }\n\n render() {\n    let weekdays = moment.weekdays().map((day) => {\n      return (\n        <Col className=\"fancytext\">{day}</Col>\n      )\n    });\n     return (\n         <Container style={{ height: 'auto', width: '1000px'}}>\n           <Row>\n             Goals\n           </Row>\n           <Row>\n             <Col className=\"fancytext\">Time</Col>\n             {weekdays}\n           </Row>\n           <Row style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\n             <Col >\n                 <Container style={{ margin: '0', padding: '0', width: '80px' }}>\n                     {this.timeDisplay()}\n                 </Container>\n             </Col>\n             {this.weekViewItems()}\n           </Row>\n         </Container>\n     )\n }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Modal,\n  Dropdown,\n  DropdownButton\n} from \"react-bootstrap\";\nimport Firebasev2 from \"./Firebasev2.jsx\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport TylersCalendarv1 from \"./TCal.jsx\";\nimport DayRoutines from \"./DayRoutines.jsx\";\nimport DayGoals from \"./DayGoals.jsx\";\nimport DayEvents from \"./DayEvents.jsx\";\nimport WeekEvents from \"./WeekEvents.jsx\";\nimport WeekRoutines from \"./WeekRoutines.jsx\";\nimport WeekGoals from \"./WeekGoals.jsx\";\n// import RepeatModal from \"./RepeatModal.jsx\";\n// import EventBeforeChecked from \"./EventBeforeChecked.jsx\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faImage\n} from \"@fortawesome/free-solid-svg-icons\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalEvents: [], //holds the google events data in it's original JSON form\n      dayEvents: [], //holds google events data for a single day\n      showRoutineGoalModal: false,\n      showGoalModal: false,\n      showRoutineModal: false,\n      showAboutModal: false,\n      dayEventSelected: false, //use to show modal to create new event\n      // modelSelected: false, // use to display the routine/goals modal\n      newEventID: \"\", //save the event ID for possible future use\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventNotification: 30,\n      newEventDescription: \"\",\n      // newEventStart: \"\", //this variable and any use of it in the code should be DELETED in future revisions\n      // newEventEnd: \"\", //this variable and any use of it in the code should be DELETED in future revisions\n      newEventStart0: new Date(), //start and end for a event... it's currently set to today\n      newEventEnd0: new Date(), //start and end for a event... it's currently set to today\n      isEvent: false, // use to check whether we clicked on a event and populate extra buttons in event form\n      //////////New additions for new calendar\n      dateContext: moment(), //Keep track of day and month\n      todayDateObject: moment(), //Remember today's date to create the circular effect over todays day\n      // selectedDay: null, // Any use of this variable should be deleted in future revisions\n      calendarView: \"Day\", // decides which type of calendar to display\n      showRepeatModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      notificationBeforeChecked: false,\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\"\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\"\n      },\n      repeatSummary: \"\"\n      // repeatOccurrence: newEventStart0\n    };\n  }\n\n  handleRepeatDropDown = (eventKey, week_days) => {\n    if (eventKey === \"WEEK\") {\n      const newByDay = {\n        ...this.state.byDay_temp,\n        [this.state.newEventStart0.getDay()]: week_days[\n          this.state.newEventStart0.getDay()\n        ]\n      };\n      this.setState({\n        repeatDropDown_temp: eventKey,\n        byDay_temp: newByDay\n      });\n    }\n    this.setState({\n      repeatDropDown_temp: eventKey\n    });\n  };\n\n  handleRepeatMonthlyDropDown = eventKey => {\n    this.setState({\n      repeatMonthlyDropDown: eventKey\n    });\n  };\n\n  handleRepeatEndDate = date => {\n    this.setState(\n      {\n        repeatEndDate_temp: date\n      },\n      console.log(\"handleRepeatEndDate\", date, this.state.repeatEndDate)\n    );\n  };\n\n  handleRepeatInputValue = eventKey => {\n    this.setState({\n      repeatInputValue_temp: eventKey\n    });\n  };\n\n  handleRepeatOccurrence = eventKey => {\n    this.setState({\n      repeatOccurrence_temp: eventKey\n    });\n  };\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    this.updateEventsArray();\n  }\n  /*\n  getThisMonthEvents:\n  By passing in a empty interval, this method will get a response from the server with\n  the current month's events\n  */\n  getThisMonthEvents = () => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {}\n      })\n      .then(response => {\n        var events = response.data;\n        this.setState({ originalEvents: events }, () => {\n          console.log(\"New Events Arrived cdm\", response.data);\n        });\n      })\n      .catch(error => {\n        //console.log('Error Occurred ' + error);\n      });\n  };\n\n  handleDayEventClick = A => {\n    var guestList = \"\";\n    if (A.attendees) {\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\n        return guestList + \" \" + nextGuest.email;\n      }, \"\");\n      console.log(\"Guest List:\", A.attendees, guestList);\n    }\n    this.setState({\n      newEventID: A.id,\n      newEventStart0: A.start.dateTime\n        ? new Date(A.start.dateTime)\n        : new Date(A.start.date),\n      newEventEnd0: A.end.dateTime\n        ? new Date(A.end.dateTime)\n        : new Date(A.end.date),\n      newEventName: A.summary,\n      newEventGuests: guestList,\n      newEventLocation: A.location ? A.location : \"\",\n      newEventNotification: A.reminders.overrides\n        ? A.reminders.overrides[0].minutes\n        : \"\",\n      newEventDescription: A.description ? A.description : \"\",\n      dayEventSelected: true,\n      isEvent: true,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\"\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\"\n      }\n    });\n  };\n\n  /*\n  handleEventClick For Month View.\n  when a event on the calendar is clicked, the function below\n  will execute and save the clicked event varibles to this.state and\n  passed that into the form where the user can edit that data\n\n  TODO: set dateContext to the date clicked\n  */\n  handleEventClick = i => {\n    // bind with an arrow function\n    let A = this.state.originalEvents[i];\n    console.log(\"A\", A);\n    //Guest list erroneously includes owner's email as well\n    var guestList = \"\";\n    if (A.attendees) {\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\n        return guestList + \" \" + nextGuest.email;\n      }, \"\");\n      console.log(\"Guest List:\", A.attendees, guestList);\n    }\n    this.setState(\n      {\n        newEventID: A.id,\n        newEventStart0: A.start.dateTime\n          ? new Date(A.start.dateTime)\n          : new Date(A.start.date),\n        newEventEnd0: A.end.dateTime\n          ? new Date(A.end.dateTime)\n          : new Date(A.end.date),\n        newEventName: A.summary,\n        newEventGuests: guestList,\n        newEventLocation: A.location ? A.location : \"\",\n        newEventNotification: A.reminders.overrides\n          ? A.reminders.overrides[0].minutes\n          : \"\",\n        newEventDescription: A.description ? A.description : \"\",\n        dayEventSelected: true,\n        isEvent: true,\n        showRepeatModal: false,\n        repeatOption: false,\n        repeatOptionDropDown: \"Does not repeat\",\n        repeatDropDown: \"DAY\",\n        repeatDropDown_temp: \"DAY\",\n        repeatMonthlyDropDown: \"Monthly on day 13\",\n        repeatInputValue: \"1\",\n        repeatInputValue_temp: \"1\",\n        repeatOccurrence: \"1\",\n        repeatOccurrence_temp: \"1\",\n        repeatRadio: \"Never\",\n        repeatRadio_temp: \"Never\",\n        repeatEndDate: \"\",\n        repeatEndDate_temp: \"\",\n        showNoTitleError: \"\",\n        showDateError: \"\",\n        showAboutModal: false,\n        byDay: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\"\n        },\n        byDay_temp: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\"\n        }\n      },\n      () => {\n        console.log(\"callback from handEventClick\");\n      }\n    );\n  };\n\n  handleDateClickOnDayView = (arg, i) => {\n    var newStart = new Date(arg);\n    newStart.setHours(i, 0, 0);\n    var newEnd = new Date(arg);\n    newEnd.setHours(i + 1, 0, 0);\n    this.setState({\n      newEventID: \"\",\n      newEventStart0: newStart,\n      newEventEnd0: newEnd,\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventNotification: 30,\n      newEventDescription: \"\",\n      dayEventSelected: true,\n      isEvent: false,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\"\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\"\n      }\n    });\n  };\n\n  /*\n  handleDateClick on Month View.\n  This will trigger when a date is clicked, it will present\n  the user with a new form to create a event\n  */\n  //TODO: Initialize Date, set other properties to empty\n  handleDateClick = arg => {\n    var newStart = new Date(arg);\n    newStart.setHours(0, 0, 0, 0);\n    var newEnd = new Date(arg);\n    newEnd.setHours(23, 59, 59, 59);\n    this.setState(\n      {\n        newEventID: \"\",\n        newEventStart0: newStart,\n        newEventEnd0: newEnd,\n        newEventName: \"\",\n        newEventGuests: \"\",\n        newEventLocation: \"\",\n        newEventNotification: 30,\n        newEventDescription: \"\",\n        dayEventSelected: true,\n        isEvent: false,\n        repeatOption: false,\n        repeatOptionDropDown: \"Does not repeat\",\n        repeatDropDown: \"DAY\",\n        repeatDropDown_temp: \"DAY\",\n        repeatMonthlyDropDown: \"Monthly on day 13\",\n        repeatInputValue: \"1\",\n        repeatInputValue_temp: \"1\",\n        repeatOccurrence: \"1\",\n        repeatOccurrence_temp: \"1\",\n        repeatRadio: \"Never\",\n        repeatRadio_temp: \"Never\",\n        repeatEndDate: \"\",\n        repeatEndDate_temp: \"\",\n        showNoTitleError: \"\",\n        showDateError: \"\",\n        showAboutModal: false,\n        byDay: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\"\n        },\n        byDay_temp: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\"\n        }\n      },\n      console.log(\"handledateclick\")\n    );\n  };\n\n  validate = () => {\n    let titleError = \"\";\n    let dayError = \"\";\n    var startDay = new Date(this.state.newEventStart0).getDate();\n    var endDay = new Date(this.state.newEventEnd0).getDate();\n    var startMonth = new Date(this.state.newEventStart0).getUTCMonth();\n    var endMonth = new Date(this.state.newEventEnd0).getUTCMonth();\n    var startYear = new Date(this.state.newEventStart0).getFullYear();\n    var endYear = new Date(this.state.newEventEnd0).getFullYear();\n    var startHour = new Date(this.state.newEventStart0).getHours();\n    var endHour = new Date(this.state.newEventEnd0).getHours();\n    if (\n      (startDay > endDay && startMonth === endMonth) ||\n      (startMonth > endMonth && startYear === endYear) ||\n      startYear > endYear ||\n      (startHour > endHour && startDay === endDay)\n    ) {\n      dayError = \"Invalid: start date is before end date\";\n    }\n    if (this.state.newEventName === \"\") {\n      titleError = \"Invalid: No Title\";\n    }\n    //empty string evalutes to false.\n    if (titleError || dayError) {\n      this.setState({ showNoTitleError: titleError, showDateError: dayError });\n      return false;\n    }\n    return true;\n  };\n\n  // handleSubmit:\n\n  handleExpandClick = arg => {\n    let newDate = new Date(arg);\n    console.log(newDate);\n    this.setState(\n      {\n        dateContext: moment(newDate),\n        calendarView: \"Day\"\n      },\n      this.updateEventsArray\n    );\n  };\n\n  // handleSubmit:\n\n  // submits the data to be passed up to be integrated into google calendar\n\n  handleSubmit = event => {\n    if (this.state.start === \"\" || this.state.end === \"\") {\n      console.log(\"invalid params\");\n      return;\n    }\n    const isValid = this.validate();\n    if (isValid) {\n      event.preventDefault();\n      this.createEvent(this.state.newEventName);\n      this.setState({ showNoTitleError: \"\", showDateError: \"\" });\n    }\n  };\n\n  updateEventClick = event => {\n    event.preventDefault();\n    const isValid = this.validate();\n    if (isValid) {\n      if (this.state.newEventID === \"\") {\n        return;\n      } else {\n        for (let i = 0; i < this.state.originalEvents.length; i++) {\n          if (this.state.originalEvents[i].id === this.state.newEventID) {\n            this.updateRequest(i);\n          }\n        }\n      }\n    }\n  };\n\n  /*\n  updateRequest:\n  updates the google calendar based  on\n  */\n  updateRequest = index => {\n    const guests = this.state.newEventGuests;\n    var formattedEmail = null;\n    const emailList = guests.match(\n      /[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*(\\.)?/g\n    );\n    if (emailList) {\n      formattedEmail = emailList.map(guests => {\n        return {\n          email: guests,\n          responseStatus: \"needsAction\"\n        };\n      });\n    }\n\n    var minutesNotification = 30;\n    if (this.state.newEventNotification) {\n      minutesNotification = this.state.newEventNotification;\n    }\n\n    let updatedEvent = this.state.originalEvents[index];\n    updatedEvent.summary = this.state.newEventName;\n    updatedEvent.attendees = formattedEmail;\n    updatedEvent.location = this.state.newEventLocation;\n    updatedEvent.description = this.state.newEventDescription;\n    updatedEvent.start.dateTime = this.state.newEventStart0.toISOString();\n    updatedEvent.start.timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    updatedEvent.end.dateTime = this.state.newEventEnd0.toISOString();\n    updatedEvent.end.timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    updatedEvent.recurrence =\n      this.state.repeatOption && this.defineRecurrence();\n    updatedEvent.reminders = {\n      overrides: [\n        {\n          method: \"popup\",\n          minutes: minutesNotification\n        }\n      ],\n      useDefault: false,\n      sequence: 0\n    };\n\n    axios\n      .put(\"/updateEvent\", {\n        extra: updatedEvent,\n        ID: this.state.newEventID\n      })\n      .then(response => {\n        this.setState({\n          dayEventSelected: false,\n          newEventName: \"\",\n          // newEventStart: '',\n          // newEventEnd: '',\n          newEventStart0: new Date(),\n          newEventEnd0: new Date()\n        });\n\n        this.updateEventsArray();\n      })\n\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  defineRecurrence = () => {\n    // frequency in RRULE\n    let frequency =\n      this.state.repeatDropDown === \"DAY\"\n        ? \"DAILY\"\n        : this.state.repeatDropDown.concat(\"LY\");\n\n    // recurrence string\n    let rrule = `RRULE:FREQ=${frequency};INTERVAL=${this.state.repeatInputValue}`;\n    let recurrence = [];\n    let exdate = \"\";\n\n    // If seleted WEEK, add BYDAY to recurrence string\n    if (this.state.repeatDropDown === \"WEEK\") {\n      let selectedDays = [];\n      for (let [key, value] of Object.entries(this.state.byDay)) {\n        // Excluding today if today is not selected\n        if (key === this.state.newEventStart0.getDay().toString()) {\n          if (value === \"\") {\n            exdate = `EXDATE;TZID=America/Los_Angeles:${moment(\n              this.state.newEventStart0\n            ).format(\"YYYYMMDD\")}T070000Z`;\n            recurrence.unshift(exdate);\n          }\n        }\n        value !== \"\" && selectedDays.push(value.substring(0, 2).toUpperCase());\n      }\n      rrule = rrule.concat(`;BYDAY=${selectedDays.toString()}`);\n    }\n\n    // If selected After, add COUNT to recurrence string\n    if (this.state.repeatRadio === \"After\")\n      rrule = rrule.concat(`;COUNT=${this.state.repeatOccurrence}`);\n\n    // If selected On, add UNTIL to recurrence string\n    if (this.state.repeatRadio === \"On\") {\n      let repeat_end_date = moment(this.state.repeatEndDate).add(1, \"days\");\n      rrule = rrule.concat(`;UNTIL=${repeat_end_date.format(\"YYYYMMDD\")}`);\n    }\n\n    recurrence.push(rrule);\n    console.log(\"recurrence\", recurrence);\n    return recurrence;\n  };\n\n  /*\n  calls the backend API to delete a item with a particular eventID\n  */\n\n  deleteSubmit = () => {\n    if (this.state.newEventID === \"\") {\n      return;\n    }\n    axios\n      .post(\"/deleteEvent\", {\n        ID: this.state.newEventID\n      })\n      .then(response => {\n        // console.log(response);\n        this.setState({\n          dayEventSelected: false\n          // newEventStart: \"\",\n          // newEventEnd: \"\"\n        });\n        this.updateEventsArray();\n      })\n\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  /*\n  createEvent:\n  Basically creates a new event based on details given\n  */\n  /*\n   * TODO: Replace formatting email with function\n   */\n  /*\n   * https://tools.ietf.org/html/rfc3696 for what is valid email addresses\n   *\n   * local-part@domain-part\n   * local-part: alphanumeric, symbols ! # $ % & ' * + - / = ?  ^ _ ` . { | } ~ with restriction no two . in a row\n   * localWord = [a-zA-Z!#$%&'*+\\-/=?^_`{|}~]+\n   * localPart = localWord (\\.localWord)*\n   * domain-part:\n   * domains: alphanumeric, symbol - with restriction - not at beginning or end\n   * dot separate domains, top level domain can have optional . at end\n   * domain = [a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?\n   * domainPart = domain(\\.domain)*\\.domain(\\.)?\n   * email: localPart@domainPart\n   */\n  //Note: This works, but does not email the guests that they are invited to the event\n  createEvent = newTitle => {\n    const guests = this.state.newEventGuests;\n    var formattedEmail = null;\n    const emailList = guests.match(\n      /[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*(\\.)?/g\n    );\n    if (emailList) {\n      formattedEmail = emailList.map(guests => {\n        return {\n          email: guests,\n          responseStatus: \"needsAction\"\n        };\n      });\n    }\n\n    var minutesNotification = 30;\n    if (this.state.newEventNotification) {\n      minutesNotification = this.state.newEventNotification;\n    }\n\n    let event = {\n      summary: this.state.newEventName,\n      location: this.state.newEventLocation,\n      description: this.state.newEventDescription,\n      reminders: {\n        useDefault: false,\n        sequence: 0,\n        overrides: [\n          {\n            method: \"popup\",\n            minutes: minutesNotification\n          }\n        ]\n      },\n      start: {\n        dateTime: this.state.newEventStart0.toISOString(),\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone\n      },\n      end: {\n        dateTime: this.state.newEventEnd0.toISOString(),\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone\n      },\n      recurrence: this.state.repeatOption && this.defineRecurrence(),\n      attendees: formattedEmail\n    };\n    axios\n      .post(\"/createNewEvent\", {\n        newEvent: event,\n        reminderTime: minutesNotification,\n        title: newTitle,\n        start: this.state.newEventStart0.toISOString(),\n        end: this.state.newEventEnd0.toISOString()\n      })\n      .then(response => {\n        console.log(\"createnewevent\", response);\n        this.setState({\n          dayEventSelected: false\n        });\n        this.updateEventsArray();\n      })\n      .catch(function(error) {\n        // console.log(error);\n      });\n  };\n\n  /*\n  handleModalClicked:\n  this will toggle show hide of the firebase modal currently\n  */\n  // handleModalClicked = arg => {\n  //   // bind with an arrow function\n  //   this.setState({\n  //     modelSelected: !this.state.modelSelected\n  //   });\n  // };\n\n  nextMonth = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).add(1, \"month\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        originalEvents: []\n      },\n      this.updateEventsArray\n    );\n  };\n\n  prevMonth = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"month\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        originalEvents: []\n      },\n      this.updateEventsArray\n    );\n  };\n\n  nextDay = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).add(1, \"day\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: []\n      },\n      this.updateEventsArray\n    );\n  };\n\n  prevDay = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"day\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: []\n      },\n      this.updateEventsArray\n    );\n  };\n\n  /*\n  updateEventsArray:\n  updates the array if the month view changes to a different month.\n  */\n\n  updateEventsArray = () => {\n    if (this.state.calendarView === \"Month\") {\n      //The month view has transferred to a different month\n      let startObject = this.state.dateContext.clone();\n      let endObject = this.state.dateContext.clone();\n      let startDay = startObject.startOf(\"month\");\n      let endDay = endObject.endOf(\"month\");\n      let startDate = new Date(startDay.format(\"MM/DD/YYYY\"));\n      let endDate = new Date(endDay.format(\"MM/DD/YYYY\"));\n      startDate.setHours(0, 0, 0);\n      endDate.setHours(23, 59, 59);\n      this.getEventsByInterval(startDate.toString(), endDate.toString());\n    } else if (this.state.calendarView === \"Day\") {\n      this.getEventsByIntervalDayVersion(\n        this.state.dateContext.format(\"MM/DD/YYYY\")\n      );\n    }\n  };\n\n  /*\n  openRepeatModal:\n  this will open repeat modal.\n  */\n  openRepeatModal = () => {\n    this.setState(prevState => {\n      return { showRepeatModal: !prevState.showRepeatModal };\n    });\n  };\n\n  /*\n  closeRepeatModal:\n  this will close repeat modal.\n  */\n  closeRepeatModal = () => {\n    this.setState(prevState => ({\n      showRepeatModal: false,\n      repeatInputValue_temp: prevState.repeatInputValue,\n      repeatOccurrence_temp: prevState.repeatOccurrence,\n      repeatDropDown_temp: prevState.repeatDropDown,\n      repeatRadio_temp: prevState.repeatRadio,\n      repeatEndDate_temp: prevState.repeatEndDate,\n      byDay_temp: prevState.byDay\n    }));\n    if (!this.state.repeatOption) {\n      this.setState({\n        repeatOptionDropDown: \"Does not repeat\"\n      });\n    }\n  };\n\n  /*\n  saveRepeatChanges:\n  this will close repeat modal.\n  */\n  saveRepeatChanges = () => {\n    const {\n      // repeatOptionDropDown,\n      repeatDropDown_temp,\n      repeatInputValue_temp,\n      repeatOccurrence_temp,\n      repeatRadio_temp,\n      repeatEndDate_temp,\n      byDay_temp\n    } = this.state;\n    this.setState(prevState => ({\n      showRepeatModal: false,\n      repeatOption: true,\n      repeatInputValue: prevState.repeatInputValue_temp,\n      repeatOccurrence: prevState.repeatOccurrence_temp,\n      repeatDropDown: prevState.repeatDropDown_temp,\n      repeatRadio: prevState.repeatRadio_temp,\n      repeatEndDate: prevState.repeatEndDate_temp,\n      byDay: prevState.byDay_temp\n    }));\n\n    // If repeatDropDown_temp is DAY\n    if (repeatDropDown_temp === \"DAY\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Daily\"\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Daily, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Daily, ${repeatOccurrence_temp} times`\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days`\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} days, ${repeatOccurrence_temp} times`\n            });\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is WEEK\n    else if (repeatDropDown_temp === \"WEEK\") {\n      let selectedDays = [];\n      for (let [key, value] of Object.entries(byDay_temp)) {\n        value !== \"\" && selectedDays.push(value);\n      }\n      console.log(selectedDays, \"selectedDays week\");\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: \"Weekly on all days\"\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\", \")}`\n            });\n          }\n        } else if (repeatRadio_temp === \"On\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Weekly on all days, until ${moment(\n                repeatEndDate_temp\n              ).format(\"LL\")}`\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\n                \", \"\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`\n            });\n          }\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`\n            });\n          } else {\n            if (selectedDays.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Weekly on all days, , ${repeatOccurrence_temp} times`\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Weekly on ${selectedDays.join(\n                  \", \"\n                )}, ${repeatOccurrence_temp} times`\n              });\n            }\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days`\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                \", \"\n              )}`\n            });\n          }\n        } else if (repeatRadio_temp === \"On\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, until ${moment(\n                repeatEndDate_temp\n              ).format(\"LL\")}`\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                \", \"\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`\n            });\n          }\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: \"Once\"\n            });\n          } else {\n            if (selectedDays.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, ${repeatOccurrence_temp} times`\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                  \", \"\n                )}, ${repeatOccurrence_temp} times`\n              });\n            }\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is MONTH\n    else if (repeatDropDown_temp === \"MONTH\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Monthly\"\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Monthly, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Monthly, ${repeatOccurrence_temp} times`\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months`\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} months, ${repeatOccurrence_temp} times`\n            });\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is YEAR\n    else if (repeatDropDown_temp === \"YEAR\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Yearly\"\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Yearly, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Yearly, ${repeatOccurrence_temp} times`\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years`\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} years, ${repeatOccurrence_temp} times`\n            });\n          }\n        }\n      }\n    }\n  };\n\n  showDayViewOrAboutView = () => {\n    if (this.state.dayEventSelected) {\n      return this.eventFormAbstracted();\n    } else if (this.state.showAboutModal) {\n      return this.aboutFormAbstracted();\n    }\n  };\n\n  showCalendarView = () => {\n    if(this.state.calendarView === \"Month\")\n      return this.calendarAbstracted()\n    else if(this.state.calendarView === \"Day\")\n      return this.dayViewAbstracted()\n    else if(this.state.calendarView === \"Week\")\n      return this.weekViewAbstracted()\n  }\n\n  render() {\n    //The variable below will help decide whether to center the Calendar object or not\n    var onlyCal =\n      !this.state.showRoutineGoalModal &&\n      !this.state.showGoalModal &&\n      !this.state.showRoutineModal;\n\n    return (\n      //width and height is fixed now but should be by % percentage later on\n      <div\n        className=\"normalfancytext\"\n        style={{\n          marginLeft: \"0px\",\n          height: \"100%\",\n          width: \"2000px\"\n          // width: \"100%\",\n          // display: \"flex\",\n          // flexDirection: \"column\",\n          // justifyContent: \"center\",\n          // alignItems: \"center\",\n          // background: \"lightblue\",\n        }}\n      >\n        <div\n          style={{\n            margin: \"0\",\n            padding: \"0\",\n            width: \"100%\"\n          }}\n        >\n          {this.abstractedMainEventGRShowButtons()}\n        </div>\n        <Container\n          fluid\n          style={{\n            marginTop: \"15px\",\n            marginLeft: \"0\"\n            // display: \"flex\",\n            // flexDirection: \"column\",\n            // justifyContent: \"center\",\n            // alignItems: \"center\",\n            // width: \"100%\"\n          }}\n        >\n          {/* Within this container essentially contains all the UI of the App */}\n          <Row\n            style={{\n              marginTop: \"0\"\n              // width: \"100%\",\n              // display: \"flex\",\n              // flexDirection: \"column\",\n              // justifyContent: \"center\"\n              // alignItems: \"center\"\n            }}\n          >\n            {/* the modal for routine/goal is called Firebasev2 currently */}\n            <Firebasev2\n              closeRoutineGoalModal={() => {\n                this.setState({ showRoutineGoalModal: false });\n              }}\n              showRoutineGoalModal={this.state.showRoutineGoalModal}\n              closeGoal={() => {\n                this.setState({ showGoalModal: false });\n              }}\n              closeRoutine={() => {\n                this.setState({ showRoutineModal: false });\n              }}\n              showRoutine={this.state.showRoutineModal}\n              showGoal={this.state.showGoalModal}\n            />\n            <Col\n              sm=\"auto\"\n              md=\"auto\"\n              lg=\"auto\"\n              style={onlyCal ? { marginLeft: \"20%\" } : { marginLeft: \"35px\" }}\n            >\n              {this.showCalendarView()}\n              <div\n                style={{ marginTop: \"50px\", textAlign: \"center\" }}\n                className=\"fancytext\"\n              >\n                Dedicated to Caitlin Little\n              </div>\n            </Col>\n            <Col style={{ marginLeft: \"25px\" }}>\n              {this.showDayViewOrAboutView()}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n\n  dayViewAbstracted = () => {\n    return (\n      <div\n        style={{\n          borderRadius: \"20px\",\n          backgroundColor: \"white\",\n          width: \"100%\",\n          marginLeft: \"10px\",\n          padding: \"20px\",\n          // border:\"1px black solid\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n        }}\n      >\n        <Container>\n          <Row style={{ marginTop: \"0px\" }}>\n            <Col>\n              <div>\n                <FontAwesomeIcon\n                  style={{ marginLeft: \"50%\" }}\n                  icon={faChevronLeft}\n                  size=\"2x\"\n                  className=\"X\"\n                  onClick={e => {\n                    this.prevDay();\n                  }}\n                />\n              </div>\n            </Col>\n            <Col style={{ textAlign: \"center\" }} className=\"bigfancytext\">\n              <p>\n                {\" \"}\n                {this.getDay()} {this.getMonth()} {this.getYear()}{\" \"}\n              </p>\n            </Col>\n            <Col>\n              <FontAwesomeIcon\n                style={{ marginLeft: \"50%\" }}\n                icon={faChevronRight}\n                size=\"2x\"\n                className=\"X\"\n                onClick={e => {\n                  this.nextDay();\n                }}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <Row>\n          <DayEvents\n            dateContext={this.state.dateContext}\n            eventClickDayView={this.handleDayEventClick}\n            handleDateClick={this.handleDateClickOnDayView}\n            dayEvents={this.state.dayEvents}\n            getEventsByInterval={this.state.getEventsByIntervalDayVersion}\n          />\n          <DayRoutines dayRoutineClick={this.toggleShowRoutine} />\n          <DayGoals dayGoalClick={this.toggleShowGoal} />\n        </Row>\n      </div>\n    );\n  };\n\n  weekViewAbstracted = () => {\n    return (\n      <div\n        style={{\n        borderRadius: \"20px\",\n        backgroundColor: \"white\",\n        width: \"100%\",\n        marginLeft: \"10px\",\n        padding: \"20px\",\n        // border:\"1px black solid\",\n        boxShadow:\n          \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n      }}>\n        <Container>\n          <Row>\n              <WeekEvents />\n          </Row>\n          <Row>\n              <WeekGoals />\n          </Row>\n          <Row>\n              <WeekRoutines />\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n\n  toggleShowRoutine = () => {\n    this.setState({\n      showRoutineModal: !this.state.showRoutineModal,\n      showGoalModal: false,\n      showRoutineGoalModal: false\n    });\n  };\n\n  toggleShowGoal = () => {\n    this.setState({\n      showGoalModal: !this.state.showGoalModal,\n      showRoutineModal: false,\n      showRoutineGoalModal: false\n    });\n  };\n\n  showEventsFormbyCreateNewEventButton = () => {\n    var newStart, newEnd;\n    if (this.state.calendarView === \"Month\") {\n      newStart = new Date();\n      newStart.setHours(0, 0, 0, 0);\n      newEnd = new Date();\n      newEnd.setHours(23, 59, 59, 59);\n    } else if (this.state.calendarView === \"Day\") {\n      newStart = new Date(this.state.dateContext.toDate());\n      newStart.setHours(0, 0, 0, 0);\n      newEnd = new Date(this.state.dateContext.toDate());\n      newEnd.setHours(23, 59, 59, 59);\n    }\n\n    this.setState({\n      newEventID: \"\",\n      // newEventStart: newStart.toString(),\n      // newEventEnd: newEnd.toString(),\n      newEventStart0: newStart,\n      newEventEnd0: newEnd,\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventDescription: \"\",\n      dayEventSelected: true,\n      isEvent: false\n    });\n  };\n\n  changeCalendarView = view => {\n    this.setState(\n      {\n        calendarView: view\n      },\n      this.updateEventsArray\n    );\n  };\n\n  abstractedMainEventGRShowButtons = () => {\n    // Redefine the width of those buttons; Should fix to be 100% and make\n    // enclosing div to be based on % and not 2000px\n\n    return (\n      <div\n        style={{\n          display: \"block\",\n          textAlign: \"center\",\n          fontSize: \"20px\",\n          paddingRight: \"165px\"\n          // display: \"flex\",\n          // justifyContent: \"center\",\n          // alignItems: \"center\"\n        }}\n      >\n        <div\n          style={{\n            display: \"inline-block\",\n            margin: \"10px\",\n            marginBottom: \"0\",\n            marginTop: \"10px\"\n          }}\n        >\n        <DropdownButton\n          style={{ top: \"5px\" }}\n          title={this.state.calendarView}\n        >\n          <Dropdown.Item\n            onClick={e => {\n              this.changeCalendarView(\"Month\");\n            }}\n          >\n            {\" \"}\n            Month{\" \"}\n          </Dropdown.Item>\n          <Dropdown.Item\n            onClick={e => {\n              this.changeCalendarView(\"Day\");\n            }}\n          >\n            {\" \"}\n            Day{\" \"}\n          </Dropdown.Item>\n          <Dropdown.Item\n            onClick={e => {\n              this.changeCalendarView(\"Week\");\n            }}\n          >\n            {\" \"}\n            Week{\" \"}\n          </Dropdown.Item>\n        </DropdownButton>\n        </div>\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState({\n              dateContext: moment()\n            });\n          }}\n        >\n          Today\n        </Button>\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState(\n              {\n                showAboutModal: false\n                // dayEventSelected: !this.state.dayEventSelected\n              },\n              () => {\n                this.showEventsFormbyCreateNewEventButton();\n              }\n            );\n          }}\n        >\n          New Event\n        </Button>\n\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={this.toggleShowRoutine}\n        >\n          Routines\n        </Button>\n\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={this.toggleShowGoal}\n        >\n          {\" \"}\n          Goals{\" \"}\n        </Button>\n\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState({\n              showRoutineGoalModal: !this.state.showRoutineGoalModal,\n              showGoalModal: false,\n              showRoutineModal: false\n            });\n          }}\n        >\n          Current Status\n        </Button>\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState({\n              showAboutModal: !this.state.showAboutModal,\n              dayEventSelected: false\n            });\n          }}\n        >\n          About\n        </Button>\n      </div>\n    );\n  };\n\n  calendarAbstracted = () => {\n    return (\n      <div\n        style={{\n          borderRadius: \"2%\",\n          backgroundColor: \"white\",\n          width: \"1000px\",\n          // marginLeft: \"10px\",\n          padding: \"45px\",\n          paddingBottom: \"10px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\"\n        }}\n      >\n        <div>\n          <Row style={{ marginTop: \"0px\" }}>\n            <Col>\n              <div>\n                <FontAwesomeIcon\n                  style={{ marginLeft: \"50%\" }}\n                  icon={faChevronLeft}\n                  size=\"2x\"\n                  className=\"X\"\n                  onClick={e => {\n                    this.prevMonth();\n                  }}\n                />\n              </div>\n            </Col>\n            <Col style={{ textAlign: \"center\" }} className=\"bigfancytext\">\n              <p>\n                {this.getMonth()} {this.getYear()}\n              </p>\n            </Col>\n            <Col>\n              <FontAwesomeIcon\n                style={{ marginLeft: \"50%\" }}\n                icon={faChevronRight}\n                size=\"2x\"\n                className=\"X\"\n                onClick={e => {\n                  this.nextMonth();\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n        <TylersCalendarv1\n          eventClick={this.handleEventClick}\n          handleDateClick={this.handleDateClick}\n          handleExpandClick={this.handleExpandClick}\n          originalEvents={this.state.originalEvents}\n          dateObject={this.state.todayDateObject}\n          today={this.state.today}\n          dateContext={this.state.dateContext}\n          // selectedDay={this.state.selectedDay}\n        />\n      </div>\n    );\n  };\n\n  /***     About Modal ***** */\n  aboutFormAbstracted = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n          marginLeft: \"70px\",\n          width: \"350px\",\n          marginTop: \"0\"\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({\n              showAboutModal: false\n            });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">About Me</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col>\n              <FontAwesomeIcon\n                // style={{ marginLeft: \"50%\" }}\n                icon={faImage}\n                size=\"4x\"\n                // className=\"X\"\n              />\n            </Col>\n            <Col xs={9}>\n              <label for=\"ProfileImage\">Upload A New Image</label>\n              <input\n                type=\"file\"\n                onChange={this.handleFileSelected}\n                id=\"ProfileImage\"\n              />\n            </Col>\n          </Row>\n\n          <Form.Group controlId=\"AboutMessage\" style={{ marginTop: \"10px\" }}>\n            <Form.Label>Message (My Day):</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"4\"\n              // value={this.state.newEventDescription}\n              // onChange={this.handleDescriptionChange}\n              type=\"text\"\n              placeholder=\"You are a strong ...\"\n              // style={{textAlign:\"center\"}}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"AboutMessageCard\">\n            <Form.Label>Message (My Card):</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"4\"\n              // value={this.state.newEventDescription}\n              // onChange={this.handleDescriptionChange}\n              type=\"text\"\n              placeholder=\"You are a safe ...\"\n              // style={{textAlign:\"center\"}}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"ImportantPeople\">\n            <Form.Label>Important People</Form.Label>\n            <Row>\n              <Col>\n                <FontAwesomeIcon icon={faImage} size=\"5x\" />\n              </Col>\n              <Col xs={8}>\n                <Form.Control type=\"text\" placeholder=\"Relationship\" />\n                <Form.Control type=\"text\" placeholder=\"Phone Number\" />\n              </Col>\n            </Row>\n            <Row style={{ marginTop: \"20px\" }}>\n              <Col>\n                <FontAwesomeIcon icon={faImage} size=\"5x\" />\n              </Col>\n              <Col xs={8}>\n                <Form.Control type=\"text\" placeholder=\"Relationship\" />\n                <Form.Control type=\"text\" placeholder=\"Phone Number\" />\n              </Col>\n            </Row>\n            <Row style={{ marginTop: \"20px\" }}>\n              <Col>\n                <FontAwesomeIcon icon={faImage} size=\"5x\" />\n              </Col>\n              <Col xs={8}>\n                <Form.Control type=\"text\" placeholder=\"Relationship\" />\n                <Form.Control type=\"text\" placeholder=\"Phone Number\" />\n              </Col>\n            </Row>\n          </Form.Group>\n\n          {/* <button onClick={this.imageUploadHandler}> Upload</button> */}\n        </Modal.Body>\n        <Modal.Footer>\n          <Container fluid>\n            <Row>\n              <Col xs={4}>\n                <Button variant=\"info\" type=\"submit\">\n                  Save\n                </Button>\n              </Col>\n              <Col xs={4}>\n                <Button variant=\"secondary\" onClick={this.hideAboutForm}>\n                  Cancel\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  imageUploadHandler = () => {};\n  handleFileSelected = event => {\n    console.log(event.target.files[0]);\n  };\n\n  hideAboutForm = e => {\n    this.setState({\n      showAboutModal: false\n    });\n  };\n  /**\n   * This is where the event form is made\n   *\n   */\n  eventFormAbstracted = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n          marginLeft: \"70px\",\n          width: \"350px\",\n          marginTop: \"0\"\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({\n              dayEventSelected: false,\n              repeatOptionDropDown: \"Does not repeat\"\n            });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Event Form</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {this.state.showRepeatModal && this.repeatModal()\n          // <RepeatModal\n          //   closeRepeatModal={this.closeRepeatModal}\n          //   todayObject={this.state.todayDateObject}\n          //   newEventStart0={this.state.newEventStart0}\n          // />\n          }\n          {this.eventFormInputArea()}\n        </Modal.Body>\n        <Modal.Footer>\n          <Container fluid>\n            <Row>\n              <Col style={{ float: \"right\", marginBottom: \"10px\" }}>\n                <Button\n                  variant=\"outline-primary\"\n                  onClick={() => {\n                    this.openRepeatModal();\n                    console.log(\"repeating\", this.state.newEventStart0);\n                  }}\n                >\n                  Repeating Options\n                </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col style={this.state.isEvent ? { display: \"none\" } : {}} xs={4}>\n                <Button\n                  onClick={this.handleSubmit}\n                  variant=\"info\"\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </Col>\n              <Col\n                style={\n                  this.state.isEvent\n                    ? { marginTop: \"0px\" }\n                    : { display: \"none\" }\n                }\n                xs={4}\n              >\n                <Button\n                  onClick={this.updateEventClick}\n                  className=\"btn btn-info\"\n                >\n                  Update\n                </Button>\n              </Col>\n              <Col xs={4}>\n                <Button variant=\"secondary\" onClick={this.hideEventForm}>\n                  Cancel\n                </Button>\n              </Col>\n              <Col xs={4}>\n                <Button\n                  style={this.state.isEvent ? {} : { display: \"none\" }}\n                  variant=\"danger\"\n                  onClick={this.deleteSubmit}\n                >\n                  {\" \"}\n                  Delete\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  repeatModal = () => {\n    // const [title, setTitle] = useState(\"DAY\");\n    // const [monthly, setMonthly] = useState(\"Monthly on day 13\");\n    // const [endDate, setEndDate] = useState(this.state.newEventStart0);\n    // const [inputValue, setInputValue] = useState(1);\n\n    // this.state.repeatEndDate = this.state.newEventStart0;\n\n    const week_days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n\n    const d = new Date();\n\n    // Custom styles\n    const modalStyle = {\n      position: \"absolute\",\n      zIndex: \"5\",\n      left: \"50%\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"400px\"\n    };\n\n    const inputStyle = {\n      padding: \"8px 5px 8px 15px\",\n      marginLeft: \"8px\",\n      background: \"#F8F9FA\",\n      border: \"none\",\n      width: \"70px\",\n      borderRadius: \"4px\",\n      marginRight: \"8px\"\n    };\n\n    const selectStyle = {\n      display: \"inline-block\"\n    };\n\n    const weekStyle = {\n      display: \"flex\",\n      alignItems: \"center\",\n      textAlign: \"center\",\n      marginTop: \"10px\"\n    };\n\n    // const radioInputStyle = { display: \"flex\", alignItems: \"center\" };\n\n    // onClick event handler for the circles\n    const selectedDot = (e, index) => {\n      let curClass = e.target.classList;\n      if (curClass.contains(\"selected\")) {\n        curClass.remove(\"selected\");\n        const newByDay = { ...this.state.byDay_temp, [index]: \"\" };\n        this.setState({\n          byDay_temp: newByDay\n        });\n      } else {\n        curClass.add(\"selected\");\n        const newByDay = {\n          ...this.state.byDay_temp,\n          [index]: week_days[index]\n        };\n        this.setState({\n          byDay_temp: newByDay\n        });\n      }\n    };\n\n    let selectedDays = [];\n    for (let [key, value] of Object.entries(this.state.byDay_temp)) {\n      if (value !== \"\") selectedDays.push(key);\n    }\n    // If selected repeat every week, the following shows.\n    const weekSelected = (\n      <>\n        Repeat On\n        <div style={weekStyle}>\n          {week_days.map((day, i) => {\n            if (selectedDays.includes(i.toString())) {\n              return (\n                <span\n                  key={i}\n                  className=\"dot selected\"\n                  onClick={e => selectedDot(e, i)}\n                >\n                  {day.charAt(0)}\n                </span>\n              );\n            } else {\n              return (\n                <span key={i} className=\"dot\" onClick={e => selectedDot(e, i)}>\n                  {day.charAt(0)}\n                </span>\n              );\n            }\n          })}\n        </div>\n      </>\n    );\n\n    // If selected repeat every month, the following shows.\n    // const monthSelected = (\n    //   <DropdownButton\n    //     title={this.state.repeatMonthlyDropDown}\n    //     variant=\"light\"\n    //     style={{ marginTop: \"20px\" }}\n    //   >\n    //     <Dropdown.Item\n    //       eventKey=\"Monthly on day 13\"\n    //       onSelect={eventKey => this.handleRepeatMonthlyDropDown(eventKey)}\n    //     >\n    //       Monthly on day 13\n    //     </Dropdown.Item>\n    //     <Dropdown.Item\n    //       eventKey=\"Monthly on the second Friday\"\n    //       onSelect={eventKey => this.handleRepeatMonthlyDropDown(eventKey)}\n    //     >\n    //       Monthly on the second Friday\n    //     </Dropdown.Item>\n    //   </DropdownButton>\n    // );\n\n    return (\n      <Modal.Dialog style={modalStyle}>\n        <Modal.Header closeButton onHide={this.closeRepeatModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Repeating Options</h5>\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            <Form.Group\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginLeft: \"5px\"\n              }}\n            >\n              Repeat every\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"10000\"\n                value={this.state.repeatInputValue_temp}\n                style={inputStyle}\n                onChange={e => this.handleRepeatInputValue(e.target.value)}\n              />\n              <DropdownButton\n                title={this.state.repeatDropDown_temp}\n                style={selectStyle}\n                variant=\"light\"\n              >\n                <Dropdown.Item\n                  eventKey=\"DAY\"\n                  onSelect={eventKey => this.handleRepeatDropDown(eventKey)}\n                >\n                  day\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"WEEK\"\n                  onSelect={eventKey =>\n                    this.handleRepeatDropDown(eventKey, week_days)\n                  }\n                >\n                  week\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"MONTH\"\n                  onSelect={eventKey => this.handleRepeatDropDown(eventKey)}\n                >\n                  month\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"YEAR\"\n                  onSelect={eventKey => this.handleRepeatDropDown(eventKey)}\n                >\n                  year\n                </Dropdown.Item>\n              </DropdownButton>\n            </Form.Group>\n            <Form.Group style={{ marginLeft: \"5px\" }}>\n              {this.state.repeatDropDown_temp === \"WEEK\" && weekSelected}\n            </Form.Group>\n            {/* {this.state.repeatDropDown === \"MONTH\" && monthSelected} */}\n            <Form.Group\n              style={{\n                height: \"140px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n                marginTop: \"20px\",\n                marginLeft: \"5px\"\n              }}\n              className=\"repeat-form\"\n              onChange={e => {\n                if (e.target.type === \"radio\") {\n                  this.setState({\n                    repeatRadio_temp: e.target.value\n                  });\n                }\n              }}\n            >\n              Ends\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"Never\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"Never\" && true\n                    }\n                  />\n                  Never\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    name=\"radios\"\n                    value=\"On\"\n                    style={{ marginTop: \"10px\" }}\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"On\" && true\n                    }\n                  />\n                  On\n                  <DatePicker\n                    className=\"date-picker-btn btn btn-light\"\n                    selected={this.state.repeatEndDate_temp}\n                    onChange={date => this.handleRepeatEndDate(date)}\n                  ></DatePicker>\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    name=\"radios\"\n                    value=\"After\"\n                    style={{ marginTop: \"12px\" }}\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"After\" && true\n                    }\n                  />\n                  After\n                  <span style={{ marginLeft: \"60px\" }}>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"10000\"\n                      value={this.state.repeatOccurrence_temp}\n                      onChange={e =>\n                        this.handleRepeatOccurrence(e.target.value)\n                      }\n                      style={inputStyle}\n                      className=\"input-exception\"\n                    />\n                    occurrence\n                  </span>\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeRepeatModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={this.saveRepeatChanges}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  eventFormInputArea = () => {\n    return (\n      <Form>\n        <Row>\n          <Col>\n            <div style={{ width: \"300px\" }}>\n              <Form.Group>\n                <Form.Label>Event Name</Form.Label>\n                <Form.Control\n                  value={this.state.newEventName}\n                  onChange={this.handleNameChange}\n                  type=\"text\"\n                  placeholder=\"Title\"\n                />\n                <div style={{ color: \"red\" }}>\n                  {\" \"}\n                  {this.state.showNoTitleError}\n                </div>\n              </Form.Group>\n              <Form.Group value={this.state.newEventStart0} controlId=\"Y\">\n                <Form.Label>Start Time</Form.Label> <br />\n                {this.startTimePicker()}\n              </Form.Group>\n              <Form.Group value={this.state.newEventEnd0} controlId=\"X\">\n                <Form.Label>End Time</Form.Label>\n                <br />\n                {this.endTimePicker()}\n                <div style={{ color: \"red\" }}> {this.state.showDateError}</div>\n              </Form.Group>\n              <Form.Group style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <Form.Label>Repeating Options</Form.Label>\n                <DropdownButton\n                  className=\"repeatOptionDropDown\"\n                  // onClick={this.openRepeatModal}\n                  title={this.state.repeatOptionDropDown}\n                  variant=\"light\"\n                >\n                  <Dropdown.Item\n                    eventKey=\"Does not repeat\"\n                    onSelect={eventKey =>\n                      this.setState({\n                        repeatOptionDropDown: eventKey,\n                        repeatOption: false\n                      })\n                    }\n                  >\n                    Does not repeat\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    eventKey=\"Custom...\"\n                    onSelect={eventKey => {\n                      this.openRepeatModal();\n                      // this.setState({ repeatOptionDropDown: eventKey });\n                    }}\n                  >\n                    Custom...\n                  </Dropdown.Item>\n                </DropdownButton>\n              </Form.Group>\n              <Form.Group value={\"Extra Slot\"}>\n                <Form.Label>Guests</Form.Label>\n                <Form.Control\n                  value={this.state.newEventGuests}\n                  onChange={this.handleGuestChange}\n                  type=\"email\"\n                  placeholder=\"example@gmail.com\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"Location\">\n                <Form.Label>Location:</Form.Label>\n                <Form.Control\n                  value={this.state.newEventLocation}\n                  onChange={this.handleLocationChange}\n                  type=\"text\"\n                  placeholder=\"Location\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"Notification\">\n                <Form.Label>Notifications:</Form.Label>\n                <Row>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Control\n                      value={this.state.newEventNotification}\n                      onChange={this.handleNotificationChange}\n                      type=\"number\"\n\n                      placeholder=\"5\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n\n                    />\n                  </Col>\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}>\n                      {\" \"}\n                      Min Before Start Time\n                    </Form.Text>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"15px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Control\n                      // value={this.state.newEventNotification}\n                      // onChange={this.handleNotificationChange}\n                      type=\"number\"\n                      placeholder=\"30\"\n                      style={{ width: \"70px\", marginTop: \".25rem\" }}\n                    />\n                  </Col>\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}>\n                      {\" \"}\n                      Min After Start Time\n                    </Form.Text>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"15px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Control\n                      // value={this.state.newEventNotification}\n                      // onChange={this.handleNotificationChange}\n                      type=\"number\"\n\n                      placeholder=\"5\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n\n                    />\n                  </Col>\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}>\n                      {\" \"}\n                      Min After End Time\n                    </Form.Text>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"15px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n              </Form.Group>\n\n              {/* <Form.Group controlId=\"formBasicCheckbox\">\n                <Row style={{ height: \"30px\" }}>\n                  <Col>\n                    <Form.Check type=\"checkbox\">\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        onChange={e => this.notifyBefore(e)}\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                  <Col>\n                    <Form.Check type=\"checkbox\">\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        onChange={e => this.notifyBefore(e)}\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                      <Form.Check.Label style={{ marginLeft: \"10px\" }}>\n                        Before\n                      </Form.Check.Label>\n                    </Form.Check>\n                  </Col>\n                </Row>\n                {this.state.notificationBeforeChecked && <EventBeforeChecked />}\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Row style={{ height: \"30px\" }}>\n                  <Col>\n                    <Form.Check type=\"checkbox\">\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                      <Form.Check.Label style={{ marginLeft: \"10px\" }}>\n                        During\n                      </Form.Check.Label>\n                    </Form.Check>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Row style={{ height: \"30px\" }}>\n                  <Col>\n                    <Form.Check type=\"checkbox\">\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                      <Form.Check.Label style={{ marginLeft: \"10px\" }}>\n                        After\n                      </Form.Check.Label>\n                    </Form.Check>\n                  </Col>\n                </Row>\n              </Form.Group> */}\n\n              {/* End here */}\n              <Form.Group controlId=\"Description\">\n                <Form.Label>Description:</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  value={this.state.newEventDescription}\n                  onChange={this.handleDescriptionChange}\n                  type=\"text\"\n                  placeholder=\"Description\"\n                />\n              </Form.Group>\n            </div>\n          </Col>\n        </Row>\n      </Form>\n    );\n  };\n\n  notifyBefore = e => {\n    console.log(\"this is result of checked:\");\n    console.log(e.target.checked);\n    let beforeChecked = e.target.checked;\n    this.setState({ notificationBeforeChecked: beforeChecked });\n  };\n\n  startTimePicker = () => {\n    // const [startDate, setStartDate] = useState(new Date());\n    return (\n      <DatePicker\n        className=\"form-control\"\n        type=\"text\"\n        selected={this.state.newEventStart0}\n        onChange={date => {\n          this.setState(\n            {\n              newEventStart0: date\n            },\n            () => {\n              console.log(\"starttimepicker\", this.state.newEventStart0);\n            }\n          );\n        }}\n        showTimeSelect\n        timeIntervals={15}\n        timeCaption=\"time\"\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\n      />\n    );\n  };\n\n  endTimePicker = () => {\n    // const [startDate, setStartDate] = useState(new Date());\n    return (\n      <DatePicker\n        className=\"form-control\"\n        type=\"text\"\n        style={{ width: \"100%\" }}\n        selected={this.state.newEventEnd0}\n        onChange={date => {\n          this.setState(\n            {\n              newEventEnd0: date\n            },\n            () => {\n              console.log(this.state.newEventEnd0);\n            }\n          );\n        }}\n        showTimeSelect\n        timeIntervals={15}\n        timeCaption=\"time\"\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\n      />\n    );\n  };\n  /*\n  getYear:\n  returns the year based on year format\n  */\n  getYear = () => {\n    return this.state.dateContext.format(\"Y\");\n  };\n\n  /*\n  getMonth:\n  returns the month based on the month of the dateContext\n  in english word form\n  */\n  getMonth = () => {\n    return this.state.dateContext.format(\"MMMM\");\n  };\n\n  getDay = () => {\n    return this.state.dateContext.format(\"D\");\n  };\n\n  /*\n  hideEventForm:\n  Hides the create/edit events form when a date or event is clicked\n  */\n  hideEventForm = e => {\n    //console.log(\"Tyler says: Hello\");\n    this.setState({\n      dayEventSelected: false,\n      repeatOptionDropDown: \"Does not repeat\"\n    });\n  };\n\n  /*\nAll functions below will change a variables\nwhen there is a change in the event form\n*/\n\n  handleNameChange = event => {\n    this.setState({ newEventName: event.target.value });\n  };\n\n  handleGuestChange = event => {\n    this.setState({ newEventGuests: event.target.value });\n  };\n\n  handleLocationChange = event => {\n    this.setState({ newEventLocation: event.target.value });\n  };\n\n  handleNotificationChange = event => {\n    this.setState({ newEventNotification: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ newEventDescription: event.target.value });\n  };\n\n  /*\n  *\n  getEvents:\n  this essentially gets the events data from google calendar and puts it\n  into the proper state variables. Currently the parsed data for full calendar\n  is used but the unfiltered data from google calendar API is not used but\n  in case we do need it, it's saved in this.state.originalEvents\n  *\n  *\n  */\n  getEventsByInterval = (start0, end0) => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {\n          start: start0,\n          end: end0\n        }\n      })\n      .then(response => {\n        var events = response.data;\n        this.setState(\n          {\n            newEventID: \"\",\n            newEventName: \"\",\n            // newEventStart: \"\",\n            // newEventEnd: \"\",\n            originalEvents: events\n          },\n          () => {\n            console.log(\"New Events Arrived\");\n          }\n        );\n      })\n      .catch(error => {\n        console.log(\"Error Occurred \" + error);\n      });\n  };\n\n  /*\n   * getEventsByIntervalDayVersion:\n   * gets exactly the days worth of events from the google calendar\n   */\n  getEventsByIntervalDayVersion = day => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {\n          start: day.toString(),\n          end: day.toString()\n        }\n      })\n      .then(response => {\n        var events = response.data;\n        this.setState(\n          {\n            dayEvents: events\n          },\n          () => {\n            console.log(\"New Events Arrived\", events);\n          }\n        );\n      })\n      .catch(error => {\n        console.log(\"Error Occurred \" + error);\n      });\n  };\n}\n","import React, { Component } from \"react\";\n\n// import { BrowserRouter as Router } from \"react-router-dom\";\n\nimport MainPage from \"./components/Main.jsx\";\n// import Header from './components/Header.jsx'\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        {/* <header className=\"App-header\"> */}\n        {/* <Router> */}\n        {/* <Header /> */}\n        {/* <div> */}\n        <MainPage />\n        {/* </div> */}\n\n        {/* </Router> */}\n        {/* </ header> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n<BrowserRouter>\n\t<App />\n\t</BrowserRouter>\n, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}