{"version":3,"sources":["components/firebase.js","components/ShowNotifications.jsx","components/addNewGRItem.jsx","components/addNewATItem.jsx","components/addNewISItem.jsx","components/DeleteISItem.jsx","components/deleteAT.jsx","components/deleteGR.jsx","components/editGR.jsx","components/editIS.jsx","components/EditAT.jsx","components/ShowATList.jsx","components/ShowISList.jsx","components/Firebasev2.jsx","components/TCal.jsx","components/DayRoutines.jsx","components/DayGoals.jsx","components/DayEvents.jsx","components/WeekEvents.jsx","components/WeekRoutines.jsx","components/WeekGoals.jsx","components/AddNewPeople.jsx","components/AboutModal.jsx","components/CreateNewAccountModal.jsx","components/Main.jsx","App.js","registerServiceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","signInAnonymously","catch","error","code","message","storage","ShowNotifications","props","convertTimeToHRMMSS","e","hours","target","value","rhours","Math","floor","minutes","rminutes","round","toString","length","convertToMinutes","myStr","myStr2","split","hrToMin","state","Form","Group","controlId","Row","Col","style","paddingRight","Control","type","placeholder","width","marginTop","this","itemToEditPassedIn","ta_notifications","before","time","onChange","stopPropagation","temp","user_notifications","notificationChange","xs","paddingLeft","Text","fontSize","Check","Input","height","checked","is_enabled","as","rows","marginLeft","preventDefault","onKeyDown","keyCode","during","after","React","Component","AddNewGRItem","grArr","itemToEdit","title","id","is_persistent","isRoutine","photo","is_complete","is_available","available_end_time","available_start_time","datetime_completed","datetime_started","audio","is_timed","expected_completion_time","is_sublist_available","is_set","routineDocsPath","firestore","collection","doc","arrPath","getGRDataFromFB","console","log","get","then","exists","x","data","setState","alert","newInputSubmit","addNewDoc","add","ref","newArr","ATArray","push","updateEntireArray","update","refresh","handleNotificationChange","Modal","Dialog","Header","closeButton","onHide","closeModal","Title","className","Body","Label","name","Footer","Button","variant","onClick","AddNewATItem","ATItem","fbPath","hideNewATModal","newActionTitle","AddNewISItem","atArr","newInstructionTitle","handleInputChange","ISArray","ISItem","hideNewISModal","pop","DeleteISItem","submitRequest","items","i","deleteIndex","slice","concat","confirmation","window","confirm","onMouseOver","event","color","onMouseOut","marginRight","icon","faTrashAlt","size","deleteAT","tempdeleteArrPortion","Array","Data","Item","path","param","headers","body","JSON","stringify","method","fetch","response","json","result","deleteArrPortion","deleteGR","Path","editGR","FBPath","showEditModal","startTimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","selected","Date","date","editGRForm","marginLeftV","border","padding","showIcon","faEdit","editIS","editISForm","editAT","editATForm","ShowATList","editFirBaseFalse","iconShow","Index","editFirBaseTrue","faList","faSlash","ShowISList","FirebaseV2","firebaseRootPath","singleGR","show","arr","singleAT","singleATitemArr","singleISitemArr","modalWidth","addNewGRModalShow","addNewATModalShow","addNewISModalShow","thumbnailWidth","thumbnailHeight","thumbnailWidthV2","thumbnailHeightV2","availabilityColorCode","refreshATItem","resArr","createListofAT","refreshISItem","createListofIS","singleAt","grabFireBaseRoutinesGoalsData","onInputChange","getATList","persist","docRef","A","res","tempID","tempPhoto","tempTitle","tempAvailable","key","ListGroup","action","ATonClickEvent","marginBottom","margin","src","alt","faUser","faUserAltSlash","ISonClickEvent","GRonClickEvent","stepsInstructionArrayPath","findIndexByID","originalGoalsAndRoutineArr","getRoutines","displayRoutines","routines","tempPersist","formatDateTime","getGoals","displayGoals","goals","getGoalsStatus","isComplete","textAlign","display","justifyContent","alignItems","faTrophy","faRunning","getRoutinesStatus","abstractedGoalsList","borderRadius","boxShadow","closeGoal","AddNewGRModalAbstracted","abstractedActionsAndTaskList","overflow","abstractedRoutineList","closeRoutine","todayDateObject","abstractedInstructionsAndStepsList","addNewTaskInputBox","InputGroup","FormControl","Append","abstractedRoutineGoalStatusList","closeRoutineGoalModal","addNewGoalInputBox","str","formattedStr","replace","moment","format","displayCompletedGoals","displayCompletedRoutines","showRoutineGoalModal","sm","md","lg","showRoutine","showGoal","TylersCalendarv1","weekdays","weekdaysShort","year","dateContext","currentDay","dateObject","month","daysInMonth","firstDayOfMonth","startOf","getEventsforDay","tempStart","tempEnd","originalEvents","j","start","dateTime","end","startDate","getDate","endDate","onEventClick","background","textShadow","summary","eventClick","onDayClick","d","handleDateClick","onExpandClick","handleExpandClick","map","day","blanks","sameDate","bind","parseInt","totalSlots","cells","forEach","row","daysinmonth","tableLayout","DayRoutines","dayView","borderTop","pxPerHour","RoutineClicked","dayRoutineClick","getEventItem","hour","sameTimeEventCount","itemWidth","eventBoxSize","addmarginLeft","start_dateStr","toISOString","shift","start_timeStr","start_timeAndDate","toDate","end_dateStr","end_timeStr","end_timeAndDate","tempStartTime","tempEndTime","getHours","minsToMarginTop","getMinutes","pxPerHourForConversion","newElement","data-toggle","data-placement","zIndex","position","dayViewItems","Container","DayGoals","GoalClicked","dayGoalClick","DayEvents","timeDisplay","dayEvents","eventClickDayView","curDate","hourDiff","float","minDiff","marginFromLeft","WeekEvents","dateDisplay","clone","weekEvents","onWeekClick","weekViewItems","isSameOrAfter","isSameOrBefore","hourDisplay","createRef","curHour","current","scrollTop","overflowX","overflowY","WeekRoutines","WeekGoals","AddNewPeople","have_pic","important","phone_number","pic","relationship","unique_id","saveChangesButtonEnabled","peopleDocsPath","handleFileSelected","file","files","targetFile","put","on","snapshot","percentage","bytesTransfered","totalBytes","err","child","getDownloadURL","url","newPersonInputSubmit","updateWithId","newPersonAdded","accept","disabled","AboutModal","hideAboutForm","CameBackFalse","saveButtonEnabled","Object","keys","aboutMeObject","handleImpPeople1","file2","importantPeople1","handleImpPeople2","file3","importantPeople2","handleImpPeople3","file4","importantPeople3","grabFireBaseAllPeopleNames","db","peoplesArray","importantPeopleArray","importantPeopleReferencid","test","docs","peopleNamesArray","enableDropDown","importantPoeplArrayLength","importantPeople1id","importantPeople2id","importantPeople3id","grabFireBaseAboutMeData","firstName","first_name","lastName","last_name","hidePeopleModal","showAddNewPeopleModal","updatePeopleArray","changeImpPersonOne","Reference","temp2","ImporPersonOneChange","importantPeople1Previous","importantPeople1DocRefChanged","changeImpPersonTwo","ImporPersonTwoChange","importantPeople2Previous","importantPeople2DocRefChanged","changeImpPersonThree","ImporPersonThreeChange","importantPeople3Previous","importantPeople3DocRefChanged","updateProfilePic","faImage","message_day","message_card","DropdownButton","keyName","keyIndex","Dropdown","fluid","MainPage","routine","goal","handleRepeatDropDown","eventKey","week_days","newByDay","byDay_temp","newEventStart0","getDay","repeatDropDown_temp","handleRepeatMonthlyDropDown","repeatMonthlyDropDown","handleRepeatEndDate","repeatEndDate_temp","repeatEndDate","handleRepeatInputValue","repeatInputValue_temp","handleRepeatOccurrence","repeatOccurrence_temp","updateProfilePicFromFirebase","usersArray","namePicObject","picURL","undefined","userNamesAndPics","enableNameDropDown","currentProfilePicUrl","currentProfileName","getThisMonthEvents","axios","params","events","handleDayEventClick","guestList","attendees","reduce","nextGuest","email","newEventID","newEventEnd0","newEventName","newEventGuests","newEventLocation","location","newEventNotification","reminders","overrides","newEventDescription","description","dayEventSelected","isEvent","showNoTitleError","showDateError","showRepeatModal","showAboutModal","repeatOption","repeatOptionDropDown","repeatDropDown","repeatInputValue","repeatOccurrence","repeatRadio","repeatRadio_temp","byDay","0","1","2","3","4","5","6","repeatSummary","recurrenceRule","showDeleteRecurringModal","deleteRecurringOption","showEditRecurringModal","editRecurringOption","handleWeekEventClick","repeatSummaryCompute","untilSubString","untilIndex","indexOf","substring","includes","endUntilIndex","countSubString","countIndex","endCountIndex","intervalSubString","intervalIndex","endIntervalIndex","byDaySubString","byDayArray","byDayIndex","endByDayIndex","join","handleEventClick","recurringEventId","newEvent","newEventRecurringID","handleDateClickOnWeekView","arg","newStart","newEnd","handleDateClickOnDayView","setHours","validate","titleError","dayError","startDay","endDay","startMonth","getUTCMonth","endMonth","startYear","getFullYear","endYear","startHour","endHour","newDate","calendarView","updateEventsArray","handleSubmit","createEvent","updateEventClick","eventList","updateRequest","index","a","guests","formattedEmail","emailList","match","responseStatus","minutesNotification","updatedEvent","timeZone","Intl","DateTimeFormat","resolvedOptions","recurrence","defineRecurrence","useDefault","sequence","ID","creator","created","organizer","status","newRecurrenceRule","newUntilSubString","post","extra","frequency","rrule","exdate","selectedDays","entries","unshift","toUpperCase","repeat_end_date","deleteSubmit","newTitle","reminderTime","nextMonth","assign","prevMonth","subtract","nextDay","prevDay","nextWeek","prevWeek","startObject","endObject","endOf","getEventsByInterval","getEventsByIntervalDayVersion","getEventsByIntervalWeekVersion","openRepeatModal","prevState","closeRepeatModal","saveRepeatChanges","hideNewAccountForm","showNewAccountmodal","updatePic","changeUser","showDayViewOrAboutView","eventFormAbstracted","showCalendarView","calendarAbstracted","dayViewAbstracted","weekViewAbstracted","backgroundColor","faChevronLeft","getMonth","getYear","faChevronRight","toggleShowRoutine","toggleShowGoal","startWeek","showRoutineModal","showGoalModal","showEventsFormbyCreateNewEventButton","changeCalendarView","view","abstractedMainEventGRShowButtons","top","paddingBottom","today","repeatModal","deleteRecurringModal","editRecurringModal","eventFormInputArea","openEditRecurringModal","hideEventForm","openDeleteRecurringModal","inputStyle","selectedDot","curClass","classList","contains","remove","weekSelected","charAt","left","transform","min","max","onSelect","flexDirection","defaultChecked","closeEditRecurringModal","closeDeleteRecurringModal","deleteRecurring","timeMin","timeMax","delete","eventId","handleNameChange","endTimePicker","handleGuestChange","handleLocationChange","handleDescriptionChange","start0","end0","profileName","eventNotifications","onlyCal","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f76df1a2.chunk.js","sourcesContent":["import * as firebase from 'firebase';\n// import { storage } from 'firebase-admin';\nimport 'firebase/storage';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDBgPVcjoV8LbR4hDA7tm3UoP0abMw8guE\",\n    authDomain: \"project-caitlin-c71a9.firebaseapp.com\",\n    databaseURL: \"https://project-caitlin-c71a9.firebaseio.com\",\n    projectId: \"project-caitlin-c71a9\",\n    storageBucket: \"project-caitlin-c71a9.appspot.com\",\n    messagingSenderId: \"711685546849\",\n    appId: \"1:711685546849:web:5c7a982748eb3bec35db20\",\n    measurementId: \"G-DCQF4LY5ZH\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  firebase.auth().signInAnonymously().catch(function(error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    // ...\n  });\n  var storage = firebase.storage();\n  // var admin = require(\"firebase-admin\");\n  // var storage = firebase.storage();\n\n// export default !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\nexport {storage, firebase as default};","import React from 'react';\nimport { Form,Row,Col} from \"react-bootstrap\";\n\n\nclass ShowNotifications extends React.Component{\n  constructor(props) {\n    super(props)\n    \n    this.state={\n       \n    };\n  }\n\n  convertTimeToHRMMSS =  (e) => {\n        \n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num/60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours)* 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length === 1) {\n        rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length === 1) {\n        rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours+\":\" + rminutes +\":\" + \"00\";\n  }\n\n  convertToMinutes = (myStr) => {\n      // console.log(myStr);\n      if(myStr === 0 ){\n        return 0; \n      }\n      let myStr2 = myStr.split(':');\n      let hours = myStr2[0];\n      let hrToMin = hours* 60;\n      let minutes = (myStr2[1] * 1 )+ hrToMin;\n      // let seconds = myStr2[2];\n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n      return minutes;\n  }\n    render(){\n        return (\n            <div> \n                <Form.Group controlId=\"Notification\">\n                <Row>\n                  <Col style = {{paddingRight: \"0px\" }}>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"5\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n                      value = {this.convertToMinutes(this.props.itemToEditPassedIn.ta_notifications.before.time)}\n                      onChange={\n                        (e) => { e.stopPropagation(); \n                          let temp = this.props.itemToEditPassedIn; \n                          temp.ta_notifications.before.time = this.convertTimeToHRMMSS(e);\n                          temp.user_notifications.before.time = this.convertTimeToHRMMSS(e);\n                          this.props.notificationChange(temp)\n                        }\n                      }\n                    />\n                  </Col>\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min Before Start Time</Form.Text>\n                  </Col>\n                </Row>\n                <Row style = {{ marginTop:\"15px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.user_notifications.before.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.user_notifications.before.is_enabled = !temp.user_notifications.before.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.user_notifications.before.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.user_notifications.before.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.user_notifications.before.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.ta_notifications.before.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.ta_notifications.before.is_enabled = !temp.ta_notifications.before.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.ta_notifications.before.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.ta_notifications.before.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.ta_notifications.before.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\" }}>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"30\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n                      value = {this.convertToMinutes(this.props.itemToEditPassedIn.ta_notifications.during.time)}\n                      onChange={\n                        (e) => { e.stopPropagation(); \n                          let temp = this.props.itemToEditPassedIn; \n                          temp.ta_notifications.during.time = this.convertTimeToHRMMSS(e);\n                          temp.user_notifications.during.time = this.convertTimeToHRMMSS(e);\n                          this.props.notificationChange(temp)\n                          }\n                      }\n                    />\n                  </Col>\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min After Start Time</Form.Text>\n                  </Col>\n                </Row>\n                <Row style = {{ marginTop:\"15px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.user_notifications.during.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.user_notifications.during.is_enabled = !temp.user_notifications.during.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.user_notifications.during.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.user_notifications.during.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.user_notifications.during.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}} >\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.ta_notifications.during.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.ta_notifications.during.is_enabled = !temp.ta_notifications.during.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.ta_notifications.during.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.ta_notifications.during.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if(e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.ta_notifications.during.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\" }}>\n                    <Form.Control\n                      type=\"number\"\n                      placeholder=\"5\"\n                      style = {{width:\"70px\", marginTop:\".25rem\"}}\n                      value = {this.convertToMinutes(this.props.itemToEditPassedIn.ta_notifications.after.time)}\n                      onChange={\n                        (e) => { e.stopPropagation(); \n                          let temp = this.props.itemToEditPassedIn; \n                          temp.ta_notifications.after.time = this.convertTimeToHRMMSS(e);\n                          temp.user_notifications.after.time = this.convertTimeToHRMMSS(e);\n                          this.props.notificationChange(temp)\n                          }\n                      }\n                    />\n                  </Col>\n                  <Col xs={8} style = {{paddingLeft:\"0px\"}}>\n                    <Form.Text style = {{fontSize:\"65%\"}}> Min After End Time</Form.Text>\n                  </Col>\n                </Row>\n                <Row style = {{ marginTop:\"15px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.user_notifications.after.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.user_notifications.after.is_enabled = !temp.user_notifications.after.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.user_notifications.after.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.user_notifications.after.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.user_notifications.after.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style = {{marginTop:\"10px\"}}>\n                  <Col style = {{paddingRight: \"0px\"}}>\n                  <Form.Text style = {{fontSize:\"65%\"}}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{paddingLeft: \"0px\"}} >\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                        checked={this.props.itemToEditPassedIn.ta_notifications.after.is_enabled}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.props.itemToEditPassedIn;\n                            temp.ta_notifications.after.is_enabled = !temp.ta_notifications.after.is_enabled;\n                            this.props.notificationChange(temp)\n                          }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message\"\n                        style={{marginLeft: \"10px\"}}\n                        value={this.props.itemToEditPassedIn.ta_notifications.after.message} \n                        onChange={\n                          (e) => { \n                            e.preventDefault();\n                            e.stopPropagation(); \n                            let temp = this.props.itemToEditPassedIn; \n                            temp.ta_notifications.after.message = e.target.value; \n                            this.props.notificationChange(temp)\n                        }}\n  \n                        //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                        onKeyDown={\n                          (e) => {\n                              if (e.keyCode === 32) {\n                                  let temp = this.props.itemToEditPassedIn;\n                                  temp.ta_notifications.after.message = e.target.value + \" \"; \n                                  // this.setState({ itemToEdit: temp })\n                                  e.preventDefault(); \n                                  e.stopPropagation();\n                                  this.props.notificationChange(temp)\n                              }\n                          }} \n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n              \n              </Form.Group>\n            </div>\n        );\n    }\n}\n\nexport default ShowNotifications;","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport ShowNotifications from \"./ShowNotifications\";\nimport DatePicker from \"react-datepicker\";\nimport { Form, Row, Col } from \"react-bootstrap\";\n\nexport default class AddNewGRItem extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"Is this a Routine? \" + this.props.isRoutine);\n  }\n  state = {\n    grArr: [], //goal, routine original array\n    itemToEdit: {\n      title: \"\",\n      id: \"\",\n      is_persistent: this.props.isRoutine,\n      photo: \"\",\n      is_complete: false,\n      is_available: true,\n      // todayDateObject: this.props.todayDateObject,\n      available_end_time: \"23:59:59\",\n      available_start_time: \"00:00:00\",\n      datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      audio: \"\",\n      is_timed: false,\n      expected_completion_time: \"01:00:00\",\n      is_sublist_available: true,\n      ta_notifications: {\n        before: {\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\",\n        },\n        during: {\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:30:00\",\n        },\n        after: {\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\",\n        },\n      },\n      user_notifications: {\n        before: {\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\",\n        },\n        during: {\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:30:00\",\n        },\n        after: {\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\",\n        },\n      },\n    }, //this is essentially the new item\n    //below are references to firebase directories\n    routineDocsPath: firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(\"7R6hAVmDrNutRkG3sVRy\")\n      .collection(\"goals&routines\"),\n    arrPath: firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(\"7R6hAVmDrNutRkG3sVRy\"),\n  };\n\n  componentDidMount() {\n    this.props.isRoutine\n      ? console.log(\"Routine Input\")\n      : console.log(\"Goal Input\");\n\n    this.getGRDataFromFB();\n  }\n\n  getGRDataFromFB = () => {\n    //Grab the goals/routine array from firebase and then store it in state varible grArr\n    console.log(this.state.arrPath);\n    this.state.arrPath\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          console.log(\"getGRDataFromFB DATA:\");\n          // console.log(doc.data());\n          var x = doc.data();\n          x = x[\"goals&routines\"];\n          console.log(x);\n          this.setState({\n            grArr: x,\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document! 2\");\n        }\n      })\n      .catch(function (error) {\n        console.log(\"Error getting document:\", error);\n        alert(\"Error getting document:\", error);\n      });\n  };\n\n  newInputSubmit = () => {\n    if (this.state.itemToEdit.title === \"\") {\n      alert(\"Invalid Input\");\n      return;\n    }\n    if (this.state.itemToEdit.photo === \"\") {\n      if (this.props.isRoutine) {\n        this.state.itemToEdit.photo =\n          \"https://firebasestorage.googleapis.com/v0/b/project-caitlin-c71a9.appspot.com/o/Routines-1.png?alt=media&token=5534e930-7cc1-4c5d-a6f3-fb8b6053a6a2\";\n      } else {\n        this.state.itemToEdit.photo =\n          \"https://firebasestorage.googleapis.com/v0/b/project-caitlin-c71a9.appspot.com/o/Goals-1.png?alt=media&token=3a5fa4f2-a136-4fdd-acf7-9007c08ccdf2\";\n      }\n    }\n    this.addNewDoc();\n  };\n\n  addNewDoc = () => {\n    this.state.routineDocsPath\n      .add({\n        title: this.state.itemToEdit.title,\n        \"actions&tasks\": []\n      })\n      .then((ref) => {\n        if (ref.id === null) {\n          alert(\"Fail to add new routine / goal item\");\n          return;\n        }\n\n        let newArr = this.props.ATArray;\n        let temp = this.state.itemToEdit;\n        temp.id = ref.id;\n        console.log(\"Added document with ID: \", ref.id);\n        // this.state.grArr.push(temp);\n        newArr.push(temp);\n        this.updateEntireArray(newArr);\n      });\n  };\n\n  \n  //This function will below will essentially take in a array and have a key map to it\n  updateEntireArray = newArr => {\n    // 2. update adds to the document\n    let db = this.state.arrPath;\n    db.update({ \"goals&routines\": newArr }).then(doc => {\n      console.log(\"updateEntireArray Finished\");\n      console.log(doc);\n      this.getGRDataFromFB();\n      if (this.props != null) {\n        console.log(\"refreshing FireBasev2 from AddNewGRItem\");\n        this.props.refresh();\n      }\n    });\n  };\n\n  convertTimeToHRMMSS = (e) => {\n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num / 60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours) * 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length === 1) {\n      rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length === 1) {\n      rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours + \":\" + rminutes + \":\" + \"00\";\n  };\n\n  convertToMinutes = () => {\n    let myStr = this.state.itemToEdit.expected_completion_time.split(\":\");\n    let hours = myStr[0];\n    let hrToMin = hours * 60;\n    let minutes = myStr[1] * 1 + hrToMin;\n    // let seconds = myStr[2];\n\n    // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n    return minutes;\n  };\n\n  handleNotificationChange = (temp) => {\n    // console.log(temp);\n    this.setState({ itemToEdit: temp });\n  };\n\n  // startTimePicker = () => {\n  //   // const [startDate, setStartDate] = useState(new Date());\n  //   return (\n  //     <DatePicker\n  //       className=\"form-control\"\n  //       type=\"text\"\n  //       selected={this.state.todayDateObject}\n  //       onChange={(date) => {\n  //         this.setState(\n  //           {\n  //             todayDateObject: date,\n  //           },\n  //           () => {\n  //             console.log(\"starttimepicker\", this.state.todayDateObject);\n  //           }\n  //         );\n  //       }}\n  //       showTimeSelect\n  //       timeIntervals={15}\n  //       timeCaption=\"time\"\n  //       dateFormat=\"MMMM d, yyyy h:mm aa\"\n  //     />\n  //   );\n  // };\n\n  render() {\n    return (\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\n        <Modal.Header closeButton onHide={this.props.closeModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">\n              Add New {this.props.isRoutine ? \"Routine\" : \"Goal\"}\n            </h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            {/* <Row>\n          <Col>\n          <div style={{ width: \"300px\" }}> */}\n            <Form.Group>\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                value={this.state.itemToEdit.title}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.title = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n                type=\"text\"\n                placeholder=\"Enter Title\"\n              />\n              {/* <div style={{ color: \"red\" }}> {this.state.showNoTitleError}</div> */}\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Photo URL</Form.Label>\n              <Form.Control\n                value={this.state.itemToEdit.photo}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.photo = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n                type=\"text\"\n                placeholder=\"Enter Photo URL\"\n              />\n            </Form.Group>\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\n                value={this.state.itemToEdit.available_start_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_start_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n            {/* <Form.Group value={this.state.todayDateObject} controlId=\"Y\">\n              <Form.Label>Start Time</Form.Label> <br />\n              {this.startTimePicker()}\n            </Form.Group> */}\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_end_time}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_end_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>This Takes Me</label>\n            <Row>\n              <Col style={{ paddingRight: \"0px\" }}>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"30\"\n                  value={this.convertToMinutes()}\n                  style={{ marginTop: \".25rem\", paddingRight: \"0px\" }}\n                  onChange={(e) => {\n                    e.stopPropagation();\n                    let temp = this.state.itemToEdit;\n                    temp.expected_completion_time = this.convertTimeToHRMMSS(e);\n                    this.setState({ itemToEdit: temp });\n                  }}\n                />\n              </Col>\n              <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                <p style={{ marginLeft: \"10px\", marginTop: \"5px\" }}>minutes</p>\n              </Col>\n            </Row>\n\n            <div className=\"input-group mb-3\" style={{ marginTop: \"10px\" }}>\n              <label className=\"form-check-label\">Time?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_timed}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  console.log(temp.is_timed);\n                  temp.is_timed = !temp.is_timed;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Available to Caitlin?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Available\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_available}\n                onChange={(e) => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_available = e.target.checked;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            {this.state.itemToEdit.is_available && (\n              <ShowNotifications\n                itemToEditPassedIn={this.state.itemToEdit}\n                notificationChange={this.handleNotificationChange}\n              />\n            )}\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.closeModal}>\n            Close\n          </Button>\n          <Button variant=\"info\" onClick={this.newInputSubmit}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import firebase from \"./firebase\";\nimport ShowNotifications from \"./ShowNotifications\"\nimport { Button, Modal } from \"react-bootstrap\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\nexport default class AddNewATItem extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"AddNewATItem constructor\");\n    this.state = {\n      newActionTitle: \"\", //Old delete Later\n      itemToEdit: {\n        id: \"\",\n        title: \"\",\n        photo: \"\",\n        audio: \"\",\n        is_complete: false,\n        is_available: true,\n        available_end_time: \"23:59:59\",\n        available_start_time: \"00:00:00\",\n        datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n        datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n        is_timed: false,\n        expected_completion_time: \"00:11:00\",\n        is_sublist_available: true,\n        ta_notifications:{\n          before:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          },\n          during:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:30:00\"\n          },\n          after:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          }\n        },\n        user_notifications:{\n          before:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          },\n          during:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:30:00\"\n          },\n          after:{\n            is_enabled: false,\n            is_set: false,\n            message: \"\",\n            time: \"00:05:00\"\n          }\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    // console.log(\"AddNewATItem did mount\");\n    // console.log(this.props.ATItem);\n    // console.log(this.props.ATItem.fbPath);\n    // console.log(this.props.ATItem.arr);\n    // console.log(this.props.ATArray);\n  }\n\n  newInputSubmit = () => {\n    if (this.state.itemToEdit.title === \"\") {\n      alert(\"Invalid Input\");\n      return;\n    }\n    // console.log(\"Submitting Input: \" + this.state.itemToEdit.title);\n    this.addNewDoc();\n  };\n\n  addNewDoc = () => {\n    this.props.ATItem.fbPath\n      .collection(\"actions&tasks\")\n      .add({\n        title: this.state.itemToEdit.title,\n        \"instructions&steps\": []\n      })\n      .then(ref => {\n        if (ref.id === null) {\n          alert(\"Fail to add new Action / Task item\");\n          return;\n        }\n        console.log(\"Added document with ID: \", ref.id);\n        let newArr = this.props.ATArray;\n        let temp = this.state.itemToEdit;\n        temp.id = ref.id;\n        newArr.push(temp);\n        console.log(newArr);\n        console.log(\"adding new item\");\n        this.updateEntireArray(newArr);\n      });\n  };\n\n  //This function will below will essentially take in a array and have a key map to it\n  updateEntireArray = newArr => {\n    // 2. update adds to the document\n    this.props.ATItem.fbPath.update({ \"actions&tasks\": newArr }).then(doc => {\n      console.log(\"updateEntireArray Finished\");\n      console.log(doc);\n      if (this.props != null) {\n        this.props.hideNewATModal();\n        console.log(\"refreshing FireBasev2 from AddNewATItem\");\n        this.props.refresh(newArr);\n      }\n    });\n  };\n\n  convertTimeToHRMMSS =  (e) => {\n        \n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num/60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours)* 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length === 1) {\n        rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length === 1) {\n        rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours+\":\" + rminutes +\":\" + \"00\";\n  }\n\n  convertToMinutes = () => {\n      let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n      let hours = myStr[0];\n      let hrToMin = hours* 60;\n      let minutes = (myStr[1] * 1 )+ hrToMin;\n      let seconds = myStr[2];\n      \n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n      return minutes;\n  }\n\n  handleNotificationChange = (temp) => {\n    // console.log(temp);\n    this.setState({ itemToEdit: temp });\n  }\n\n  render() {\n    return (\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.props.hideNewATModal();\n            console.log(\"closed button clicked\");\n          }}\n        >\n          <Modal.Title>\n            <h2 className=\"normalfancytext\">Add New Task/Action</h2>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* <AddNewGRItem refresh={this.grabFireBaseRoutinesGoalsData} isRoutine={this.state.isRoutine} /> */}\n          <div>\n            <label>Title</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Title\"\n                value={this.state.itemToEdit.title}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.title = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Photo URL \"\n                value={this.state.itemToEdit.photo}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.photo = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\n                value={this.state.itemToEdit.available_start_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_start_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_end_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_end_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        type=\"number\"\n                        placeholder=\"30\"\n                        value = {this.convertToMinutes()}\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                        onChange={\n                            (e) => { e.stopPropagation(); \n                            let temp = this.state.itemToEdit; \n                            temp.expected_completion_time = this.convertTimeToHRMMSS(e);\n                             this.setState({ itemToEdit: temp }) }\n                        }\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n\n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n              <label className=\"form-check-label\" >Time?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_timed}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_timed = !temp.is_timed;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Available to Caitlin?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Available\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_available}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_available = !temp.is_available;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            {this.state.itemToEdit.is_available && \n              <ShowNotifications \n                itemToEditPassedIn = {this.state.itemToEdit}\n                notificationChange = {this.handleNotificationChange}\n              />\n            }\n            \n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              this.props.hideNewATModal();\n              console.log(\"closed button clicked\");\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              this.newInputSubmit();\n            }}\n          >\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import firebase from \"./firebase\";\nimport ShowNotifications from \"./ShowNotifications\"\nimport { Button, Modal } from \"react-bootstrap\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\n/**\n *\n * This class is responsible for adding a new elemnt to the\n * firebase database. If it becomes successful then we update\n * the view on the firebasev2\n */\n\nexport default class AddNewISItem extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"AddNewISItem constructor\");\n  }\n\n  state = {\n    atArr: [], //goal, routine original array\n    newInstructionTitle: \"\",\n    itemToEdit: {\n      //new item to add to array\n      id: \"\",\n      title: \"\",\n      photo: \"\",\n      is_complete: false,\n      is_available: true,\n      available_end_time: \"23:59:59\",\n      available_start_time: \"00:00:00\",\n      datetime_completed: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      datetime_started: \"Sun, 23 Feb 2020 00:08:43 GMT\",\n      audio: \"\",\n      is_timed: false,\n      expected_completion_time: \"00:10:00\",\n      ta_notifications:{\n        before:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        },\n        during:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:30:00\"\n        },\n        after:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        }\n      },\n      user_notifications:{\n        before:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        },\n        during:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:30:00\"\n        },\n        after:{\n          is_enabled: false,\n          is_set: false,\n          message: \"\",\n          time: \"00:05:00\"\n        }\n      }\n    }\n  };\n\n  componentDidMount() {\n    // console.log(\"AddNewISItem did mount\");\n    // console.log(this.props.ISArray);\n    // console.log(this.props.ISItem);\n  }\n\n  handleInputChange = e => {\n    console.log(e.target.value);\n    this.setState({\n      newInstructionTitle: e.target.value\n    });\n  };\n\n  newInputSubmit = () => {\n    if (this.state.itemToEdit.title === \"\") {\n      alert(\"Invalid Input\");\n      return;\n    }\n    console.log(\"Submitting Input: \" + this.state.itemToEdit.title);\n\n    this.props.ISArray.push(this.state.itemToEdit);\n    this.updateEntireArray(this.props.ISArray);\n  };\n\n  //This function will below will essentially take in a array and have a key map to it\n  updateEntireArray = newArr => {\n    // 2. update adds to the document\n\n    this.props.ISItem.fbPath\n      .update({ \"instructions&steps\": newArr })\n      .then(doc => {\n        console.log(\"updateEntireArray Finished\");\n        console.log(doc);\n        if (this.props != null) {\n          this.props.hideNewISModal();\n          console.log(\"refreshing FireBasev2 from ISItem\");\n          this.props.refresh(newArr);\n        } else {\n          console.log(\"removing newly added item due to failure\");\n          this.props.ISArray.pop();\n        }\n      });\n  };\n\n  convertTimeToHRMMSS =  (e) => {\n        \n    // console.log(e.target.value);\n    let num = e.target.value;\n    let hours = num/60;\n    let rhours = Math.floor(hours);\n    let minutes = (hours - rhours)* 60;\n    let rminutes = Math.round(minutes);\n    if (rhours.toString().length === 1) {\n        rhours = \"0\" + rhours;\n    }\n    if (rminutes.toString().length === 1) {\n        rminutes = \"0\" + rminutes;\n    }\n    // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n    return rhours+\":\" + rminutes +\":\" + \"00\";\n  }\n\n  convertToMinutes = () => {\n      let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n      let hours = myStr[0];\n      let hrToMin = hours* 60;\n      let minutes = (myStr[1] * 1 )+ hrToMin;\n      let seconds = myStr[2];\n      \n      // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n      return minutes;\n  }\n\n  handleNotificationChange = (temp) => {\n    // console.log(temp);\n    this.setState({ itemToEdit: temp });\n  }\n\n  render() {\n    return (\n      <Modal.Dialog style={{ marginLeft: \"0\", width: this.props.width }}>\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.props.hideNewISModal();\n            console.log(\"closed button clicked\");\n          }}\n        >\n          <Modal.Title>\n            <h2 className=\"normalfancytext\">Add New Step</h2>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* <AddNewGRItem refresh={this.grabFireBaseRoutinesGoalsData} isRoutine={this.state.isRoutine} /> */}\n          <div>\n            <label>Title</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Title\"\n                value={this.state.itemToEdit.title}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.title = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"Enter Photo URL \"\n                value={this.state.itemToEdit.photo}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.photo = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 08:20:00) \"\n                value={this.state.itemToEdit.available_start_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_start_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\">\n              <input\n                style={{ width: \"200px\" }}\n                placeholder=\"HH:MM:SS (ex: 16:20:00) \"\n                value={this.state.itemToEdit.available_end_time}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.available_end_time = e.target.value;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n            \n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        // value={this.state.newEventNotification}\n                        // onChange={this.handleNotificationChange}\n                        type=\"number\"\n                        placeholder=\"30\"\n                        value = {this.convertToMinutes()}\n                        // value = {this.state.itemToEdit.expected_completion_time}\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                        onChange={\n                            // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\n                            (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\n                        }\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n\n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n              <label className=\"form-check-label\" >Time?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Timed\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_timed}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_timed = !temp.is_timed;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <label className=\"form-check-label\">Available to Caitlin?</label>\n              <input\n                style={{ marginTop: \"5px\", marginLeft: \"5px\" }}\n                name=\"Available\"\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.is_available}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                  temp.is_available = !temp.is_available;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div>\n\n            {this.state.itemToEdit.is_available && \n              <ShowNotifications \n                itemToEditPassedIn = {this.state.itemToEdit}\n                notificationChange = {this.handleNotificationChange}\n              />\n            }\n\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              this.props.hideNewISModal();\n              console.log(\"closed button clicked\");\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              this.newInputSubmit();\n            }}\n          >\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  }\n}\n","import React, { Component } from 'react'\n// import { Button, Row, Col, Modal, InputGroup, FormControl } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n/**\n * \n * This class is responsible for adding a new elemnt to the\n * firebase database. If it becomes successful then we update\n * the view on the firebasev2\n*/\nexport default class DeleteISItem extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('DeleteISItem constructor');\n        // console.log('delete index ' + this.props.deleteIndex)\n        // console.log(this.props.ISItem)\n        // console.log(this.props.ISArray)\n    }\n\n    componentDidMount() {\n        // console.log('DeleteISItem did mount');\n    }\n\n\n    submitRequest = () => {\n        //Delete from the firebase\n        /*const url = \"https://cors-anywhere.herokuapp.com/https://us-central1-project-caitlin-c71a9.cloudfunctions.net/RecursiveDelete\";\n        const Data = {\n            data : {\n                \"path\" : this.props.ISItem.fbPath.path //<<<<< Entire path of the document to delete\n            }\n        };\n        console.log(\"path \" +  this.props.ISItem.fbPath.path);\n        \n        const param = {\n            headers:{\n                //\"content-type\":\"application/json; charset=UTF-8\"\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(Data),\n            method: \"POST\"\n        };\n        \n        fetch(url, param)\n        .then((response) => response.json())\n        .then((result) => { console.log(result); } )\n        .catch((error) => { console.error(error); });*/\n        \n        // console.log(\"request was made to delete for element \" +  this.props.deleteIndex);\n        let items = [...this.props.ISArray];\n        // console.log(\"delete with: \")\n        // console.log(items)\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length))\n        // console.log(\"delete 2 with: \")\n        // console.log(newArr)\n        this.props.ISItem.fbPath.update({ 'instructions&steps': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\n                    this.props.refresh(newArr);\n                }\n                else{\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    confirmation = () => {\n        const r = window.confirm(\"Confirm Delete\"); \n        if(r === true){ \n            // console.log(\"Delete Confirm\")\n            this.submitRequest();\n            return;\n        }\n        // console.log(\"Delete Not Confirm\")\n    }\n\n\n    render() {\n        return (\n            < div>\n                <FontAwesomeIcon \n                    onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut ={event => {event.target.style.color = \"#000000\";}}\n                    style ={{color:  \"#000000\", marginRight:\"15px\", marginLeft: \"5px\" }}\n                    onClick={(e)=>{e.stopPropagation(); this.confirmation()}}\n                    icon={faTrashAlt} size=\"lg\" \n                />\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n// import { Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nexport default class deleteAT extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    /**\n     * Does a check to make sure the element is within bounds and then calls then right function to\n     * delete the stupid AT\n    */\n    submitRequest = () => {\n        if (this.props.deleteIndex < 0) {\n            console.log(\"deleteAT index error\")\n            return;\n        }\n        this.tempdeleteArrPortion();\n    }\n\n    tempdeleteArrPortion = () => {\n        \n        //Delete from the firebase\n        let arr = [...this.props.Array];\n        let j = this.props.deleteIndex;\n        var id = arr[j]['id']\n        const url = \"https://cors-anywhere.herokuapp.com/https://us-central1-project-caitlin-c71a9.cloudfunctions.net/RecursiveDelete\";\n        const Data = {\n            data : {\n                \"path\" : this.props.Item.fbPath.path + \"/\" + this.props.type + \"/\" + id//<<<<< Entire path of the document to delete\n            }\n        };\n        console.log(\"path \" +  this.props.Item.fbPath.path);\n        \n        const param = {\n            headers:{\n                //\"content-type\":\"application/json; charset=UTF-8\"\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(Data),\n            method: \"POST\"\n        };\n        \n        fetch(url, param)\n        .then((response) => response.json())\n        .then((result) => { console.log(result); } )\n        .catch((error) => { console.error(error); });\n        \n        // console.log(\"request was made to delete this index \" + this.props.deleteIndex);\n        let items = [...this.props.Array];\n        let i = this.props.deleteIndex;\n        //items[i]['deleted'] = true;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\n        this.props.Item.fbPath.update({ 'actions&tasks': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    this.props.refresh(items);\n                }\n                else {\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n\n    /**\n     * \n     * deleteArrPortion :\n     * this function will go into the array of that action&task and delete that specific element, after which\n     * it will update the array in firestore and refresh the page once that is completed\n    */\n    deleteArrPortion = () => {\n        \n        // console.log(\"request was made to delete this  element \" + this.props.deleteIndex);\n        let items = [...this.props.Array];\n        // console.log(\"delete with: \");\n        // console.log(items);\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\n        // console.log(\"delete 2 with: \");\n        // console.log(newArr);\n        this.props.Item.fbPath.update({ 'actions&tasks': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\n                    this.props.refresh(newArr);\n                }\n                else {\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    \n    confirmation = () => {\n        const r = window.confirm(\"Confirm Delete\"); \n        if(r === true){ \n            // console.log(\"Delete Confirm\")\n            this.submitRequest();\n            return;\n        }\n        // console.log(\"Delete Not Confirm\")\n    }\n\n    render() {\n        return (\n            <div style={{ marginLeft: \"5px\" }} >\n                <FontAwesomeIcon\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style ={{marginRight: '15px', color:  \"#000000\" }}\n                    onClick={(e) => { e.stopPropagation(); this.confirmation() }}\n                    icon={faTrashAlt} size=\"lg\"\n                />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt} from '@fortawesome/free-solid-svg-icons';\nexport default class deleteGR extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('Delete AT constructor');  \n       \n    }\n\n    submitRequest = () => {\n        // console.log(\"request to delete GR\")\n        // console.log('delete index ' + this.props.deleteIndex)\n        // console.log(this.props.Item)\n        // console.log(this.props.Array)\n        if (this.props.deleteIndex < 0){\n            console.log(\"invalid index exiting delete\");\n            return;\n        }\n        this.tempdeleteArrPortion();\n    } \n\n    tempdeleteArrPortion= () => {\n        \n        //Delete from the firebase\n        let arr = [...this.props.Array];\n        var id = arr[this.props.deleteIndex]['id']\n        const url = \"https://cors-anywhere.herokuapp.com/https://us-central1-project-caitlin-c71a9.cloudfunctions.net/RecursiveDelete\";\n        const Data = {\n            data : {\n                \"path\" : this.props.Path.path + \"/goals&routines/\" + id//<<<<< Entire path of the document to delete\n            }\n        };\n        console.log(\"path \" +  this.props.Path.path + \"/\" + this.props.type + \"/\" + id);\n        \n        const param = {\n            headers:{\n                //\"content-type\":\"application/json; charset=UTF-8\"\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(Data),\n            method: \"POST\"\n        };\n        \n        fetch(url, param)\n        .then((response) => response.json())\n        .then((result) => { console.log(result); } )\n        .catch((error) => { console.error(error); });\n        \n        let items = [...this.props.Array];\n        //items[this.props.deleteIndex]['deleted'] = true;\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\n        \n        this.props.Path.update({ 'goals&routines': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete GRItem\");\n                    this.props.refresh();\n                }\n                else{\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    deleteArrPortion = () => {\n        \n        // console.log(\"request was made to delete this  element \" +  this.props.deleteIndex);\n        let items = [...this.props.Array];\n        // console.log(\"delete with: \");\n        let i = this.props.deleteIndex;\n        const newArr = items.slice(0, i).concat(items.slice(i + 1, items.length));\n        // console.log(\"delete 2 with: \");\n        // console.log(newArr);\n        this.props.Path.update({ 'goals&routines': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from delete ISItem\");\n                    this.props.refresh();\n                }\n                else{\n                    console.log(\"delete failure\");\n                }\n            }\n        )\n    }\n\n    confirmation = () => {\n        const r = window.confirm(\"Confirm Delete\"); \n        if(r == true){ \n            // console.log(\"Delete Confirm\")\n            this.submitRequest();\n            return;\n        }\n        console.log(\"Delete Not Confirm\")\n    }\n\n\n    render() {\n        return (\n            <div  style={{ marginLeft: \"5px\" }}>\n            \n            <FontAwesomeIcon \n                title = \"Delete Item\"\n                onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\n                onMouseOut ={event => {event.target.style.color = \"#000000\";}}\n                style ={{marginRight: '15px', color:  \"#000000\" }}\n                // style ={{ color:  \"#000000\" }}\n                onClick={(e)=>{ e.stopPropagation(); this.confirmation()}}\n                icon={faTrashAlt} size=\"lg\" \n            />\n        </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { faEdit} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button} from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport ShowNotifications from \"./ShowNotifications\";\nimport ShowATList from \"./ShowNotifications.jsx\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\nexport default class editGR extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            showEditModal: false,\n            itemToEdit: this.props.ATArray[this.props.i]\n        }\n    }\n\n    newInputSubmit = () => {\n        // console.log(\"submitting GR edited formed to firebase\");\n        let newArr = this.props.ATArray;\n     \n        newArr[this.props.i] = this.state.itemToEdit;\n\n        //Add the below attributes in case they don't already exists\n\n        if (!newArr[this.props.i]['audio']) {\n            newArr[this.props.i]['audio'] = '';\n        }\n        if (!newArr[this.props.i]['datetime_completed']) {\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        if (!newArr[this.props.i]['datetime_started']) {\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        this.props.FBPath.update({ 'goals&routines': newArr }).then(\n            (doc) => {\n\n                this.setState({ showEditModal: false })\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from updating GR ITEM \");\n                    this.props.refresh(newArr);\n                }\n                else {\n                    console.log(\"update failure\");\n                }\n            }\n        )\n    }\n\n\n    //For possible future use because we currently just typing out the time.\n    startTimePicker = () => {\n        return (\n            <DatePicker className=\"form-control form-control-lg\" type=\"text\" style={{ width: '100%' }}\n                showTimeSelect\n                showTimeSelectOnly\n                timeIntervals={15}\n                timeCaption=\"Time\"\n                dateFormat=\"h:mm aa\"\n                selected={(this.state.itemToEdit.available_start_time) ? this.state.itemToEdit.available_start_time : new Date()}\n                onChange={(date) => {\n                    let temp = this.state.itemToEdit;\n                    temp.available_start_time = date;\n                    this.setState({\n                        itemToEdit: temp\n                    })\n\n                }}\n            />\n        );\n    }\n\n    convertTimeToHRMMSS =  (e) => {\n        \n        // console.log(e.target.value);\n        let num = e.target.value;\n        let hours = num/60;\n        let rhours = Math.floor(hours);\n        let minutes = (hours - rhours)* 60;\n        let rminutes = Math.round(minutes);\n        if (rhours.toString().length == 1) {\n            rhours = \"0\" + rhours;\n        }\n        if (rminutes.toString().length == 1) {\n            rminutes = \"0\" + rminutes;\n        }\n        // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n        return rhours+\":\" + rminutes +\":\" + \"00\";\n    }\n\n    convertToMinutes = () => {\n        let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n        let hours = myStr[0];\n        let hrToMin = hours* 60;\n        let minutes = (myStr[1] * 1 )+ hrToMin;\n        let seconds = myStr[2];\n        \n        // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n        return minutes;\n    }\n\n    handleNotificationChange = (temp) => {\n        // console.log(temp);\n        this.setState({ itemToEdit: temp });\n    }\n\n    editGRForm = () => {\n        return (  \n              // <div style={{ border: \"2px\", margin: '0', width: \"315px\", padding: '20px' }}>\n            <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\n                <label >Title</label>\n                 <div className=\"input-group mb-3\" >\n                    <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\n                        (e) => { e.preventDefault(); e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\n                    }\n\n                    //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                    onKeyDown={\n                        (e) => {\n                            if (e.keyCode === 32) {\n                                let temp = this.state.itemToEdit; temp.title = e.target.value + \" \"; this.setState({ itemToEdit: temp })\n                                e.preventDefault(); e.stopPropagation()\n                            }\n                        }} />\n                </div >\n\n                <label>Photo URL</label>\n                <div className=\"input-group mb-3\" >\n                    <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\n                    } />\n                </div >\n\n                <label>Available Start Time</label>\n                <div className=\"input-group mb-3\" >\n                    <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                    } />\n                </div >\n\n                <label>Available End Time</label>\n                <div className=\"input-group mb-3\" >\n                    <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\n                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                    } />\n                </div >\n\n                <label>This Takes Me</label>\n                <Row>\n                    <Col  style = {{paddingRight: \"0px\" }}>  \n                        <Form.Control\n                            // value={this.state.newEventNotification}\n                            // onChange={this.handleNotificationChange}\n                            type=\"number\"\n                            placeholder=\"30\"\n                            value = {this.convertToMinutes()}\n                            // value = {this.state.itemToEdit.expected_completion_time}\n                            style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                            onChange={\n                                // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\n                                 (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\n                            }\n                        />\n                    </Col>\n                    <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                        <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                    </Col>\n                </Row>\n\n                <div className=\"input-group mb-3\"style ={{marginTop:\"10px\"}} >\n                    <label className=\"form-check-label\">Time?</label>\n\n                    <input\n                        style={{ marginTop: '5px', marginLeft: '5px' }}\n\n                        name=\"Timed\"\n                        type=\"checkbox\"\n                        checked={this.state.itemToEdit.is_timed}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.state.itemToEdit;\n                            // console.log(temp.is_timed)\n                            temp.is_timed = !temp.is_timed;\n                            this.setState({ itemToEdit: temp })\n                        }} />\n                </div >\n\n                <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n                    <label className=\"form-check-label\">Available to Caitlin?</label>\n                    <input\n                        style={{ marginTop: '5px', marginLeft: '5px' }}\n                        name=\"Available\"\n                        type=\"checkbox\"\n                        checked={this.state.itemToEdit.is_available}\n                        onChange={(e) => {\n                            e.stopPropagation();\n                            let temp = this.state.itemToEdit;\n                            temp.is_available = !temp.is_available;\n                            this.setState({ itemToEdit: temp })\n                        }} />\n                </div >\n                    \n                {this.state.itemToEdit.is_available && \n                    <ShowNotifications \n                        itemToEditPassedIn = {this.state.itemToEdit}\n                        notificationChange = {this.handleNotificationChange}\n                />} \n                    \n\n                <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\n                <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\n            </Row>\n        )\n    }\n\n\n    showIcon = () => {\n        return (\n            <div style={{ marginLeft: \"5px\" }} >\n                <FontAwesomeIcon\n\n                    title=\"Edit Item\"\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: \"#000000\"}}\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\n                    icon={faEdit} size=\"lg\"\n                />\n            </div>\n        )\n    }\n   \n\n    \n\n    render() {\n        return (\n\n            <div onClick={(e) => { e.stopPropagation(); }}>\n                {(this.state.showEditModal) ? <div></div> : this.showIcon()} \n                 {(this.state.showEditModal ? this.editGRForm() : <div> </div>)}\n  \n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from 'react-bootstrap';\nimport ShowNotifications from \"./ShowNotifications\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\n\nexport default class editIS extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            showEditModal: false,\n            itemToEdit: this.props.ISArray[this.props.i]\n        }\n    }\n\n    newInputSubmit = () => {\n        let newArr  = this.props.ISArray;\n        newArr[this.props.i] = this.state.itemToEdit;\n\n        //Add the below attributes in case they don't already exists\n        if(!newArr[this.props.i]['datetime_completed']){\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n        if(!newArr[this.props.i]['datetime_started']){\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        if(!newArr[this.props.i]['audio']){\n            newArr[this.props.i]['audio'] = '';\n        }\n        this.props.FBPath.update({ 'instructions&steps': newArr }).then(\n            (doc) => {\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from updating ISItem\");\n                    this.setState({ showEditModal: false })\n                    this.props.refresh(newArr);\n                }\n                else{\n                    console.log(\"update failure\");\n                }\n            }\n        )\n    }\n    convertTimeToHRMMSS =  (e) => {\n        \n        // console.log(e.target.value);\n        let num = e.target.value;\n        let hours = num/60;\n        let rhours = Math.floor(hours);\n        let minutes = (hours - rhours)* 60;\n        let rminutes = Math.round(minutes);\n        if (rhours.toString().length == 1) {\n            rhours = \"0\" + rhours;\n        }\n        if (rminutes.toString().length == 1) {\n            rminutes = \"0\" + rminutes;\n        }\n        // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n        return rhours+\":\" + rminutes +\":\" + \"00\";\n    }\n\n    convertToMinutes = () => {\n        let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n        let hours = myStr[0];\n        let hrToMin = hours* 60;\n        let minutes = (myStr[1] * 1 )+ hrToMin;\n        let seconds = myStr[2];\n        \n        // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n        return minutes;\n    }\n    \n    handleNotificationChange = (temp) => {\n        // console.log(temp);\n        this.setState({ itemToEdit: temp });\n    }\n    \n    editISForm = () => {\n        return (\n            // <div style={{margin: '0', width: \"315px\", padding:'20px'}}>\n            <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\n            <label>Title</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>Photo URL</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>Available Start Time</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>Available End Time</label>\n            <div className=\"input-group mb-3\" >\n                <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\n                    (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                } />\n            </div >\n\n            <label>This Takes Me</label>\n            <Row>\n                <Col  style = {{paddingRight: \"0px\" }}>  \n                    <Form.Control\n                        // value={this.state.newEventNotification}\n                        // onChange={this.handleNotificationChange}\n                        type=\"number\"\n                        placeholder=\"30\"\n                        value = {this.convertToMinutes()}\n                        // value = {this.state.itemToEdit.expected_completion_time}\n                        style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                        onChange={\n                            // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\n                            (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\n                        }\n                    />\n                </Col>\n                <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                    <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                </Col>\n            </Row>\n            \n            <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n                <label className=\"form-check-label\">Time?</label>\n                <input\n                    style={{ marginTop: '5px', marginLeft: '5px' }}\n                    name=\"Timed\"\n                    type=\"checkbox\"\n                    checked={this.state.itemToEdit.is_timed}\n                    onChange={(e) => {\n                        e.stopPropagation();\n                        let temp = this.state.itemToEdit;\n                        // console.log(temp.is_timed)\n                        temp.is_timed = !temp.is_timed;\n                        this.setState({ itemToEdit: temp })\n                    }} />\n            </div>\n            \n            <div className=\"input-group mb-3\" >\n                <label className=\"form-check-label\">Available to Caitlin?</label>\n                <input\n                    style={{ marginTop: '5px', marginLeft: '5px' }}\n                    name=\"Available\"\n                    type=\"checkbox\"\n                    checked={this.state.itemToEdit.is_available}\n                    onChange={(e) => {\n                        e.stopPropagation();\n                        let temp = this.state.itemToEdit;\n                        // console.log(temp.is_available)\n                        temp.is_available = !temp.is_available;\n                        this.setState({ itemToEdit: temp })\n                    }} />\n            </div >\n\n            {this.state.itemToEdit.is_available && \n                <ShowNotifications \n                    itemToEditPassedIn = {this.state.itemToEdit}\n                    notificationChange = {this.handleNotificationChange}\n                />\n            }\n\n\n            <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\n            <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\n        {/* </div> */}\n        </Row>\n        )\n    }\n\n    showIcon = () => {\n        return (\n            <div>\n                <FontAwesomeIcon\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: \"#000000\", marginLeft:\"5px\" }}\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\n                    icon={faEdit} size=\"lg\"\n                />\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {/* {(this.state.showEditModal) ? <div> </div> : this.showIcon()}\n                {(this.state.showEditModal ? this.editISForm() : <div> </div>)} */}\n                {this.state.showEditModal ? this.editISForm() : this.showIcon()}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {  Button } from 'react-bootstrap';\nimport ShowNotifications from \"./ShowNotifications\";\nimport {\n    Form,\n    Row,\n    Col\n  } from \"react-bootstrap\";\n\n\nexport default class editAT extends Component {\n\n    constructor(props) {\n        super(props)\n        // console.log('editAT constructor');\n        // console.log('Edit index ' + this.props.i)\n        // console.log(this.props.FBPath)\n        // console.log(this.props.ATArray)\n\n        this.state = {\n            showEditModal: false,\n            itemToEdit: this.props.ATArray[this.props.i]\n        }\n    }\n\n    newInputSubmit = () => {\n        // console.log(\"submitting edited formed to firebase\");\n        let newArr  = this.props.ATArray;\n        newArr[this.props.i] = this.state.itemToEdit;\n        \n        //Add the below attributes in case they don't already exists\n        if(!newArr[this.props.i]['datetime_completed']){\n            newArr[this.props.i]['datetime_completed'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n        if(!newArr[this.props.i]['audio']){\n            newArr[this.props.i]['audio'] = '';\n        }\n\n        if(!newArr[this.props.i]['datetime_started']){\n            newArr[this.props.i]['datetime_started'] = 'Sun, 23 Feb 2020 00:08:43 GMT';\n        }\n\n        this.props.FBPath.update({ 'actions&tasks': newArr }).then(\n            (doc) => {\n                // console.log('updateEntireArray Finished')\n                // console.log(doc);\n                if (this.props != null) {\n                    // console.log(\"refreshing FireBasev2 from updating ISItem\");\n                    this.setState({ showEditModal: false })\n                    this.props.refresh(newArr);\n                }\n                else{\n                    console.log(\"update failure\");\n                }\n            }\n        )\n    }\n    convertTimeToHRMMSS =  (e) => {\n        \n        // console.log(e.target.value);\n        let num = e.target.value;\n        let hours = num/60;\n        let rhours = Math.floor(hours);\n        let minutes = (hours - rhours)* 60;\n        let rminutes = Math.round(minutes);\n        if (rhours.toString().length == 1) {\n            rhours = \"0\" + rhours;\n        }\n        if (rminutes.toString().length == 1) {\n            rminutes = \"0\" + rminutes;\n        }\n        // console.log(rhours+\":\" + rminutes +\":\" + \"00\");\n        return rhours+\":\" + rminutes +\":\" + \"00\";\n    }\n\n    convertToMinutes = () => {\n        let myStr = this.state.itemToEdit.expected_completion_time.split(':');\n        let hours = myStr[0];\n        let hrToMin = hours* 60;\n        let minutes = (myStr[1] * 1 )+ hrToMin;\n        let seconds = myStr[2];\n        \n        // console.log(\"hours: \" +hours + \"minutes: \" + minutes + \"seconds: \" + seconds);\n        return minutes;\n    }\n    handleNotificationChange = (temp) => {\n        // console.log(temp);\n        this.setState({ itemToEdit: temp });\n    }\n\n    editATForm = () => {\n        return (\n            // <div style={{ margin: '0', width: \"315px\", padding:'20px'}}>\n                <Row style={{marginLeft:this.props.marginLeftV, border: \"2px\", padding: '20px', marginTop:\"10px\" }}>\n                  <label>Title</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"Enter Title\" value={this.state.itemToEdit.title} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.title = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } \n                            \n                            //TEMP FIX for SPACE BAR TRIGGERING KEY PRESS\n                    onKeyDown={\n                        (e) => {\n                            if (e.keyCode === 32) {\n                                 \n                                let temp = this.state.itemToEdit; temp.title = e.target.value + \" \"; this.setState({ itemToEdit: temp })\n                                e.preventDefault(); e.stopPropagation()\n                            }\n                        }}\n                            />\n                        </div >\n\n                        <label>Photo URL</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"Enter Photo URL \" value={this.state.itemToEdit.photo} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.photo = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } />\n                        </div >\n\n                        <label>Available Start Time</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 08:20:00) \" value={this.state.itemToEdit.available_start_time} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_start_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } />\n                        </div >\n\n                        <label>Available End Time</label>\n                        <div className=\"input-group mb-3\" >\n                            <input style={{ width: '200px' }} placeholder=\"HH:MM:SS (ex: 16:20:00) \" value={this.state.itemToEdit.available_end_time} onChange={\n                                (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.available_end_time = e.target.value; this.setState({ itemToEdit: temp }) }\n                            } />\n                        </div >\n\n                        <label>This Takes Me</label>\n                        <Row>\n                            <Col  style = {{paddingRight: \"0px\" }}>  \n                                <Form.Control\n                                    // value={this.state.newEventNotification}\n                                    // onChange={this.handleNotificationChange}\n                                    type=\"number\"\n                                    placeholder=\"30\"\n                                    value = {this.convertToMinutes()}\n                                    // value = {this.state.itemToEdit.expected_completion_time}\n                                    style = {{ marginTop:\".25rem\", paddingRight:\"0px\"}}\n                                    onChange={\n                                        // (e) => {e.stopPropagation(); this.convertTimeToHRMMSS(e)}\n                                        (e) => { e.stopPropagation(); let temp = this.state.itemToEdit; temp.expected_completion_time = this.convertTimeToHRMMSS(e); this.setState({ itemToEdit: temp }) }\n                                    }\n                                />\n                            </Col>\n                            <Col xs={8} style = {{paddingLeft:\"0px\"}} >\n                                <p style = {{marginLeft:\"10px\", marginTop:\"5px\"}}>minutes</p>\n                            </Col>\n                        </Row>\n\n                        <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n                            <label className=\"form-check-label\">Time?</label>\n                            <input\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\n                                name=\"Timed\"\n                                type=\"checkbox\"\n                                checked={this.state.itemToEdit.is_timed}\n                                onChange={(e) => {\n                                    e.stopPropagation();\n                                    let temp = this.state.itemToEdit;\n                                    // console.log(temp.is_timed)\n                                    temp.is_timed = !temp.is_timed;\n                                    this.setState({ itemToEdit: temp })\n                                }} />\n                        </div >\n\n                        <div className=\"input-group mb-3\" >\n                            <label className=\"form-check-label\">Available to Caitlin?</label>\n                            <input\n                                style={{ marginTop: '5px', marginLeft: '5px' }}\n                                name=\"Available\"\n                                type=\"checkbox\"\n                                checked={this.state.itemToEdit.is_available}\n                                onChange={(e) => {\n                                    e.stopPropagation();\n                                    let temp = this.state.itemToEdit;\n                                    // console.log(temp.is_available)\n                                    temp.is_available = !temp.is_available;\n                                    this.setState({ itemToEdit: temp })\n                                }} />\n                        </div >\n\n                        {this.state.itemToEdit.is_available && \n                            <ShowNotifications \n                                itemToEditPassedIn = {this.state.itemToEdit}\n                                notificationChange = {this.handleNotificationChange}\n                            />\n                        }\n                        \n\n                        \n\n                <Button variant=\"secondary\" onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: false }) }}>Close</Button>\n                <Button variant=\"info\" onClick={(e) => { e.stopPropagation(); this.newInputSubmit() }}>Save changes</Button>\n             {/* </div> */}\n            </Row>\n        )\n    }\n\n    showIcon = () => {\n        return (\n            <div>\n          <FontAwesomeIcon\n                    onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: \"#000000\" }}\n                    onClick={(e) => { e.stopPropagation(); this.setState({ showEditModal: true }) }}\n                    icon={faEdit} size=\"lg\"\n                />\n                </div>\n        )\n    }\n\n    render() {\n        return (\n            // <div style={{ marginLeft: \"5px\" }} onClick={(e) => { e.stopPropagation();}}>\n            <div  style={{ marginLeft: \"5px\" }} onClick={(e) => { e.stopPropagation();}}>\n                {(this.state.showEditModal ? this.editATForm() : <div> </div>)}\n                {  (this.state.showEditModal) ? <div> </div> : this.showIcon()}\n\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlash, faList} from '@fortawesome/free-solid-svg-icons';\n\n\n\nexport default class ShowATList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            iconShow: true\n        };\n    }\n    componentDidUpdate() {}\n\n    componentDidMount() {\n        let items = [...this.props.Array];\n        // console.log(\"this is the item\");\n        // console.log(items[this.props.Index]);\n        this.setState({iconShow: items[this.props.Index]['is_sublist_available']});\n    }\n    // ListFalse = e => {\n    //   this.props.ListCameBackFalse();  \n    //   this.setState({iconShow: !this.state.iconShow}); \n    // };\n\n    editFirBaseFalse = e =>{\n      // console.log(\"this should be false\");\n      this.setState({iconShow: false}, () => {\n        let items = [...this.props.Array];\n        items[this.props.Index]['is_sublist_available'] = false;\n        this.props.Path.update({ 'goals&routines': items }).then(\n            (doc) => {\n            }\n        )\n      })\n      // this.setState({iconShow: false});\n      // // console.log(this.state.iconShow);\n      // let items = [...this.props.Array];\n      // // console.log(\"this is the item\");\n      // // console.log(items[this.props.Index]);\n      \n      //   items[this.props.Index]['is_sublist_available'] = false;\n      //   this.props.Path.update({ 'goals&routines': items }).then(\n      //       (doc) => {\n      //       }\n      //   )\n    }\n\n    editFirBaseTrue = e =>{\n      this.setState({iconShow: true}, () => {\n        let items = [...this.props.Array];\n        items[this.props.Index]['is_sublist_available'] = true;\n        this.props.Path.update({ 'goals&routines': items }).then(\n            (doc) => {\n            }\n        )\n      })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.iconShow &&  \n                    <div  >\n                        <FontAwesomeIcon\n                            icon={faList}\n                            title = \"SubList Available\"\n                            style ={{ color:   \"#D6A34C\", marginLeft:\"20px\"}}\n                            // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShow: false}); this.editFirBaseFalse()}}\n                            onClick={(e)=>{ e.stopPropagation(); this.editFirBaseFalse()}}\n                            //onClick={this.ListFalse}\n                            size=\"lg\" \n                            />\n                    </div>\n                }\n                {!this.state.iconShow &&  \n                  <div  \n                  // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShowATModal: false})}}>\n                  >\n                    <span className =\"fa-layers fa-fw\" style = {{marginLeft:\"20px\"}} >\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                          icon={faList} \n                          title = \"SubList Unavailable\"\n                          onClick={(e)=>{ e.stopPropagation();  this.editFirBaseTrue()}}\n                          size=\"lg\" \n                        />\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                          icon={faSlash} \n                          title = \"SubList Unavilable\"\n                          onClick={(e)=>{ e.stopPropagation(); this.editFirBaseTrue()}}\n                          size=\"lg\" \n                      />\n                    </span>\n                  </div>\n                }\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlash, faList} from '@fortawesome/free-solid-svg-icons';\n\n\n\nexport default class ShowISList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state={\n            iconShow: true\n        };\n    }\n    componentDidUpdate() {}\n\n  componentDidMount() {\n      let items = [...this.props.Array];\n    //   console.log(\"this is the item\");\n    //   console.log(items[this.props.Index]);\n      this.setState({iconShow: items[this.props.Index]['is_sublist_available']});\n  }\n    // ListFalse = e => {\n    //   this.props.ListCameBackFalse();  \n    //   this.setState({iconShow: !this.state.iconShow}); \n    // };\n\n    editFirBaseFalse = e =>{\n      // console.log(\"this should be false\");\n      this.setState({iconShow: false})\n      // console.log(this.state.iconShow);\n      let items = [...this.props.Array];\n    //   console.log(\"this is the item\");\n    //   console.log(items[this.props.Index]);\n      \n        items[this.props.Index]['is_sublist_available'] = false;\n        this.props.Path.update({ 'actions&tasks': items }).then(\n            (doc) => {\n            }\n        )\n    }\n\n    editFirBaseTrue = e =>{\n      // console.log(\"this should be true\");\n      this.setState({iconShow: true})\n      // console.log(this.state.iconShow);\n      let items = [...this.props.Array];\n    //   console.log(\"this is the item\");\n    //   console.log(items[this.props.Index]);\n        items[this.props.Index]['is_sublist_available'] = true;\n        this.props.Path.update({ 'actions&tasks': items }).then(\n            (doc) => {\n            }\n        )\n    }\n    render() {\n        return (\n            <div>\n                {this.state.iconShow &&  \n                    <div  >\n                        <FontAwesomeIcon\n                            icon={faList}\n                            title = \"Show List Item\"\n                            // onMouseOver ={event => { event.target.style.color = \"#48D6D2\"; }}\n                            // onMouseOut ={event => {event.target.style.color = \"#D6A34C\";}}\n                            style ={{ color:   \"#D6A34C\", marginLeft:\"20px\"}}\n                            // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShow: false}); this.editFirBaseFalse()}}\n                            onClick={(e)=>{ e.stopPropagation(); this.editFirBaseFalse()}}\n                            //onClick={this.ListFalse}\n                            size=\"lg\" \n                            />\n                    </div>\n                }\n                {!this.state.iconShow &&  \n                  <div  \n                  // onClick={(e)=>{ e.stopPropagation(); this.setState({iconShowATModal: false})}}>\n                  >\n                      {/* <img src={require('../slash-list.png')} \n                      style = {{fontSize:\"1.3333333333em\", lineHeight: \"0.75em\", verticalAlign: \"-0.0667em\", marginLeft:\"20px\"}}\n                       alt=\"Slash-List Icon\"></img> */}\n                    <span className =\"fa-layers fa-fw\" style = {{marginLeft:\"20px\"}} >\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                        //   color=\"#000000\"\n                          icon={faList} \n                          title = \"Don't Show List Item\"\n                          onClick={(e)=>{ e.stopPropagation();  this.editFirBaseTrue()}}\n                          size=\"lg\" \n                        />\n                      <FontAwesomeIcon\n                          style ={{color:\"#000000\"}}\n                        //   color=\"#000000\"\n                          icon={faSlash} \n                          title = \"Don't Show List Item\"\n                          onClick={(e)=>{ e.stopPropagation(); this.editFirBaseTrue()}}\n                          size=\"lg\" \n                      />\n                    </span>\n                  </div>\n                }\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport firebase from \"./firebase\";\nimport {\n  ListGroup,\n  Button,\n  Row,\n  Col,\n  Modal,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport AddNewGRItem from \"./addNewGRItem.jsx\";\nimport AddNewATItem from \"./addNewATItem.jsx\";\nimport AddNewISItem from \"./addNewISItem.jsx\";\nimport DeleteISItem from \"./DeleteISItem.jsx\";\nimport DeleteAT from \"./deleteAT.jsx\";\nimport DeleteGR from \"./deleteGR.jsx\";\nimport EditGR from \"./editGR.jsx\";\nimport EditIS from \"./editIS.jsx\";\nimport EditAT from \"./EditAT.jsx\";\nimport ShowATList from \"./ShowATList\";\nimport ShowISList from \"./ShowISList\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faUserAltSlash,\n  faTrophy,\n  faRunning,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport moment from \"moment\";\n\n/**\n * Notes from Tyler:\n * 2/17/2020\n * TODOs:\n *\n * 1.Times from GR are not passed down to AT and times from AT are not passed\n * to IS\n *\n * 2.Clicking on the Goal and Routine at the top level should closed previous\n * AT and IS Modals.\n *\n *\n *\n */\n\nexport default class FirebaseV2 extends React.Component {\n  state = {\n    firebaseRootPath: firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(\"7R6hAVmDrNutRkG3sVRy\"),\n    is_sublist_available: true,\n    //This single GR item is passed to AddNewATItem to help processed the new item\n    singleGR: {\n      //everytime a goal/routine is clicked, we open a modal and the modal info will be provided by this object\n      show: false, // Show the modal\n      type: \"None\",\n      title: \"GR Name\",\n      photo: \"\",\n      available_end_time: \"\", //TODO get these used\n      available_start_time: \"\", //TODO get these used\n      id: null,\n      arr: [],\n      fbPath: null,\n    },\n\n    singleAT: {\n      //for each action/task we click on, we open a new modal to show the steps/instructions affiliate\n      //with the task\n      show: false, // Show the model\n      type: \"None\", // Action or Task\n      title: \"AT Name\", //Title of action task ,\n      available_end_time: \"\", //TODO get these used\n      available_start_time: \"\", //TODO get these used\n      photo: \"\",\n      id: null, //id of Action Task\n      arr: [], //array of instruction/steps formatted to display as a list\n      fbPath: null, //Firebase direction to the arr\n    },\n    singleATitemArr: [], //temp fix for my bad memory of forgetting to add this in singleGR\n    singleISitemArr: [], //temp fix for my bad memory of forgetting to add this in singleAT\n    modalWidth: \"350px\", //primary width size for all modals\n\n    //Use to decided whether to show the respective modals\n    addNewGRModalShow: false,\n    addNewATModalShow: false,\n    addNewISModalShow: false,\n\n    //used to determine thumbnail picture size\n    thumbnailWidth: \"150px\",\n    thumbnailHeight: \"100px\",\n    thumbnailWidthV2: \"200px\",\n    thumbnailHeightV2: \"50px\",\n\n    //isRoutine is to check whether we clicked on add routine or add goal\n    isRoutine: true,\n    availabilityColorCode: \"#D6A34C\",\n\n    //used for the list item icon.If at GR and this icon is turned off. then wont be able to show Action and taske list.\n    // iconShowATModal: true\n  };\n\n  /**\n   * refreshATItem:\n   * Given a array, it will replace the current array of singleGR which holds the layout\n   * list of all action task under it and singleATitemArr which just holds the raw data.\n   *\n   */\n  refreshATItem = (arr) => {\n    // console.log(\"refreshATItem was called\");\n\n    this.setState({ singleATitemArr: arr });\n    let resArr = this.createListofAT(arr);\n    let singleGR = this.state.singleGR;\n    singleGR.arr = resArr;\n    this.setState({ singleGR: singleGR });\n  };\n\n  /**\n   *\n   * refreshISItem - given A array item,\n   * this method will take those items,\n   * put it in the list form to present\n   * as a list of instructions and the\n   * it will also update the array of\n   * the normal list of instructions with\n   * the one passed in.\n   */\n  refreshISItem = (arr) => {\n    // console.log(\"refreshISItem new arr\");\n    // console.log(arr);\n    this.setState({\n      singleISitemArr: arr,\n    });\n    let resArr = this.createListofIS(arr);\n    let singleAt = this.state.singleAT;\n    singleAt.arr = resArr;\n    this.setState({ singleAT: singleAt });\n  };\n\n  constructor(props) {\n    // serves almost no purpose currently\n    super(props);\n    // console.log(\"running Firebase 2\");\n    // this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    //Grab the\n    this.grabFireBaseRoutinesGoalsData();\n  }\n\n  /**\n   * grabFireBaseRoutinesGoalsData:\n   * this function grabs the goals&routines array from the path located in this function\n   * which will then populate the goals, routines,originalGoalsAndRoutineArr array\n   * separately. The arrays will be used for display and data manipulation later.\n   *\n   */\n  grabFireBaseRoutinesGoalsData = () => {\n    this.props.grabFireBaseRoutinesGoalsData();\n  };\n\n  componentWillUnmount() {\n    console.log(\" FirebaseV2 will unmount web\");\n  }\n\n  formatDateTime(str) {\n    const formattedStr = str.replace(/\\//g, \"-\");\n    const time = moment(formattedStr);\n    return time.format(\"YYYY MMM DD HH:mm\");\n  }\n\n  onInputChange = (e) => {\n    const inputField = e.target.value;\n    // console.log(\"FirebaseV2.jsx :: onInputChange :: \" + inputField);\n  };\n  //This function essentially grabs all action/tasks\n  //for the routine or goal passed in and pops open the\n  //modal for the action/task\n  getATList = (id, title, persist) => {\n    const db = firebase.firestore();\n    // console.log(\"getATList function with id : \" + id);\n    let docRef = db\n      .collection(\"users\")\n      .doc(\"7R6hAVmDrNutRkG3sVRy\")\n      .collection(\"goals&routines\")\n      .doc(id);\n    docRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          // console.log(doc.data());\n          var x = doc.data()[\"actions&tasks\"];\n          // console.log(x);\n          if (x == null) {\n            // console.log(\"No actions&tasks array!\");\n            let singleGR = {\n              //Variable to hold information about the parent Goal/ Routine\n              show: true,\n              type: persist ? \"Routine\" : \"Goal\",\n              title: title,\n              id: id,\n              arr: [],\n              fbPath: docRef,\n            };\n            this.setState({\n              singleGR: singleGR,\n              singleATitemArr: [],\n            });\n            return;\n          }\n\n          let singleGR = {\n            //initialise without list to pass fbPath to child\n            show: true,\n            type: persist ? \"Routine\" : \"Goal\",\n            title: title,\n            id: id,\n            arr: [], //array of current action/task in this singular Routine\n            fbPath: docRef,\n          };\n\n          this.setState({\n            singleGR: singleGR,\n            singleATitemArr: x,\n          });\n\n          let resArr = this.createListofAT(x);\n          //assemble singleGR template here:\n\n          singleGR = {\n            show: true,\n            type: persist ? \"Routine\" : \"Goal\",\n            title: title,\n            id: id,\n            arr: resArr, //array of current action/task in this singular Routine\n            fbPath: docRef,\n          };\n\n          this.setState({\n            singleGR: singleGR,\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      })\n      .catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n  };\n\n  //Creates a array of all actions/task for get getATList function\n  //getATList stands for get all action/task\n  createListofAT = (A) => {\n    let res = [];\n    for (let i = 0; i < A.length; i++) {\n      // console.log(A[i][\"title\"]);\n      if (!A[i][\"id\"] || !A[i][\"title\"]) {\n        // console.log(\"missing title, or id at index : \" + i);\n        return [];\n      }\n      let tempID = A[i][\"id\"];\n      let tempPhoto = A[i][\"photo\"];\n      // console.log(tempPhoto);\n      let tempTitle = A[i][\"title\"];\n      let tempAvailable = A[i][\"is_available\"];\n      res.push(\n        <div key={\"AT\" + i}>\n          <ListGroup.Item\n            action\n            onClick={() => {\n              this.ATonClickEvent(tempTitle, tempID);\n            }}\n            variant=\"light\"\n            style={{ marginBottom: \"3px\" }}\n          >\n            <Row\n              style={{ margin: \"0\", marginBottom: \"10px\" }}\n              className=\"d-flex flex-row-center\"\n            >\n              <Col>\n                <div className=\"fancytext\">{tempTitle}</div>\n              </Col>\n            </Row>\n\n            {tempPhoto ? (\n              <Row>\n                <Col\n                  xs={7}\n                  // sm=\"auto\"\n                  // md=\"auto\"\n                  // lg=\"auto\"\n                  style={{ paddingRight: \"0px\" }}\n                >\n                  <img\n                    src={tempPhoto}\n                    alt=\"Action/Task\"\n                    // height={this.state.thumbnailHeight}\n                    // width={this.state.thumbnailWidth}\n                    className=\"center\"\n                    height=\"80px\"\n                    width=\"auto\"\n                  />\n                </Col>\n                <Col style={{ paddingLeft: \"0px\" }}>\n                  <Row style={{ marginTop: \"10px\" }}>\n                    {tempAvailable ? (\n                      <div style={{ marginLeft: \"5px\" }}>\n                        <FontAwesomeIcon\n                          title=\"Available to Cailin\"\n                          style={{ color: this.state.availabilityColorCode }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is Availble to Caitlin\");\n                          }}\n                          icon={faUser}\n                          size=\"lg\"\n                        />{\" \"}\n                      </div>\n                    ) : (\n                      <div>\n                        <FontAwesomeIcon\n                          title=\"Unavailable to Caitlin\"\n                          style={{ color: \"#000000\" }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is NOT Availble to Caitlin\");\n                          }}\n                          icon={faUserAltSlash}\n                          size=\"lg\"\n                        />\n                      </div>\n                    )}\n                    {/* Index={this.findIndexByID(tempID)}\n                    Array={this.state.originalGoalsAndRoutineArr}\n                    Path={this.state.firebaseRootPath} */}\n                    <ShowISList\n                      Index={i}\n                      Array={this.state.singleATitemArr}\n                      Path={this.state.singleGR.fbPath}\n                    />\n                  </Row>\n                  <Row style={{ marginTop: \"15px\", marginBottom: \"10px\" }}>\n                    <DeleteAT\n                      deleteIndex={i}\n                      type={\"actions&tasks\"}\n                      Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                      Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\n                      refresh={this.refreshATItem}\n                    />\n                    <EditAT\n                      marginLeftV=\"-170px\"\n                      i={i} //index to edit\n                      ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                      FBPath={this.state.singleGR.fbPath} //holds the path to the array data\n                      refresh={this.refreshATItem} //function to refresh AT data\n                    />\n                  </Row>\n                </Col>\n              </Row>\n            ) : (\n              <div>\n                <Row style={{ marginLeft: \"100px\" }} className=\"d-flex \">\n                  {tempAvailable ? (\n                    <div style={{ marginLeft: \"5px\" }}>\n                      <FontAwesomeIcon\n                        title=\"Available to Cailin\"\n                        style={{ color: this.state.availabilityColorCode }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          alert(\"Item Is Availble to Caitlin\");\n                        }}\n                        icon={faUser}\n                        size=\"lg\"\n                      />{\" \"}\n                    </div>\n                  ) : (\n                    <div>\n                      <FontAwesomeIcon\n                        title=\"Unavailable to Caitlin\"\n                        style={{ color: \"#000000\" }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          alert(\"Item Is NOT Availble to Caitlin\");\n                        }}\n                        icon={faUserAltSlash}\n                        size=\"lg\"\n                      />\n                    </div>\n                  )}\n                  <ShowISList\n                    Index={i}\n                    Array={this.state.singleATitemArr}\n                    Path={this.state.singleGR.fbPath}\n                  />\n                </Row>\n                <Row\n                  style={{ marginTop: \"15px\", marginLeft: \"100px\" }}\n                  className=\"d-flex \"\n                >\n                  <DeleteAT\n                    deleteIndex={i}\n                    type={\"actions&tasks\"}\n                    Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                    Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.refreshATItem}\n                  />\n                  <EditAT\n                    marginLeftV=\"-130px\"\n                    i={i} //index to edit\n                    ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                    FBPath={this.state.singleGR.fbPath} //holds the path to the array data\n                    refresh={this.refreshATItem} //function to refresh AT data\n                  />\n                </Row>\n              </div>\n            )}\n\n            {/* This is the V1 */}\n            {/* <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-reverse\">\n              {tempAvailable ? (\n                <div style={{ marginLeft: \"5px\" }}>\n                  <FontAwesomeIcon\n                    title=\"Available to Cailin\"\n                    // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                    // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                    style={{ color: this.state.availabilityColorCode }}\n                    onClick={e => {\n                      e.stopPropagation();\n                      alert(\"Item Is Availble to Caitlin\");\n                    }}\n                    icon={faUser}\n                    size=\"lg\"\n                  />{\" \"}\n                </div>\n              ) : (\n                <div style={{ marginLeft: \"5px\" }}>\n                  <FontAwesomeIcon\n                    title=\"Unavailable to Caitlin\"\n                    style={{ color: \"#000000\" }}\n                    onClick={e => {\n                      e.stopPropagation();\n                      alert(\"Item Is NOT Availble to Caitlin\");\n                    }}\n                    icon={faUserAltSlash}\n                    size=\"lg\"\n                  />\n                </div>\n              )}\n            </Row>\n\n            <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n              <Col>\n                <div className=\"fancytext\">{tempTitle}</div>\n              </Col>\n\n              <Col\n                sm=\"auto\"\n                md=\"auto\"\n                lg=\"auto\"\n                style={{ width: \"100%\", height: \"100%\" }}\n              >\n                {tempPhoto ? (\n                  <img\n                    src={tempPhoto}\n                    alt=\"Routine\"\n                    height={this.state.thumbnailHeight}\n                    width={this.state.thumbnailWidth}\n                    className=\"center\"\n                  />\n                ) : (\n                  <div></div>\n                )}\n              </Col>\n            </Row>\n\n            <Row\n              style={{\n                margin: \"0\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              }}\n            >\n              <DeleteAT\n                deleteIndex={i}\n                type={\"actions&tasks\"}\n                Array={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                Item={this.state.singleGR} //holds complete data for action task: fbPath, title, etc\n                refresh={this.refreshATItem}\n              />\n\n              <EditAT\n                i={i} //index to edit\n                ATArray={this.state.singleATitemArr} //Holds the raw data for all the is in the single action\n                FBPath={this.state.singleGR.fbPath} //holds the path to the array data\n                refresh={this.refreshATItem} //function to refresh AT data\n              />\n            </Row> */}\n          </ListGroup.Item>\n        </div>\n      );\n    }\n    return res;\n  };\n\n  /**\n   * takes the list of steps/instructions and returns\n   * it in the form of a ListGroup for presentation\n   */\n  createListofIS = (A) => {\n    let res = [];\n    for (let i = 0; i < A.length; i++) {\n      // console.log(A[i][\"title\"]);\n      // console.log(A[i][\"id\"]);\n      /**\n       * TODO: notify jeremy of this issue:\n       * Some of these here don't have IDs, so we need to\n       * ignore it for now\n       */\n      let tempPhoto = A[i][\"photo\"];\n      // console.log(\"IS index \" + i + \" photo url :\" + tempPhoto);\n      let tempTitle = A[i][\"title\"];\n      let tempAvailable = A[i][\"is_available\"];\n      res.push(\n        <div key={\"IS\" + i} style={{ width: \"100%\" }}>\n          <ListGroup.Item\n            action\n            onClick={() => {\n              this.ISonClickEvent(tempTitle);\n            }}\n            variant=\"light\"\n            style={{ width: \"100%\", marginBottom: \"3px\" }}\n          >\n            <Row\n              style={{ margin: \"0\", marginBottom: \"10px\" }}\n              className=\"d-flex flex-row-center\"\n            >\n              <Col>\n                <div className=\"fancytext\">{tempTitle}</div>\n              </Col>\n            </Row>\n            {tempPhoto ? (\n              <Row>\n                <Col xs={7} style={{ paddingRight: \"0px\" }}>\n                  <img\n                    src={tempPhoto}\n                    alt=\"Action/Task\"\n                    className=\"center\"\n                    height=\"80px\"\n                    width=\"auto\"\n                  />\n                </Col>\n                <Col style={{ paddingLeft: \"0px\" }}>\n                  <Row style={{ marginTop: \"10px\" }}>\n                    {tempAvailable ? (\n                      <div style={{ marginLeft: \"5px\" }}>\n                        <FontAwesomeIcon\n                          title=\"Available to Cailin\"\n                          style={{ color: this.state.availabilityColorCode }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is Availble to Caitlin\");\n                          }}\n                          icon={faUser}\n                          size=\"lg\"\n                        />{\" \"}\n                      </div>\n                    ) : (\n                      <div>\n                        <FontAwesomeIcon\n                          title=\"Unavailable to Caitlin\"\n                          style={{ color: \"#000000\" }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is NOT Availble to Caitlin\");\n                          }}\n                          icon={faUserAltSlash}\n                          size=\"lg\"\n                        />\n                      </div>\n                    )}\n                    {/* <ShowATList /> */}\n                  </Row>\n                  <Row style={{ marginTop: \"15px\", marginBottom: \"10px\" }}>\n                    <DeleteISItem\n                      deleteIndex={i}\n                      ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                      ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                      refresh={this.refreshISItem}\n                    />\n\n                    <EditIS\n                      marginLeftV=\"-170px\"\n                      i={i} //index to edit\n                      ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                      FBPath={this.state.singleAT.fbPath} //holds the fbPath to arr to be updated\n                      refresh={this.refreshISItem} //function to refresh IS data\n                    />\n                  </Row>\n                </Col>\n              </Row>\n            ) : (\n              <div>\n                <Row style={{ marginLeft: \"100px\" }} className=\"d-flex \">\n                  {tempAvailable ? (\n                    <div style={{ marginLeft: \"5px\" }}>\n                      <FontAwesomeIcon\n                        title=\"Available to Cailin\"\n                        style={{ color: this.state.availabilityColorCode }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          alert(\"Item Is Availble to Caitlin\");\n                        }}\n                        icon={faUser}\n                        size=\"lg\"\n                      />{\" \"}\n                    </div>\n                  ) : (\n                    <div>\n                      <FontAwesomeIcon\n                        title=\"Unavailable to Caitlin\"\n                        style={{ color: \"#000000\" }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          alert(\"Item Is NOT Availble to Caitlin\");\n                        }}\n                        icon={faUserAltSlash}\n                        size=\"lg\"\n                      />\n                    </div>\n                  )}\n                  {/* <ShowATList /> */}\n                </Row>\n                <Row\n                  style={{ marginTop: \"15px\", marginLeft: \"100px\" }}\n                  className=\"d-flex \"\n                >\n                  <DeleteISItem\n                    deleteIndex={i}\n                    ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                    ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                    refresh={this.refreshISItem}\n                  />\n\n                  <EditIS\n                    marginLeftV=\"-130px\"\n                    i={i} //index to edit\n                    ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                    FBPath={this.state.singleAT.fbPath} //holds the fbPath to arr to be updated\n                    refresh={this.refreshISItem} //function to refresh IS data\n                  />\n                </Row>\n              </div>\n            )}\n          </ListGroup.Item>\n        </div>\n      );\n    }\n    return res;\n  };\n\n  ISonClickEvent = (title) => {\n    console.log(\"Inside IS Click \" + title);\n  };\n\n  /**\n   * In this function we are passed in the id title and persist property of the incoming routine/goal\n   * and we need to make return a viewable list of all the actions/tasks for this routine/goal\n   * which is done in getATList function\n   */\n  GRonClickEvent = (title, id, persist) => {\n    // console.log(id, title, persist);\n    this.getATList(id, title, persist);\n  };\n\n  /**\n   * we are passed in the action/task id and title\n   * and we will need to grab all steps/Instructions related to this action/task,\n   *\n   */\n  ATonClickEvent = (title, id) => {\n    let stepsInstructionArrayPath = this.state.firebaseRootPath\n      .collection(\"goals&routines\")\n      .doc(this.state.singleGR.id)\n      .collection(\"actions&tasks\")\n      .doc(id);\n    console.log(id, title);\n    let temp = {\n      show: true,\n      type: \"Action/Task\",\n      title: title,\n      id: id,\n      arr: [],\n      fbPath: stepsInstructionArrayPath,\n    };\n    stepsInstructionArrayPath\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          // console.log(\"Grabbing steps/instructions data:\");\n          // console.log(doc.data());\n          var x = doc.data();\n          x = x[\"instructions&steps\"];\n          if (x == null) {\n            this.setState({ singleAT: temp });\n            return;\n          }\n          // console.log(x);\n          //Below is a fix for fbPath Null when we pass it\n          //createListofIS and DeleteISItem.jsx, we need a path\n          //to delete the item, so we set the path then create the\n          //the array and reset it.\n          this.setState({ singleAT: temp, singleISitemArr: x });\n          temp.arr = this.createListofIS(x);\n          this.setState({ singleAT: temp, singleISitemArr: x });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No Instruction/Step documents!\");\n        }\n      })\n      .catch(function (error) {\n        console.log(\"Error getting document:\", error);\n        alert(\"Error getting document:\", error);\n      });\n  };\n\n  /**\n   * findIndexByID:\n   * given a id, it will loop through the original goals and routine array to\n   * return the index with the corresonding id\n   */\n  findIndexByID = (id) => {\n    let originalGoalsAndRoutineArr = this.props.originalGoalsAndRoutineArr;\n    for (let i = 0; i < originalGoalsAndRoutineArr.length; i++) {\n      if (id === originalGoalsAndRoutineArr[i].id) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  // ListFalse = ()=>{\n  //   this.setState({\n  //     is_sublist_available:false\n  //   });\n  // };\n\n  getRoutines = () => {\n    let displayRoutines = [];\n    if (this.props.routines.length !== 0) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.props.routines.length; i++) {\n        let tempTitle = this.props.routines[i][\"title\"];\n        let tempID = this.props.routines[i][\"id\"];\n        let tempPersist = this.props.routines[i][\"is_persistent\"];\n\n        displayRoutines.push(\n          <div key={\"test0\" + i}>\n            <ListGroup.Item\n              action\n              onClick={() => {\n                this.GRonClickEvent(tempTitle, tempID, tempPersist);\n              }}\n              variant=\"light\"\n              style={{ marginBottom: \"3px\" }}\n            >\n              <Row\n                style={{ margin: \"0\", marginBottom: \"10px\" }}\n                className=\"d-flex flex-row-center\"\n              >\n                <Col>\n                  <div className=\"fancytext\">\n                    {this.props.routines[i][\"title\"]}\n                  </div>\n                </Col>\n              </Row>\n              {this.props.routines[i][\"photo\"] ? (\n                <Row>\n                  <Col xs={7} style={{ paddingRight: \"0px\" }}>\n                    <img\n                      src={this.props.routines[i][\"photo\"]}\n                      alt=\"Routines\"\n                      className=\"center\"\n                      height=\"80px\"\n                      width=\"auto\"\n                    />\n                  </Col>\n                  <Col style={{ paddingLeft: \"0px\" }}>\n                    <Row style={{ marginTop: \"10px\" }}>\n                      {this.props.routines[i][\"is_available\"] ? (\n                        <div style={{ marginLeft: \"5px\" }}>\n                          <FontAwesomeIcon\n                            title=\"Available to Cailin\"\n                            style={{ color: this.state.availabilityColorCode }}\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              alert(\"Item Is Availble to Caitlin\");\n                            }}\n                            icon={faUser}\n                            size=\"lg\"\n                          />{\" \"}\n                        </div>\n                      ) : (\n                        <div>\n                          <FontAwesomeIcon\n                            title=\"Unavailable to Caitlin\"\n                            style={{ color: \"#000000\" }}\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              alert(\"Item Is NOT Availble to Caitlin\");\n                            }}\n                            icon={faUserAltSlash}\n                            size=\"lg\"\n                          />\n                        </div>\n                      )}\n                      <ShowATList\n                        Index={this.findIndexByID(tempID)}\n                        Array={this.props.originalGoalsAndRoutineArr}\n                        Path={this.state.firebaseRootPath}\n                        // ListCameBackFalse= {this.ListFalse}\n                      />\n                    </Row>\n                    <Row style={{ marginTop: \"15px\", marginBottom: \"10px\" }}>\n                      <DeleteGR\n                        deleteIndex={this.findIndexByID(tempID)}\n                        Array={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                        Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                        refresh={this.grabFireBaseRoutinesGoalsData}\n                      />\n\n                      <EditGR\n                        marginLeftV=\"-170px\"\n                        i={this.findIndexByID(tempID)} //index to edit\n                        ATArray={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                        FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                        refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                        is_sublist_available={this.is_sublist_available}\n                      />\n                    </Row>\n                  </Col>\n                </Row>\n              ) : (\n                <div>\n                  <Row style={{ marginLeft: \"100px\" }} className=\"d-flex \">\n                    {this.props.routines[i][\"is_available\"] ? (\n                      <div style={{ marginLeft: \"5px\" }}>\n                        <FontAwesomeIcon\n                          title=\"Available to Cailin\"\n                          style={{ color: this.state.availabilityColorCode }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is Availble to Caitlin\");\n                          }}\n                          icon={faUser}\n                          size=\"lg\"\n                        />{\" \"}\n                      </div>\n                    ) : (\n                      <div>\n                        <FontAwesomeIcon\n                          title=\"Unavailable to Caitlin\"\n                          style={{ color: \"#000000\" }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is NOT Availble to Caitlin\");\n                          }}\n                          icon={faUserAltSlash}\n                          size=\"lg\"\n                        />\n                      </div>\n                    )}\n                    <ShowATList\n                      Index={this.findIndexByID(tempID)}\n                      Array={this.props.originalGoalsAndRoutineArr}\n                      Path={this.state.firebaseRootPath}\n                    />\n                  </Row>\n                  <Row\n                    style={{ marginTop: \"15px\", marginLeft: \"100px\" }}\n                    className=\"d-flex \"\n                  >\n                    <DeleteGR\n                      deleteIndex={this.findIndexByID(tempID)}\n                      Array={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                      Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                      refresh={this.grabFireBaseRoutinesGoalsData}\n                    />\n                    <EditGR\n                      marginLeftV=\"-130px\"\n                      i={this.findIndexByID(tempID)} //index to edit\n                      ATArray={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                      FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                      refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                    />\n                  </Row>\n                </div>\n              )}\n              <Row>\n                <div style={{ fontSize: \"12px\" }}>\n                  {this.props.routines[i][\"datetime_started\"] ? (\n                    <div style={{ marginTop: \"3px\" }}>\n                      {\"Previous Start Time: \" +\n                        this.formatDateTime(\n                          this.props.routines[i][\"datetime_started\"]\n                        )}{\" \"}\n                    </div>\n                  ) : (\n                    <div> </div>\n                  )}\n                  {this.props.routines[i][\"datetime_completed\"] ? (\n                    <div>\n                      {\"Previous Completed Time: \" +\n                        this.formatDateTime(\n                          this.props.routines[i][\"datetime_completed\"]\n                        )}{\" \"}\n                    </div>\n                  ) : (\n                    <div> </div>\n                  )}\n                </div>\n              </Row>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    return displayRoutines;\n  };\n\n  getGoals = () => {\n    let displayGoals = [];\n    if (this.props.goals.length != null) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.props.goals.length; i++) {\n        let tempTitle = this.props.goals[i][\"title\"];\n        let tempID = this.props.goals[i][\"id\"];\n        let tempPersist = this.props.goals[i][\"is_persistent\"];\n        displayGoals.push(\n          <div key={\"test1\" + i}>\n            <ListGroup.Item\n              action\n              onClick={() => {\n                this.GRonClickEvent(tempTitle, tempID, tempPersist);\n              }}\n              variant=\"light\"\n              style={{ marginBottom: \"3px\" }}\n            >\n              <Row\n                style={{ margin: \"0\", marginBottom: \"10px\" }}\n                className=\"d-flex flex-row-center\"\n              >\n                <Col>\n                  <div className=\"fancytext\">{tempTitle}</div>\n                </Col>\n              </Row>\n              {this.props.goals[i][\"photo\"] ? (\n                <Row>\n                  <Col xs={7} style={{ paddingRight: \"0px\" }}>\n                    <img\n                      src={this.props.goals[i][\"photo\"]}\n                      alt=\"Instructions/Steps\"\n                      className=\"center\"\n                      height=\"80px\"\n                      width=\"auto\"\n                    />\n                  </Col>\n                  <Col style={{ paddingLeft: \"0px\" }}>\n                    <Row style={{ marginTop: \"10px\" }}>\n                      {this.props.goals[i][\"is_available\"] ? (\n                        <div style={{ marginLeft: \"5px\" }}>\n                          <FontAwesomeIcon\n                            title=\"Available to Cailin\"\n                            style={{ color: this.state.availabilityColorCode }}\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              alert(\"Item Is Availble to Caitlin\");\n                            }}\n                            icon={faUser}\n                            size=\"lg\"\n                          />{\" \"}\n                        </div>\n                      ) : (\n                        <div>\n                          <FontAwesomeIcon\n                            title=\"Unavailable to Caitlin\"\n                            style={{ color: \"#000000\" }}\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              alert(\"Item Is NOT Availble to Caitlin\");\n                            }}\n                            icon={faUserAltSlash}\n                            size=\"lg\"\n                          />\n                        </div>\n                      )}\n                      <ShowATList\n                        Index={this.findIndexByID(tempID)}\n                        Array={this.props.originalGoalsAndRoutineArr}\n                        Path={this.state.firebaseRootPath}\n                      />\n                    </Row>\n                    <Row style={{ marginTop: \"15px\", marginBottom: \"10px\" }}>\n                      <DeleteGR\n                        deleteIndex={this.findIndexByID(tempID)}\n                        Array={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                        Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                        refresh={this.grabFireBaseRoutinesGoalsData}\n                      />\n                      <EditGR\n                        marginLeftV=\"-170px\"\n                        i={this.findIndexByID(tempID)} //index to edit\n                        ATArray={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                        FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                        refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                      />\n                    </Row>\n                  </Col>\n                </Row>\n              ) : (\n                <div>\n                  <Row style={{ marginLeft: \"100px\" }} className=\"d-flex \">\n                    {this.props.goals[i][\"is_available\"] ? (\n                      <div style={{ marginLeft: \"5px\" }}>\n                        <FontAwesomeIcon\n                          title=\"Available to Cailin\"\n                          style={{ color: this.state.availabilityColorCode }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is Availble to Caitlin\");\n                          }}\n                          icon={faUser}\n                          size=\"lg\"\n                        />{\" \"}\n                      </div>\n                    ) : (\n                      <div>\n                        <FontAwesomeIcon\n                          title=\"Unavailable to Caitlin\"\n                          style={{ color: \"#000000\" }}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            alert(\"Item Is NOT Availble to Caitlin\");\n                          }}\n                          icon={faUserAltSlash}\n                          size=\"lg\"\n                        />\n                      </div>\n                    )}\n                    <ShowATList\n                      Index={this.findIndexByID(tempID)}\n                      Array={this.props.originalGoalsAndRoutineArr}\n                      Path={this.state.firebaseRootPath}\n                    />\n                  </Row>\n                  <Row\n                    style={{ marginTop: \"15px\", marginLeft: \"100px\" }}\n                    className=\"d-flex \"\n                  >\n                    <DeleteGR\n                      deleteIndex={this.findIndexByID(tempID)}\n                      Array={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                      Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                      refresh={this.grabFireBaseRoutinesGoalsData}\n                    />\n                    <EditGR\n                      marginLeftV=\"-130px\"\n                      i={this.findIndexByID(tempID)} //index to edit\n                      ATArray={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                      FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                      refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                    />\n                  </Row>\n                </div>\n              )}\n\n              {/* <Row style={{ margin: \"0\" }} className=\"d-flex justify-content-between\">\n              <ShowATList />\n                {this.state.goals[i][\"is_available\"] ? (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Available to Cailin\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is Availble to Caitlin\");\n                      }}\n                      icon={faUser}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div style={{ marginLeft: \"5px\" }}>\n                    <FontAwesomeIcon\n                      title=\"Unavailable to Caitlin\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: \"#000000\" }}\n                      onClick={e => {\n                        e.stopPropagation();\n                        alert(\"Item Is NOT Availble to Caitlin\");\n                      }}\n                      icon={faUserAltSlash}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n              </Row>\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\n                  <div className=\"fancytext\">\n                    {\" \"}\n                    {this.state.goals[i][\"title\"]}\n                  </div>\n                  {/* <div className=\"fancytext\"> Time: {Math.floor(1 + Math.random() * (45 - 1))} Minutes </div> */}\n              {/* </Col>\n                <Col\n                  sm=\"auto\"\n                  md=\"auto\"\n                  lg=\"auto\"\n                  style={{ width: \"100%\", height: \"100%\" }}\n                >\n                  {this.state.goals[i][\"photo\"] ? (\n                    <img\n                      src={this.state.goals[i][\"photo\"]}\n                      alt=\"Goals\"\n                      className=\"center\"\n                      height={this.state.thumbnailHeight}\n                      width={this.state.thumbnailWidth}\n                    />\n                  ) : (\n                    <div></div>\n                  )}\n                </Col>\n              </Row>\n              <Row\n                className=\"d-flex flex-row-center\"\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginTop: \"10px\",\n                  marginBottom: \"10px\"\n                }}\n              >\n                <DeleteGR\n                  deleteIndex={this.findIndexByID(tempID)}\n                  Array={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  Path={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData}\n                />\n                <EditGR\n                  i={this.findIndexByID(tempID)} //index to edit\n                  ATArray={this.state.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n                  FBPath={this.state.firebaseRootPath} //holds complete data for action task: fbPath, title, etc\n                  refresh={this.grabFireBaseRoutinesGoalsData} //function to refresh IS data\n                />\n              </Row>  */}\n\n              <div style={{ fontSize: \"12px\" }}>\n                {this.props.goals[i][\"datetime_started\"] ? (\n                  <div style={{ marginTop: \"3px\" }}>\n                    {\"Previous Start Time: \" +\n                      this.formatDateTime(\n                        this.props.goals[i][\"datetime_started\"]\n                      )}{\" \"}\n                  </div>\n                ) : (\n                  <div> </div>\n                )}\n\n                {this.props.goals[i][\"datetime_completed\"] ? (\n                  <div>\n                    {\"Previous Completed Time: \" +\n                      this.formatDateTime(\n                        this.props.goals[i][\"datetime_completed\"]\n                      )}{\" \"}\n                  </div>\n                ) : (\n                  <div> </div>\n                )}\n              </div>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\n    return displayGoals;\n  };\n\n  getGoalsStatus = () => {\n    let displayGoals = [];\n    if (this.props.goals.length != null) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.props.goals.length; i++) {\n        let tempTitle = this.props.goals[i][\"title\"];\n        // let tempID = this.state.goals[i][\"id\"];\n        let isComplete = this.props.goals[i][\"is_complete\"];\n        if (!this.props.goals[i][\"is_available\"]) {\n          continue; //skip if not available\n        }\n        displayGoals.push(\n          <div key={\"goalStatus\" + i}>\n            <ListGroup.Item\n              action\n              variant=\"light\"\n              style={{ width: \"100%\", marginBottom: \"3px\" }}\n            >\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\n                  <div className=\"fancytext\"> {tempTitle}</div>\n                </Col>\n              </Row>\n              <Row\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                {isComplete ? (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        alert(\"Item Is Completed\");\n                      }}\n                      icon={faTrophy}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Not Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: \"black\" }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        alert(\"Item Is Not Completed\");\n                      }}\n                      icon={faRunning}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n              </Row>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\n    return displayGoals;\n  };\n\n  getRoutinesStatus = () => {\n    let displayRoutines = [];\n    if (this.props.routines.length != null) {\n      //Check to make sure routines exists\n      for (let i = 0; i < this.props.routines.length; i++) {\n        let tempTitle = this.props.routines[i][\"title\"];\n        // let tempID = this.state.routines[i]['id'];\n        let isComplete = this.props.routines[i][\"is_complete\"];\n        if (!this.props.routines[i][\"is_available\"]) {\n          continue; //skip if not available\n        }\n        displayRoutines.push(\n          <div key={\"goalStatus\" + i}>\n            <ListGroup.Item\n              action\n              variant=\"light\"\n              style={{ marginBottom: \"3px\" }}\n            >\n              <Row style={{ margin: \"0\" }} className=\"d-flex flex-row-center\">\n                <Col style={{ textAlign: \"center\", width: \"100%\" }}>\n                  <div className=\"fancytext\"> {tempTitle}</div>\n                </Col>\n              </Row>\n              <Row\n                style={{\n                  margin: \"0\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                {isComplete ? (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: this.state.availabilityColorCode }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        alert(\"Item Is Completed\");\n                      }}\n                      icon={faTrophy}\n                      size=\"lg\"\n                    />{\" \"}\n                  </div>\n                ) : (\n                  <div>\n                    <FontAwesomeIcon\n                      title=\"Not Completed Item\"\n                      // onMouseOver={event => { event.target.style.color = \"#48D6D2\"; }}\n                      // onMouseOut={event => { event.target.style.color = \"#000000\"; }}\n                      style={{ color: \"black\" }}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        alert(\"Item Is Not Completed\");\n                      }}\n                      icon={faRunning}\n                      size=\"lg\"\n                    />\n                  </div>\n                )}\n              </Row>\n            </ListGroup.Item>\n          </div>\n        );\n      }\n    }\n    //Can pass ['datetime_completed'] in datetime constructor? Eventually want Feb 3  7:30am\n    return displayRoutines;\n  };\n\n  render() {\n    // console.log(\"ran render firebasev2\");\n    var displayRoutines = this.getRoutines();\n    var displayGoals = this.getGoals();\n    var displayCompletedGoals = this.getGoalsStatus();\n    var displayCompletedRoutines = this.getRoutinesStatus();\n    return (\n      <div style={{ marginTop: \"0\" }}>\n        {/* <div style={{ marginTop: \"40px\" }}> */}\n        {this.props.showRoutineGoalModal ? (\n          <Col\n            style={{\n              width: this.state.modalWidth,\n              marginTop: \"0\",\n              marginRight: \"15px\",\n            }}\n            sm=\"auto\"\n            md=\"auto\"\n            lg=\"auto\"\n          >\n            <div\n              style={{\n                borderRadius: \"15px\",\n                boxShadow:\n                  \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n              }}\n            >\n              {this.abstractedRoutineGoalStatusList(\n                displayCompletedRoutines,\n                displayCompletedGoals\n              )}\n            </div>\n          </Col>\n        ) : (\n          <div> </div>\n        )}\n\n        {this.props.showRoutine ? (\n          <Col\n            style={{\n              width: this.state.modalWidth,\n              marginTop: \"0\",\n              marginRight: \"15px\",\n            }}\n            sm=\"auto\"\n            md=\"auto\"\n            lg=\"auto\"\n          >\n            <div style={{ borderRadius: \"15px\" }}>\n              {this.abstractedRoutineList(displayRoutines)}\n            </div>\n          </Col>\n        ) : (\n          <div> </div>\n        )}\n\n        {this.props.showGoal ? (\n          <Col\n            style={{\n              width: this.state.modalWidth,\n              marginTop: \"0\",\n              marginRight: \"15px\",\n            }}\n            sm=\"auto\"\n            md=\"auto\"\n            lg=\"auto\"\n          >\n            <div style={{ borderRadius: \"15px\" }}>\n              {this.abstractedGoalsList(displayGoals)}\n            </div>\n          </Col>\n        ) : (\n          <div> </div>\n        )}\n      </div>\n    );\n  }\n\n  /*\nabstractedGoalsList:\nshows entire list of goals and routines\n*/\n  abstractedGoalsList = (displayGoals) => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          marginTop: \"0\",\n          width: this.state.modalWidth,\n          marginLeft: \"0\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <Modal.Header onHide={this.props.closeGoal} closeButton>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Goals</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/**\n           * To allow for the Modals to pop up in front of one another\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.addNewGRModalShow ? this.AddNewGRModalAbstracted() : \"\"}\n          </div>\n\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.singleGR.show ? (\n              this.abstractedActionsAndTaskList()\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"650px\", overflow: \"scroll\" }}>\n              {displayGoals}\n            </div>\n            {/* Button to add new Goal */}\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewGRModalShow: true, isRoutine: false });\n            }}\n          >\n            Add Goal\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n  /*\n    abstractedRoutineList:\n    shows entire list of routines\n    */\n  abstractedRoutineList = (displayRoutines) => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          marginTop: \"0\",\n          width: this.state.modalWidth,\n          marginLeft: \"0px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <Modal.Header onHide={this.props.closeRoutine} closeButton>\n          <Modal.Title>\n            {\" \"}\n            <h5 className=\"normalfancytext\">Routines</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/**\n           * To allow for the Modals to pop up in front of one another\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\n\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.addNewGRModalShow ? this.AddNewGRModalAbstracted() : \"\"}\n          </div>\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.singleGR.show ? (\n              this.abstractedActionsAndTaskList()\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"650px\", overflow: \"scroll\" }}>\n              {displayRoutines}\n            </div>\n          </ListGroup>\n          {/* Button To add new Routine */}\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewGRModalShow: true, isRoutine: true });\n            }}\n          >\n            Add Routine\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  /**\n   * AddNewGRModalAbstracted:\n   * returns a modal showing us a slot to add a new Goal/Routine\n   */\n  AddNewGRModalAbstracted = () => {\n    return (\n      <AddNewGRItem\n        closeModal={() => {\n          this.setState({ addNewGRModalShow: false });\n        }}\n        ATArray={this.props.originalGoalsAndRoutineArr} //Holds the raw data for all the is in the single action\n        refresh={this.grabFireBaseRoutinesGoalsData}\n        isRoutine={this.state.isRoutine}\n        width={this.state.modalWidth}\n        todayDateObject={this.props.todayDateObject}\n      />\n    );\n  };\n\n  /*\n    abstractedInstructionsAndStepsList:\n    currently only shows the single Action/Task Title with no steps\n    */\n\n  /**\n   * abstractedInstructionsAndStepsList:\n   * Shows a single Task / Action as Title with\n   * the list of instructions/steps underneath of it\n   *\n   */\n  abstractedInstructionsAndStepsList = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          marginTop: \"0\",\n          marginLeft: \"0\",\n          width: this.state.modalWidth,\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({ singleAT: { show: false } });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">{this.state.singleAT.title}</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.addNewISModalShow ? (\n              <AddNewISItem\n                ISArray={this.state.singleISitemArr} //Holds the raw data for all the is in the single action\n                ISItem={this.state.singleAT} //holds complete data for action task: fbPath, title, etc\n                refresh={this.refreshISItem}\n                hideNewISModal={\n                  //function to hide the modal\n                  () => {\n                    this.setState({ addNewISModalShow: false });\n                  }\n                }\n                width={this.state.modalWidth}\n              />\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"500px\", overflow: \"scroll\" }}>\n              {this.state.singleAT.arr}\n            </div>\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewISModalShow: true });\n            }}\n          >\n            Add Step\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  /**\n   * abstractedActionsAndTaskList -\n   * returns modal with with a single Routine/ Goal as title\n   * and beneath it is the list of action/ task associated with the\n   * goal/ routine\n   */\n  abstractedActionsAndTaskList = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          marginTop: \"0\",\n          marginLeft: \"0\",\n          width: this.state.modalWidth,\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({ singleGR: { show: false } });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">{this.state.singleGR.title}</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.addNewATModalShow ? (\n              <AddNewATItem\n                refresh={this.refreshATItem} //refreshes the list of AT\n                ATArray={this.state.singleATitemArr}\n                ATItem={this.state.singleGR} //The parent item\n                hideNewATModal={() => {\n                  this.setState({ addNewATModalShow: false });\n                }}\n                width={this.state.modalWidth}\n              />\n            ) : (\n              <div></div>\n            )}\n          </div>\n          {/**\n           * Here Below, the IS list will pop up inside the AT list\n           */}\n          <div\n            style={{\n              borderRadius: \"15px\",\n              boxShadow:\n                \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n            }}\n          >\n            {this.state.singleAT.show ? (\n              this.abstractedInstructionsAndStepsList()\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <ListGroup>\n            <div style={{ height: \"500px\", overflow: \"scroll\" }}>\n              {this.state.singleGR.arr}\n            </div>\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn btn-info btn-md\"\n            onClick={() => {\n              this.setState({ addNewATModalShow: true });\n            }}\n          >\n            Add Action/Task\n          </button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  addNewTaskInputBox = () => {\n    return (\n      <InputGroup size=\"lg\" style={{ marginTop: \"20px\" }} className=\"mb-3\">\n        <FormControl\n          onChange={() => {\n            console.log(\"addNewGoalInputBox\");\n          }}\n          placeholder=\"\"\n        />\n        <InputGroup.Append>\n          <Button variant=\"outline-secondary\">Add</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    );\n  };\n\n  /*\n    abstractedRoutineGoalStatusList:\n    shows entire list of goals and routines\n    */\n  abstractedRoutineGoalStatusList = (displayRoutines, displayGoals) => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          marginTop: \"0\",\n          width: this.state.modalWidth,\n          marginLeft: \"0\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <Modal.Header onHide={this.props.closeRoutineGoalModal} closeButton>\n          <Modal.Title>\n            {\" \"}\n            <h5 className=\"normalfancytext\">Current Status</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h2 className=\"normalfancytext\">Routines:</h2>\n\n          {/**\n           * To allow for the Modals to pop up in front of one another\n           * I have inserted the IS and AT lists inside the RT Goal Modal */}\n\n          {/* <div style={{ borderRadius: \"15px\", boxShadow: '0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)' }}>\n                        {(this.state.singleGR.show) ? this.abstractedActionsAndTaskList() : (<div></div>)}\n                    </div> */}\n\n          <ListGroup style={{ height: \"350px\", overflow: \"scroll\" }}>\n            {displayRoutines}\n            {/* <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: true }) }} >Add Routine</button> */}\n          </ListGroup>\n          {/* Button To add new Routine */}\n          <h2 className=\"normalfancytext\" style={{ marginTop: \"50px\" }}>\n            Goals:\n          </h2>\n          <ListGroup style={{ height: \"250px\", overflow: \"scroll\" }}>\n            {displayGoals}\n            {/* Button to add new Goal */}\n            {/* <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={() => { this.setState({ addNewGRModalShow: true, isRoutine: false }) }}>Add Goal</button> */}\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer></Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  addNewGoalInputBox = () => {\n    return (\n      <InputGroup\n        size=\"lg\"\n        style={{ marginTop: \"20px\", width: this.state.modalWidth }}\n        className=\"mb-3\"\n      >\n        <FormControl\n          onChange={() => {\n            console.log(\"addNewGoalInputBox\");\n          }}\n          placeholder=\"place holder!!\"\n        />\n        <InputGroup.Append>\n          <Button variant=\"outline-secondary\">Add</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    );\n  };\n}\n","import React from 'react';\nimport moment from 'moment';\n\nexport default class TylersCalendarv1 extends React.Component {\n\n  componentDidMount() {\n  }\n\n  weekdays = moment.weekdays();\n  weekdaysShort = moment.weekdaysShort(); // [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n\n  componentWillUnmount() {\n\n  }\n\n  year = () => {\n    return this.props.dateContext.format(\"Y\");\n  }\n\n  currentDay = () => {\n    return this.props.dateObject.format(\"D\");\n  };\n  month = () => {\n    return this.props.dateContext.format(\"MMMM\");\n  }\n\n  daysInMonth = () => {\n    return this.props.dateContext.daysInMonth();\n  }\n\n  firstDayOfMonth = () => {\n    let dateContext = this.props.dateContext;\n    let firstDay = moment(dateContext)\n      .startOf(\"month\")\n      .format(\"d\"); // Day of week 0...1..5...6\n    return firstDay;\n  };\n\n  //Returns a dense populated set of icons to be pushed onto a day i\n  //into the table\n\n  getEventsforDay = (i) => {\n\n    var res = [];\n    var tempStart = null;\n    var tempEnd = null;\n    if (this.props.originalEvents == null) {\n      return []\n    }\n    // console.log(this.props.originalEvents);\n    for (let j = 0; j < this.props.originalEvents.length; ++j) {\n      if (this.props.originalEvents[j].start.dateTime) {\n        tempStart = this.props.originalEvents[j].start.dateTime;\n        tempEnd = this.props.originalEvents[j].end.dateTime;\n        let startDate = new Date(tempStart).getDate();\n        let endDate = new Date(tempEnd).getDate();\n        // console.log(startDate)\n        if (i >= startDate && i <= endDate) {\n          res.push(<div key={'event' + j}><button\n            value={j}\n            onClick={this.onEventClick}\n            className=\"btn btn-sm\" style={{\n              padding: '3px',\n              paddingLeft: '4px',\n              paddingRight: '4px',\n              fontSize: '9px', color: \"white\",\n              borderRadius: '4px', background: \"#42B8DD\",\n              textShadow: \"0 1px 1px rgba(0, 0, 0, 0.2)\", marginBottom: \"3px\"\n            }} >{this.props.originalEvents[j].summary}</button><br /></div>);\n        }\n      }\n      else {\n        tempStart = this.props.originalEvents[j].start.date;\n        // console.log('start date');\n        // console.log(this.props.originalEvents[j].start.date);\n        tempEnd = this.props.originalEvents[j].end.date;\n        let startDate = new Date(tempStart).getDate();\n        let endDate = new Date(tempEnd).getDate();\n        // console.log(startDate)\n        if (i > startDate && i <= endDate) {\n          // console.log('sss' + i, startDate, endDate);\n          res.push(<div key={'event' + j}><button\n            value={j}\n            onClick={this.onEventClick}\n            className=\"btn btn-sm\" style={{\n              padding: '3px',\n              paddingLeft: '4px',\n              paddingRight: '4px',\n              fontSize: '9px', color: \"white\",\n              borderRadius: '3px', background: \"CornflowerBlue\",\n              textShadow: \"0 1px 1px rgba(0, 0, 0, 0.2), \", marginBottom: \"3px\"\n            }} >{this.props.originalEvents[j].summary}</button><br /></div>);\n        }\n      }\n\n    }\n    return res;\n  }\n\n  onEventClick = (x) => {\n    x.stopPropagation();\n    this.props.eventClick(x.target.value);\n  }\n\n  onDayClick = (d) => {\n    this.props.handleDateClick(this.props.dateContext.format(\"M\") + '/' + d + '/' + this.props.dateContext.format(\"Y\"));\n  }\n\n  onExpandClick = (d) => {\n    this.props.handleExpandClick(this.props.dateContext.format(\"M\") + '/' + d + '/' + this.props.dateContext.format(\"Y\"));\n  }\n\n  render() {\n    let daysInMonth = [];\n    let weekdays = this.weekdays.map((day) => {\n      return (\n        <td className=\"fancytext\" key={day}>{day}</td>\n      )\n    });\n\n    //create the blank slots to push day 1 to right day\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(<td key={'empty' + i} className=\"calendar-day empty\">{\"\"}</td>);\n    }\n\n    //The variable below tells us if the current month we are at is today's month\n    var sameDate = this.props.dateObject.format(\"MM/YYYY\") === this.props.dateContext.format(\"MM/YYYY\");\n\n    // console.log(this.props.dateObject.format(\"DD/MM/YYYY\") + \"  == \" + this.props.dateContext.format(\"DD/MM/YYYY\"));\n    for (var d = 1; d <= this.daysInMonth(); d++) {\n      // let currentDay = d == this.currentDay() ? \"today\" : \"\";\n\n      // const todayStyle = { boxShadow: '4px 4px 8px 4px rgba(0, 0, 0, 0.2)' };\n\n      daysInMonth.push(\n        <td key={d} onClick={this.onDayClick.bind(this, d)}>\n          <div style={{ padding: '0', margin: '0', height: '110px', width: \"100px\", overflow: 'auto' }}>\n            {\n              // eslint-disable-next-line max-len\n            }\n              <div className={(sameDate && (d === parseInt(this.currentDay(), 10))) ? \"numberCircleCurrent\" : \"numberCircle\"} onClick={this.onExpandClick.bind(this, d)}>\n                <a className=\"fancytext\"> {d} </a>\n              </div>\n            {this.getEventsforDay(d)}\n          </div>\n        </td>\n      );\n    }\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalSlots.length - 1) {\n        // let insertRow = cells.slice();\n        rows.push(cells);\n      }\n    });\n\n    var daysinmonth = rows.map((data, i) => {\n      return <tr style={{ padding: '0px' }} key={i * 11}>{data}</tr>;\n    });\n\n    return (\n      <div>\n        <table className=\"table\" style={{ height: '450px', tableLayout: 'fixed', width: '910px' }}>\n          <thead>\n            <tr>\n              {weekdays}\n            </tr>\n          </thead>\n          <tbody style={{ height: '450px', width: '600px' }}>\n            {daysinmonth}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n// import axios from 'axios';\nimport moment from 'moment';\nimport { Container, Row, Col} from 'react-bootstrap';\n\nimport firebase from \"./firebase\";\nexport default class DayRoutines extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            routines: [], // array to hold all routines\n            pxPerHour: \"30px\", //preset size for all columns\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n            eventBoxSize: \"200\", //width size for event box\n        }\n    }\n\n    dayView = () => { //this essentially creates the time row\n        let arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayDayViewRoutines\" + i}>\n                    <Col style={{\n                        borderTop: \"1px solid  mistyrose\",\n                    textAlign: \"right\",\n                    height: this.state.pxPerHour }}>\n                        {i}:00\n                    </Col >\n                </Row>\n            )\n        }\n        return arr\n    }\n\n    RoutineClicked = () =>{\n        this.props.dayRoutineClick();\n    }\n\n    /**\n     * getEventItem: given an hour, this will return all events that was started during that hour\n     *\n    */\n    getEventItem = (hour) => {\n        var res = []\n        var arr = this.props.routines;\n        var sameTimeEventCount = 0;\n        let itemWidth = this.state.eventBoxSize;\n        // var overlapEvent = 0;\n        var addmarginLeft = 0;\n        var fontSize = 10;\n        for (let i = 0; i < arr.length; i++) {\n\n            let start_dateObj = new Date();\n            let start_dateStr = start_dateObj.toISOString().split('T').shift();\n            let start_timeStr = arr[i].available_start_time;\n            let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n            let end_dateObj = new Date();\n            let end_dateStr = end_dateObj.toISOString().split('T').shift();\n            let end_timeStr = arr[i].available_end_time;\n            let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n            let tempStartTime = start_timeAndDate;\n            let tempEndTime = end_timeAndDate;\n            /**\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\n            */\n            if (tempStartTime.getHours() === hour) {\n                // console.log(\"matched\" + i );\n                let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                let minDiff = (tempEndTime.getMinutes()) / 60;\n                let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                let color = 'PaleTurquoise';\n\n                sameTimeEventCount++;\n                //check if there is already an event there overlapping from another hour\n                for(let i = 0; i < arr.length; i++){\n                    let start_dateObj = new Date();\n                    let start_dateStr = start_dateObj.toISOString().split('T').shift();\n                    let start_timeStr = arr[i].available_start_time;\n                    let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n                    let end_dateObj = new Date();\n                    let end_dateStr = end_dateObj.toISOString().split('T').shift();\n                    let end_timeStr = arr[i].available_end_time;\n                    let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n                    let tempStartTime = start_timeAndDate;\n                    let tempEndTime = end_timeAndDate;\n                    if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\n                        // console.log(\"We ARE IN HEREEEE\");\n                        addmarginLeft += 20;\n                        itemWidth = itemWidth - 20;\n                        // overlapEvent++;\n                    }\n                }\n\n                if(sameTimeEventCount > 1  ){\n                     addmarginLeft += 20;\n                    // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                    // itemWidth = itemWidth/(sameHourItems-1);\n                    itemWidth = itemWidth - 20;\n                    // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\n                }\n\n                //chnage font size if not enough space\n                if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\n                    fontSize = 8;\n                }\n                // change color if more than one event in same time.\n                if(sameTimeEventCount <= 1){\n                     color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\n                }\n                else if( sameTimeEventCount === 2){\n                    color = 'skyblue';\n                }\n                else{\n                    color = 'blue';\n                }\n                let newElement =\n                    (<div key={\"dayRoutineItem\" + i}\n                    data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n\n                        onMouseOver={e => {\n                            e.target.style.color = \"#FFFFFF\";\n                            e.target.style.background = \"RebeccaPurple\";\n                            // e.target.style.marginLeft = \"5px\";\n                            // e.target.style.border= \"3px solid w\";\n                            e.target.style.zIndex=\"2\";\n\n\n\n\n                        }}\n                        onMouseOut={e => {\n                            e.target.style.zIndex=\"1\";\n\n                            // e.target.style.marginLeft = \"0px\";\n                             e.target.style.color = \"#000000\";\n                            //  e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\n                             e.target.style.border= \"1px lightgray solid\";\n\n                             e.target.style.background = color;\n\n\n                            }}\n\n                        onClick = {this.RoutineClicked}\n                        style={{\n                            zIndex: this.state.zIndex,\n                            marginTop: minsToMarginTop + \"px\",\n                            padding: \"5px\",\n                            // fontSize: \"10px\",\n                            border: \"1px lightgray solid \",\n                            // float: \"left\",\n                            borderRadius: \"5px\",\n                            // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\n                            //  width: this.state.eventBoxSize,\n                            position: \"absolute\",\n                            height: height + \"px\",\n\n                            fontSize: fontSize + \"px\",\n                            background: color,\n                            width: itemWidth + \"px\",\n                            marginLeft: addmarginLeft + \"px\"\n                        }}>\n                        {arr[i].title}\n                    </div>);\n                res.push(newElement);\n            }\n        }\n        return res;\n    }\n\n    /**\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\n    */\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n        var arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayRoutine\" + i} style={{ position: \"relative\" }}>\n                    <Col\n                        style={{\n                            position: \"relative\",\n                            borderTop: \"1px solid mistyrose\",\n                            width: '180px',\n                            background: \"aliceblue\",\n                            height: this.state.pxPerHour\n                        }}>\n                        {this.getEventItem(i)}\n                    </Col >\n                </Row>\n            )\n        }\n        return arr;\n    }\n\n    render() {\n        return (\n            <div style={{\n                padding: '20px',\n                // marginTop: \"10px\",\n                width: \"300px\",\n                borderRadius: \"20px\" }}>\n                Today's Routines:\n                <Container style={{}}>\n                    <Row >\n                        <Col>\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.dayViewItems()}\n                            </Container>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n\n}\n","import React, { Component } from 'react'\n// import axios from 'axios';\nimport moment from 'moment';\nimport {  Container, Row, Col} from 'react-bootstrap';\n\nimport firebase from \"./firebase\";\nexport default class DayGoals extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pxPerHour: \"30px\", //preset size for all columns\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n            eventBoxSize: \"200\", //width size for event box\n        }\n    }\n\n    dayView = () => { //this essentially creates the time row\n        let arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayDayViewGoals\" + i}>\n                    <Col style={{ borderTop: \"1px solid mistyrose\", textAlign: \"right\", height: this.state.pxPerHour }}>\n                        {i}:00\n                    </Col >\n                </Row>\n            )\n        }\n        return arr\n    }\n\n    GoalClicked  = ()=>{\n        this.props.dayGoalClick();\n    }\n    /**\n     * getEventItem: given an hour, this will return all events that was started during that hour\n     *\n    */\n    getEventItem = (hour) => {\n        var res = []\n        var arr = this.props.goals;\n        var sameTimeEventCount = 0;\n        let itemWidth = this.state.eventBoxSize;\n        // var overlapEvent = 0;\n        var addmarginLeft = 0;\n        var fontSize = 10;\n        for (let i = 0; i < arr.length; i++) {\n\n            let start_dateObj = new Date();\n            let start_dateStr = start_dateObj.toISOString().split('T').shift();\n            let start_timeStr = arr[i].available_start_time;\n            let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n            let end_dateObj = new Date();\n            let end_dateStr = end_dateObj.toISOString().split('T').shift();\n            let end_timeStr = arr[i].available_end_time;\n            let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n            let tempStartTime = start_timeAndDate;\n            let tempEndTime = end_timeAndDate;\n            /**\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\n            */\n            if (tempStartTime.getHours() === hour) {\n                // addmarginLeft = 0;\n                // itemWidth = this.state.eventBoxSize;\n                // itemWidth = 0;\n                // console.log(\"matched\" + i );\n                let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                let minDiff = (tempEndTime.getMinutes()) / 60;\n                let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                let color = 'PaleTurquoise';\n\n                sameTimeEventCount++;\n                //check if there is already an event there overlapping from another hour\n                for(let i = 0; i < arr.length; i++){\n                    let start_dateObj = new Date();\n                    let start_dateStr = start_dateObj.toISOString().split('T').shift();\n                    let start_timeStr = arr[i].available_start_time;\n                    let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n                    let end_dateObj = new Date();\n                    let end_dateStr = end_dateObj.toISOString().split('T').shift();\n                    let end_timeStr = arr[i].available_end_time;\n                    let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n                    let tempStartTime = start_timeAndDate;\n                    let tempEndTime = end_timeAndDate;\n                    if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\n                        //  console.log(\"this is statr time :\"+ tempStartTime.getHours() );\n                        //  console.log(\"this is end time :\"+ tempEndTime.getHours() );\n                        //  console.log(\"add 20\");\n                        addmarginLeft += 20;\n                        itemWidth = itemWidth - 20;\n                        // console.log(addmarginLeft);\n                        // overlapEvent++;\n                    }\n                }\n\n\n                if(sameTimeEventCount > 1  ){\n                    // console.log(\"In here because same hour  \");\n                    // console.log(\"add 20\");\n                     addmarginLeft += 20;\n                    // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                    // itemWidth = itemWidth/(sameHourItems-1);\n                    itemWidth = itemWidth - 20;\n                    // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\n                    // console.log(addmarginLeft);\n                }\n                // console.log(addmarginLeft);\n                // console.log(\"end of this element \");\n\n                //chnage font size if not enough space\n                if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\n                    fontSize = 8;\n                }\n                // change color if more than one event in same time.\n                if(sameTimeEventCount <= 1){\n                     color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\n                }\n                else if( sameTimeEventCount === 2){\n                    color = 'skyblue';\n                }\n                else{\n                    color = 'blue';\n                }\n                let newElement =\n                    (<div key={\"dayGoalItem\" + i}\n                    data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n\n                        onMouseOver={e => {\n                            e.target.style.color = \"#FFFFFF\";\n                            e.target.style.background = \"RebeccaPurple\";\n                            // e.target.style.marginLeft = \"5px\";\n                            e.target.style.zIndex=\"2\";\n\n                        }}\n                        onMouseOut={e => {\n                            e.target.style.zIndex=\"1\";\n                            // e.target.style.marginLeft = \"0px\";\n                            e.target.style.color = \"#000000\";\n                            e.target.style.background = color;\n                            e.target.style.border= \"1px lightgray solid\";\n                            // e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\n                        }}\n                        onClick = {this.GoalClicked}\n                        style={{\n                            zIndex: this.state.zIndex,\n                            marginTop: minsToMarginTop + \"px\",\n                            padding: \"5px\",\n                            // fontSize: \"10px\",\n                            border: \"1px lightgray solid \",\n                            // float: \"left\",\n                            borderRadius: \"5px\",\n                            // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\n                            // width: this.state.eventBoxSize,\n                            position: \"absolute\",\n                            height: height + \"px\",\n\n                            fontSize: fontSize + \"px\",\n                            background: color,\n                            width: itemWidth + \"px\",\n                            marginLeft: addmarginLeft + \"px\"\n                        }}>\n                        {arr[i].title}\n                    </div>);\n                res.push(newElement);\n            }\n        }\n        return res;\n    }\n\n    /**\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\n    */\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n        var arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayGoal\" + i} style={{ position: \"relative\" }}>\n                    <Col\n                        style={{\n                            position: \"relative\",\n                            borderTop: \"1px solid mistyrose\",\n                            width: '180px',\n                            background: \"aliceblue\",\n                            height: this.state.pxPerHour\n                        }}>\n                        {this.getEventItem(i)}\n                    </Col >\n                </Row>\n            )\n        }\n        return arr;\n    }\n\n    render() {\n        return (\n\n\n            <div style={{margin:'20px',\n            padding: '20px',\n            marginTop: \"0px\",\n            width: \"300px\",\n            borderRadius: \"20px\" }}>\n                Today's Goals:\n                <Container style={{}}>\n                    <Row >\n                        {/* <div class=\"table col-md-1\" > */}\n                        <Col>\n                            {/* this is for the actual event slots */}\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.dayViewItems()}\n                            </Container>\n                            {/* </div> */}\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n\n}\n","import React, { Component } from 'react'\n// import axios from 'axios';\n// import moment from 'moment';\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\nexport default class DayEvents extends Component {\n\n    constructor(props) {\n        super(props);\n        // console.log(this.props.dateContext);\n        this.state = {\n            //dayEvents: [], //holds google events data for a single day\n            // todayDateObject: moment(\"03/07/2020\"), //this is the date of interset for events to be displaye\n            pxPerHour: \"30px\", //preset size for all columns\n            pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n            zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n            eventBoxSize: 150, //width size for event box\n            marginFromLeft: 0\n        }\n    }\n\n    timeDisplay = () => { //this essentially creates the time row\n        let arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayEvent\" + i}>\n                    <Col style={{\n                        borderTop: \"1px solid lavender\",\n                        textAlign: \"right\",\n                        height: this.state.pxPerHour\n                    }}>\n                        {i}:00\n                    </Col >\n                </Row>\n            )\n        }\n        return arr\n    }\n\n    onEventClick = (e, i) => {\n        var arr = this.props.dayEvents;\n        e.stopPropagation();\n        this.props.eventClickDayView(arr[i]);\n    }\n\n\n    /*\n     * TODO: events spanning multiple days\n     * getEventItem: given an hour, this will return all events that was started during that hour\n     *\n    */\n    getEventItem = (hour) => {\n        var res = []\n        var tempStart = null;\n        var tempEnd = null;\n        var arr = this.props.dayEvents;\n        var sameTimeEventCount = 0;\n        var addmarginLeft = 0;\n        let itemWidth = this.state.eventBoxSize;\n        var fontSize = 10;\n\n        for (let i = 0; i < arr.length; i++) {\n            tempStart = arr[i].start.dateTime;\n            tempEnd = arr[i].end.dateTime;\n            /**\n             * TODO: add the case where arr[i].start.dateTime doesn't exists\n            */\n            let tempStartTime = new Date(tempStart);\n            let tempEndTime = new Date(tempEnd);\n            let curDate = this.props.dateContext.get('date')\n            if (tempStartTime.getDate() ===  curDate) {\n              if (tempStartTime.getHours() == hour) {\n                if (tempStartTime.getDate() !==  tempEndTime.getDate()) {\n                  let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                  let hourDiff = 24 - tempStartTime.getHours();\n                  let minDiff = 0;\n                  let color = 'lavender';\n                  let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                  sameTimeEventCount++;\n                  let newElement =\n                      (\n                          <div key={\"event\" + i}>\n                              <div\n\n                                  data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                  onMouseOver={e => {\n                                      e.target.style.color = \"#FFFFFF\";\n                                      e.target.style.background = \"RebeccaPurple\";\n                                      e.target.style.zIndex = \"2\";\n                                  }}\n                                  onMouseOut={e => {\n                                      e.target.style.zIndex = \"1\";\n                                      e.target.style.color = \"#000000\";\n                                      e.target.style.background = color;\n                                  }}\n                                  key={i}\n                                  // value = {i}\n                                  onClick={e => this.onEventClick(e, i)}\n                                  style={{\n                                      zIndex: this.state.zIndex,\n                                      marginTop: minsToMarginTop + \"px\",\n                                      padding: \"5px\",\n                                      fontSize: fontSize + \"px\",\n                                      border: \"1px lightgray solid \",\n                                      float: \"left\",\n                                      //  verticalAlign: \" \",\n                                      // verticalAlign: 'text-top',\n                                      // textAlign:\"left\",\n                                      borderRadius: \"5px\",\n                                      background: color,\n                                      // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                      width: itemWidth + \"px\",\n                                      position: \"absolute\",\n                                      height: height + \"px\",\n                                      marginLeft: addmarginLeft + \"px\"\n                                  }}>\n                                  {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                  {arr[i].summary}\n                              </div>\n                          </div>\n                      );\n                  res.push(newElement);\n                } else {\n                  // addmarginLeft = 0;\n                  // itemWidth = this.state.eventBoxSize;\n                  let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                  let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                  let minDiff = (tempEndTime.getMinutes()) / 60;\n                  let color = 'PaleTurquoise';\n                  let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                  sameTimeEventCount++;\n                  //check if there is already an event there overlapping from another hour\n                  for (let i = 0; i < arr.length; i++) {\n                      tempStart = arr[i].start.dateTime;\n                      tempEnd = arr[i].end.dateTime;\n                      let tempStartTime = new Date(tempStart);\n                      let tempEndTime = new Date(tempEnd);\n                      if (tempStartTime.getHours() < hour && tempEndTime.getHours() > hour) {\n                          addmarginLeft += 20;\n                          itemWidth = itemWidth - 20;\n                      }\n                  }\n\n                  if (sameTimeEventCount > 1) {\n                      // console.log(\"add 20 in day\");\n                      addmarginLeft += 20;\n                      // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                      // itemWidth = itemWidth/(sameHourItems-1);\n                      itemWidth = itemWidth - 20;\n                  }\n                  //chnage font size if not enough space\n                  if ((tempEndTime.getHours() - tempStartTime.getHours()) < 2) {\n                      fontSize = 8;\n                  }\n\n                  // change color if more than one event in same time.\n                  if (sameTimeEventCount <= 1) {\n                      color = (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue');\n                  }\n                  else if (sameTimeEventCount == 2) {\n                      color = 'skyblue';\n                  }\n                  else {\n                      color = 'blue';\n                  }\n\n                  let newElement =\n                      (\n\n                          <div key={\"event\" + i}>\n                              <div\n\n                                  data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                  onMouseOver={e => {\n                                      e.target.style.color = \"#FFFFFF\";\n                                      e.target.style.background = \"RebeccaPurple\";\n                                      e.target.style.zIndex = \"2\";\n                                  }}\n                                  onMouseOut={e => {\n                                      e.target.style.zIndex = \"1\";\n                                      e.target.style.color = \"#000000\";\n                                      e.target.style.background = color;\n                                  }}\n                                  key={i}\n                                  // value = {i}\n                                  onClick={e => this.onEventClick(e, i)}\n                                  style={{\n                                      zIndex: this.state.zIndex,\n                                      marginTop: minsToMarginTop + \"px\",\n                                      padding: \"5px\",\n                                      fontSize: fontSize + \"px\",\n                                      border: \"1px lightgray solid \",\n                                      float: \"left\",\n                                      //  verticalAlign: \" \",\n                                      // verticalAlign: 'text-top',\n                                      // textAlign:\"left\",\n                                      borderRadius: \"5px\",\n                                      background: color,\n                                      // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                      width: itemWidth + \"px\",\n                                      position: \"absolute\",\n                                      height: height + \"px\",\n                                      marginLeft: addmarginLeft + \"px\"\n                                  }}>\n                                  {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                  {arr[i].summary}\n                              </div>\n                          </div>\n                      );\n                  res.push(newElement);\n                }\n              }\n            } else if ( hour === 0 && tempEndTime.getDate() ===  curDate) {\n              let minsToMarginTop = 0\n              let hourDiff = tempEndTime.getHours();\n              let minDiff = (tempEndTime.getMinutes()) / 60;\n              let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n              let color = 'lavender';\n              sameTimeEventCount++;\n              let newElement =\n                  (\n                      <div key={\"event\" + i}>\n                          <div\n                              data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                              onMouseOver={e => {\n                                  e.target.style.color = \"#FFFFFF\";\n                                  e.target.style.background = \"RebeccaPurple\";\n                                  e.target.style.zIndex = \"2\";\n                              }}\n                              onMouseOut={e => {\n                                  e.target.style.zIndex = \"1\";\n                                  e.target.style.color = \"#000000\";\n                                  e.target.style.background = color;\n                              }}\n                              key={i}\n                              // value = {i}\n                              onClick={e => this.onEventClick(e, i)}\n                              style={{\n                                  zIndex: this.state.zIndex,\n                                  marginTop: minsToMarginTop + \"px\",\n                                  padding: \"5px\",\n                                  fontSize: fontSize + \"px\",\n                                  border: \"1px lightgray solid \",\n                                  float: \"left\",\n                                  //  verticalAlign: \" \",\n                                  // verticalAlign: 'text-top',\n                                  // textAlign:\"left\",\n                                  borderRadius: \"5px\",\n                                  background: color,\n                                  // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                  width: itemWidth + \"px\",\n                                  position: \"absolute\",\n                                  height: height + \"px\",\n                                  marginLeft: addmarginLeft + \"px\"\n                              }}>\n                              {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                              {arr[i].summary}\n                          </div>\n                      </div>\n                  );\n                  res.push(newElement);\n            } else if ( hour === 0 && tempStartTime.getDate() < curDate && tempEndTime.getDate() > curDate ){\n              let minsToMarginTop = 0\n              let hourDiff = 24\n              let height = (hourDiff) * this.state.pxPerHourForConversion;\n              let color = 'lavender';\n              sameTimeEventCount++;\n              let newElement =\n                  (\n                      <div key={\"event\" + i}>\n                          <div\n                              data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                              onMouseOver={e => {\n                                  e.target.style.color = \"#FFFFFF\";\n                                  e.target.style.background = \"RebeccaPurple\";\n                                  e.target.style.zIndex = \"2\";\n                              }}\n                              onMouseOut={e => {\n                                  e.target.style.zIndex = \"1\";\n                                  e.target.style.color = \"#000000\";\n                                  e.target.style.background = color;\n                              }}\n                              key={i}\n                              // value = {i}\n                              onClick={e => this.onEventClick(e, i)}\n                              style={{\n                                  zIndex: this.state.zIndex,\n                                  marginTop: minsToMarginTop + \"px\",\n                                  padding: \"5px\",\n                                  fontSize: fontSize + \"px\",\n                                  border: \"1px lightgray solid \",\n                                  float: \"left\",\n                                  //  verticalAlign: \" \",\n                                  // verticalAlign: 'text-top',\n                                  // textAlign:\"left\",\n                                  borderRadius: \"5px\",\n                                  background: color,\n                                  // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                  width: itemWidth + \"px\",\n                                  position: \"absolute\",\n                                  height: height + \"px\",\n                                  marginLeft: addmarginLeft + \"px\"\n                              }}>\n                              {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                              {arr[i].summary}\n                          </div>\n                      </div>\n                  );\n              res.push(newElement);\n            }\n        }\n        return res;\n    }\n\n    onDayClick = (e, i) => {\n\n        console.log(\"this is the hour:\" + i);\n        this.props.handleDateClick((this.props.dateContext.format(\"M\") + '/' + this.props.dateContext.format(\"D\") + '/' + this.props.dateContext.format(\"Y\")), i);\n    }\n\n\n    /**\n     * dayViewItems: goes through hours 0 to 24, and calling getEventItem for each hour\n    */\n    dayViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n        var arr = [];\n        for (let i = 0; i < 24; ++i) {\n            arr.push(\n                <Row key={\"dayEvent\" + i} style={{ position: \"relative\" }}>\n                    <Col\n                        style={{\n                            position: \"relative\",\n                            borderTop: \"1px solid lavender\",\n                            width: '180px', //lyman change width to adjust\n                            background: \"aliceblue\",\n                            height: this.state.pxPerHour\n                        }}\n                        onClick={e => this.onDayClick(e, i)}\n                    >\n                        {this.getEventItem(i)}\n                    </Col >\n                </Row>\n            )\n        }\n        return arr;\n    }\n\n    render() {\n        return (\n            <div style={{\n                padding: '20px',\n                width: \"300px\",\n                borderRadius: \"20px\"\n            }}>\n                Today's Events:\n                <Container style={{}}>\n                    <Row >\n                        <Col >\n                            {/* this is Just for the time */}\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.timeDisplay()}\n                            </Container>\n                        </Col>\n                        <Col>\n                            {/* this is for the actual event slots */}\n                            <Container style={{ margin: '0', padding: '0' }}>\n                                {this.dayViewItems()}\n                            </Container>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment';\nimport axios from \"axios\";\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\nexport default class WeekEvents extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          pxPerHour: \"30px\", //preset size for all columns\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n          eventBoxSize: 80, //width size for event box\n          marginFromLeft: 0\n      }\n      this.hourDisplay = React.createRef();\n  }\n\n  componentDidMount  () {\n    // Set top most time to be current hour\n    // Browser scrolls to the bottom if hour >= 18 (tested with Chrome and Firefox)\n    let curHour = new Date().getHours();\n    this.hourDisplay.current.scrollTop = this.state.pxPerHourForConversion * curHour;\n  }\n\n  timeDisplay = () => { //this essentially creates the time row\n      let arr = [];\n      for (let i = 0; i < 24; ++i) {\n          arr.push(\n              <Row key={\"dayEvent\" + i}>\n                  <Col style={{\n                      borderTop: \"1px solid lavender\",\n                      textAlign: \"right\",\n                      height: this.state.pxPerHour,\n                  }}>\n                      {i}:00\n                  </Col >\n              </Row>\n          )\n      }\n      return arr\n  }\n\n  dateDisplay = () => {\n    let arr = [];\n    let startObject = this.props.dateContext.clone();\n    let startDay = startObject.startOf(\"week\");\n    let curDate = startDay.clone();\n    for (let i = 0; i<7; i++) {\n        arr.push(\n            <Col key={\"day\" + i}>\n                <Col style={{\n                    textAlign: \"center\",\n                    height: this.state.pxPerHour,\n                }}>\n                    {curDate.format(\"M/D\")}\n                </Col >\n            </Col>\n        );\n        curDate.add(1,\"day\");\n    }\n    return arr;\n  }\n\n  onEventClick = (e, i) => {\n    var arr = this.props.weekEvents;\n    e.stopPropagation();\n    this.props.eventClick(arr[i]);\n  }\n\n  onWeekClick = (event, day, hour) => {\n    let startObject = this.props.dateContext.clone();\n    let startDay = startObject.startOf(\"week\");\n    let curDate = startDay.clone();\n    curDate.add(24*day+hour,'hour');\n    this.props.onDayClick(curDate);\n  }\n\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n      var res= [];\n      for (let i = 0; i < 7; ++i) {\n          var arr = []\n          for( let j = 0; j < 24; ++j) {\n            arr.push(\n              <Container key={\"weekEvent\" + i + j}>\n                <Row style={{ position: \"relative\"}}>\n                  <Col\n                      style={{\n                          position: \"relative\",\n                          borderTop: \"1px solid lavender\",\n                          background: \"aliceblue\",\n                          height: this.state.pxPerHour,\n                          width: '80px',\n                      }}\n                      onClick={e => this.onWeekClick(e, i, j)}\n                  >\n                      {this.getEventItem(i,j)}\n                  </Col >\n                </Row>\n              </Container>\n            );\n          }\n        res.push(\n          <Col key={\"dayEvent\" + i}>\n            {arr}\n          </Col>\n        );\n      }\n      return res;\n  }\n\n  getEventItem = (day, hour) => {\n      let startObject = this.props.dateContext.clone();\n      let startDay = startObject.startOf(\"week\");\n      let curDate = startDay.clone();\n      curDate.add(day,'days');\n      var res = []\n      var tempStart = null;\n      var tempEnd = null;\n      var arr = this.props.weekEvents;\n      var sameTimeEventCount = 0;\n      var addmarginLeft = 0;\n      let itemWidth = this.state.eventBoxSize;\n      var fontSize = 10;\n      for (let i = 0; i < arr.length; i++) {\n          tempStart = arr[i].start.dateTime;\n          tempEnd = arr[i].end.dateTime;\n          /**\n           * TODO: add the case where arr[i].start.dateTime doesn't exists\n          */\n          let tempStartTime = new Date(tempStart);\n          let tempEndTime = new Date(tempEnd);\n          let startDate = moment(tempStartTime);\n          let endDate = moment(tempEndTime)\n          if(curDate.isSameOrAfter(startDate,'day') && curDate.isSameOrBefore(endDate,'day')) {\n            if (startDate.date() ===  curDate.date()) {\n                if (startDate.hour() === hour) {\n                    if(startDate.date() === endDate.date()) {\n                        // addmarginLeft = 0;\n                            // itemWidth = this.state.eventBoxSize;\n                            let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                            let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n                            let minDiff = (tempEndTime.getMinutes()) / 60;\n                            let color = 'PaleTurquoise';\n                            let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                            sameTimeEventCount++;\n                            //check if there is already an event there overlapping from another hour\n                            for (let i = 0; i < arr.length; i++) {\n                                tempStart = arr[i].start.dateTime;\n                                tempEnd = arr[i].end.dateTime;\n                                let tempStartTime = new Date(tempStart);\n                                let tempEndTime = new Date(tempEnd);\n                                if (tempStartTime.getHours() < hour && tempEndTime.getHours() > hour) {\n                                    addmarginLeft += 20;\n                                    itemWidth = itemWidth - 20;\n                                }\n                            }\n\n                            if (sameTimeEventCount > 1) {\n                                // console.log(\"add 20 in day\");\n                                addmarginLeft += 20;\n                                // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                                // itemWidth = itemWidth/(sameHourItems-1);\n                                itemWidth = itemWidth - 20;\n                            }\n                            //chnage font size if not enough space\n                            if ((tempEndTime.getHours() - tempStartTime.getHours()) < 2) {\n                                fontSize = 8;\n                            }\n\n                            // change color if more than one event in same time.\n                            if (sameTimeEventCount <= 1) {\n                                color = (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue');\n                            }\n                            else if (sameTimeEventCount == 2) {\n                                color = 'skyblue';\n                            }\n                            else {\n                                color = 'blue';\n                            }\n\n                            let newElement =\n                                (\n\n                                    <div key={\"event\" + i}>\n                                        <div\n\n                                            data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                            onMouseOver={e => {\n                                                e.target.style.color = \"#FFFFFF\";\n                                                e.target.style.background = \"RebeccaPurple\";\n                                                e.target.style.zIndex = \"2\";\n                                            }}\n                                            onMouseOut={e => {\n                                                e.target.style.zIndex = \"1\";\n                                                e.target.style.color = \"#000000\";\n                                                e.target.style.background = color;\n                                            }}\n                                            key={i}\n                                            // value = {i}\n                                            onClick={e => this.onEventClick(e, i)}\n                                            style={{\n                                                zIndex: this.state.zIndex,\n                                                marginTop: minsToMarginTop + \"px\",\n                                                padding: \"5px\",\n                                                fontSize: fontSize + \"px\",\n                                                border: \"1px lightgray solid \",\n                                                float: \"left\",\n                                                //  verticalAlign: \" \",\n                                                // verticalAlign: 'text-top',\n                                                // textAlign:\"left\",\n                                                borderRadius: \"5px\",\n                                                background: color,\n                                                // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                                width: itemWidth + \"px\",\n                                                position: \"absolute\",\n                                                height: height + \"px\",\n                                                marginLeft: addmarginLeft + \"px\"\n                                            }}>\n                                            {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                            {arr[i].summary}\n                                        </div>\n                                    </div>\n                                );\n                            res.push(newElement);\n                    } else if(startDate.date() !== endDate.date()) {\n                        let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n                            let hourDiff = 24 - tempStartTime.getHours();\n                            let minDiff = 0;\n                            let color = 'lavender';\n                            let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                            sameTimeEventCount++;\n                            let newElement =\n                                (\n                                    <div key={\"event\" + i}>\n                                        <div\n\n                                            data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                            onMouseOver={e => {\n                                                e.target.style.color = \"#FFFFFF\";\n                                                e.target.style.background = \"RebeccaPurple\";\n                                                e.target.style.zIndex = \"2\";\n                                            }}\n                                            onMouseOut={e => {\n                                                e.target.style.zIndex = \"1\";\n                                                e.target.style.color = \"#000000\";\n                                                e.target.style.background = color;\n                                            }}\n                                            key={i}\n                                            // value = {i}\n                                            onClick={e => this.onEventClick(e, i)}\n                                            style={{\n                                                zIndex: this.state.zIndex,\n                                                marginTop: minsToMarginTop + \"px\",\n                                                padding: \"5px\",\n                                                fontSize: fontSize + \"px\",\n                                                border: \"1px lightgray solid \",\n                                                float: \"left\",\n                                                //  verticalAlign: \" \",\n                                                // verticalAlign: 'text-top',\n                                                // textAlign:\"left\",\n                                                borderRadius: \"5px\",\n                                                background: color,\n                                                // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                                width: itemWidth + \"px\",\n                                                position: \"absolute\",\n                                                height: height + \"px\",\n                                                marginLeft: addmarginLeft + \"px\"\n                                            }}>\n                                            {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                            {arr[i].summary}\n                                        </div>\n                                    </div>\n                                );\n                            res.push(newElement);\n                    }\n                }\n            } else if (hour === 0) {\n                if(endDate.date() ===  curDate.date()) {\n                    let minsToMarginTop = 0\n                        let hourDiff = tempEndTime.getHours();\n                        let minDiff = (tempEndTime.getMinutes()) / 60;\n                        let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n                        let color = 'lavender';\n                        sameTimeEventCount++;\n                        let newElement =\n                            (\n                                <div key={\"event\" + i}>\n                                    <div\n                                        data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                        onMouseOver={e => {\n                                            e.target.style.color = \"#FFFFFF\";\n                                            e.target.style.background = \"RebeccaPurple\";\n                                            e.target.style.zIndex = \"2\";\n                                        }}\n                                        onMouseOut={e => {\n                                            e.target.style.zIndex = \"1\";\n                                            e.target.style.color = \"#000000\";\n                                            e.target.style.background = color;\n                                        }}\n                                        key={i}\n                                        // value = {i}\n                                        onClick={e => this.onEventClick(e, i)}\n                                        style={{\n                                            zIndex: this.state.zIndex,\n                                            marginTop: minsToMarginTop + \"px\",\n                                            padding: \"5px\",\n                                            fontSize: fontSize + \"px\",\n                                            border: \"1px lightgray solid \",\n                                            float: \"left\",\n                                            //  verticalAlign: \" \",\n                                            // verticalAlign: 'text-top',\n                                            // textAlign:\"left\",\n                                            borderRadius: \"5px\",\n                                            background: color,\n                                            // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                            width: itemWidth + \"px\",\n                                            position: \"absolute\",\n                                            height: height + \"px\",\n                                            marginLeft: addmarginLeft + \"px\"\n                                        }}>\n                                        {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                        {arr[i].summary}\n                                    </div>\n                                </div>\n                            );\n                            res.push(newElement);\n                } else {\n                    let minsToMarginTop = 0\n                        let height = 24 * this.state.pxPerHourForConversion;\n                        let color = 'lavender';\n                        sameTimeEventCount++;\n                        let newElement =\n                            (\n                                <div key={\"event\" + i}>\n                                    <div\n                                        data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].summary + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n                                        onMouseOver={e => {\n                                            e.target.style.color = \"#FFFFFF\";\n                                            e.target.style.background = \"RebeccaPurple\";\n                                            e.target.style.zIndex = \"2\";\n                                        }}\n                                        onMouseOut={e => {\n                                            e.target.style.zIndex = \"1\";\n                                            e.target.style.color = \"#000000\";\n                                            e.target.style.background = color;\n                                        }}\n                                        key={i}\n                                        // value = {i}\n                                        onClick={e => this.onEventClick(e, i)}\n                                        style={{\n                                            zIndex: this.state.zIndex,\n                                            marginTop: minsToMarginTop + \"px\",\n                                            padding: \"5px\",\n                                            fontSize: fontSize + \"px\",\n                                            border: \"1px lightgray solid \",\n                                            float: \"left\",\n                                            //  verticalAlign: \" \",\n                                            // verticalAlign: 'text-top',\n                                            // textAlign:\"left\",\n                                            borderRadius: \"5px\",\n                                            background: color,\n                                            // width: this.state.eventBoxSize - (addmarginLeft/16),\n                                            width: itemWidth + \"px\",\n                                            position: \"absolute\",\n                                            height: height + \"px\",\n                                            marginLeft: addmarginLeft + \"px\"\n                                        }}>\n                                        {/* {console.log(\"LOOOOOK \"+ arr[i].summary + \"   \" + this.state.eventBoxSize/(sameHourItems-1) )} */}\n                                        {arr[i].summary}\n                                    </div>\n                                </div>\n                            );\n                            res.push(newElement);\n                }\n            }\n          }\n      }\n      return res;\n  }\n\n render() {\n    let weekdays = moment.weekdays().map((day) => {\n      return (\n        <Col key={\"event\"+day} className=\"fancytext\">{day}</Col>\n      )\n    });\n     return (\n         <Container style={{ height: 'auto', width: '1000px'}}>\n           <Row>\n             <Col>Events </Col>\n             {this.dateDisplay()}\n           </Row>\n           <Row>\n             <Col className=\"fancytext\">Time</Col>\n             {weekdays}\n           </Row>\n           <Row ref={this.hourDisplay} style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\n             <Col>\n                 <Container style={{ margin: '0', padding: '0'}}>\n                     {this.timeDisplay()}\n                 </Container>\n             </Col>\n             {this.weekViewItems()}\n           </Row>\n         </Container>\n     )\n }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment';\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\n\nimport firebase from \"./firebase\";\n\nexport default class WeekRoutines extends Component {\n  constructor(props) {\n      super(props);\n      // console.log(this.props.dateContext);\n      this.state = {\n          pxPerHour: \"30px\", //preset size for all columns\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n          eventBoxSize: 80, //width size for event box\n          marginFromLeft: 0\n      }\n      this.hourDisplay = React.createRef();\n  }\n\n  componentDidMount  () {\n    // Set top most time to be current hour\n    // Browser scrolls to the bottom if hour >= 18\n    let curHour = new Date().getHours();\n    this.hourDisplay.current.scrollTop = this.state.pxPerHourForConversion * curHour;\n  }\n\ngetEventItem = (day, hour) => {\n  var res = []\n  var arr = this.props.routines;\n  var sameTimeEventCount = 0;\n  let itemWidth = this.state.eventBoxSize;\n  // var overlapEvent = 0;\n  var addmarginLeft = 0;\n  var fontSize = 10;\n  for (let i = 0; i < arr.length; i++) {\n\n      let start_dateObj = new Date();\n      let start_dateStr = start_dateObj.toISOString().split('T').shift();\n      let start_timeStr = arr[i].available_start_time;\n      let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n      let end_dateObj = new Date();\n      let end_dateStr = end_dateObj.toISOString().split('T').shift();\n      let end_timeStr = arr[i].available_end_time;\n      let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n      let tempStartTime = start_timeAndDate;\n      let tempEndTime = end_timeAndDate;\n      /**\n       * TODO: add the case where arr[i].start.dateTime doesn't exists\n      */\n      if (tempStartTime.getHours() === hour) {\n          // console.log(\"matched\" + i );\n          let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n          let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n          let minDiff = (tempEndTime.getMinutes()) / 60;\n          let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n          let color = 'PaleTurquoise';\n\n          sameTimeEventCount++;\n          //check if there is already an event there overlapping from another hour\n          for(let i = 0; i < arr.length; i++){\n              let start_dateObj = new Date();\n              let start_dateStr = start_dateObj.toISOString().split('T').shift();\n              let start_timeStr = arr[i].available_start_time;\n              let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n              let end_dateObj = new Date();\n              let end_dateStr = end_dateObj.toISOString().split('T').shift();\n              let end_timeStr = arr[i].available_end_time;\n              let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n              let tempStartTime = start_timeAndDate;\n              let tempEndTime = end_timeAndDate;\n              if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\n                  // console.log(\"We ARE IN HEREEEE\");\n                  addmarginLeft += 20;\n                  itemWidth = itemWidth - 20;\n                  // overlapEvent++;\n              }\n          }\n\n          if(sameTimeEventCount > 1  ){\n               addmarginLeft += 20;\n              // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n              // itemWidth = itemWidth/(sameHourItems-1);\n              itemWidth = itemWidth - 20;\n              // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\n          }\n\n          //chnage font size if not enough space\n          if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\n              fontSize = 8;\n          }\n          // change color if more than one event in same time.\n          if(sameTimeEventCount <= 1){\n               color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\n          }\n          else if( sameTimeEventCount === 2){\n              color = 'skyblue';\n          }\n          else{\n              color = 'blue';\n          }\n          let newElement =\n              (<div key={\"dayRoutineItem\" + i}\n              data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n\n                  onMouseOver={e => {\n                      e.target.style.color = \"#FFFFFF\";\n                      e.target.style.background = \"RebeccaPurple\";\n                      // e.target.style.marginLeft = \"5px\";\n                      // e.target.style.border= \"3px solid w\";\n                      e.target.style.zIndex=\"2\";\n\n\n\n\n                  }}\n                  onMouseOut={e => {\n                      e.target.style.zIndex=\"1\";\n\n                      // e.target.style.marginLeft = \"0px\";\n                       e.target.style.color = \"#000000\";\n                      //  e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\n                       e.target.style.border= \"1px lightgray solid\";\n\n                       e.target.style.background = color;\n\n\n                      }}\n\n                  onClick = {this.RoutineClicked}\n                  style={{\n                      zIndex: this.state.zIndex,\n                      marginTop: minsToMarginTop + \"px\",\n                      padding: \"5px\",\n                      // fontSize: \"10px\",\n                      border: \"1px lightgray solid \",\n                      // float: \"left\",\n                      borderRadius: \"5px\",\n                      // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\n                      //  width: this.state.eventBoxSize,\n                      position: \"absolute\",\n                      height: height + \"px\",\n\n                      fontSize: fontSize + \"px\",\n                      background: color,\n                      width: itemWidth + \"px\",\n                      marginLeft: addmarginLeft + \"px\"\n                  }}>\n                  {arr[i].title}\n              </div>);\n          res.push(newElement);\n      }\n  }\n  return res;\n}\n\n  timeDisplay = () => { //this essentially creates the time row\n      let arr = [];\n      for (let i = 0; i < 24; ++i) {\n          arr.push(\n              <Row key={\"dayEvent\" + i}>\n                  <Col style={{\n                      borderTop: \"1px solid lavender\",\n                      textAlign: \"right\",\n                      height: this.state.pxPerHour,\n                  }}>\n                      {i}:00\n                  </Col >\n              </Row>\n          )\n      }\n      return arr\n  }\n\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n      var res= [];\n      for (let i = 0; i < 7; ++i) {\n          var arr = []\n          for( let j = 0; j < 24; ++j) {\n            arr.push(\n              <Container key={\"weekRoutine\" + i + j}>\n                <Row style={{ position: \"relative\"}}>\n                  <Col\n                      style={{\n                          position: \"relative\",\n                          borderTop: \"1px solid lavender\",\n                          background: \"aliceblue\",\n                          height: this.state.pxPerHour,\n                      }}\n                  >\n                      {this.getEventItem(i,j)}\n                  </Col >\n                </Row>\n              </Container>\n            );\n          }\n        res.push(\n          <Col key={\"dayRoutine\" + i}>\n            {arr}\n          </Col>\n        );\n      }\n      return res;\n  }\n\n render() {\n    let weekdays = moment.weekdays().map((day) => {\n      return (\n        <Col key={\"routine\"+day} className=\"fancytext\">{day}</Col>\n      )\n    });\n     return (\n         <Container style={{ height: 'auto', width: '1000px'}}>\n           <Row>\n             <Col>\n              Routines\n             </Col>\n           </Row>\n           <Row>\n             <Col className=\"fancytext\">Time</Col>\n             {weekdays}\n           </Row>\n           <Row ref={this.hourDisplay} style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\n             <Col >\n                 <Container style={{ margin: '0', padding: '0', width: '80px' }}>\n                     {this.timeDisplay()}\n                 </Container>\n             </Col>\n             {this.weekViewItems()}\n           </Row>\n         </Container>\n     )\n }\n}\n","import React, { Component } from 'react'\nimport moment from 'moment';\nimport {\n     Container, Row, Col\n} from 'react-bootstrap';\nimport firebase from \"./firebase\";\n\nexport default class WeekGoals extends Component {\n  constructor(props) {\n      super(props);\n      // console.log(this.props.dateContext);\n      this.state = {\n          pxPerHour: \"30px\", //preset size for all columns\n          pxPerHourForConversion: 30, // if pxPerHour is change, this should change to reflect it\n          zIndex: 1, //thought i needed to increment zIndex for div overlaps but seems to be fine being at 1 for all divs\n          eventBoxSize: 80, //width size for event box\n      }\n      this.hourDisplay = React.createRef();\n  }\n\n  componentDidMount  () {\n    // Set top most time to be current hour\n    // Browser scrolls to the bottom if hour >= 18\n    let curHour = new Date().getHours();\n    this.hourDisplay.current.scrollTop = this.state.pxPerHourForConversion * curHour;\n  }\n\n  /**\n     * getEventItem: given an hour, this will return all events that was started during that hour\n     *\n    */\n   getEventItem = (day, hour) => {\n    var res = []\n    var arr = this.props.goals;\n    var sameTimeEventCount = 0;\n    let itemWidth = this.state.eventBoxSize;\n    // var overlapEvent = 0;\n    var addmarginLeft = 0;\n    var fontSize = 10;\n    for (let i = 0; i < arr.length; i++) {\n\n        let start_dateObj = new Date();\n        let start_dateStr = start_dateObj.toISOString().split('T').shift();\n        let start_timeStr = arr[i].available_start_time;\n        let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n        let end_dateObj = new Date();\n        let end_dateStr = end_dateObj.toISOString().split('T').shift();\n        let end_timeStr = arr[i].available_end_time;\n        let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n        let tempStartTime = start_timeAndDate;\n        let tempEndTime = end_timeAndDate;\n        /**\n         * TODO: add the case where arr[i].start.dateTime doesn't exists\n        */\n        if (tempStartTime.getHours() === hour) {\n            // addmarginLeft = 0;\n            // itemWidth = this.state.eventBoxSize;\n            // itemWidth = 0;\n            // console.log(\"matched\" + i );\n            let minsToMarginTop = (tempStartTime.getMinutes() / 60) * this.state.pxPerHourForConversion;\n            let hourDiff = tempEndTime.getHours() - tempStartTime.getHours();\n            let minDiff = (tempEndTime.getMinutes()) / 60;\n            let height = (hourDiff + minDiff) * this.state.pxPerHourForConversion;\n            let color = 'PaleTurquoise';\n\n            sameTimeEventCount++;\n            //check if there is already an event there overlapping from another hour\n            for(let i = 0; i < arr.length; i++){\n                let start_dateObj = new Date();\n                let start_dateStr = start_dateObj.toISOString().split('T').shift();\n                let start_timeStr = arr[i].available_start_time;\n                let start_timeAndDate = moment(start_dateStr + ' ' + start_timeStr).toDate();\n\n                let end_dateObj = new Date();\n                let end_dateStr = end_dateObj.toISOString().split('T').shift();\n                let end_timeStr = arr[i].available_end_time;\n                let end_timeAndDate = moment(end_dateStr + ' ' + end_timeStr).toDate();\n\n                let tempStartTime = start_timeAndDate;\n                let tempEndTime = end_timeAndDate;\n                if (tempStartTime.getHours() <  hour &&  tempEndTime.getHours()> hour) {\n                    //  console.log(\"this is statr time :\"+ tempStartTime.getHours() );\n                    //  console.log(\"this is end time :\"+ tempEndTime.getHours() );\n                    //  console.log(\"add 20\");\n                    addmarginLeft += 20;\n                    itemWidth = itemWidth - 20;\n                    // console.log(addmarginLeft);\n                    // overlapEvent++;\n                }\n            }\n\n\n            if(sameTimeEventCount > 1  ){\n                // console.log(\"In here because same hour  \");\n                // console.log(\"add 20\");\n                 addmarginLeft += 20;\n                // addmarginLeft += this.state.eventBoxSize/(sameHourItems-1) ;\n                // itemWidth = itemWidth/(sameHourItems-1);\n                itemWidth = itemWidth - 20;\n                // console.log(\"thi is the item width after subtracting 40 \" + itemWidth);\n                // console.log(addmarginLeft);\n            }\n            // console.log(addmarginLeft);\n            // console.log(\"end of this element \");\n\n            //chnage font size if not enough space\n            if((tempEndTime.getHours() - tempStartTime.getHours()) < 2){\n                fontSize = 8;\n            }\n            // change color if more than one event in same time.\n            if(sameTimeEventCount <= 1){\n                 color = (hour % 2 === 0 ? 'PaleTurquoise' : 'skyblue');\n            }\n            else if( sameTimeEventCount === 2){\n                color = 'skyblue';\n            }\n            else{\n                color = 'blue';\n            }\n            let newElement =\n                (<div key={\"dayGoalItem\" + i}\n                data-toggle=\"tooltip\" data-placement=\"right\" title={arr[i].title + \"\\nStart: \" + tempStartTime + \"\\nEnd: \" + tempEndTime}\n\n                    onMouseOver={e => {\n                        e.target.style.color = \"#FFFFFF\";\n                        e.target.style.background = \"RebeccaPurple\";\n                        // e.target.style.marginLeft = \"5px\";\n                        e.target.style.zIndex=\"2\";\n\n                    }}\n                    onMouseOut={e => {\n                        e.target.style.zIndex=\"1\";\n                        // e.target.style.marginLeft = \"0px\";\n                        e.target.style.color = \"#000000\";\n                        e.target.style.background = color;\n                        e.target.style.border= \"1px lightgray solid\";\n                        // e.target.style.background = ( hour % 2 ==0 ?  'PaleTurquoise' : 'skyblue');\n                    }}\n                    onClick = {this.GoalClicked}\n                    style={{\n                        zIndex: this.state.zIndex,\n                        marginTop: minsToMarginTop + \"px\",\n                        padding: \"5px\",\n                        // fontSize: \"10px\",\n                        border: \"1px lightgray solid \",\n                        // float: \"left\",\n                        borderRadius: \"5px\",\n                        // background: (hour % 2 == 0 ? 'PaleTurquoise' : 'skyblue'),\n                        // width: this.state.eventBoxSize,\n                        position: \"absolute\",\n                        height: height + \"px\",\n\n                        fontSize: fontSize + \"px\",\n                        background: color,\n                        width: itemWidth + \"px\",\n                        marginLeft: addmarginLeft + \"px\"\n                    }}>\n                    {arr[i].title}\n                </div>);\n            res.push(newElement);\n        }\n    }\n    return res;\n}\n\n  timeDisplay = () => { //this essentially creates the time row\n      let arr = [];\n      for (let i = 0; i < 24; ++i) {\n          arr.push(\n              <Row key={\"dayEvent\" + i}>\n                  <Col style={{\n                      borderTop: \"1px solid lavender\",\n                      textAlign: \"right\",\n                      height: this.state.pxPerHour,\n                  }}>\n                      {i}:00\n                  </Col >\n              </Row>\n          )\n      }\n      return arr\n  }\n\n  weekViewItems = () => { // this creates the events adjusting their div size to reflecting the time it's slotted for\n      var res= [];\n      for (let i = 0; i < 7; ++i) {\n          var arr = []\n          for( let j = 0; j < 24; ++j) {\n            arr.push(\n              <Container key={\"weekGoal\" + i + j}>\n                <Row style={{ position: \"relative\"}}>\n                  <Col\n                      style={{\n                          position: \"relative\",\n                          borderTop: \"1px solid lavender\",\n                          background: \"aliceblue\",\n                          height: this.state.pxPerHour,\n                      }}\n                  >\n                      {this.getEventItem(i,j)}\n                  </Col >\n                </Row>\n              </Container>\n            );\n          }\n        res.push(\n          <Col key={\"dayGoal\" + i}>\n            {arr}\n          </Col>\n        );\n      }\n      return res;\n  }\n\n render() {\n    let weekdays = moment.weekdays().map((day) => {\n      return (\n        <Col key={\"goal\"+day} className=\"fancytext\">{day}</Col>\n      )\n    });\n     return (\n         <Container style={{ height: 'auto', width: '1000px'}}>\n          <Row>\n            <Col>Goals</Col>\n          </Row>\n           <Row>\n             <Col className=\"fancytext\">Time</Col>\n             {weekdays}\n           </Row>\n           <Row ref={this.hourDisplay} style={{ width: 'auto', height: \"180px\", overflowX: \"visible\", overflowY: \"scroll\"}}>\n             <Col >\n                 <Container style={{ margin: '0', padding: '0', width: '80px' }}>\n                     {this.timeDisplay()}\n                 </Container>\n             </Col>\n             {this.weekViewItems()}\n           </Row>\n         </Container>\n     )\n }\n}\n","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport { Button, Modal} from \"react-bootstrap\";\nimport { storage } from './firebase';\n\n  export default class AddNewPeople extends Component {\n    constructor(props) {\n      super(props);\n    }\n    state = {\n      itemToEdit: {\n        have_pic: false,\n        important: false,\n        name: \"\",\n        phone_number: \"\",\n        pic: \"\",\n        relationship: \"\",\n        unique_id: \"\"\n      }, \n      saveChangesButtonEnabled: true,\n      peopleDocsPath: firebase\n        .firestore()\n        .collection(\"users\")\n        .doc(\"7R6hAVmDrNutRkG3sVRy\")\n        .collection(\"people\")\n    };\n  \n    handleFileSelected = event => {\n        event.preventDefault(); \n        event.stopPropagation();                \n        const file = event.target.files[0];\n        this.setState({\n            saveChangesButtonEnabled: false\n        }, ()=>{\n            let targetFile = file\n            if(targetFile != null ){\n                let temp = this.state.itemToEdit;\n    \n                // Create a reference to the firebase storage. \n                var storageRef = storage.ref('People/' + targetFile.name);\n                //upload file to firebase storage\n                var task = storageRef.put(targetFile);\n                //check on the the upload progress\n                task.on('state_changed',\n                    function progress(snapshot){\n                        //get percentage uplaoded \n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\n                        console.log(percentage);\n    \n                    },\n                    function error(err){\n                        console.log(err);\n                    },\n                    (snapshot) =>{\n                        temp.have_pic = true;\n                        console.log(\"completed\");\n                        storage.ref('People').child(targetFile.name).getDownloadURL().then(url => {\n                            temp.pic = url;\n                            this.setState({\n                                itemToEdit: temp,\n                                saveChangesButtonEnabled: true\n                            }); \n                        });\n                    }\n                );     \n            }}); \n    };\n\n    newPersonInputSubmit = ( ) => {\n        this.state.peopleDocsPath\n          .add(this.state.itemToEdit)\n          .then(ref => {\n            if (ref.id === null) {\n              alert(\"Fail to add new routine / goal item\");\n              return;\n            }\n   \n            let temp = this.state.itemToEdit;\n            temp.unique_id = ref.id;\n            console.log(\"Added document with ID: \", ref.id);\n            this.updateWithId();\n   \n          });\n    }\n\n    updateWithId = ( ) => {\n        this.state.peopleDocsPath.doc(this.state.itemToEdit.unique_id).update(this.state.itemToEdit).then(\n            (doc) => {\n                \n                this.props.closeModal(); \n                this.props.newPersonAdded(); \n            }\n        )\n    }\n\n  \n    render() {\n      return (\n        <Modal.Dialog style={{ marginLeft: \"0\", width: \"350px\" }}>\n          <Modal.Header closeButton onHide={this.props.closeModal} >\n            <Modal.Title>\n              <h5 className=\"normalfancytext\">\n                Add New People\n              </h5>{\" \"}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div>\n              <label>Name</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  style={{ width: \"200px\" }}\n                  placeholder=\"Enter Name\"\n                  value={this.state.itemToEdit.name}\n                  onChange={e => {\n                    e.stopPropagation();\n                    let temp = this.state.itemToEdit;\n                    temp.name = e.target.value;\n                    this.setState({ itemToEdit: temp });\n                  }}\n                />\n              </div>\n              <label>Relationship</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  style={{ width: \"200px\" }}\n                  placeholder=\"Enter Relationship \"\n                  value={this.state.itemToEdit.relationship}\n                  onChange={e => {\n                    e.stopPropagation();\n                    let temp = this.state.itemToEdit;\n                    temp.relationship = e.target.value;\n                    this.setState({ itemToEdit: temp });\n                  }}\n                />\n              </div>\n              <label>Phone Number</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  style={{ width: \"200px\" }}\n                  placeholder=\"Enter Phone Number\"\n                  value={this.state.itemToEdit.phone_number}\n                  onChange={e => {\n                    e.stopPropagation();\n                    let temp = this.state.itemToEdit;\n                    temp.phone_number = e.target.value;\n                    this.setState({ itemToEdit: temp });\n                  }}\n                />\n              </div>\n              \n              {/* <div className=\"input-group mb-3\" style ={{marginTop:\"10px\"}}>\n              <label className=\"form-check-label\" >Important Person?</label>\n              <input\n                style={{  marginLeft: \"10px\",width: \"20px\", height: \"20px\"}}\n                type=\"checkbox\"\n                checked={this.state.itemToEdit.important}\n                onChange={e => {\n                  e.stopPropagation();\n                  let temp = this.state.itemToEdit;\n                //   console.log(temp.important);\n                  temp.important = !temp.important;\n                  this.setState({ itemToEdit: temp });\n                }}\n              />\n            </div> */}\n            <label>Upload Photo</label>\n              <div className=\"input-group mb-3\">\n              <input\n                style = {{color: \"transparent\", width: \"200px\"}} \n                accept=\"image/*\"\n                type=\"file\"\n                onChange={this.handleFileSelected}\n                // id=\"ProfileImage\"\n                />\n              </div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button style = {{marginLeft:\"10px\"}} variant=\"secondary\" onClick = {this.props.closeModal}>\n              Close\n            </Button>\n            {(this.state.saveChangesButtonEnabled === false?\n              <Button variant=\"info\" style = {{marginLeft:\"50px\", marginRight:\"30px\"}} type=\"submit\" disabled>\n                Save changes\n              </Button>:\n              <Button variant=\"info\" style = {{marginLeft:\"50px\", marginRight:\"30px\"}} type=\"submit\" onClick={(e) => {e.stopPropagation(); this.newPersonInputSubmit()}} >\n                Save changes\n              </Button>\n            )}\n           \n          </Modal.Footer>\n        </Modal.Dialog>\n      );\n    }\n  }\n  \n\n  ","import React from 'react';\nimport firebase from \"./firebase\";\nimport AddNewPeople from \"./AddNewPeople\";\nimport { Form,Row,Col ,Modal,Button,Container,Dropdown,DropdownButton,} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faImage\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { storage } from './firebase';\n\nclass AboutModal extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state={\n            firebaseRootPath: firebase\n            .firestore()\n            .collection(\"users\")\n            .doc(\"7R6hAVmDrNutRkG3sVRy\"),\n            importantPeople1id: null,\n            importantPeople2id: null,\n            importantPeople3id: null,\n            aboutMeObject: {},\n            firstName: \"\",\n            lastName: \"\",\n            peopleNamesArray: {},\n            importantPoeplArrayLength: \"0\",\n            importantPeople1: {have_pic: false, important:false, name: \"\", phone_number:\"\",pic:\"\",relationship:\"\", unique_id:\"\"},\n            importantPeople2: {have_pic: false, important:false, name: \"\", phone_number:\"\",pic:\"\",relationship:\"\", unique_id:\"\"},\n            importantPeople3: {have_pic: false, important:false, name: \"\", phone_number:\"\",pic:\"\",relationship:\"\", unique_id:\"\"},\n            ImporPersonOneChange: false,\n            ImporPersonTwoChange: false,\n            ImporPersonThreeChange: false,\n            importantPeople1Previous: {},\n            importantPeople2Previous: {},\n            importantPeople3Previous: {},\n            importantPeople1DocRefChanged: null,\n            importantPeople2DocRefChanged: null,\n            importantPeople3DocRefChanged: null,\n            showAddNewPeopleModal: false,\n            saveButtonEnabled: true,\n            enableDropDown: false\n            \n        }\n    }\n\n    componentDidMount() {\n        this.grabFireBaseAboutMeData();\n        this.grabFireBaseAllPeopleNames();  \n    }\n\n    hideAboutForm = e => {\n        this.props.CameBackFalse();   \n    };\n\n    handleFileSelected = event => {\n        event.preventDefault(); \n        event.stopPropagation();                \n        const file = event.target.files[0];\n        this.setState({\n            saveButtonEnabled: false\n        }, ()=>{\n            let targetFile = file\n            if(targetFile != null && Object.keys(this.state.aboutMeObject).length != 0 ){\n                let temp = this.state.aboutMeObject;\n    \n                // Create a reference to the firebase storage. \n                var storageRef = storage.ref('Profile_Pics/' + targetFile.name);\n                //upload file to firebase storage\n                var task = storageRef.put(targetFile);\n                //check on the the upload progress\n                task.on('state_changed',\n                    function progress(snapshot){\n                        //get percentage uplaoded \n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\n                        console.log(percentage);\n    \n                    },\n                    function error(err){\n                        console.log(err);\n                    },\n                    (snapshot) =>{\n                        temp.have_pic = true;\n                        console.log(\"completed\");\n                        storage.ref('Profile_Pics').child(targetFile.name).getDownloadURL().then(url => {\n                            temp.pic = url;\n                            this.setState({\n                                aboutMeObject: temp,\n                                saveButtonEnabled: true\n                            }); \n                        });\n                    }\n                );     \n            }}); \n    };\n\n  \n\n    handleImpPeople1 = (event) =>{\n        event.preventDefault(); \n        event.stopPropagation();                \n        const file2 = event.target.files[0];\n        this.setState({\n            saveButtonEnabled: false\n        }, ()=>{\n            let targetFile = file2\n            if(targetFile != null && Object.keys(this.state.importantPeople1).length != 0 ){\n                let temp = this.state.importantPeople1;\n    \n                // Create a reference to the firebase storage. \n                var storageRef = storage.ref('Important_People/' + targetFile.name);\n                //upload file to firebase storage\n                var task = storageRef.put(targetFile);\n                //check on the the upload progress\n                task.on('state_changed',\n                    function progress(snapshot){\n                        //get percentage uplaoded \n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\n                        console.log(percentage);\n    \n                    },\n                    function error(err){\n                        console.log(err);\n                    },\n                    (snapshot) =>{\n                        temp.have_pic = true;\n                        console.log(\"completed\");\n                        storage.ref('Important_People').child(targetFile.name).getDownloadURL().then(url => {\n                            // console.log(url);\n                            temp.pic = url;\n                            this.setState({\n                                importantPeople1: temp,\n                                saveButtonEnabled: true\n                            }); \n                        });\n                    }\n                );     \n            }}); \n    }\n\n    handleImpPeople2 = (event) =>{\n        event.preventDefault(); \n        event.stopPropagation();                \n        const file3 = event.target.files[0];\n        this.setState({\n            saveButtonEnabled: false\n        }, ()=>{\n            let targetFile = file3\n            if(targetFile != null && Object.keys(this.state.importantPeople2).length != 0 ){\n                let temp = this.state.importantPeople2;\n    \n                // Create a reference to the firebase storage. \n                var storageRef = storage.ref('Important_People/' + targetFile.name);\n                //upload file to firebase storage\n                var task = storageRef.put(targetFile);\n                //check on the the upload progress\n                task.on('state_changed',\n                    function progress(snapshot){\n                        //get percentage uplaoded \n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\n                        console.log(percentage);\n    \n                    },\n                    function error(err){\n                        console.log(err);\n                    },\n                    (snapshot) =>{\n                        temp.have_pic = true;\n                        console.log(\"completed\");\n                        storage.ref('Important_People').child(targetFile.name).getDownloadURL().then(url => {\n                            // console.log(url);\n                            temp.pic = url;\n                            this.setState({\n                                importantPeople2: temp,\n                                saveButtonEnabled: true\n                            }); \n                        });\n                    }\n                );     \n            }});\n    }\n\n    handleImpPeople3 = (event) =>{\n        event.preventDefault(); \n        event.stopPropagation();                \n        const file4 = event.target.files[0];\n        this.setState({\n            saveButtonEnabled: false\n        }, ()=>{\n            let targetFile = file4\n            if(targetFile != null && Object.keys(this.state.importantPeople3).length != 0 ){\n                let temp = this.state.importantPeople3;\n    \n                // Create a reference to the firebase storage. \n                var storageRef = storage.ref('Important_People/' + targetFile.name);\n                //upload file to firebase storage\n                var task = storageRef.put(targetFile);\n                //check on the the upload progress\n                task.on('state_changed',\n                    function progress(snapshot){\n                        //get percentage uplaoded \n                        var percentage = (snapshot.bytesTransfered/ snapshot.totalBytes) * 100;\n                        console.log(percentage);\n    \n                    },\n                    function error(err){\n                        console.log(err);\n                    },\n                    (snapshot) =>{\n                        temp.have_pic = true;\n                        console.log(\"completed\");\n                        storage.ref('Important_People').child(targetFile.name).getDownloadURL().then(url => {\n                            // console.log(url);\n                            temp.pic = url;\n                            this.setState({\n                                importantPeople3: temp,\n                                saveButtonEnabled: true\n                            }); \n                        });\n                    }\n                );     \n            }});\n    }\n\n    grabFireBaseAllPeopleNames = () => {\n        const db = firebase.firestore();\n        db.collection('users').doc(\"7R6hAVmDrNutRkG3sVRy\").collection('people').get()\n        .then((peoplesArray) => {\n            let importantPeopleArray = [];\n            let importantPeopleReferencid = [];\n            let test = {};\n            let j = 0;\n           console.log(\"this is the peoples array\", peoplesArray);\n            // grab the ID of all of the people in the firebase.\n            for(let i = 0; i<peoplesArray.docs.length; i++){\n                db.collection('users').doc(\"7R6hAVmDrNutRkG3sVRy\").collection('people').doc(peoplesArray.docs[i].id).get()\n                .then( (doc) => {\n                    j++;\n                    if(doc.data().important === true){\n                        importantPeopleReferencid.push(peoplesArray.docs[i].id);\n                        importantPeopleArray.push(doc.data());\n                    }\n                    test[doc.data().unique_id] = doc.data().name;\n                    if(j === peoplesArray.docs.length){\n                        if(importantPeopleArray.length >= 3){\n                            this.setState({\n                                peopleNamesArray:test,\n                                enableDropDown: true, \n                                importantPoeplArrayLength: importantPeopleArray.length,\n                                importantPeople1: importantPeopleArray[0],\n                                importantPeople2: importantPeopleArray[1],\n                                importantPeople3: importantPeopleArray[2],\n                                importantPeople1id: importantPeopleReferencid[0],\n                                importantPeople2id: importantPeopleReferencid[1],\n                                importantPeople3id: importantPeopleReferencid[2],\n                            });\n                        }\n                        else if(importantPeopleArray.length === 2){\n                            this.setState({\n                                peopleNamesArray:test,\n                                enableDropDown: true,\n                                importantPoeplArrayLength: importantPeopleArray.length, \n                                importantPeople1: importantPeopleArray[0],\n                                importantPeople2: importantPeopleArray[1],\n                                importantPeople1id: importantPeopleReferencid[0],\n                                importantPeople2id: importantPeopleReferencid[1],\n                            });\n                        }\n                        else if(importantPeopleArray.length === 1){\n                            this.setState({\n                                peopleNamesArray:test,\n                                enableDropDown: true,\n                                importantPoeplArrayLength: importantPeopleArray.length, \n                                importantPeople1: importantPeopleArray[0],\n                                importantPeople1id: importantPeopleReferencid[0],\n                            });\n                        }\n                        else if(importantPeopleArray.length === 0){\n                            this.setState({\n                                peopleNamesArray:test,\n                                enableDropDown: true,\n                                importantPoeplArrayLength: importantPeopleArray.length\n                            });\n                        }\n                    }\n                })\n                .catch((err) => {\n                    console.log('Error getting documents', err);\n                })\n            }         \n        })\n        .catch((err) => {\n            console.log('Error getting documents', err);\n        });\n    }\n\n    grabFireBaseAboutMeData = () => {\n        const db = firebase.firestore();\n        const docRef = db.collection(\"users\").doc(\"7R6hAVmDrNutRkG3sVRy\");\n        docRef\n          .get()\n          .then(doc => {\n            if (doc.exists) {\n              var x = doc.data();\n            //   console.log(\"this is x in the about modal\", x);\n              var firstName = x.first_name;\n              var lastName = x.last_name;\n              x = x[\"about_me\"];\n            //   console.log(\"this is the about modal\", x);\n              this.setState({\n                aboutMeObject: x, firstName:firstName, lastName:lastName\n              });\n              \n            } else {\n              console.log(\"No such document!\");\n            }\n          })\n          .catch(function(error) {\n            console.log(\"Error getting document:\", error);\n          });\n    };\n\n    hidePeopleModal = () => {\n        this.setState({showAddNewPeopleModal: false});\n    }\n\n    updatePeopleArray = () => {\n        this.grabFireBaseAllPeopleNames();\n    }\n\n    changeImpPersonOne = (Reference) => {\n        //Set the new person as an important person.\n        this.state.firebaseRootPath.collection('people').doc(Reference).get()\n        .then((doc) => {\n           let temp  = {};\n           let temp2 = {};    \n           temp = doc.data();\n           temp.important = true;\n           if(this.state.ImporPersonOneChange === false ){\n                temp2 = this.state.importantPeople1;\n                temp2.important = false;\n           }\n           else{\n               temp2 = this.state.importantPeople1Previous;\n           }\n           this.setState({ImporPersonOneChange: true,importantPeople1Previous: temp2 , importantPeople1DocRefChanged: doc.ref.id, importantPeople1: temp});\n        })\n        .catch((err) => {\n            console.log('Error getting documents', err);\n        });\n    }\n\n    changeImpPersonTwo = (Reference) => {\n        //Set the new person as an important person.\n        this.state.firebaseRootPath.collection('people').doc(Reference).get()\n        .then((doc) => {\n           let temp  = {};\n           let temp2 = {};      \n           temp = doc.data();\n           temp.important = true;\n           if(this.state.ImporPersonTwoChange === false ){\n                temp2 = this.state.importantPeople2;\n                temp2.important = false;\n           }\n           else{\n               temp2 = this.state.importantPeople2Previous;\n           }\n           this.setState({ImporPersonTwoChange: true,importantPeople2Previous: temp2 , importantPeople2DocRefChanged: doc.ref.id, importantPeople2: temp});\n        })\n        .catch((err) => {\n            console.log('Error getting documents', err);\n        });\n    }\n    changeImpPersonThree = (Reference) => {\n        //Set the new person as an important person.\n        this.state.firebaseRootPath.collection('people').doc(Reference).get()\n        .then((doc) => {\n           let temp  = {};\n           let temp2 = {};      \n           temp = doc.data();\n           temp.important = true;\n           if(this.state.ImporPersonThreeChange === false ){\n                temp2 = this.state.importantPeople3;\n                temp2.important = false;\n           }\n           else{\n               temp2 = this.state.importantPeople3Previous;\n           }\n           this.setState({ImporPersonThreeChange: true,importantPeople3Previous: temp2 , importantPeople3DocRefChanged: doc.ref.id, importantPeople3: temp});\n        })\n        .catch((err) => {\n            console.log('Error getting documents', err);\n        });\n    }\n\n    newInputSubmit = () => {\n        if(this.state.importantPeople1.important === true){\n            if(this.state.ImporPersonOneChange === true){\n                if(this.state.importantPeople1id != null){\n                    this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople1id).update(this.state.importantPeople1Previous);\n                }\n                if(this.state.importantPeople1DocRefChanged != null){\n                    this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople1DocRefChanged).update(this.state.importantPeople1);\n                }\n            }\n            else{\n                this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople1id).update(this.state.importantPeople1);\n            }        \n        }\n        if(this.state.importantPeople2.important === true){\n            if(this.state.ImporPersonTwoChange === true){\n                if(this.state.importantPeople2id != null){\n                    this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople2id).update(this.state.importantPeople2Previous);\n                }\n                if(this.state.importantPeople2DocRefChanged != null){\n                    this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople2DocRefChanged).update(this.state.importantPeople2);\n                }\n            }\n            else{\n                this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople2id).update(this.state.importantPeople2);\n            }  \n        }\n        if(this.state.importantPeople3.important === true){\n            if(this.state.ImporPersonThreeChange === true){\n                if(this.state.importantPeople3id != null){\n                    this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople3id).update(this.state.importantPeople3Previous);\n                }\n                if(this.state.importantPeople3DocRefChanged != null){\n                    this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople3DocRefChanged).update(this.state.importantPeople3);\n                }\n            }\n            else{\n                this.state.firebaseRootPath.collection('people').doc(this.state.importantPeople3id).update(this.state.importantPeople3);\n            } \n        } \n        this.state.firebaseRootPath.update({'first_name': this.state.firstName});\n        this.state.firebaseRootPath.update({'last_name': this.state.lastName});\n        let newArr = this.state.aboutMeObject;\n        let name = this.state.firstName + \" \" + this.state.lastName;\n        this.state.firebaseRootPath.update({ 'about_me': newArr }).then(\n           (doc) => {\n               this.props.updateProfilePic(this.state.aboutMeObject.pic, name);\n               this.hideAboutForm();   \n           }\n       )\n   }\n\n\n    render(){\n        return (\n            <div>\n                <Modal.Dialog\n                    style={{\n                    borderRadius: \"15px\",\n                    boxShadow:\n                        \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n                    marginLeft: \"35px\",\n                    width: \"350px\",\n                    marginTop: \"0\"\n                    }}\n                >\n                <Modal.Header\n                closeButton\n                onHide={() => {\n                    this.hideAboutForm();\n                }}\n                >\n                    <Modal.Title>\n                        <h5 className=\"normalfancytext\">About Me</h5>{\" \"}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group>\n                        <Form.Label>Name:</Form.Label>\n                        <Row>\n                            <Col style = {{paddingRight:\"0px\"}}>\n                                <label style = {{marginTop:\"10px\", marginLeft:\"10px\"}}>First:</label>\n                            </Col>\n                            <Col xs= {9} style = {{paddingLeft:\"0px\"}}>\n                                <Form.Control\n                                type=\"text\"\n                                placeholder=\"First Last\"\n                                value={this.state.firstName || ''}\n                                onChange={\n                                    (e) => { e.stopPropagation(); this.setState({ firstName: e.target.value }) }\n                                }\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col style = {{paddingRight:\"0px\"}}>\n                                <label style = {{marginTop:\"10px\", marginLeft:\"10px\"}}>Last:</label>\n                            </Col>\n                            <Col xs= {9} style = {{paddingLeft:\"0px\"}}>\n                                <Form.Control\n                                type=\"text\"\n                                placeholder=\"First Last\"\n                                value={this.state.lastName || ''}\n                                onChange={\n                                    (e) => { e.stopPropagation();this.setState({ lastName: e.target.value }) }\n                                }\n                                />\n                            </Col>\n                        </Row>\n                        \n                    </Form.Group>\n                    <Row>\n                        <Col>  \n                            {(this.state.aboutMeObject.have_pic === false  ? \n                            <FontAwesomeIcon icon={faImage} size=\"6x\"/> : \n                            <img style = \n                                {{display: \"block\",\n                                marginLeft: \"auto\",\n                                marginRight:\"auto\" ,\n                                width: \"100%\",\n                                height:\"70px\",\n                                }}\n                                src={this.state.aboutMeObject.pic}\n                                alt=\"Profile\"\n                            /> )\n                            }\n                        </Col>\n                        <Col xs={8}>\n                        <label >Upload A New Image</label>\n                        <input\n                            style = {{color: \"transparent\"}} \n                            accept=\"image/*\"\n                            type=\"file\"\n                            onChange={this.handleFileSelected}\n                            id=\"ProfileImage\"\n                        />\n                        </Col>\n                    </Row>\n                    \n                    <Form.Group controlId=\"AboutMessage\" style={{ marginTop: \"10px\" }}>\n                        <Form.Label>Message (My Day):</Form.Label>\n                        <Form.Control\n                        as=\"textarea\"\n                        rows=\"4\"\n                        type=\"text\"\n                        placeholder=\"You are a strong ...\"\n                        value={this.state.aboutMeObject.message_day || ''}\n                        onChange={\n                             (e) => { e.stopPropagation(); let temp = this.state.aboutMeObject; temp.message_day = e.target.value; this.setState({ aboutMeObject: temp }) }\n                        }\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"AboutMessageCard\">\n                        <Form.Label>Message (My Card):</Form.Label>\n                        <Form.Control\n                        as=\"textarea\"\n                        rows=\"4\"\n                        type=\"text\"\n                        placeholder=\"You are a safe ...\"\n                        value={this.state.aboutMeObject.message_card || ''}\n                        onChange={\n                            (e) => { e.stopPropagation(); let temp = this.state.aboutMeObject; temp.message_card = e.target.value; this.setState({ aboutMeObject: temp }) }\n                       }\n                        />\n                    </Form.Group>\n                    \n                    <Form.Group >\n                        <Form.Label>Important People</Form.Label>\n                        {this.state.showAddNewPeopleModal && <AddNewPeople closeModal= {this.hidePeopleModal} newPersonAdded = {this.updatePeopleArray}/>}\n                        <Row>\n                            <Col>\n                                {(this.state.importantPeople1.have_pic === false ? \n                                <div >\n                                    <FontAwesomeIcon icon={faImage} size=\"6x\" style = {{marginLeft:\"5px\"}} /> \n                                    {(this.state.importantPeople1.important === false ?\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        disabled/>:\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        onChange={this.handleImpPeople1}\n                                    />\n                                    )}\n                                </div>: \n                                <div>\n                                    <img style = \n                                        {{display: \"block\",\n                                         width: \"80%\",\n                                         height:\"70px\",\n                                         marginTop:\"10px\",\n                                         marginLeft:\"5px\"\n                                        }}\n                                        src={this.state.importantPeople1.pic } \n                                        alt=\"Important Person 1\"\n                                    /> \n                                     <input \n                                      style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                      // style = {{color: \"transparent\", marginTop:\"10px\"}}\n                                      type= \"file\" accept=\"image/*\" \n                                      onChange={this.handleImpPeople1}\n                                    />\n                                </div>)} \n                            </Col>\n                            <Col xs={7} style = {{paddingLeft:\"0px\", marginTop:\"10px\"}}>\n                                <div className=\"d-flex flex-row\">\n                                    {(this.state.importantPeople1.important === false?\n                                        <Form.Control\n                                            style = {{width:\"150px\", display:\"inline-block\"}}\n                                            type=\"text\"\n                                            placeholder=\"Name ...\"\n                                            value = \"\"\n                                            disabled\n                                        />:\n                                        <Form.Control\n                                            style = {{width:\"150px\", display:\"inline-block\"}}\n                                            type=\"text\"\n                                            placeholder=\"Name ...\"\n                                            value = {this.state.importantPeople1.name || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople1; temp.name = e.target.value; this.setState({ importantPeople1: temp }) }\n                                            }\n                                        />\n                                    )}\n                                    {this.state.enableDropDown === false? \n                                    <DropdownButton\n                                        style={{ display:\"inline-block\" }}\n                                        title=\"\"\n                                        disabled>       \n                                    </DropdownButton>:\n                                        <DropdownButton\n                                        title=\"\"\n                                        >\n                                            {\n                                                Object.keys(this.state.peopleNamesArray).map((keyName, keyIndex) => (\n                                                    // use keyName to get current key's name\n                                                    // and a[keyName] to get its value\n                                                    <Dropdown.Item  key = {keyName} onClick= {e => {this.changeImpPersonOne(keyName)}}>\n                                                        {this.state.peopleNamesArray[keyName]}\n                                                    </Dropdown.Item>\n                                                ))\n                                            }\n                                        </DropdownButton>\n                                    }\n                                </div>\n                                {this.state.importantPeople1.important === false?\n                                    <div>\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Relationship\"\n                                            value = \"\"\n                                            disabled\n                                        />\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Phone Number\"\n                                            value = \"\"\n                                            disabled\n                                        />\n                                    </div>:\n                                    <div>\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Relationship\"\n                                            value = {this.state.importantPeople1.relationship || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople1; temp.relationship = e.target.value; this.setState({ importantPeople1: temp }) }\n                                            } \n                                        />\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Phone Number\"\n                                            value = {this.state.importantPeople1.phone_number || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople1; temp.phone_number = e.target.value; this.setState({ importantPeople1: temp }) }\n                                            } \n                                        />\n                                    </div>\n                                } \n                            </Col>\n                            {this.state.importantPeople1.important === false && <p style = {{fontSize:\"0.9em\", marginLeft:\"20px\"}}> Choose a person or add a new one</p>}\n                        </Row>\n                        <Row style={{ marginTop: \"20px\" }}>\n                            <Col>\n                                {(this.state.importantPeople2.have_pic === false ? \n                                <div>\n                                    <FontAwesomeIcon icon={faImage} size=\"6x\" style = {{marginLeft:\"5px\"}} /> \n                                    {(this.state.importantPeople2.important === false ?\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        disabled/>:\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        onChange={this.handleImpPeople2}\n                                    />\n                                    )} \n                                </div>: \n                                <div>\n                                    <img style = \n                                        {{display: \"block\",\n                                        width: \"80%\",\n                                        height:\"70px\",\n                                        marginTop:\"10px\",\n                                        marginLeft:\"5px\"\n                                       }}\n                                        src={this.state.importantPeople2.pic } \n                                        alt=\"Important People 2\"\n                                    />\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\"\n                                        onChange={this.handleImpPeople2}\n                                    /> \n                                </div>)}\n                                \n                            </Col>\n                            <Col xs={7} style = {{paddingLeft:\"0px\", marginTop:\"10px\"}}>\n                                <div className=\"d-flex flex-row\">\n                                    {(this.state.importantPeople2.important === false?\n                                        <Form.Control\n                                            style = {{width:\"150px\", display:\"inline-block\"}}\n                                            type=\"text\"\n                                            placeholder=\"Name ...\"\n                                            value = \"\"\n                                            disabled\n                                        />:\n                                        <Form.Control\n                                            style = {{width:\"150px\", display:\"inline-block\"}}\n                                            type=\"text\"\n                                            placeholder=\"Name ...\"\n                                            value = {this.state.importantPeople2.name || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople2; temp.name = e.target.value; this.setState({ importantPeople2: temp }) }\n                                            }\n                                        />\n                                    )}\n                                   \n                                    {this.state.enableDropDown === false? \n                                    <DropdownButton\n                                        style={{ display:\"inline-block\" }}\n                                        title=\"\"\n                                        disabled>       \n                                    </DropdownButton>:\n                                        <DropdownButton\n                                        title=\"\"\n                                        >\n                                            {\n                                                Object.keys(this.state.peopleNamesArray).map((keyName, keyIndex) => (\n                                                    // use keyName to get current key's name\n                                                    // and a[keyName] to get its value\n                                                    <Dropdown.Item  key ={keyName} onClick= {e => {this.changeImpPersonTwo(keyName)}}>\n                                                        {this.state.peopleNamesArray[keyName]}\n                                                    </Dropdown.Item>\n                                                ))\n                                            }\n                                        </DropdownButton>\n                                    }\n                                </div>\n                                {(this.state.importantPeople2.important === false?\n                                    <div>\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Relationship\"\n                                            value = \"\"\n                                            disabled\n                                        />\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Phone Number\" \n                                            value = \"\"\n                                            disabled\n                                        />\n                                    </div>:\n                                    <div>\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Relationship\"\n                                            value = {this.state.importantPeople2.relationship || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople2; temp.relationship = e.target.value; this.setState({ importantPeople2: temp }) }\n                                            }\n                                        />\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Phone Number\" \n                                            value = {this.state.importantPeople2.phone_number || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople2; temp.phone_number = e.target.value; this.setState({ importantPeople2: temp }) }\n                                            }\n                                        />\n                                    </div>\n                                )}   \n                            </Col>\n                            {this.state.importantPeople2.important === false && <p style = {{fontSize:\"0.9em\", marginLeft:\"20px\"}}> Choose a person or add a new one</p>}\n                        </Row>\n                        <Row style={{ marginTop: \"20px\" }}>\n                            <Col>\n                                {(this.state.importantPeople3.have_pic === false ? \n                                <div>\n                                    <FontAwesomeIcon icon={faImage} size=\"6x\" style = {{marginLeft:\"5px\"}} /> \n                                    {(this.state.importantPeople3.important === false ?\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        disabled/>:\n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        onChange={this.handleImpPeople3}\n                                    />\n                                    )}     \n                                </div>: \n                                <div>\n                                    <img style = \n                                        {{display: \"block\",\n                                        width: \"80%\",\n                                        height:\"70px\",\n                                        marginTop:\"10px\",\n                                        marginLeft:\"5px\"\n                                       }}\n                                        src={this.state.importantPeople3.pic } \n                                        alt=\"Important People 3\"\n                                    /> \n                                    <input \n                                        style = {{color: \"transparent\", marginTop:\"15px\", width:\"100px\", overflow:\"hidden\"}}\n                                        type= \"file\" \n                                        accept=\"image/*\" \n                                        onChange={this.handleImpPeople3}\n                                    />  \n                                </div>)} \n                            </Col>\n                            <Col xs={7} style = {{paddingLeft:\"0px\", marginTop:\"10px\"}}>\n                                <div className=\"d-flex flex-row\">\n                                    {(this.state.importantPeople3.important === false?\n                                      <Form.Control\n                                        style = {{width:\"150px\", display:\"inline-block\"}}\n                                        type=\"text\"\n                                        placeholder=\"Name ...\"\n                                        value = \"\"\n                                        disabled\n                                     />:\n                                    <Form.Control\n                                        style = {{width:\"150px\", display:\"inline-block\"}}\n                                        type=\"text\"\n                                        placeholder=\"Name ...\"\n                                        value = {this.state.importantPeople3.name || ''}\n                                        onChange={\n                                            (e) => { e.stopPropagation(); let temp = this.state.importantPeople3; temp.name = e.target.value; this.setState({ importantPeople3: temp }) }\n                                        }\n                                    /> \n                                    )}\n                                    \n                                    {this.state.enableDropDown === false? \n                                    <DropdownButton\n                                        style={{ display:\"inline-block\" }}\n                                        title=\"\"\n                                        disabled>       \n                                    </DropdownButton>:\n                                        <DropdownButton\n                                            title=\"\"\n                                        >\n                                            {\n                                                Object.keys(this.state.peopleNamesArray).map((keyName, keyIndex) => (\n                                                    // use keyName to get current key's name\n                                                    // and a[keyName] to get its value\n                                                    <Dropdown.Item key ={keyName} onClick= {e => {this.changeImpPersonThree(keyName)}}>\n                                                        {this.state.peopleNamesArray[keyName]}\n                                                    </Dropdown.Item>\n                                                ))\n                                            }\n                                        </DropdownButton>\n                                    }\n                                </div>\n                                {(this.state.importantPeople3.important === false?\n                                    <div>\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Relationship\" \n                                            value = \"\"\n                                            disabled\n                                        />\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Phone Number\" \n                                            value = \"\"\n                                            disabled\n                                        />\n                                    </div>:\n                                    <div>\n                                        <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Relationship\" \n                                        value = {this.state.importantPeople3.relationship || ''}\n                                        onChange={\n                                            (e) => { e.stopPropagation(); let temp = this.state.importantPeople3; temp.relationship = e.target.value; this.setState({ importantPeople3: temp }) }\n                                        }\n                                        />\n                                        <Form.Control \n                                            type=\"text\" \n                                            placeholder=\"Phone Number\" \n                                            value = {this.state.importantPeople3.phone_number || ''}\n                                            onChange={\n                                                (e) => { e.stopPropagation(); let temp = this.state.importantPeople3; temp.phone_number = e.target.value; this.setState({ importantPeople3: temp }) }\n                                            }\n                                        />\n                                    </div>\n                                )}  \n                            </Col>\n                            {this.state.importantPeople3.important === false && <p style = {{fontSize:\"0.9em\", marginLeft:\"20px\"}}> Choose a person or add a new one</p>}\n                        </Row>     \n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Container fluid>\n                        <Row>\n                            <Col xs={3}>\n                            {((this.state.saveButtonEnabled === false || this.state.showAddNewPeopleModal === true)  ? \n                            <Button variant=\"info\" type=\"submit\" disabled>\n                            Save\n                            </Button>: \n                            <Button variant=\"info\" type=\"submit\" onClick={(e) => {e.stopPropagation(); this.newInputSubmit()}}>\n                            Save\n                            </Button>)}\n                            </Col>\n                            <Col xs={4}>\n                                <Button variant=\"secondary\" onClick={this.hideAboutForm}>\n                                Cancel\n                                </Button>\n                            </Col>\n                            <Col xs={4}>\n                                <Button variant=\"primary\" onClick = {(e) => {e.stopPropagation(); this.setState({showAddNewPeopleModal: true})}}>\n                                Add People\n                                </Button>\n                            </Col>\n                            \n                        </Row>\n                    </Container>\n                </Modal.Footer>\n            </Modal.Dialog>\n         </div>\n        );\n    }\n}\n\nexport default AboutModal;","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport { Button, Modal, Row, Col, DropdownButton} from \"react-bootstrap\";\n\n  export default class AddNewPeople extends Component {\n    constructor(props) {\n      super(props);\n    }\n    state = {\n\n\n    };\n  \n  \n    render() {\n      return (\n        <Modal.Dialog style={{marginLeft:\"10px\", width:\"600px\", paddingLeft:\"0px\"}}>\n          {/* <Modal.Header closeButton onHide={this.props.closeModal} >\n            <Modal.Title>\n              <h5 className=\"normalfancytext\">\n                Create Account \n              </h5>{\" \"}\n            </Modal.Title>\n          </Modal.Header> */}\n          <Modal.Body >\n            <Row>\n                \n                <Col xs={4}>\n\n              <label> Email</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  style={{ width: \"150px\" }}\n                  placeholder=\"Enter Email\"\n                  \n                />\n              </div>\n              </Col>\n              <Col xs={4} style ={{paddingLeft:\"5px\"}}>\n\n              <label> FIrst Name</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  style={{ width: \"150px\" }}\n                  placeholder=\"Enter Name\"\n                  \n                />\n              </div>\n              </Col>\n              <Col xs={4} style ={{paddingLeft:\"0px\"}}>\n              \n              <label>Last Name</label>\n              <div className=\"input-group mb-3\">\n                <input\n                  style={{ width: \"150px\" }}\n                  placeholder=\"Enter Name \"\n                  \n                />\n              </div> \n              \n              </Col>\n              </Row>\n              <Row>\n              <Col xs={5}>\n              <DropdownButton\n                    title= \"Copy Exisiting Client\"\n                    style = {{}}\n                >\n                    {/* {\n                        Object.keys(this.state.userNamesAndPics).map((keyName, keyIndex) => (\n                            // use keyName to get current key's name\n                            // and a[keyName] to get its value\n                            <Dropdown.Item key ={keyName} onClick= {e => {this.changeUser(keyName, this.state.userNamesAndPics[keyName])}}>\n                                        {this.state.userNamesAndPics[keyName] || ''}\n                            </Dropdown.Item>\n                        ))\n                    } */}\n            </DropdownButton>\n              </Col>\n              <Col xs={3}>\n              <Button style = {{marginLeft:\"30px\"}} variant=\"secondary\" onClick = {this.props.closeModal}>\n              Close\n             </Button>\n             </Col>\n             <Col xs={4}>\n             <Button variant=\"info\" style = {{marginRight:\"30px\"}} type=\"submit\" >\n                Save changes\n              </Button>\n              </Col>\n            </Row>\n          </Modal.Body>\n          {/* <Modal.Footer>\n            <Button style = {{marginLeft:\"10px\"}} variant=\"secondary\" onClick = {this.props.closeModal}>\n              Close\n            </Button>\n            <Button variant=\"info\" style = {{marginLeft:\"50px\", marginRight:\"30px\"}} type=\"submit\" >\n                Save changes\n              </Button>\n           \n          </Modal.Footer> */}\n        </Modal.Dialog>\n      );\n    }\n  }\n  ","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Modal,\n  Dropdown,\n  DropdownButton,\n} from \"react-bootstrap\";\nimport firebase from \"./firebase\";\nimport Firebasev2 from \"./Firebasev2.jsx\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport TylersCalendarv1 from \"./TCal.jsx\";\nimport DayRoutines from \"./DayRoutines.jsx\";\nimport DayGoals from \"./DayGoals.jsx\";\nimport DayEvents from \"./DayEvents.jsx\";\nimport WeekEvents from \"./WeekEvents.jsx\";\nimport WeekRoutines from \"./WeekRoutines.jsx\";\nimport WeekGoals from \"./WeekGoals.jsx\";\nimport AboutModal from \"./AboutModal.jsx\";\nimport CreateNewAccountModal from \"./CreateNewAccountModal.jsx\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faImage,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalEvents: [], //holds the google events data in it's original JSON form\n      dayEvents: [], //holds google events data for a single day\n      weekEvents: [], //holds google events data for a week\n      originalGoalsAndRoutineArr: [], //Hold goals and routines so day and week view can access it\n      goals: [],\n      routines: [],\n      showRoutineGoalModal: false,\n      showGoalModal: false,\n      showRoutineModal: false,\n      showAboutModal: false,\n      dayEventSelected: false, //use to show modal to create new event\n      // modelSelected: false, // use to display the routine/goals modal\n      newEventID: \"\", //save the event ID for possible future use\n      newEventRecurringID: \"\",\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventNotification: 30,\n      newEventDescription: \"\",\n      newEventStart0: new Date(), //start and end for a event... it's currently set to today\n      newEventEnd0: new Date(), //start and end for a event... it's currently set to today\n      isEvent: false, // use to check whether we clicked on a event and populate extra buttons in event form\n      //////////New additions for new calendar\n      dateContext: moment(), //Keep track of day and month\n      todayDateObject: moment(), //Remember today's date to create the circular effect over todays day\n      calendarView: \"Day\", // decides which type of calendar to display\n      showRepeatModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      repeatSummary: \"\",\n      recurrenceRule: \"\",\n      currentProfilePicUrl: \"\",\n      currentProfileName: \"\",\n      profileName: \"\",\n      userNamesAndPics: {},\n      enableNameDropDown: false,\n      showNewAccountmodal: false,\n      eventNotifications: {},\n      showDeleteRecurringModal: false,\n      deleteRecurringOption: \"This event\",\n      showEditRecurringModal: false,\n      editRecurringOption: \"\",\n    };\n  }\n\n  /**\n   * grabFireBaseRoutinesGoalsData:\n   * this function grabs the goals&routines array from the path located in this function\n   * which will then populate the goals, routines,originalGoalsAndRoutineArr array\n   * separately. The arrays will be used for display and data manipulation later.\n   *\n   */\n  grabFireBaseRoutinesGoalsData = () => {\n    const db = firebase.firestore();\n    // console.log(\"FirebaseV2 component did mount\");\n    const docRef = db.collection(\"users\").doc(\"7R6hAVmDrNutRkG3sVRy\");\n    docRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          // console.log(doc.data());\n          var x = doc.data();\n          // console.log(x[\"goals&routines\"]);\n          x = x[\"goals&routines\"];\n          let routine = [];\n          let goal = [];\n          for (let i = 0; i < x.length; ++i) {\n            if (x[i][\"is_persistent\"]) {\n              // console.log(\"routine \" + x[i][\"title\"]);\n              routine.push(x[i]);\n            } else if (!x[i][\"is_persistent\"]) {\n              // console.log(\"not routine \" + x[i][\"title\"]);\n              goal.push(x[i]);\n            }\n          }\n          this.setState({\n            originalGoalsAndRoutineArr: x,\n            goals: goal,\n            addNewGRModalShow: false,\n            routines: routine,\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      })\n      .catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n  };\n\n  handleRepeatDropDown = (eventKey, week_days) => {\n    if (eventKey === \"WEEK\") {\n      const newByDay = {\n        ...this.state.byDay_temp,\n        [this.state.newEventStart0.getDay()]: week_days[\n          this.state.newEventStart0.getDay()\n        ],\n      };\n      this.setState({\n        repeatDropDown_temp: eventKey,\n        byDay_temp: newByDay,\n      });\n    }\n    this.setState({\n      repeatDropDown_temp: eventKey,\n    });\n  };\n\n  handleRepeatMonthlyDropDown = (eventKey) => {\n    this.setState({\n      repeatMonthlyDropDown: eventKey,\n    });\n  };\n\n  handleRepeatEndDate = (date) => {\n    this.setState(\n      {\n        repeatEndDate_temp: date,\n      },\n      console.log(\"handleRepeatEndDate\", date, this.state.repeatEndDate)\n    );\n  };\n\n  handleRepeatInputValue = (eventKey) => {\n    this.setState({\n      repeatInputValue_temp: eventKey,\n    });\n  };\n\n  handleRepeatOccurrence = (eventKey) => {\n    this.setState({\n      repeatOccurrence_temp: eventKey,\n    });\n  };\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    this.updateEventsArray();\n    this.updateProfilePicFromFirebase();\n    // this.getEventNotifications();\n  }\n\n  /*This will obtain the notifications from the database\n   */\n\n  // getEventNotifications = () => {\n  //   const db = firebase.firestore();\n  //   const docRef = db\n  //     .collection(\"users\")\n  //     .doc(\"7R6hAVmDrNutRkG3sVRy\")\n  //     .collection(\"events\")\n  //     .doc(\"o0AHviYhmL7VJLXIREg2\");\n  //   docRef\n  //     .get()\n  //     .then((doc) => {\n  //       if (doc.exists) {\n  //         var x = doc.data();\n  //         console.log(\"this is the event notification from fb \", x);\n  //         this.setState({\n  //           eventNotifications: x,\n  //         });\n  //       } else {\n  //         console.log(\"No such document!\");\n  //       }\n  //     })\n  //     .catch(function (error) {\n  //       console.log(\"Error getting document:\", error);\n  //     });\n  // };\n  /*Grabs the URL the the profile pic from the about me modal to\n  display on the top left corner.\n  */\n  updateProfilePicFromFirebase = () => {\n    const db = firebase.firestore();\n    const docRef = db.collection(\"users\");\n    docRef\n      .get()\n      .then((usersArray)=> {\n        console.log(\"this is doc\", usersArray.docs);\n        let namePicObject = {};\n        for(let user of usersArray.docs){\n          \n          // console.log(user.id);\n          let x= user.data();\n          // console.log(user.data());\n          let firstName = x.first_name;\n          let lastName = x.last_name;\n          let name = firstName + \" \" + lastName;\n          let picURL = \"\";\n          //  console.log(x[\"about_me\"]);\n          if(x[\"about_me\"] != undefined){\n            picURL = x[\"about_me\"].pic;\n            console.log(\"we got in\");\n          }\n         \n         console.log(\"this is the picURL\", picURL);\n          namePicObject[picURL] = name;\n          // console.log(x[\"about_me\"]  );\n          // db.collection(\"users\").doc(user.id).get()\n          //   .then()\n\n        }\n        this.setState({\n          userNamesAndPics: namePicObject,\n          enableNameDropDown: true,\n          currentProfilePicUrl: Object.keys(namePicObject)[0],\n          currentProfileName: namePicObject[Object.keys(namePicObject)[0]]\n        });\n        console.log(namePicObject);\n        \n      })\n      .catch(function (error) {\n            console.log(\"Error getting document:\", error);\n            \n      });\n    // const db = firebase.firestore();\n    // const docRef = db.collection(\"users\").doc(\"7R6hAVmDrNutRkG3sVRy\");\n    // docRef\n    //   .get()\n    //   .then((doc) => {\n    //     if (doc.exists) {\n          \n    //       var x = doc.data();\n    //       var firstName = x.first_name;\n    //       var lastName = x.last_name;\n    //       // console.log(\"this is x.data\", x.last_name);\n    //       x = x[\"about_me\"];\n    //       this.setState({\n    //         profilePicUrl: x.pic,\n    //         profileName: firstName + \" \" + lastName,\n    //       });\n    //     } else {\n    //       console.log(\"No such document!\");\n    //     }\n    //   })\n    //   .catch(function (error) {\n    //     console.log(\"Error getting document:\", error);\n    //   });\n  };\n\n  /*\n  getThisMonthEvents:\n  By passing in a empty interval, this method will get a response from the server with\n  the current month's events\n  */\n  getThisMonthEvents = () => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {},\n      })\n      .then((response) => {\n        var events = response.data;\n        this.setState({ originalEvents: events }, () => {\n          console.log(\"New Events Arrived cdm\", events);\n        });\n      })\n      .catch((error) => {\n        //console.log('Error Occurred ' + error);\n      });\n  };\n\n  handleDayEventClick = (A) => {\n    var guestList = \"\";\n    console.log(A, \"handleDayEventClick\");\n    if (A.attendees) {\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\n        return guestList + \" \" + nextGuest.email;\n      }, \"\");\n      console.log(\"Guest List:\", A.attendees, guestList);\n    }\n    this.setState({\n      newEventID: A.id,\n      newEventStart0: A.start.dateTime\n        ? new Date(A.start.dateTime)\n        : new Date(A.start.date),\n      newEventEnd0: A.end.dateTime\n        ? new Date(A.end.dateTime)\n        : new Date(A.end.date),\n      newEventName: A.summary,\n      newEventGuests: guestList,\n      newEventLocation: A.location ? A.location : \"\",\n      newEventNotification: A.reminders.overrides\n        ? A.reminders.overrides[0].minutes\n        : \"\",\n      newEventDescription: A.description ? A.description : \"\",\n      dayEventSelected: true,\n      isEvent: true,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      repeatSummary: \"\",\n      recurrenceRule: \"\",\n      showDeleteRecurringModal: false,\n      deleteRecurringOption: \"This event\",\n      showEditRecurringModal: false,\n      editRecurringOption: \"\",\n    });\n  };\n\n  handleWeekEventClick = (A) => {\n    var guestList = \"\";\n    if (A.attendees) {\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\n        return guestList + \" \" + nextGuest.email;\n      }, \"\");\n      console.log(\"Guest List:\", A.attendees, guestList);\n    }\n    this.setState({\n      newEventID: A.id,\n      newEventStart0: A.start.dateTime\n        ? new Date(A.start.dateTime)\n        : new Date(A.start.date),\n      newEventEnd0: A.end.dateTime\n        ? new Date(A.end.dateTime)\n        : new Date(A.end.date),\n      newEventName: A.summary,\n      newEventGuests: guestList,\n      newEventLocation: A.location ? A.location : \"\",\n      newEventNotification: A.reminders.overrides\n        ? A.reminders.overrides[0].minutes\n        : \"\",\n      newEventDescription: A.description ? A.description : \"\",\n      dayEventSelected: true,\n      isEvent: true,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      repeatSummary: \"\",\n      recurrenceRule: \"\",\n      showDeleteRecurringModal: false,\n      deleteRecurringOption: \"This event\",\n      showEditRecurringModal: false,\n      editRecurringOption: \"\",\n    });\n  };\n  repeatSummaryCompute = () => {\n    const { recurrenceRule } = this.state;\n\n    let untilSubString = \"\";\n    let untilIndex = recurrenceRule.indexOf(\"UNTIL\");\n    if (untilIndex !== -1) {\n      untilSubString = recurrenceRule.substring(untilIndex);\n    }\n    console.log(untilSubString);\n\n    if (untilSubString.includes(\";\")) {\n      let endUntilIndex = untilSubString.indexOf(\";\");\n      untilSubString = moment(\n        untilSubString.substring(6, endUntilIndex)\n      ).format(\"LL\");\n    } else if (untilSubString) {\n      console.log(moment(\"20200406T065959Z\").format(\"LL\"));\n      untilSubString = moment(untilSubString.substring(6, 14)).format(\"LL\");\n    }\n    console.log(untilSubString);\n\n    let countSubString = \"\";\n    let countIndex = recurrenceRule.indexOf(\"COUNT\");\n    if (countIndex !== -1) {\n      countSubString = recurrenceRule.substring(countIndex);\n    }\n    if (countSubString.includes(\";\")) {\n      let endCountIndex = countSubString.indexOf(\";\");\n      countSubString = countSubString.substring(6, endCountIndex);\n    } else if (countSubString) {\n      countSubString = countSubString.substring(6);\n    }\n\n    console.log(countSubString, \"countSubString\");\n\n    let intervalSubString = \"\";\n    let intervalIndex = recurrenceRule.indexOf(\"INTERVAL\");\n    if (intervalIndex !== -1) {\n      intervalSubString = recurrenceRule.substring(intervalIndex);\n    }\n    if (intervalSubString.includes(\";\")) {\n      let endIntervalIndex = intervalSubString.indexOf(\";\");\n      intervalSubString = intervalSubString.substring(9, endIntervalIndex);\n    } else if (intervalSubString) {\n      intervalSubString = intervalSubString.substring(9);\n    }\n\n    let byDaySubString = \"\";\n    let byDayArray = [];\n    let byDayIndex = recurrenceRule.indexOf(\"BYDAY\");\n    if (byDayIndex !== -1) {\n      byDaySubString = recurrenceRule.substring(byDayIndex);\n    }\n    console.log(byDaySubString);\n\n    if (byDaySubString.includes(\";\")) {\n      let endByDayIndex = byDaySubString.indexOf(\";\");\n      byDaySubString = byDaySubString.substring(6, endByDayIndex);\n    } else if (byDaySubString) {\n      byDaySubString = byDaySubString.substring(6);\n    }\n\n    byDayArray = byDaySubString.split(\",\");\n    console.log(byDayArray);\n\n    // If freq is daily in rrule\n    if (recurrenceRule.includes(\"FREQ=DAILY\")) {\n      if (intervalSubString === \"1\" || !intervalSubString) {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: \"Daily\",\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Daily, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Daily, ${countSubString} times`,\n            });\n          }\n        }\n      } else {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} days`,\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} days, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} days, ${countSubString} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If freq is weekly in rrule\n    else if (recurrenceRule.includes(\"FREQ=WEEKLY\")) {\n      if (intervalSubString === \"1\" || !intervalSubString) {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          if (byDayArray.length === 7) {\n            this.setState({\n              repeatOptionDropDown: \"Weekly on all days\",\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${byDayArray.join(\", \")}`,\n            });\n          }\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          if (byDayArray.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Weekly on all days, until ${untilSubString}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${byDayArray.join(\n                \", \"\n              )}, until ${untilSubString}`,\n            });\n          }\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            if (byDayArray.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Weekly on all days, ${countSubString} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Weekly on ${byDayArray.join(\n                  \", \"\n                )}, ${countSubString} times`,\n              });\n            }\n          }\n        }\n      } else {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          if (byDayArray.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on all days`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on ${byDayArray.join(\n                \", \"\n              )}`,\n            });\n          }\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          if (byDayArray.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on all days, until ${untilSubString}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} weeks on ${byDayArray.join(\n                \", \"\n              )}, until ${untilSubString}`,\n            });\n          }\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: \"Once\",\n            });\n          } else {\n            if (byDayArray.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Every ${intervalSubString} weeks on all days, ${countSubString} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Every ${intervalSubString} weeks on ${byDayArray.join(\n                  \", \"\n                )}, ${countSubString} times`,\n              });\n            }\n          }\n        }\n      }\n    }\n\n    // If freq is monthly in rrule\n    else if (recurrenceRule.includes(\"FREQ=MONTHLY\")) {\n      if (intervalSubString === \"1\" || !intervalSubString) {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: \"Monthly\",\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Monthly, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Monthly, ${countSubString} times`,\n            });\n          }\n        }\n      } else {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} months`,\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} months, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} months, ${countSubString} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If freq is yearly in rrule\n    else if (recurrenceRule.includes(\"FREQ=YEARLY\")) {\n      if (intervalSubString === \"1\" || !intervalSubString) {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: \"Annually\",\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Annually, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Annually, ${countSubString} times`,\n            });\n          }\n        }\n      } else {\n        if (\n          !recurrenceRule.includes(\"COUNT\") &&\n          !recurrenceRule.includes(\"UNTIL\")\n        ) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} years`,\n          });\n        } else if (recurrenceRule.includes(\"UNTIL\")) {\n          this.setState({\n            repeatOptionDropDown: `Every ${intervalSubString} years, until ${untilSubString}`,\n          });\n        } else if (recurrenceRule.includes(\"COUNT\")) {\n          if (countSubString === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${intervalSubString} years, ${countSubString} times`,\n            });\n          }\n        }\n      }\n    }\n  };\n\n  /*\n  handleEventClick For Month View.\n  when a event on the calendar is clicked, the function below\n  will execute and save the clicked event varibles to this.state and\n  passed that into the form where the user can edit that data\n\n  TODO: set dateContext to the date clicked\n  */\n  handleEventClick = (i) => {\n    // bind with an arrow function\n    let A = this.state.originalEvents[i];\n    console.log(\"A\", A);\n    if (A.recurringEventId) {\n      axios\n        .get(\"/getRecurringRules\", {\n          params: {\n            recurringEventId: A.recurringEventId,\n          },\n        })\n        .then((res) => {\n          console.log(res.data, \"getRecurringRules\");\n          this.setState(\n            {\n              recurrenceRule: res.data[0],\n            },\n            () => {\n              this.repeatSummaryCompute();\n            }\n          );\n        });\n    }\n    //Guest list erroneously includes owner's email as well\n    var guestList = \"\";\n    if (A.attendees) {\n      guestList = A.attendees.reduce((guestList, nextGuest) => {\n        return guestList + \" \" + nextGuest.email;\n      }, \"\");\n      console.log(\"Guest List:\", A.attendees, guestList);\n    }\n    this.setState(\n      {\n        newEvent: A,\n        newEventID: A.id,\n        newEventRecurringID: A.recurringEventId,\n        newEventStart0: A.start.dateTime\n          ? new Date(A.start.dateTime)\n          : new Date(A.start.date),\n        newEventEnd0: A.end.dateTime\n          ? new Date(A.end.dateTime)\n          : new Date(A.end.date),\n        newEventName: A.summary,\n        newEventGuests: guestList,\n        newEventLocation: A.location ? A.location : \"\",\n        newEventNotification: A.reminders.overrides\n          ? A.reminders.overrides[0].minutes\n          : \"\",\n        newEventDescription: A.description ? A.description : \"\",\n        dayEventSelected: true,\n        isEvent: true,\n        showRepeatModal: false,\n        repeatOption: false,\n        repeatOptionDropDown: \"Does not repeat\",\n        repeatDropDown: \"DAY\",\n        repeatDropDown_temp: \"DAY\",\n        repeatMonthlyDropDown: \"Monthly on day 13\",\n        repeatInputValue: \"1\",\n        repeatInputValue_temp: \"1\",\n        repeatOccurrence: \"1\",\n        repeatOccurrence_temp: \"1\",\n        repeatRadio: \"Never\",\n        repeatRadio_temp: \"Never\",\n        repeatEndDate: \"\",\n        repeatEndDate_temp: \"\",\n        showNoTitleError: \"\",\n        showDateError: \"\",\n        showAboutModal: false,\n        byDay: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\",\n        },\n        byDay_temp: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\",\n        },\n        repeatSummary: \"\",\n        recurrenceRule: \"\",\n        showDeleteRecurringModal: false,\n        deleteRecurringOption: \"This event\",\n        showEditRecurringModal: false,\n        editRecurringOption: \"\",\n      },\n      () => {\n        console.log(\"callback from handEventClick\");\n      }\n    );\n  };\n\n  //Create event from clicking empty space from week view\n  //Note arg is moment object of the time pressed\n  handleDateClickOnWeekView = (arg) => {\n    let newStart = arg.toDate();\n    arg.add(1, \"hour\");\n    let newEnd = arg.toDate();\n    this.setState({\n      newEventID: \"\",\n      newEventStart0: newStart,\n      newEventEnd0: newEnd,\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventNotification: 30,\n      newEventDescription: \"\",\n      dayEventSelected: true,\n      isEvent: false,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n    });\n  };\n\n  handleDateClickOnDayView = (arg, i) => {\n    var newStart = new Date(arg);\n    newStart.setHours(i, 0, 0);\n    var newEnd = new Date(arg);\n    newEnd.setHours(i + 1, 0, 0);\n    this.setState({\n      newEventID: \"\",\n      newEventStart0: newStart,\n      newEventEnd0: newEnd,\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventNotification: 30,\n      newEventDescription: \"\",\n      dayEventSelected: true,\n      isEvent: false,\n      showNoTitleError: \"\",\n      showDateError: \"\",\n      showRepeatModal: false,\n      showAboutModal: false,\n      repeatOption: false,\n      repeatOptionDropDown: \"Does not repeat\",\n      repeatDropDown: \"DAY\",\n      repeatDropDown_temp: \"DAY\",\n      repeatMonthlyDropDown: \"Monthly on day 13\",\n      repeatInputValue: \"1\",\n      repeatInputValue_temp: \"1\",\n      repeatOccurrence: \"1\",\n      repeatOccurrence_temp: \"1\",\n      repeatRadio: \"Never\",\n      repeatRadio_temp: \"Never\",\n      repeatEndDate: \"\",\n      repeatEndDate_temp: \"\",\n      byDay: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      byDay_temp: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n        4: \"\",\n        5: \"\",\n        6: \"\",\n      },\n      repeatSummary: \"\",\n      recurrenceRule: \"\",\n      showDeleteRecurringModal: false,\n      deleteRecurringOption: \"This event\",\n      showEditRecurringModal: false,\n      editRecurringOption: \"\",\n    });\n  };\n\n  /*\n  handleDateClick on Month View.\n  This will trigger when a date is clicked, it will present\n  the user with a new form to create a event\n  */\n  //TODO: Initialize Date, set other properties to empty\n  handleDateClick = (arg) => {\n    var newStart = new Date(arg);\n    newStart.setHours(0, 0, 0, 0);\n    var newEnd = new Date(arg);\n    newEnd.setHours(23, 59, 59, 59);\n    this.setState(\n      {\n        newEventID: \"\",\n        newEventStart0: newStart,\n        newEventEnd0: newEnd,\n        newEventName: \"\",\n        newEventGuests: \"\",\n        newEventLocation: \"\",\n        newEventNotification: 30,\n        newEventDescription: \"\",\n        dayEventSelected: true,\n        isEvent: false,\n        repeatOption: false,\n        repeatOptionDropDown: \"Does not repeat\",\n        repeatDropDown: \"DAY\",\n        repeatDropDown_temp: \"DAY\",\n        repeatMonthlyDropDown: \"Monthly on day 13\",\n        repeatInputValue: \"1\",\n        repeatInputValue_temp: \"1\",\n        repeatOccurrence: \"1\",\n        repeatOccurrence_temp: \"1\",\n        repeatRadio: \"Never\",\n        repeatRadio_temp: \"Never\",\n        repeatEndDate: \"\",\n        repeatEndDate_temp: \"\",\n        showNoTitleError: \"\",\n        showDateError: \"\",\n        showAboutModal: false,\n        byDay: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\",\n        },\n        byDay_temp: {\n          0: \"\",\n          1: \"\",\n          2: \"\",\n          3: \"\",\n          4: \"\",\n          5: \"\",\n          6: \"\",\n        },\n        repeatSummary: \"\",\n        recurrenceRule: \"\",\n        showDeleteRecurringModal: false,\n        deleteRecurringOption: \"This event\",\n        showEditRecurringModal: false,\n        editRecurringOption: \"\",\n      },\n      console.log(\"handledateclick\")\n    );\n  };\n\n  validate = () => {\n    let titleError = \"\";\n    let dayError = \"\";\n    var startDay = new Date(this.state.newEventStart0).getDate();\n    var endDay = new Date(this.state.newEventEnd0).getDate();\n    var startMonth = new Date(this.state.newEventStart0).getUTCMonth();\n    var endMonth = new Date(this.state.newEventEnd0).getUTCMonth();\n    var startYear = new Date(this.state.newEventStart0).getFullYear();\n    var endYear = new Date(this.state.newEventEnd0).getFullYear();\n    var startHour = new Date(this.state.newEventStart0).getHours();\n    var endHour = new Date(this.state.newEventEnd0).getHours();\n    if (\n      (startDay > endDay && startMonth === endMonth) ||\n      (startMonth > endMonth && startYear === endYear) ||\n      startYear > endYear ||\n      (startHour > endHour && startDay === endDay)\n    ) {\n      dayError = \"Invalid: start date is before end date\";\n    }\n    if (this.state.newEventName === \"\") {\n      titleError = \"Invalid: No Title\";\n    }\n    //empty string evalutes to false.\n    if (titleError || dayError) {\n      this.setState({ showNoTitleError: titleError, showDateError: dayError });\n      return false;\n    }\n    return true;\n  };\n\n  // handleSubmit:\n\n  handleExpandClick = (arg) => {\n    let newDate = new Date(arg);\n    console.log(newDate);\n    this.setState(\n      {\n        dateContext: moment(newDate),\n        calendarView: \"Day\",\n      },\n      this.updateEventsArray\n    );\n  };\n\n  // handleSubmit:\n\n  // submits the data to be passed up to be integrated into google calendar\n\n  handleSubmit = (event) => {\n    if (this.state.start === \"\" || this.state.end === \"\") {\n      console.log(\"invalid params\");\n      return;\n    }\n    const isValid = this.validate();\n    if (isValid) {\n      event.preventDefault();\n      this.createEvent(this.state.newEventName);\n      this.setState({ showNoTitleError: \"\", showDateError: \"\" });\n    }\n  };\n\n  updateEventClick = (event) => {\n    event.preventDefault();\n    let eventList = this.state.originalEvents;\n    if (this.state.calendarView === \"Day\") {\n      eventList = this.state.dayEvents;\n    } else if (this.state.calendarView === \"Week\") {\n      eventList = this.state.weekEvents;\n    }\n    const isValid = this.validate();\n    if (isValid) {\n      if (this.state.newEventID === \"\") {\n        return;\n      } else {\n        for (let i = 0; i < eventList.length; i++) {\n          if (eventList[i].id === this.state.newEventID) {\n            this.updateRequest(eventList, i);\n          }\n        }\n      }\n    }\n  };\n\n  /*\n  updateRequest:\n  updates the google calendar based  on\n  */\n  updateRequest = async (eventList, index) => {\n    const guests = this.state.newEventGuests;\n    var formattedEmail = null;\n    const emailList = guests.match(\n      /[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*(\\.)?/g\n    );\n    if (emailList) {\n      formattedEmail = emailList.map((guests) => {\n        return {\n          email: guests,\n          responseStatus: \"needsAction\",\n        };\n      });\n    }\n\n    var minutesNotification = 30;\n    if (this.state.newEventNotification) {\n      minutesNotification = this.state.newEventNotification;\n    }\n\n    let updatedEvent = eventList[index];\n    updatedEvent.summary = this.state.newEventName;\n    updatedEvent.attendees = formattedEmail;\n    updatedEvent.location = this.state.newEventLocation;\n    updatedEvent.description = this.state.newEventDescription;\n    updatedEvent.start = {\n      dateTime: this.state.newEventStart0.toISOString(),\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    };\n    updatedEvent.end = {\n      dateTime: this.state.newEventEnd0.toISOString(),\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    };\n    updatedEvent.recurrence = this.state.repeatOption\n      ? this.defineRecurrence()\n      : [this.state.recurrenceRule];\n    updatedEvent.reminders = {\n      overrides: [\n        {\n          method: \"popup\",\n          minutes: minutesNotification,\n        },\n      ],\n      useDefault: false,\n      sequence: 0,\n    };\n\n    let event = {\n      summary: updatedEvent.summary,\n      attendees: updatedEvent.attendees,\n      location: updatedEvent.location,\n      description: updatedEvent.description,\n      start: updatedEvent.start,\n      end: updatedEvent.end,\n      recurrence: updatedEvent.recurrence ? updatedEvent.recurrence : false,\n      reminders: updatedEvent.reminders,\n    };\n\n    console.log(updatedEvent, \"updatedEvent\");\n\n    let ID = \"\";\n    if (this.state.editRecurringOption === \"All events\") {\n      ID = updatedEvent.recurringEventId;\n      console.log(\"All events\");\n\n      await axios\n        .get(\"/getRecurringEventInstances\", {\n          params: {\n            recurringEventId: updatedEvent.recurringEventId,\n          },\n        })\n        .then((res) => {\n          event.start = res.data[0].start;\n          event.end = res.data[0].end;\n        });\n    } else if (this.state.editRecurringOption === \"This event\") {\n      ID = this.state.newEventID;\n      event.recurrence = null;\n    } else if (this.state.editRecurringOption === \"This and following events\") {\n      ID = updatedEvent.recurringEventId;\n      let newEvent = {\n        reminders: this.state.newEvent.reminders,\n        creator: this.state.newEvent.creator,\n        created: this.state.newEvent.created,\n        organizer: this.state.newEvent.organizer,\n        sequence: this.state.newEvent.sequence,\n        status: this.state.newEvent.status,\n      };\n      let newRecurrenceRule = this.state.recurrenceRule;\n      let newUntilSubString = `${moment(this.state.newEventStart0).format(\n        \"YYYYMMDD\"\n      )}`;\n\n      let untilSubString = \"\";\n      let untilIndex = this.state.recurrenceRule.indexOf(\"UNTIL\");\n      if (untilIndex !== -1) {\n        untilSubString = this.state.recurrenceRule.substring(untilIndex);\n      }\n      if (untilSubString.includes(\";\")) {\n        let endUntilIndex = untilSubString.indexOf(\";\");\n        untilSubString = untilSubString.substring(6, endUntilIndex);\n      } else if (untilSubString) {\n        untilSubString = untilSubString = untilSubString.substring(6);\n      }\n\n      newRecurrenceRule = newRecurrenceRule.replace(\n        untilSubString,\n        newUntilSubString\n      );\n      console.log(newEvent.summary, this.state.newEvent.summary);\n      await axios\n        .get(\"/getRecurringEventInstances\", {\n          params: {\n            recurringEventId: updatedEvent.recurringEventId,\n          },\n        })\n        .then((res) => {\n          newEvent.start = res.data[0].start;\n          newEvent.end = res.data[0].end;\n          newEvent.recurrence = [newRecurrenceRule];\n          newEvent.summary = res.data[0].summary;\n          axios\n            .post(\"/createNewEvent\", {\n              newEvent: newEvent,\n            })\n            .then((res) => {\n              console.log(\"createnewevent\", res);\n              this.setState({\n                dayEventSelected: false,\n              });\n              this.updateEventsArray();\n            })\n            .catch(function (error) {\n              // console.log(error);\n            });\n        });\n    }\n\n    axios\n      .put(\"/updateEvent\", {\n        extra: event,\n        ID: updatedEvent.recurringEventId ? ID : this.state.newEventID,\n        // start: updatedEvent.start,\n        // end: updatedEvent.end,\n      })\n      .then((response) => {\n        this.setState({\n          dayEventSelected: false,\n          newEventName: \"\",\n          newEventStart0: new Date(),\n          newEventEnd0: new Date(),\n        });\n\n        this.updateEventsArray();\n      })\n\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  defineRecurrence = () => {\n    // frequency in RRULE\n    let frequency =\n      this.state.repeatDropDown === \"DAY\"\n        ? \"DAILY\"\n        : this.state.repeatDropDown.concat(\"LY\");\n\n    // recurrence string\n    let rrule = `RRULE:FREQ=${frequency};INTERVAL=${this.state.repeatInputValue}`;\n    let recurrence = [];\n    let exdate = \"\";\n\n    // If seleted WEEK, add BYDAY to recurrence string\n    if (this.state.repeatDropDown === \"WEEK\") {\n      let selectedDays = [];\n      for (let [key, value] of Object.entries(this.state.byDay)) {\n        // Excluding today if today is not selected\n        if (key === this.state.newEventStart0.getDay().toString()) {\n          if (value === \"\") {\n            exdate = `EXDATE;TZID=America/Los_Angeles:${moment(\n              this.state.newEventStart0\n            ).format(\"YYYYMMDD\")}T070000Z`;\n            recurrence.unshift(exdate);\n          }\n        }\n        value !== \"\" && selectedDays.push(value.substring(0, 2).toUpperCase());\n      }\n      rrule = rrule.concat(`;BYDAY=${selectedDays.toString()}`);\n    }\n\n    // If selected After, add COUNT to recurrence string\n    if (this.state.repeatRadio === \"After\")\n      rrule = rrule.concat(`;COUNT=${this.state.repeatOccurrence}`);\n\n    // If selected On, add UNTIL to recurrence string\n    if (this.state.repeatRadio === \"On\") {\n      let repeat_end_date = moment(this.state.repeatEndDate).add(1, \"days\");\n      rrule = rrule.concat(`;UNTIL=${repeat_end_date.format(\"YYYYMMDD\")}`);\n    }\n\n    recurrence.push(rrule);\n    console.log(\"recurrence\", recurrence);\n    return recurrence;\n  };\n\n  /*\n  calls the backend API to delete a item with a particular eventID\n  */\n\n  deleteSubmit = () => {\n    if (this.state.newEventID === \"\") {\n      return;\n    }\n    axios\n      .post(\"/deleteEvent\", {\n        ID: this.state.newEventID,\n      })\n      .then((response) => {\n        this.setState({\n          dayEventSelected: false,\n          showDeleteRecurringModal: false,\n        });\n        this.updateEventsArray();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  /*\n  createEvent:\n  Basically creates a new event based on details given\n  */\n  /*\n   * TODO: Replace formatting email with function\n   */\n  /*\n   * https://tools.ietf.org/html/rfc3696 for what is valid email addresses\n   *\n   * local-part@domain-part\n   * local-part: alphanumeric, symbols ! # $ % & ' * + - / = ?  ^ _ ` . { | } ~ with restriction no two . in a row\n   * localWord = [a-zA-Z!#$%&'*+\\-/=?^_`{|}~]+\n   * localPart = localWord (\\.localWord)*\n   * domain-part:\n   * domains: alphanumeric, symbol - with restriction - not at beginning or end\n   * dot separate domains, top level domain can have optional . at end\n   * domain = [a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?\n   * domainPart = domain(\\.domain)*\\.domain(\\.)?\n   * email: localPart@domainPart\n   */\n  //Note: This works, but does not email the guests that they are invited to the event\n  createEvent = (newTitle) => {\n    const guests = this.state.newEventGuests;\n    var formattedEmail = null;\n    const emailList = guests.match(\n      /[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*(\\.)?/g\n    );\n    if (emailList) {\n      formattedEmail = emailList.map((guests) => {\n        return {\n          email: guests,\n          responseStatus: \"needsAction\",\n        };\n      });\n    }\n\n    var minutesNotification = 30;\n    if (this.state.newEventNotification) {\n      minutesNotification = this.state.newEventNotification;\n    }\n\n    let event = {\n      summary: this.state.newEventName,\n      location: this.state.newEventLocation,\n      description: this.state.newEventDescription,\n      reminders: {\n        useDefault: false,\n        sequence: 0,\n        overrides: [\n          {\n            method: \"popup\",\n            minutes: minutesNotification,\n          },\n        ],\n      },\n      start: {\n        dateTime: this.state.newEventStart0.toISOString(),\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      },\n      end: {\n        dateTime: this.state.newEventEnd0.toISOString(),\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      },\n      recurrence: this.state.repeatOption && this.defineRecurrence(),\n      attendees: formattedEmail,\n    };\n    axios\n      .post(\"/createNewEvent\", {\n        newEvent: event,\n        reminderTime: minutesNotification,\n        title: newTitle,\n        start: this.state.newEventStart0.toISOString(),\n        end: this.state.newEventEnd0.toISOString(),\n      })\n      .then((response) => {\n        console.log(\"createnewevent\", response);\n        this.setState({\n          dayEventSelected: false,\n        });\n        this.updateEventsArray();\n      })\n      .catch(function (error) {\n        // console.log(error);\n      });\n  };\n\n  /*\n  handleModalClicked:\n  this will toggle show hide of the firebase modal currently\n  */\n  // handleModalClicked = arg => {\n  //   // bind with an arrow function\n  //   this.setState({\n  //     modelSelected: !this.state.modelSelected\n  //   });\n  // };\n\n  nextMonth = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).add(1, \"month\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        originalEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  prevMonth = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"month\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        originalEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  nextDay = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).add(1, \"day\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  prevDay = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"day\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  nextWeek = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).add(1, \"week\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  prevWeek = () => {\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).subtract(1, \"week\");\n    this.setState(\n      {\n        dateContext: dateContext,\n        dayEvents: [],\n      },\n      this.updateEventsArray\n    );\n  };\n\n  /*\n  updateEventsArray:\n  updates the array if the month view changes to a different month.\n  */\n\n  updateEventsArray = () => {\n    if (this.state.calendarView === \"Month\") {\n      //The month view has transferred to a different month\n      let startObject = this.state.dateContext.clone();\n      let endObject = this.state.dateContext.clone();\n      let startDay = startObject.startOf(\"month\");\n      let endDay = endObject.endOf(\"month\");\n      let startDate = new Date(startDay.format(\"MM/DD/YYYY\"));\n      let endDate = new Date(endDay.format(\"MM/DD/YYYY\"));\n      startDate.setHours(0, 0, 0);\n      endDate.setHours(23, 59, 59);\n      this.getEventsByInterval(startDate.toString(), endDate.toString());\n    } else if (this.state.calendarView === \"Day\") {\n      this.getEventsByIntervalDayVersion(\n        this.state.dateContext.format(\"MM/DD/YYYY\")\n      );\n    } else if (this.state.calendarView === \"Week\") {\n      let startObject = this.state.dateContext.clone();\n      let endObject = this.state.dateContext.clone();\n      let startDay = startObject.startOf(\"week\");\n      let endDay = endObject.endOf(\"week\");\n      let startDate = new Date(startDay.format(\"MM/DD/YYYY\"));\n      let endDate = new Date(endDay.format(\"MM/DD/YYYY\"));\n      this.getEventsByIntervalWeekVersion(\n        startObject.toDate(),\n        endObject.toDate()\n      );\n    }\n  };\n\n  /*\n  openRepeatModal:\n  this will open repeat modal.\n  */\n  openRepeatModal = () => {\n    this.setState((prevState) => {\n      return { showRepeatModal: !prevState.showRepeatModal };\n    });\n  };\n\n  /*\n  closeRepeatModal:\n  this will close repeat modal.\n  */\n  closeRepeatModal = () => {\n    this.setState((prevState) => ({\n      showRepeatModal: false,\n      repeatInputValue_temp: prevState.repeatInputValue,\n      repeatOccurrence_temp: prevState.repeatOccurrence,\n      repeatDropDown_temp: prevState.repeatDropDown,\n      repeatRadio_temp: prevState.repeatRadio,\n      repeatEndDate_temp: prevState.repeatEndDate,\n      byDay_temp: prevState.byDay,\n    }));\n    if (\n      !this.state.repeatOption &&\n      this.state.repeatOptionDropDown === \"Custom...\"\n    ) {\n      this.setState({\n        repeatOptionDropDown: \"Does not repeat\",\n      });\n    }\n  };\n\n  /*\n  saveRepeatChanges:\n  this will close repeat modal.\n  */\n  saveRepeatChanges = () => {\n    const {\n      // repeatOptionDropDown,\n      repeatDropDown_temp,\n      repeatInputValue_temp,\n      repeatOccurrence_temp,\n      repeatRadio_temp,\n      repeatEndDate_temp,\n      byDay_temp,\n    } = this.state;\n\n    this.setState((prevState) => ({\n      showRepeatModal: false,\n      repeatOption: true,\n      repeatInputValue: prevState.repeatInputValue_temp,\n      repeatOccurrence: prevState.repeatOccurrence_temp,\n      repeatDropDown: prevState.repeatDropDown_temp,\n      repeatRadio: prevState.repeatRadio_temp,\n      repeatEndDate: prevState.repeatEndDate_temp,\n      byDay: prevState.byDay_temp,\n    }));\n\n    // If repeatDropDown_temp is DAY\n    if (repeatDropDown_temp === \"DAY\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Daily\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Daily, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Daily, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} days, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} days, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is WEEK\n    else if (repeatDropDown_temp === \"WEEK\") {\n      let selectedDays = [];\n      for (let [key, value] of Object.entries(byDay_temp)) {\n        value !== \"\" && selectedDays.push(value);\n      }\n      console.log(selectedDays, \"selectedDays week\");\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: \"Weekly on all days\",\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\", \")}`,\n            });\n          }\n        } else if (repeatRadio_temp === \"On\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Weekly on all days, until ${moment(\n                repeatEndDate_temp\n              ).format(\"LL\")}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Weekly on ${selectedDays.join(\n                \", \"\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`,\n            });\n          }\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            if (selectedDays.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Weekly on all days, , ${repeatOccurrence_temp} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Weekly on ${selectedDays.join(\n                  \", \"\n                )}, ${repeatOccurrence_temp} times`,\n              });\n            }\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                \", \"\n              )}`,\n            });\n          }\n        } else if (repeatRadio_temp === \"On\") {\n          if (selectedDays.length === 7) {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, until ${moment(\n                repeatEndDate_temp\n              ).format(\"LL\")}`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                \", \"\n              )}, until ${moment(repeatEndDate_temp).format(\"LL\")}`,\n            });\n          }\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: \"Once\",\n            });\n          } else {\n            if (selectedDays.length === 7) {\n              this.setState({\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on all days, ${repeatOccurrence_temp} times`,\n              });\n            } else {\n              this.setState({\n                repeatOptionDropDown: `Every ${repeatInputValue_temp} weeks on ${selectedDays.join(\n                  \", \"\n                )}, ${repeatOccurrence_temp} times`,\n              });\n            }\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is MONTH\n    else if (repeatDropDown_temp === \"MONTH\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Monthly\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Monthly, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Monthly, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} months, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} months, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n\n    // If repeatDropDown_temp is YEAR\n    else if (repeatDropDown_temp === \"YEAR\") {\n      if (repeatInputValue_temp === \"1\") {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: \"Annually\",\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Annually, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Annually, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      } else {\n        if (repeatRadio_temp === \"Never\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years`,\n          });\n        } else if (repeatRadio_temp === \"On\") {\n          this.setState({\n            repeatOptionDropDown: `Every ${repeatInputValue_temp} years, until ${moment(\n              repeatEndDate_temp\n            ).format(\"LL\")}`,\n          });\n        } else {\n          if (repeatOccurrence_temp === \"1\") {\n            this.setState({\n              repeatOptionDropDown: `Once`,\n            });\n          } else {\n            this.setState({\n              repeatOptionDropDown: `Every ${repeatInputValue_temp} years, ${repeatOccurrence_temp} times`,\n            });\n          }\n        }\n      }\n    }\n  };\n\n  hideNewAccountForm = () => {\n    this.setState({\n      showNewAccountmodal: false,\n    });\n  };\n\n  hideAboutForm = (e) => {\n    this.setState({\n      showAboutModal: false,\n    });\n  };\n\n  updatePic = (url, name) => {\n    this.setState({\n      currentProfilePicUrl: url,\n      currentProfileName: name,\n    });\n  };\n\n  changeUser = (picURL, name) =>{\n    this.setState({\n      currentProfilePicUrl: picURL,\n      currentProfileName: name\n    });\n  };\n\n  showDayViewOrAboutView = () => {\n    if (this.state.dayEventSelected) {\n      return this.eventFormAbstracted();\n    } else if (this.state.showAboutModal) {\n      return (\n        <AboutModal\n          CameBackFalse={this.hideAboutForm}\n          updateProfilePic={this.updatePic}\n        />\n      );\n    }\n  };\n\n  showCalendarView = () => {\n    if (this.state.calendarView === \"Month\") return this.calendarAbstracted();\n    else if (this.state.calendarView === \"Day\") return this.dayViewAbstracted();\n    else if (this.state.calendarView === \"Week\")\n      return this.weekViewAbstracted();\n  };\n\n  render() {\n    //The variable below will help decide whether to center the Calendar object or not\n    var onlyCal =\n      !this.state.showRoutineGoalModal &&\n      !this.state.showGoalModal &&\n      !this.state.showRoutineModal;\n\n    return (\n      //width and height is fixed now but should be by % percentage later on\n      <div\n        className=\"normalfancytext\"\n        style={{\n          marginLeft: \"0px\",\n          height: \"100%\",\n          width: \"2000px\",\n          // width: \"100%\",\n          // display: \"flex\",\n          // flexDirection: \"column\",\n          // justifyContent: \"center\",\n          // alignItems: \"center\",\n          // background: \"lightblue\",\n        }}\n      >\n        <div\n          style={{\n            margin: \"0\",\n            padding: \"0\",\n            width: \"100%\",\n          }}\n        >\n          <Row>\n          <Col xs={2}>\n          <Row style={{ margin: \"0\" }} className=\"d-flex flex-row\">\n            <div\n              style={{\n                float: \"right\",\n                width: \"80px\",\n                height: \"70px\",\n                marginLeft: \"50px\",\n                marginTop: \"5px\",\n              }}\n            >\n              {this.state.currentProfilePicUrl === \"\" ? (\n                <FontAwesomeIcon icon={faImage} size=\"5x\" />\n              ) : (\n                <img\n                  style={{\n                    display: \"block\",\n                    \n                    // marginLeft: \"auto\",\n                    // marginRight: \"auto\",\n                    width: \"100%\",\n                    height: \"70px\",\n                  }}\n                  src={this.state.currentProfilePicUrl}\n                  alt=\"Profile\"\n                />\n              )}\n            </div>\n            {this.state.enableNameDropDown === false? \n             <DropdownButton\n                style={{ display:\"inline-block\" }}\n                title=\"\"\n                disabled>       \n            </DropdownButton>: \n            // {console.log(\"this is what suupose to be\",this.state.userNamesAndPics[Object.keys(this.state.userNamesAndPics)[0]])}\n                <DropdownButton\n                    // class = \"dropdown-toggle.btn.btn-secondary\"\n                    variant=\"outline-primary\"\n                    // title={this.state.userNamesAndPics[Object.keys(this.state.userNamesAndPics)[0]] || ''}\n                    title= {this.state.currentProfileName || ''}\n                    style = {{marginTop:\"20px\", marginLeft:\"10px\"}}\n                >\n                    {\n                        Object.keys(this.state.userNamesAndPics).map((keyName, keyIndex) => (\n                            // use keyName to get current key's name\n                            // and a[keyName] to get its value\n                            <Dropdown.Item key ={keyName} onClick= {e => {this.changeUser(keyName, this.state.userNamesAndPics[keyName])}}>\n                                        {this.state.userNamesAndPics[keyName] || ''}\n                            </Dropdown.Item>\n                        ))\n                    }\n            </DropdownButton>\n            }\n\n\n            {/* <div style={{ float: \"left\", width: \"227px\", height: \"50px\" }}>\n              {this.state.profileName === \"\" ? (\n                <p style={{ marginTop: \"30px\", marginLeft: \"10px\" }}>\n                  First Last\n                </p>\n              ) : (\n                <p style={{ marginTop: \"30px\", marginLeft: \"10px\" }}>\n                  {this.state.profileName}\n                </p>\n              )}\n            </div> */}\n          </Row>\n          <Row style={{ marginLeft:\"50px\" }} className=\"d-flex flex-row\">\n            \n              <Button style = {{marginTop:\"10px\"}} onClick = {(e) => {this.setState({showNewAccountmodal: true})}}>\n              Create New User\n            </Button>\n            \n            {/* <Col>\n            {this.state.showNewAccountmodal && <CreateNewAccountModal closeModal = {this.hideNewAccountForm}/>}\n            </Col> */}\n          </Row>\n          </Col>\n          <Col xs={8} style={{paddingLeft:\"0px\"}}>\n          {this.state.showNewAccountmodal && (\n            <CreateNewAccountModal closeModal={this.hideNewAccountForm} />\n          )}\n          </Col>\n          </Row>\n          \n        </div>\n\n        <div\n          style={{\n            margin: \"0\",\n            padding: \"0\",\n            width: \"100%\",\n          }}\n        >\n          {this.abstractedMainEventGRShowButtons()}\n        </div>\n        <Container\n          fluid\n          style={{\n            marginTop: \"15px\",\n            marginLeft: \"0\",\n            // display: \"flex\",\n            // flexDirection: \"column\",\n            // justifyContent: \"center\",\n            // alignItems: \"center\",\n            // width: \"100%\"\n          }}\n        >\n          <Row\n            style={{\n              marginTop: \"0\",\n              // width: \"100%\",\n              // display: \"flex\",\n              // flexDirection: \"column\",\n              // justifyContent: \"center\"\n              // alignItems: \"center\"\n            }}\n          >\n            {/* the modal for routine/goal is called Firebasev2 currently */}\n            <Firebasev2\n              grabFireBaseRoutinesGoalsData={this.grabFireBaseRoutinesGoalsData}\n              originalGoalsAndRoutineArr={this.state.originalGoalsAndRoutineArr}\n              goals={this.state.goals}\n              routines={this.state.routines}\n              closeRoutineGoalModal={() => {\n                this.setState({ showRoutineGoalModal: false });\n              }}\n              showRoutineGoalModal={this.state.showRoutineGoalModal}\n              closeGoal={() => {\n                this.setState({ showGoalModal: false });\n              }}\n              closeRoutine={() => {\n                this.setState({ showRoutineModal: false });\n              }}\n              showRoutine={this.state.showRoutineModal}\n              showGoal={this.state.showGoalModal}\n              goals={this.state.goals}\n              routines={this.state.routines}\n              todayDateObject={this.state.todayDateObject}\n            />\n            <Col\n              sm=\"auto\"\n              md=\"auto\"\n              lg=\"auto\"\n              style={onlyCal ? { marginLeft: \"20%\" } : { marginLeft: \"35px\" }}\n            >\n              {this.showCalendarView()}\n              <div\n                style={{ marginTop: \"50px\", textAlign: \"center\" }}\n                className=\"fancytext\"\n              >\n                Dedicated to Caitlin Little\n              </div>\n            </Col>\n            {/* <Col style={{ marginLeft: \"25px\" }}> */}\n            <Col>{this.showDayViewOrAboutView()}</Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n\n  dayViewAbstracted = () => {\n    return (\n      <div\n        style={{\n          borderRadius: \"20px\",\n          backgroundColor: \"white\",\n          width: \"100%\",\n          marginLeft: \"10px\",\n          padding: \"20px\",\n          // border:\"1px black solid\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <Container>\n          <Row style={{ marginTop: \"0px\" }}>\n            <Col>\n              <div>\n                <FontAwesomeIcon\n                  style={{ marginLeft: \"50%\" }}\n                  icon={faChevronLeft}\n                  size=\"2x\"\n                  className=\"X\"\n                  onClick={(e) => {\n                    this.prevDay();\n                  }}\n                />\n              </div>\n            </Col>\n            <Col\n              md=\"auto\"\n              style={{ textAlign: \"center\" }}\n              className=\"bigfancytext\"\n            >\n              <p>\n                {\" \"}\n                {this.state.dateContext.format(\"dddd\")} {this.getDay()}{\" \"}\n                {this.getMonth()} {this.getYear()}{\" \"}\n              </p>\n            </Col>\n            <Col>\n              <FontAwesomeIcon\n                style={{ marginLeft: \"50%\" }}\n                icon={faChevronRight}\n                size=\"2x\"\n                className=\"X\"\n                onClick={(e) => {\n                  this.nextDay();\n                }}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <Row>\n          <DayEvents\n            dateContext={this.state.dateContext}\n            eventClickDayView={this.handleDayEventClick}\n            handleDateClick={this.handleDateClickOnDayView}\n            dayEvents={this.state.dayEvents}\n            getEventsByInterval={this.getEventsByIntervalDayVersion}\n          />\n          <DayRoutines\n            routines={this.state.routines}\n            dayRoutineClick={this.toggleShowRoutine}\n          />\n          <DayGoals\n            goals={this.state.goals}\n            dayGoalClick={this.toggleShowGoal}\n          />\n        </Row>\n      </div>\n    );\n  };\n\n  weekViewAbstracted = () => {\n    let startObject = this.state.dateContext.clone();\n    let startWeek = startObject.startOf(\"week\");\n    return (\n      <div\n        style={{\n          borderRadius: \"20px\",\n          backgroundColor: \"white\",\n          width: \"100%\",\n          marginLeft: \"10px\",\n          padding: \"20px\",\n          // border:\"1px black solid\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <Container>\n          <Container>\n            <Row style={{ marginTop: \"0px\" }}>\n              <Col>\n                <div>\n                  <FontAwesomeIcon\n                    style={{ marginLeft: \"50%\" }}\n                    icon={faChevronLeft}\n                    size=\"2x\"\n                    className=\"X\"\n                    onClick={(e) => {\n                      this.prevWeek();\n                    }}\n                  />\n                </div>\n              </Col>\n              <Col\n                md=\"auto\"\n                style={{ textAlign: \"center\" }}\n                className=\"bigfancytext\"\n              >\n                <p> Week of {startWeek.format(\"D MMMM YYYY\")} </p>\n              </Col>\n              <Col>\n                <FontAwesomeIcon\n                  style={{ marginLeft: \"50%\" }}\n                  icon={faChevronRight}\n                  size=\"2x\"\n                  className=\"X\"\n                  onClick={(e) => {\n                    this.nextWeek();\n                  }}\n                />\n              </Col>\n            </Row>\n          </Container>\n          <Row>\n            <WeekEvents\n              weekEvents={this.state.weekEvents}\n              dateContext={this.state.dateContext}\n              eventClick={this.handleWeekEventClick}\n              onDayClick={this.handleDateClickOnWeekView}\n            />\n          </Row>\n          <Row>\n            <WeekGoals goals={this.state.goals} />\n          </Row>\n          <Row>\n            <WeekRoutines routines={this.state.routines} />\n          </Row>\n        </Container>\n      </div>\n    );\n  };\n\n  toggleShowRoutine = () => {\n    this.setState({\n      showRoutineModal: !this.state.showRoutineModal,\n      showGoalModal: false,\n      showRoutineGoalModal: false,\n    });\n  };\n\n  toggleShowGoal = () => {\n    this.setState({\n      showGoalModal: !this.state.showGoalModal,\n      showRoutineModal: false,\n      showRoutineGoalModal: false,\n    });\n  };\n\n  showEventsFormbyCreateNewEventButton = () => {\n    var newStart, newEnd;\n    if (this.state.calendarView === \"Month\") {\n      newStart = new Date();\n      newStart.setHours(0, 0, 0, 0);\n      newEnd = new Date();\n      newEnd.setHours(23, 59, 59, 59);\n    } else if (this.state.calendarView === \"Day\") {\n      newStart = new Date(this.state.dateContext.toDate());\n      newStart.setHours(0, 0, 0, 0);\n      newEnd = new Date(this.state.dateContext.toDate());\n      newEnd.setHours(23, 59, 59, 59);\n    }\n\n    this.setState({\n      newEventID: \"\",\n      newEventStart0: newStart,\n      newEventEnd0: newEnd,\n      newEventName: \"\",\n      newEventGuests: \"\",\n      newEventLocation: \"\",\n      newEventDescription: \"\",\n      dayEventSelected: true,\n      isEvent: false,\n    });\n  };\n\n  changeCalendarView = (view) => {\n    this.setState(\n      {\n        calendarView: view,\n      },\n      this.updateEventsArray\n    );\n  };\n\n  abstractedMainEventGRShowButtons = () => {\n    // Redefine the width of those buttons; Should fix to be 100% and make\n    // enclosing div to be based on % and not 2000px\n\n    return (\n      // <Row>\n\n      <Row\n        style={{\n          display: \"block\",\n          textAlign: \"center\",\n          fontSize: \"20px\",\n          paddingRight: \"170px\",\n          // display: \"flex\",\n          // justifyContent: \"center\",\n          // alignItems: \"center\"\n        }}\n      >\n        <div\n          style={{\n            display: \"inline-block\",\n            margin: \"10px\",\n            marginBottom: \"0\",\n            marginTop: \"10px\",\n          }}\n        >\n          <DropdownButton\n            style={{ top: \"5px\" }}\n            title={this.state.calendarView}\n          >\n            <Dropdown.Item\n              onClick={(e) => {\n                this.changeCalendarView(\"Day\");\n              }}\n            >\n              {\" \"}\n              Day{\" \"}\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={(e) => {\n                this.changeCalendarView(\"Week\");\n              }}\n            >\n              {\" \"}\n              Week{\" \"}\n            </Dropdown.Item>\n            <Dropdown.Item\n              onClick={(e) => {\n                this.changeCalendarView(\"Month\");\n              }}\n            >\n              {\" \"}\n              Month{\" \"}\n            </Dropdown.Item>\n          </DropdownButton>\n        </div>\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState(\n              {\n                dateContext: moment(),\n              },\n              this.updateEventsArray\n            );\n          }}\n        >\n          Today\n        </Button>\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState(\n              {\n                showAboutModal: false,\n                // dayEventSelected: !this.state.dayEventSelected\n              },\n              () => {\n                this.showEventsFormbyCreateNewEventButton();\n              }\n            );\n          }}\n        >\n          New Event\n        </Button>\n\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={this.toggleShowRoutine}\n        >\n          Routines\n        </Button>\n\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={this.toggleShowGoal}\n        >\n          {\" \"}\n          Goals{\" \"}\n        </Button>\n\n        <Button\n          style={{ display: \"inline-block\", margin: \"10px\", marginBottom: \"0\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState({\n              showRoutineGoalModal: !this.state.showRoutineGoalModal,\n              showGoalModal: false,\n              showRoutineModal: false,\n            });\n          }}\n        >\n          Current Status\n        </Button>\n        <Button\n          style={{\n            display: \"inline-block\",\n            margin: \"10px\",\n            marginBottom: \"0\",\n            // marginRight: \"200px\",\n          }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            this.setState({\n              showAboutModal: !this.state.showAboutModal,\n              dayEventSelected: false,\n            });\n          }}\n        >\n          About\n        </Button>\n      </Row>\n    );\n  };\n\n  calendarAbstracted = () => {\n    return (\n      <div\n        style={{\n          borderRadius: \"2%\",\n          backgroundColor: \"white\",\n          width: \"1000px\",\n          // marginLeft: \"10px\",\n          padding: \"45px\",\n          paddingBottom: \"10px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n        }}\n      >\n        <div>\n          <Row style={{ marginTop: \"0px\" }}>\n            <Col>\n              <div>\n                <FontAwesomeIcon\n                  style={{ marginLeft: \"50%\" }}\n                  icon={faChevronLeft}\n                  size=\"2x\"\n                  className=\"X\"\n                  onClick={(e) => {\n                    this.prevMonth();\n                  }}\n                />\n              </div>\n            </Col>\n            <Col style={{ textAlign: \"center\" }} className=\"bigfancytext\">\n              <p>\n                {this.getMonth()} {this.getYear()}\n              </p>\n            </Col>\n            <Col>\n              <FontAwesomeIcon\n                style={{ marginLeft: \"50%\" }}\n                icon={faChevronRight}\n                size=\"2x\"\n                className=\"X\"\n                onClick={(e) => {\n                  this.nextMonth();\n                }}\n              />\n            </Col>\n          </Row>\n        </div>\n        <TylersCalendarv1\n          eventClick={this.handleEventClick}\n          handleDateClick={this.handleDateClick}\n          handleExpandClick={this.handleExpandClick}\n          originalEvents={this.state.originalEvents}\n          dateObject={this.state.todayDateObject}\n          today={this.state.today}\n          dateContext={this.state.dateContext}\n          // selectedDay={this.state.selectedDay}\n        />\n      </div>\n    );\n  };\n\n  /**\n   * This is where the event form is made\n   *\n   */\n  eventFormAbstracted = () => {\n    return (\n      <Modal.Dialog\n        style={{\n          borderRadius: \"15px\",\n          boxShadow:\n            \"0 16px 28px 0 rgba(0, 0, 0, 0.2), 0 16px 20px 0 rgba(0, 0, 0, 0.19)\",\n          marginLeft: \"35px\",\n          width: \"350px\",\n          marginTop: \"0\",\n        }}\n      >\n        <Modal.Header\n          closeButton\n          onHide={() => {\n            this.setState({\n              dayEventSelected: false,\n              repeatOptionDropDown: \"Does not repeat\",\n            });\n          }}\n        >\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Event Form</h5>{\" \"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {\n            this.state.showRepeatModal && this.repeatModal()\n            // <RepeatModal\n            //   closeRepeatModal={this.closeRepeatModal}\n            //   todayObject={this.state.todayDateObject}\n            //   newEventStart0={this.state.newEventStart0}\n            // />\n          }\n          {this.state.showDeleteRecurringModal && this.deleteRecurringModal()}\n          {this.state.showEditRecurringModal && this.editRecurringModal()}\n          {this.eventFormInputArea()}\n        </Modal.Body>\n        <Modal.Footer>\n          <Container fluid>\n            <Row>\n              <Col style={{ float: \"right\", marginBottom: \"10px\" }}>\n                <Button\n                  variant=\"outline-primary\"\n                  onClick={() => {\n                    this.openRepeatModal();\n                    console.log(\"repeating\", this.state.newEventStart0);\n                  }}\n                >\n                  Repeating Options\n                </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col style={this.state.isEvent ? { display: \"none\" } : {}} xs={4}>\n                <Button\n                  onClick={this.handleSubmit}\n                  variant=\"info\"\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </Col>\n              <Col\n                style={\n                  this.state.isEvent\n                    ? { marginTop: \"0px\" }\n                    : { display: \"none\" }\n                }\n                xs={4}\n              >\n                <Button\n                  onClick={(e) =>\n                    this.state.newEventRecurringID\n                      ? this.openEditRecurringModal()\n                      : this.updateEventClick(e)\n                  }\n                  className=\"btn btn-info\"\n                >\n                  Update\n                </Button>\n              </Col>\n              <Col xs={4}>\n                <Button variant=\"secondary\" onClick={this.hideEventForm}>\n                  Cancel\n                </Button>\n              </Col>\n              <Col xs={4}>\n                <Button\n                  style={this.state.isEvent ? {} : { display: \"none\" }}\n                  variant=\"danger\"\n                  onClick={() =>\n                    this.state.newEventRecurringID\n                      ? this.openDeleteRecurringModal()\n                      : this.deleteSubmit()\n                  }\n                >\n                  {\" \"}\n                  Delete\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  repeatModal = () => {\n    // const [title, setTitle] = useState(\"DAY\");\n    // const [monthly, setMonthly] = useState(\"Monthly on day 13\");\n    // const [endDate, setEndDate] = useState(this.state.newEventStart0);\n    // const [inputValue, setInputValue] = useState(1);\n\n    // this.state.repeatEndDate = this.state.newEventStart0;\n\n    const week_days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    const d = new Date();\n\n    // Custom styles\n    const modalStyle = {\n      position: \"absolute\",\n      zIndex: \"5\",\n      left: \"50%\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"400px\",\n    };\n\n    const inputStyle = {\n      padding: \"8px 5px 8px 15px\",\n      marginLeft: \"8px\",\n      background: \"#F8F9FA\",\n      border: \"none\",\n      width: \"70px\",\n      borderRadius: \"4px\",\n      marginRight: \"8px\",\n    };\n\n    const selectStyle = {\n      display: \"inline-block\",\n    };\n\n    const weekStyle = {\n      display: \"flex\",\n      alignItems: \"center\",\n      textAlign: \"center\",\n      marginTop: \"10px\",\n    };\n\n    // const radioInputStyle = { display: \"flex\", alignItems: \"center\" };\n\n    // onClick event handler for the circles\n    const selectedDot = (e, index) => {\n      let curClass = e.target.classList;\n      if (curClass.contains(\"selected\")) {\n        curClass.remove(\"selected\");\n        const newByDay = { ...this.state.byDay_temp, [index]: \"\" };\n        this.setState({\n          byDay_temp: newByDay,\n        });\n      } else {\n        curClass.add(\"selected\");\n        const newByDay = {\n          ...this.state.byDay_temp,\n          [index]: week_days[index],\n        };\n        this.setState({\n          byDay_temp: newByDay,\n        });\n      }\n    };\n\n    let selectedDays = [];\n    for (let [key, value] of Object.entries(this.state.byDay_temp)) {\n      if (value !== \"\") selectedDays.push(key);\n    }\n    // If selected repeat every week, the following shows.\n    const weekSelected = (\n      <>\n        Repeat On\n        <div style={weekStyle}>\n          {week_days.map((day, i) => {\n            if (selectedDays.includes(i.toString())) {\n              return (\n                <span\n                  key={i}\n                  className=\"dot selected\"\n                  onClick={(e) => selectedDot(e, i)}\n                >\n                  {day.charAt(0)}\n                </span>\n              );\n            } else {\n              return (\n                <span\n                  key={i}\n                  className=\"dot\"\n                  onClick={(e) => selectedDot(e, i)}\n                >\n                  {day.charAt(0)}\n                </span>\n              );\n            }\n          })}\n        </div>\n      </>\n    );\n\n    // If selected repeat every month, the following shows.\n    // const monthSelected = (\n    //   <DropdownButton\n    //     title={this.state.repeatMonthlyDropDown}\n    //     variant=\"light\"\n    //     style={{ marginTop: \"20px\" }}\n    //   >\n    //     <Dropdown.Item\n    //       eventKey=\"Monthly on day 13\"\n    //       onSelect={eventKey => this.handleRepeatMonthlyDropDown(eventKey)}\n    //     >\n    //       Monthly on day 13\n    //     </Dropdown.Item>\n    //     <Dropdown.Item\n    //       eventKey=\"Monthly on the second Friday\"\n    //       onSelect={eventKey => this.handleRepeatMonthlyDropDown(eventKey)}\n    //     >\n    //       Monthly on the second Friday\n    //     </Dropdown.Item>\n    //   </DropdownButton>\n    // );\n\n    return (\n      <Modal.Dialog style={modalStyle}>\n        <Modal.Header closeButton onHide={this.closeRepeatModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Repeating Options</h5>\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            <Form.Group\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginLeft: \"5px\",\n              }}\n            >\n              Repeat every\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"10000\"\n                value={this.state.repeatInputValue_temp}\n                style={inputStyle}\n                onChange={(e) => this.handleRepeatInputValue(e.target.value)}\n              />\n              <DropdownButton\n                title={this.state.repeatDropDown_temp}\n                style={selectStyle}\n                variant=\"light\"\n              >\n                <Dropdown.Item\n                  eventKey=\"DAY\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  day\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"WEEK\"\n                  onSelect={(eventKey) =>\n                    this.handleRepeatDropDown(eventKey, week_days)\n                  }\n                >\n                  week\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"MONTH\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  month\n                </Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"YEAR\"\n                  onSelect={(eventKey) => this.handleRepeatDropDown(eventKey)}\n                >\n                  year\n                </Dropdown.Item>\n              </DropdownButton>\n            </Form.Group>\n            <Form.Group style={{ marginLeft: \"5px\" }}>\n              {this.state.repeatDropDown_temp === \"WEEK\" && weekSelected}\n            </Form.Group>\n            {/* {this.state.repeatDropDown === \"MONTH\" && monthSelected} */}\n            <Form.Group\n              style={{\n                height: \"140px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n                marginTop: \"20px\",\n                marginLeft: \"5px\",\n              }}\n              className=\"repeat-form\"\n              onChange={(e) => {\n                if (e.target.type === \"radio\") {\n                  this.setState({\n                    repeatRadio_temp: e.target.value,\n                  });\n                }\n              }}\n            >\n              Ends\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"Never\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"Never\" && true\n                    }\n                  />\n                  Never\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    name=\"radios\"\n                    value=\"On\"\n                    style={{ marginTop: \"10px\" }}\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"On\" && true\n                    }\n                  />\n                  On\n                  <DatePicker\n                    className=\"date-picker-btn btn btn-light\"\n                    selected={this.state.repeatEndDate_temp}\n                    onChange={(date) => this.handleRepeatEndDate(date)}\n                  ></DatePicker>\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    name=\"radios\"\n                    value=\"After\"\n                    style={{ marginTop: \"12px\" }}\n                    defaultChecked={\n                      this.state.repeatRadio_temp === \"After\" && true\n                    }\n                  />\n                  After\n                  <span style={{ marginLeft: \"60px\" }}>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"10000\"\n                      value={this.state.repeatOccurrence_temp}\n                      onChange={(e) =>\n                        this.handleRepeatOccurrence(e.target.value)\n                      }\n                      style={inputStyle}\n                      className=\"input-exception\"\n                    />\n                    occurrence\n                  </span>\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeRepeatModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={this.saveRepeatChanges}>\n            Save changes\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  openEditRecurringModal = () => {\n    console.log(\"openeditrecurringmodal called\");\n    this.setState((prevState) => {\n      return { showEditRecurringModal: !prevState.showEditRecurringModal };\n    });\n  };\n\n  closeEditRecurringModal = () => {\n    this.setState({\n      showEditRecurringModal: false,\n    });\n  };\n\n  openDeleteRecurringModal = () => {\n    console.log(\"opendeleterecurringmodal called\");\n    this.setState((prevState) => {\n      return { showDeleteRecurringModal: !prevState.showDeleteRecurringModal };\n    });\n  };\n\n  closeDeleteRecurringModal = () => {\n    this.setState({\n      showDeleteRecurringModal: false,\n    });\n    // if (!this.state.repeatOption) {\n    //   this.setState({\n    //     repeatOptionDropDown: \"Does not repeat\",\n    //   });\n    // }\n  };\n\n  deleteRecurring = () => {\n    const {\n      deleteRecurringOption,\n      newEventRecurringID,\n      newEventStart0,\n      recurrenceRule,\n    } = this.state;\n    if (deleteRecurringOption === \"This event\") {\n      this.deleteSubmit();\n    } else if (deleteRecurringOption === \"This and following events\") {\n      let untilSubString = \"\";\n      let untilIndex = recurrenceRule.indexOf(\"UNTIL\");\n      if (untilIndex !== -1) {\n        untilSubString = recurrenceRule.substring(untilIndex);\n      }\n      if (untilSubString.includes(\";\")) {\n        let endUntilIndex = untilSubString.indexOf(\";\");\n        untilSubString = untilSubString.substring(6, endUntilIndex);\n      } else if (untilSubString) {\n        untilSubString = untilSubString = untilSubString.substring(6);\n      }\n      axios\n        .get(\"/getRecurringEventInstances\", {\n          params: {\n            recurringEventId: newEventRecurringID,\n            timeMin: newEventStart0,\n            timeMax: moment(untilSubString).toISOString(),\n          },\n        })\n        .then((res) => {\n          res.data.map((event) => {\n            axios\n              .delete(\"/deleteRecurringEvent\", {\n                params: {\n                  eventId: event.id,\n                },\n              })\n              .then((res) => {\n                this.setState({\n                  dayEventSelected: false,\n                  showDeleteRecurringModal: false,\n                });\n                this.updateEventsArray();\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n          });\n        });\n\n      // axios\n      //   .delete(\"/\")\n      // axios\n      // .post(\"/deleteEvent\", {\n      //   ID: this.state.newEventID,\n      // })\n      // .then((response) => {\n      //   this.setState({\n      //     dayEventSelected: false,\n      //   });\n      //   this.updateEventsArray();\n      // })\n      // .catch(function (error) {\n      //   console.log(error);\n      // });\n    } else if (deleteRecurringOption === \"All events\") {\n      axios\n        .post(\"/deleteEvent\", {\n          ID: newEventRecurringID,\n        })\n        .then((response) => {\n          this.setState({\n            dayEventSelected: false,\n            showDeleteRecurringModal: false,\n          });\n          this.updateEventsArray();\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  editRecurringModal = () => {\n    const modalStyle = {\n      position: \"absolute\",\n      left: \"50%\",\n      zIndex: \"5\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"400px\",\n    };\n\n    return (\n      <Modal.Dialog style={modalStyle}>\n        <Modal.Header closeButton onHide={this.closeEditRecurringModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Edit Recurring Event</h5>\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body\n          style={{\n            // padding: \"85px 0\",\n            height: \"250px\",\n            margin: \"auto\",\n          }}\n        >\n          <Form\n            style={{\n              height: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Form.Group\n              style={{\n                height: \"60%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-around\",\n              }}\n              className=\"delete-repeat-form\"\n              onChange={(e) => {\n                if (e.target.type === \"radio\") {\n                  this.setState({\n                    editRecurringOption: e.target.value,\n                  });\n                }\n              }}\n            >\n              {this.state.newEvent.summary !== this.state.newEventName &&\n                !this.state.repeatOption && (\n                  <Form.Check type=\"radio\">\n                    <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                      <Form.Check.Input\n                        type=\"radio\"\n                        value=\"This event\"\n                        name=\"radios\"\n                        defaultChecked={\n                          this.state.editRecurringOption === \"This event\" &&\n                          true\n                        }\n                      />\n                      This event\n                    </Form.Check.Label>\n                  </Form.Check>\n                )}\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"This and following events\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.editRecurringOption ===\n                        \"This and following events\" && true\n                    }\n                  />\n                  This and following events\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"All events\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.editRecurringOption === \"All events\" && true\n                    }\n                  />\n                  All events\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeEditRecurringModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={this.updateEventClick}>\n            OK\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  deleteRecurringModal = () => {\n    const modalStyle = {\n      position: \"absolute\",\n      left: \"50%\",\n      zIndex: \"5\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"400px\",\n    };\n\n    return (\n      <Modal.Dialog style={modalStyle}>\n        <Modal.Header closeButton onHide={this.closeDeleteRecurringModal}>\n          <Modal.Title>\n            <h5 className=\"normalfancytext\">Delete Recurring Event</h5>\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body\n          style={{\n            // padding: \"85px 0\",\n            height: \"250px\",\n            margin: \"auto\",\n          }}\n        >\n          <Form\n            style={{\n              height: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Form.Group\n              style={{\n                height: \"60%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-around\",\n              }}\n              className=\"delete-repeat-form\"\n              onChange={(e) => {\n                if (e.target.type === \"radio\") {\n                  this.setState({\n                    deleteRecurringOption: e.target.value,\n                  });\n                }\n              }}\n            >\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"This event\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.deleteRecurringOption === \"This event\" && true\n                    }\n                  />\n                  This event\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"This and following events\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.deleteRecurringOption ===\n                        \"This and following events\" && true\n                    }\n                  />\n                  This and following events\n                </Form.Check.Label>\n              </Form.Check>\n              <Form.Check type=\"radio\">\n                <Form.Check.Label style={{ marginLeft: \"5px\" }}>\n                  <Form.Check.Input\n                    type=\"radio\"\n                    value=\"All events\"\n                    name=\"radios\"\n                    defaultChecked={\n                      this.state.deleteRecurringOption === \"All events\" && true\n                    }\n                  />\n                  All events\n                </Form.Check.Label>\n              </Form.Check>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeDeleteRecurringModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={this.deleteRecurring}>\n            OK\n          </Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    );\n  };\n\n  eventFormInputArea = () => {\n    return (\n      <Form>\n        <Row>\n          <Col>\n            <div style={{ width: \"300px\" }}>\n              <Form.Group>\n                <Form.Label>Event Name</Form.Label>\n                <Form.Control\n                  value={this.state.newEventName}\n                  onChange={this.handleNameChange}\n                  type=\"text\"\n                  placeholder=\"Title\"\n                />\n                <div style={{ color: \"red\" }}>\n                  {\" \"}\n                  {this.state.showNoTitleError}\n                </div>\n              </Form.Group>\n              <Form.Group value={this.state.newEventStart0} controlId=\"Y\">\n                <Form.Label>Start Time</Form.Label> <br />\n                {this.startTimePicker()}\n              </Form.Group>\n              <Form.Group value={this.state.newEventEnd0} controlId=\"X\">\n                <Form.Label>End Time</Form.Label>\n                <br />\n                {this.endTimePicker()}\n                <div style={{ color: \"red\" }}> {this.state.showDateError}</div>\n              </Form.Group>\n              <Form.Group style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <Form.Label>Repeating Options</Form.Label>\n                <DropdownButton\n                  className=\"repeatOptionDropDown\"\n                  // onClick={this.openRepeatModal}\n                  title={this.state.repeatOptionDropDown}\n                  variant=\"light\"\n                >\n                  <Dropdown.Item\n                    eventKey=\"Does not repeat\"\n                    onSelect={(eventKey) =>\n                      this.setState({\n                        repeatOptionDropDown: eventKey,\n                        repeatOption: false,\n                      })\n                    }\n                  >\n                    Does not repeat\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    eventKey=\"Custom...\"\n                    onSelect={(eventKey) => {\n                      this.openRepeatModal();\n                      // this.setState({ repeatOptionDropDown: eventKey });\n                    }}\n                  >\n                    Custom...\n                  </Dropdown.Item>\n                </DropdownButton>\n              </Form.Group>\n              <Form.Group value={\"Extra Slot\"}>\n                <Form.Label>Guests</Form.Label>\n                <Form.Control\n                  value={this.state.newEventGuests}\n                  onChange={this.handleGuestChange}\n                  type=\"email\"\n                  placeholder=\"example@gmail.com\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"Location\">\n                <Form.Label>Location:</Form.Label>\n                <Form.Control\n                  value={this.state.newEventLocation}\n                  onChange={this.handleLocationChange}\n                  type=\"text\"\n                  placeholder=\"Location\"\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Notifications:</Form.Label>\n                <Row>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Control\n                      // value={this.state.newEventNotification}\n                      // onChange={this.handleNotificationChange}\n                      type=\"number\"\n                      placeholder=\"5\"\n                      style={{ width: \"70px\", marginTop: \".25rem\" }}\n                    />\n                  </Col>\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}>\n                      {\" \"}\n                      Min Before Start Time\n                    </Form.Text>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"15px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Control\n                      // value={this.state.newEventNotification}\n                      // onChange={this.handleNotificationChange}\n                      type=\"number\"\n                      placeholder=\"30\"\n                      style={{ width: \"70px\", marginTop: \".25rem\" }}\n                    />\n                  </Col>\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}>\n                      {\" \"}\n                      Min After Start Time\n                    </Form.Text>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"15px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Control\n                      // value={this.state.newEventNotification}\n                      // onChange={this.handleNotificationChange}\n                      type=\"number\"\n                      placeholder=\"5\"\n                      style={{ width: \"70px\", marginTop: \".25rem\" }}\n                    />\n                  </Col>\n                  <Col xs={8} style={{ paddingLeft: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}>\n                      {\" \"}\n                      Min After End Time\n                    </Form.Text>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"15px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> Caitlin</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n                <Row style={{ marginTop: \"10px\" }}>\n                  <Col style={{ paddingRight: \"0px\" }}>\n                    <Form.Text style={{ fontSize: \"65%\" }}> TA</Form.Text>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Check type=\"checkbox\" style={{ paddingLeft: \"0px\" }}>\n                      <Form.Check.Input\n                        type=\"checkbox\"\n                        style={{ width: \"20px\", height: \"20px\" }}\n                      />\n\n                      <Form.Control\n                        as=\"textarea\"\n                        rows=\"1\"\n                        type=\"text\"\n                        placeholder=\"Enter Message Here\"\n                        style={{ marginLeft: \"10px\" }}\n                      />\n                    </Form.Check>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group controlId=\"Description\">\n                <Form.Label>Description:</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  value={this.state.newEventDescription}\n                  onChange={this.handleDescriptionChange}\n                  type=\"text\"\n                  placeholder=\"Description\"\n                />\n              </Form.Group>\n            </div>\n          </Col>\n        </Row>\n      </Form>\n    );\n  };\n\n  startTimePicker = () => {\n    // const [startDate, setStartDate] = useState(new Date());\n    return (\n      <DatePicker\n        className=\"form-control\"\n        type=\"text\"\n        selected={this.state.newEventStart0}\n        onChange={(date) => {\n          this.setState(\n            {\n              newEventStart0: date,\n            },\n            () => {\n              console.log(\"starttimepicker\", this.state.newEventStart0);\n            }\n          );\n        }}\n        showTimeSelect\n        timeIntervals={15}\n        timeCaption=\"time\"\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\n      />\n    );\n  };\n\n  endTimePicker = () => {\n    // const [startDate, setStartDate] = useState(new Date());\n    return (\n      <DatePicker\n        className=\"form-control\"\n        type=\"text\"\n        style={{ width: \"100%\" }}\n        selected={this.state.newEventEnd0}\n        onChange={(date) => {\n          this.setState(\n            {\n              newEventEnd0: date,\n            },\n            () => {\n              console.log(this.state.newEventEnd0);\n            }\n          );\n        }}\n        showTimeSelect\n        timeIntervals={15}\n        timeCaption=\"time\"\n        dateFormat=\"MMMM d, yyyy h:mm aa\"\n      />\n    );\n  };\n  /*\n  getYear:\n  returns the year based on year format\n  */\n  getYear = () => {\n    return this.state.dateContext.format(\"Y\");\n  };\n\n  /*\n  getMonth:\n  returns the month based on the month of the dateContext\n  in english word form\n  */\n  getMonth = () => {\n    return this.state.dateContext.format(\"MMMM\");\n  };\n\n  getDay = () => {\n    return this.state.dateContext.format(\"D\");\n  };\n\n  /*\n  hideEventForm:\n  Hides the create/edit events form when a date or event is clicked\n  */\n  hideEventForm = (e) => {\n    //console.log(\"Tyler says: Hello\");\n    this.setState({\n      dayEventSelected: false,\n      repeatOptionDropDown: \"Does not repeat\",\n    });\n  };\n\n  /*\nAll functions below will change a variables\nwhen there is a change in the event form\n*/\n\n  handleNameChange = (event) => {\n    this.setState({ newEventName: event.target.value });\n  };\n\n  handleGuestChange = (event) => {\n    this.setState({ newEventGuests: event.target.value });\n  };\n\n  handleLocationChange = (event) => {\n    this.setState({ newEventLocation: event.target.value });\n  };\n\n  handleNotificationChange = (event) => {\n    this.setState({ newEventNotification: event.target.value });\n  };\n\n  handleDescriptionChange = (event) => {\n    this.setState({ newEventDescription: event.target.value });\n  };\n\n  /*\n  *\n  getEvents:\n  this essentially gets the events data from google calendar and puts it\n  into the proper state variables. Currently the parsed data for full calendar\n  is used but the unfiltered data from google calendar API is not used but\n  in case we do need it, it's saved in this.state.originalEvents\n  *\n  *\n  */\n  getEventsByInterval = (start0, end0) => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {\n          start: start0,\n          end: end0,\n        },\n      })\n      .then((response) => {\n        var events = response.data;\n        this.setState(\n          {\n            newEventID: \"\",\n            newEventName: \"\",\n            // newEventStart: \"\",\n            // newEventEnd: \"\",\n            originalEvents: events,\n          },\n          () => {\n            console.log(\"New Events Arrived\", events);\n          }\n        );\n      })\n      .catch((error) => {\n        console.log(\"Error Occurred \" + error);\n      });\n  };\n\n  /*\n   * getEventsByIntervalDayVersion:\n   * gets exactly the days worth of events from the google calendar\n   */\n  getEventsByIntervalDayVersion = (day) => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {\n          start: day.toString(),\n          end: day.toString(),\n        },\n      })\n      .then((response) => {\n        var events = response.data;\n        this.setState(\n          {\n            dayEvents: events,\n          },\n          () => {\n            console.log(\"New Events Arrived\", events);\n          }\n        );\n      })\n      .catch((error) => {\n        console.log(\"Error Occurred \" + error);\n      });\n  };\n\n  //Get and store events by week, take first and last day of the week as parameters as date object\n  getEventsByIntervalWeekVersion = (start0, end0) => {\n    axios\n      .get(\"/getEventsByInterval\", {\n        //get normal google calendar data for possible future use\n        params: {\n          start: start0,\n          end: end0,\n        },\n      })\n      .then((response) => {\n        var events = response.data;\n        this.setState(\n          {\n            weekEvents: events,\n          }\n          // () => {\n          //   console.log(\"New Events Arrived\");\n          //   console.log(this.state.weekEvents)\n          // }\n        );\n      })\n      .catch((error) => {\n        console.log(\"Error Occurred \" + error);\n      });\n  };\n}\n","import React, { Component } from \"react\";\n\n// import { BrowserRouter as Router } from \"react-router-dom\";\n\nimport MainPage from \"./components/Main.jsx\";\n// import Header from './components/Header.jsx'\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        {/* <header className=\"App-header\"> */}\n        {/* <Router> */}\n        {/* <Header /> */}\n        {/* <div> */}\n        <MainPage />\n        {/* </div> */}\n\n        {/* </Router> */}\n        {/* </ header> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n<BrowserRouter>\n\t<App />\n\t</BrowserRouter>\n, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}